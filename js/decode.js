(function () {
    var Module = {};
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret;  return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module["UTF16ToString"] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF16"] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module["lengthBytesUTF16"] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module["UTF32ToString"] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF32"] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module["lengthBytesUTF32"] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk



function enlargeMemory() {
  // TOTAL_MEMORY is the current size of the actual array, and DYNAMICTOP is the new top.
  assert(DYNAMICTOP >= TOTAL_MEMORY);
  assert(TOTAL_MEMORY > 4); // So the loop below will not be infinite

  var OLD_TOTAL_MEMORY = TOTAL_MEMORY;


  var LIMIT = Math.pow(2, 31); // 2GB is a practical maximum, as we use signed ints as pointers
                               // and JS engines seem unhappy to give us 2GB arrays currently
  if (DYNAMICTOP >= LIMIT) return false;

  while (TOTAL_MEMORY <= DYNAMICTOP) { // Simple heuristic.
    if (TOTAL_MEMORY < LIMIT/2) {
      TOTAL_MEMORY = alignMemoryPage(2*TOTAL_MEMORY); // double until 1GB
    } else {
      var last = TOTAL_MEMORY;
      TOTAL_MEMORY = alignMemoryPage((3*TOTAL_MEMORY + LIMIT)/4); // add smaller increments towards 2GB, which we cannot reach
      if (TOTAL_MEMORY <= last) return false;
    }
  }

  TOTAL_MEMORY = Math.max(TOTAL_MEMORY, 16*1024*1024);

  if (TOTAL_MEMORY >= LIMIT) return false;

  Module.printErr('Warning: Enlarging memory arrays, this is not fast! ' + [OLD_TOTAL_MEMORY, TOTAL_MEMORY]);


  var start = Date.now();

  try {
    if (ArrayBuffer.transfer) {
      buffer = ArrayBuffer.transfer(buffer, TOTAL_MEMORY);
    } else {
      var oldHEAP8 = HEAP8;
      buffer = new ArrayBuffer(TOTAL_MEMORY);
    }
  } catch(e) {
    return false;
  }

  var success = _emscripten_replace_memory(buffer);
  if (!success) return false;

  // everything worked

  Module['buffer'] = buffer;
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
  if (!ArrayBuffer.transfer) {
    HEAP8.set(oldHEAP8);
  }

  Module.printErr('enlarged memory arrays from ' + OLD_TOTAL_MEMORY + ' to ' + TOTAL_MEMORY + ', took ' + (Date.now() - start) + ' ms (has ArrayBuffer.transfer? ' + (!!ArrayBuffer.transfer) + ')');

  return true;
}

var byteLength;
try {
  byteLength = Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, 'byteLength').get);
  byteLength(new ArrayBuffer(4)); // can fail on older ie
} catch(e) { // can fail on older node/v8
  byteLength = function(buffer) { return buffer.byteLength; };
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 33554432;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
totalMemory = Math.max(totalMemory, 16*1024*1024);
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer;



buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);


// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 388048;
  /* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_bind_cpp() } });
  

/* memory initializer */ allocate([88,77,0,0,12,219,5,0,88,77,0,0,43,219,5,0,88,77,0,0,74,219,5,0,88,77,0,0,105,219,5,0,88,77,0,0,136,219,5,0,88,77,0,0,167,219,5,0,88,77,0,0,198,219,5,0,88,77,0,0,229,219,5,0,88,77,0,0,4,220,5,0,88,77,0,0,35,220,5,0,88,77,0,0,66,220,5,0,88,77,0,0,97,220,5,0,88,77,0,0,128,220,5,0,168,77,0,0,147,220,5,0,0,0,0,0,1,0,0,0,136,0,0,0,0,0,0,0,88,77,0,0,210,220,5,0,168,77,0,0,248,220,5,0,0,0,0,0,1,0,0,0,136,0,0,0,0,0,0,0,168,77,0,0,55,221,5,0,0,0,0,0,1,0,0,0,136,0,0,0,0,0,0,0,88,77,0,0,118,221,5,0,128,77,0,0,131,221,5,0,192,0,0,0,0,0,0,0,128,77,0,0,164,221,5,0,200,0,0,0,0,0,0,0,128,77,0,0,198,221,5,0,200,0,0,0,0,0,0,0,60,77,0,0,238,221,5,0,60,77,0,0,240,221,5,0,60,77,0,0,242,221,5,0,60,77,0,0,244,221,5,0,60,77,0,0,246,221,5,0,60,77,0,0,248,221,5,0,60,77,0,0,250,221,5,0,60,77,0,0,252,221,5,0,60,77,0,0,254,221,5,0,60,77,0,0,0,222,5,0,60,77,0,0,2,222,5,0,60,77,0,0,4,222,5,0,60,77,0,0,6,222,5,0,128,77,0,0,8,222,5,0,216,0,0,0,0,0,0,0,128,77,0,0,45,222,5,0,216,0,0,0,0,0,0,0,0,0,160,63,93,254,179,63,163,1,204,63,93,254,227,63,0,0,0,64,0,0,16,64,0,0,32,64,0,0,52,64,0,0,76,64,0,0,100,64,0,0,128,64,0,0,144,64,0,0,160,64,0,0,180,64,0,0,204,64,0,0,228,64,0,0,0,65,0,0,16,65,0,0,32,65,0,0,52,65,0,0,76,65,0,0,100,65,0,0,128,65,0,0,144,65,0,0,160,65,0,0,180,65,0,0,204,65,0,0,228,65,0,0,0,66,0,0,16,66,0,0,32,66,0,0,52,66,0,0,76,66,0,0,100,66,0,0,128,66,0,0,144,66,0,0,160,66,0,0,180,66,0,0,204,66,0,0,228,66,0,0,0,67,0,0,16,67,0,0,32,67,0,0,52,67,0,0,76,67,0,0,100,67,0,0,128,67,0,128,143,67,0,128,161,67,0,0,181,67,0,0,203,67,0,0,228,67,0,0,0,0,128,117,5,0,0,0,0,0,0,0,0,0,99,127,89,61,222,2,137,61,122,165,172,61,208,179,217,61,21,29,9,62,177,191,44,62,154,153,89,62,249,15,137,62,150,178,172,62,154,153,217,62,135,22,9,63,150,178,44,63,154,153,89,63,64,19,137,63,221,181,172,63,154,153,217,63,228,20,9,64,221,181,44,64,154,153,89,64,18,20,137,64,57,180,172,64,154,153,217,64,123,20,9,65,116,181,44,65,154,153,89,65,117,19,137,65,168,181,172,65,107,154,217,65,97,20,9,66,142,181,44,66,154,153,89,66,84,20,137,66,208,181,172,66,127,153,217,66,70,20,9,67,175,181,44,67,154,153,89,67,90,20,137,67,103,181,172,67,131,153,217,67,72,20,9,68,177,181,44,68,154,153,89,68,92,20,137,68,159,181,172,68,132,153,217,68,72,20,9,69,137,181,44,69,154,153,89,69,91,20,137,69,131,181,172,69,164,153,217,69,90,20,9,70,137,181,44,70,154,153,89,70,79,20,137,70,145,181,172,70,148,153,217,70,81,20,9,71,147,181,44,71,154,153,89,71,85,20,137,71,145,181,172,71,156,153,217,71,86,20,9,72,142,181,44,72,154,153,89,72,85,20,137,72,145,181,172,72,152,153,217,72,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,156,3,0,0,220,3,0,0,28,4,0,0,92,4,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,156,6,0,0,204,6,0,0,140,8,0,0,140,11,0,0,140,15,0,0,172,6,0,0,12,7,0,0,140,9,0,0,140,11,0,0,140,15,0,0,188,6,0,0,76,7,0,0,140,10,0,0,140,11,0,0,140,15,0,0,152,6,0,0,152,6,0,0,156,6,0,0,204,6,0,0,140,7,0,0,152,6,0,0,152,6,0,0,172,6,0,0,204,6,0,0,140,7,0,0,152,6,0,0,152,6,0,0,188,6,0,0,204,6,0,0,140,7,0,0,88,5,0,0,152,5,0,0,216,5,0,0,24,6,0,0,88,6,0,0,0,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,15,0,0,0,11,0,0,0,14,0,0,0,7,0,0,0,10,0,0,0,13,0,0,0,3,0,0,0,6,0,0,0,9,0,0,0,12,0,0,0,2,0,0,0,5,0,0,0,8,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,15,0,0,0,14,0,0,0,13,0,0,0,12,0,0,0,11,0,0,0,10,0,0,0,9,0,0,0,8,0,0,0,7,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,15,0,0,0,11,0,0,0,7,0,0,0,3,0,0,0,14,0,0,0,10,0,0,0,6,0,0,0,2,0,0,0,13,0,0,0,9,0,0,0,5,0,0,0,1,0,0,0,12,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,63,0,0,0,55,0,0,0,62,0,0,0,47,0,0,0,54,0,0,0,61,0,0,0,39,0,0,0,46,0,0,0,53,0,0,0,60,0,0,0,31,0,0,0,38,0,0,0,45,0,0,0,52,0,0,0,59,0,0,0,23,0,0,0,30,0,0,0,37,0,0,0,44,0,0,0,51,0,0,0,58,0,0,0,15,0,0,0,22,0,0,0,29,0,0,0,36,0,0,0,43,0,0,0,50,0,0,0,57,0,0,0,7,0,0,0,14,0,0,0,21,0,0,0,28,0,0,0,35,0,0,0,42,0,0,0,49,0,0,0,56,0,0,0,6,0,0,0,13,0,0,0,20,0,0,0,27,0,0,0,34,0,0,0,41,0,0,0,48,0,0,0,5,0,0,0,12,0,0,0,19,0,0,0,26,0,0,0,33,0,0,0,40,0,0,0,4,0,0,0,11,0,0,0,18,0,0,0,25,0,0,0,32,0,0,0,3,0,0,0,10,0,0,0,17,0,0,0,24,0,0,0,2,0,0,0,9,0,0,0,16,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,63,0,0,0,55,0,0,0,62,0,0,0,47,0,0,0,54,0,0,0,61,0,0,0,39,0,0,0,46,0,0,0,53,0,0,0,60,0,0,0,38,0,0,0,45,0,0,0,52,0,0,0,37,0,0,0,44,0,0,0,36,0,0,0,31,0,0,0,23,0,0,0,30,0,0,0,15,0,0,0,22,0,0,0,29,0,0,0,7,0,0,0,14,0,0,0,21,0,0,0,28,0,0,0,6,0,0,0,13,0,0,0,20,0,0,0,5,0,0,0,12,0,0,0,4,0,0,0,59,0,0,0,51,0,0,0,58,0,0,0,43,0,0,0,50,0,0,0,57,0,0,0,35,0,0,0,42,0,0,0,49,0,0,0,56,0,0,0,34,0,0,0,41,0,0,0,48,0,0,0,33,0,0,0,40,0,0,0,32,0,0,0,27,0,0,0,19,0,0,0,26,0,0,0,11,0,0,0,18,0,0,0,25,0,0,0,3,0,0,0,10,0,0,0,17,0,0,0,24,0,0,0,2,0,0,0,9,0,0,0,16,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,63,0,0,0,62,0,0,0,61,0,0,0,60,0,0,0,55,0,0,0,54,0,0,0,53,0,0,0,52,0,0,0,47,0,0,0,46,0,0,0,45,0,0,0,44,0,0,0,39,0,0,0,38,0,0,0,37,0,0,0,36,0,0,0,59,0,0,0,58,0,0,0,57,0,0,0,56,0,0,0,51,0,0,0,50,0,0,0,49,0,0,0,48,0,0,0,43,0,0,0,42,0,0,0,41,0,0,0,40,0,0,0,35,0,0,0,34,0,0,0,33,0,0,0,32,0,0,0,31,0,0,0,30,0,0,0,29,0,0,0,28,0,0,0,23,0,0,0,22,0,0,0,21,0,0,0,20,0,0,0,15,0,0,0,14,0,0,0,13,0,0,0,12,0,0,0,7,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,27,0,0,0,26,0,0,0,25,0,0,0,24,0,0,0,19,0,0,0,18,0,0,0,17,0,0,0,16,0,0,0,11,0,0,0,10,0,0,0,9,0,0,0,8,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,63,0,0,0,55,0,0,0,47,0,0,0,39,0,0,0,62,0,0,0,54,0,0,0,46,0,0,0,38,0,0,0,61,0,0,0,53,0,0,0,45,0,0,0,37,0,0,0,60,0,0,0,52,0,0,0,44,0,0,0,36,0,0,0,31,0,0,0,23,0,0,0,15,0,0,0,7,0,0,0,30,0,0,0,22,0,0,0,14,0,0,0,6,0,0,0,29,0,0,0,21,0,0,0,13,0,0,0,5,0,0,0,28,0,0,0,20,0,0,0,12,0,0,0,4,0,0,0,59,0,0,0,51,0,0,0,43,0,0,0,35,0,0,0,58,0,0,0,50,0,0,0,42,0,0,0,34,0,0,0,57,0,0,0,49,0,0,0,41,0,0,0,33,0,0,0,56,0,0,0,48,0,0,0,40,0,0,0,32,0,0,0,27,0,0,0,19,0,0,0,11,0,0,0,3,0,0,0,26,0,0,0,18,0,0,0,10,0,0,0,2,0,0,0,25,0,0,0,17,0,0,0,9,0,0,0,1,0,0,0,24,0,0,0,16,0,0,0,8,0,0,0,0,0,0,0,255,0,0,0,239,0,0,0,254,0,0,0,223,0,0,0,238,0,0,0,253,0,0,0,207,0,0,0,222,0,0,0,237,0,0,0,252,0,0,0,206,0,0,0,221,0,0,0,236,0,0,0,205,0,0,0,220,0,0,0,204,0,0,0,191,0,0,0,175,0,0,0,190,0,0,0,159,0,0,0,174,0,0,0,189,0,0,0,143,0,0,0,158,0,0,0,173,0,0,0,188,0,0,0,142,0,0,0,157,0,0,0,172,0,0,0,141,0,0,0,156,0,0,0,140,0,0,0,251,0,0,0,235,0,0,0,250,0,0,0,219,0,0,0,234,0,0,0,249,0,0,0,203,0,0,0,218,0,0,0,233,0,0,0,248,0,0,0,202,0,0,0,217,0,0,0,232,0,0,0,201,0,0,0,216,0,0,0,200,0,0,0,127,0,0,0,111,0,0,0,126,0,0,0,95,0,0,0,110,0,0,0,125,0,0,0,79,0,0,0,94,0,0,0,109,0,0,0,124,0,0,0,78,0,0,0,93,0,0,0,108,0,0,0,77,0,0,0,92,0,0,0,76,0,0,0,187,0,0,0,171,0,0,0,186,0,0,0,155,0,0,0,170,0,0,0,185,0,0,0,139,0,0,0,154,0,0,0,169,0,0,0,184,0,0,0,138,0,0,0,153,0,0,0,168,0,0,0,137,0,0,0,152,0,0,0,136,0,0,0,247,0,0,0,231,0,0,0,246,0,0,0,215,0,0,0,230,0,0,0,245,0,0,0,199,0,0,0,214,0,0,0,229,0,0,0,244,0,0,0,198,0,0,0,213,0,0,0,228,0,0,0,197,0,0,0,212,0,0,0,196,0,0,0,63,0,0,0,47,0,0,0,62,0,0,0,31,0,0,0,46,0,0,0,61,0,0,0,15,0,0,0,30,0,0,0,45,0,0,0,60,0,0,0,14,0,0,0,29,0,0,0,44,0,0,0,13,0,0,0,28,0,0,0,12,0,0,0,123,0,0,0,107,0,0,0,122,0,0,0,91,0,0,0,106,0,0,0,121,0,0,0,75,0,0,0,90,0,0,0,105,0,0,0,120,0,0,0,74,0,0,0,89,0,0,0,104,0,0,0,73,0,0,0,88,0,0,0,72,0,0,0,183,0,0,0,167,0,0,0,182,0,0,0,151,0,0,0,166,0,0,0,181,0,0,0,135,0,0,0,150,0,0,0,165,0,0,0,180,0,0,0,134,0,0,0,149,0,0,0,164,0,0,0,133,0,0,0,148,0,0,0,132,0,0,0,243,0,0,0,227,0,0,0,242,0,0,0,211,0,0,0,226,0,0,0,241,0,0,0,195,0,0,0,210,0,0,0,225,0,0,0,240,0,0,0,194,0,0,0,209,0,0,0,224,0,0,0,193,0,0,0,208,0,0,0,192,0,0,0,59,0,0,0,43,0,0,0,58,0,0,0,27,0,0,0,42,0,0,0,57,0,0,0,11,0,0,0,26,0,0,0,41,0,0,0,56,0,0,0,10,0,0,0,25,0,0,0,40,0,0,0,9,0,0,0,24,0,0,0,8,0,0,0,119,0,0,0,103,0,0,0,118,0,0,0,87,0,0,0,102,0,0,0,117,0,0,0,71,0,0,0,86,0,0,0,101,0,0,0,116,0,0,0,70,0,0,0,85,0,0,0,100,0,0,0,69,0,0,0,84,0,0,0,68,0,0,0,179,0,0,0,163,0,0,0,178,0,0,0,147,0,0,0,162,0,0,0,177,0,0,0,131,0,0,0,146,0,0,0,161,0,0,0,176,0,0,0,130,0,0,0,145,0,0,0,160,0,0,0,129,0,0,0,144,0,0,0,128,0,0,0,55,0,0,0,39,0,0,0,54,0,0,0,23,0,0,0,38,0,0,0,53,0,0,0,7,0,0,0,22,0,0,0,37,0,0,0,52,0,0,0,6,0,0,0,21,0,0,0,36,0,0,0,5,0,0,0,20,0,0,0,4,0,0,0,115,0,0,0,99,0,0,0,114,0,0,0,83,0,0,0,98,0,0,0,113,0,0,0,67,0,0,0,82,0,0,0,97,0,0,0,112,0,0,0,66,0,0,0,81,0,0,0,96,0,0,0,65,0,0,0,80,0,0,0,64,0,0,0,51,0,0,0,35,0,0,0,50,0,0,0,19,0,0,0,34,0,0,0,49,0,0,0,3,0,0,0,18,0,0,0,33,0,0,0,48,0,0,0,2,0,0,0,17,0,0,0,32,0,0,0,1,0,0,0,16,0,0,0,0,0,0,0,255,3,0,0,223,3,0,0,254,3,0,0,191,3,0,0,222,3,0,0,253,3,0,0,159,3,0,0,190,3,0,0,221,3,0,0,252,3,0,0,158,3,0,0,189,3,0,0,220,3,0,0,157,3,0,0,188,3,0,0,156,3,0,0,127,3,0,0,95,3,0,0,126,3,0,0,63,3,0,0,94,3,0,0,125,3,0,0,31,3,0,0,62,3,0,0,93,3,0,0,124,3,0,0,30,3,0,0,61,3,0,0,92,3,0,0,29,3,0,0,60,3,0,0,28,3,0,0,251,3,0,0,219,3,0,0,250,3,0,0,187,3,0,0,218,3,0,0,249,3,0,0,155,3,0,0,186,3,0,0,217,3,0,0,248,3,0,0,154,3,0,0,185,3,0,0,216,3,0,0,153,3,0,0,184,3,0,0,152,3,0,0,255,2,0,0,223,2,0,0,254,2,0,0,191,2,0,0,222,2,0,0,253,2,0,0,159,2,0,0,190,2,0,0,221,2,0,0,252,2,0,0,158,2,0,0,189,2,0,0,220,2,0,0,157,2,0,0,188,2,0,0,156,2,0,0,123,3,0,0,91,3,0,0,122,3,0,0,59,3,0,0,90,3,0,0,121,3,0,0,27,3,0,0,58,3,0,0,89,3,0,0,120,3,0,0,26,3,0,0,57,3,0,0,88,3,0,0,25,3,0,0,56,3,0,0,24,3,0,0,247,3,0,0,215,3,0,0,246,3,0,0,183,3,0,0,214,3,0,0,245,3,0,0,151,3,0,0,182,3,0,0,213,3,0,0,244,3,0,0,150,3,0,0,181,3,0,0,212,3,0,0,149,3,0,0,180,3,0,0,148,3,0,0,127,2,0,0,95,2,0,0,126,2,0,0,63,2,0,0,94,2,0,0,125,2,0,0,31,2,0,0,62,2,0,0,93,2,0,0,124,2,0,0,30,2,0,0,61,2,0,0,92,2,0,0,29,2,0,0,60,2,0,0,28,2,0,0,251,2,0,0,219,2,0,0,250,2,0,0,187,2,0,0,218,2,0,0,249,2,0,0,155,2,0,0,186,2,0,0,217,2,0,0,248,2,0,0,154,2,0,0,185,2,0,0,216,2,0,0,153,2,0,0,184,2,0,0,152,2,0,0,119,3,0,0,87,3,0,0,118,3,0,0,55,3,0,0,86,3,0,0,117,3,0,0,23,3,0,0,54,3,0,0,85,3,0,0,116,3,0,0,22,3,0,0,53,3,0,0,84,3,0,0,21,3,0,0,52,3,0,0,20,3,0,0,243,3,0,0,211,3,0,0,242,3,0,0,179,3,0,0,210,3,0,0,241,3,0,0,147,3,0,0,178,3,0,0,209,3,0,0,240,3,0,0,146,3,0,0,177,3,0,0,208,3,0,0,145,3,0,0,176,3,0,0,144,3,0,0,255,1,0,0,223,1,0,0,254,1,0,0,191,1,0,0,222,1,0,0,253,1,0,0,159,1,0,0,190,1,0,0,221,1,0,0,252,1,0,0,158,1,0,0,189,1,0,0,220,1,0,0,157,1,0,0,188,1,0,0,156,1,0,0,123,2,0,0,91,2,0,0,122,2,0,0,59,2,0,0,90,2,0,0,121,2,0,0,27,2,0,0,58,2,0,0,89,2,0,0,120,2,0,0,26,2,0,0,57,2,0,0,88,2,0,0,25,2,0,0,56,2,0,0,24,2,0,0,247,2,0,0,215,2,0,0,246,2,0,0,183,2,0,0,214,2,0,0,245,2,0,0,151,2,0,0,182,2,0,0,213,2,0,0,244,2,0,0,150,2,0,0,181,2,0,0,212,2,0,0,149,2,0,0,180,2,0,0,148,2,0,0,115,3,0,0,83,3,0,0,114,3,0,0,51,3,0,0,82,3,0,0,113,3,0,0,19,3,0,0,50,3,0,0,81,3,0,0,112,3,0,0,18,3,0,0,49,3,0,0,80,3,0,0,17,3,0,0,48,3,0,0,16,3,0,0,239,3,0,0,207,3,0,0,238,3,0,0,175,3,0,0,206,3,0,0,237,3,0,0,143,3,0,0,174,3,0,0,205,3,0,0,236,3,0,0,142,3,0,0,173,3,0,0,204,3,0,0,141,3,0,0,172,3,0,0,140,3,0,0,127,1,0,0,95,1,0,0,126,1,0,0,63,1,0,0,94,1,0,0,125,1,0,0,31,1,0,0,62,1,0,0,93,1,0,0,124,1,0,0,30,1,0,0,61,1,0,0,92,1,0,0,29,1,0,0,60,1,0,0,28,1,0,0,251,1,0,0,219,1,0,0,250,1,0,0,187,1,0,0,218,1,0,0,249,1,0,0,155,1,0,0,186,1,0,0,217,1,0,0,248,1,0,0,154,1,0,0,185,1,0,0,216,1,0,0,153,1,0,0,184,1,0,0,152,1,0,0,119,2,0,0,87,2,0,0,118,2,0,0,55,2,0,0,86,2,0,0,117,2,0,0,23,2,0,0,54,2,0,0,85,2,0,0,116,2,0,0,22,2,0,0,53,2,0,0,84,2,0,0,21,2,0,0,52,2,0,0,20,2,0,0,243,2,0,0,211,2,0,0,242,2,0,0,179,2,0,0,210,2,0,0,241,2,0,0,147,2,0,0,178,2,0,0,209,2,0,0,240,2,0,0,146,2,0,0,177,2,0,0,208,2,0,0,145,2,0,0,176,2,0,0,144,2,0,0,111,3,0,0,79,3,0,0,110,3,0,0,47,3,0,0,78,3,0,0,109,3,0,0,15,3,0,0,46,3,0,0,77,3,0,0,108,3,0,0,14,3,0,0,45,3,0,0,76,3,0,0,13,3,0,0,44,3,0,0,12,3,0,0,235,3,0,0,203,3,0,0,234,3,0,0,171,3,0,0,202,3,0,0,233,3,0,0,139,3,0,0,170,3,0,0,201,3,0,0,232,3,0,0,138,3,0,0,169,3,0,0,200,3,0,0,137,3,0,0,168,3,0,0,136,3,0,0,255,0,0,0,223,0,0,0,254,0,0,0,191,0,0,0,222,0,0,0,253,0,0,0,159,0,0,0,190,0,0,0,221,0,0,0,252,0,0,0,158,0,0,0,189,0,0,0,220,0,0,0,157,0,0,0,188,0,0,0,156,0,0,0,123,1,0,0,91,1,0,0,122,1,0,0,59,1,0,0,90,1,0,0,121,1,0,0,27,1,0,0,58,1,0,0,89,1,0,0,120,1,0,0,26,1,0,0,57,1,0,0,88,1,0,0,25,1,0,0,56,1,0,0,24,1,0,0,247,1,0,0,215,1,0,0,246,1,0,0,183,1,0,0,214,1,0,0,245,1,0,0,151,1,0,0,182,1,0,0,213,1,0,0,244,1,0,0,150,1,0,0,181,1,0,0,212,1,0,0,149,1,0,0,180,1,0,0,148,1,0,0,115,2,0,0,83,2,0,0,114,2,0,0,51,2,0,0,82,2,0,0,113,2,0,0,19,2,0,0,50,2,0,0,81,2,0,0,112,2,0,0,18,2,0,0,49,2,0,0,80,2,0,0,17,2,0,0,48,2,0,0,16,2,0,0,239,2,0,0,207,2,0,0,238,2,0,0,175,2,0,0,206,2,0,0,237,2,0,0,143,2,0,0,174,2,0,0,205,2,0,0,236,2,0,0,142,2,0,0,173,2,0,0,204,2,0,0,141,2,0,0,172,2,0,0,140,2,0,0,107,3,0,0,75,3,0,0,106,3,0,0,43,3,0,0,74,3,0,0,105,3,0,0,11,3,0,0,42,3,0,0,73,3,0,0,104,3,0,0,10,3,0,0,41,3,0,0,72,3,0,0,9,3,0,0,40,3,0,0,8,3,0,0,231,3,0,0,199,3,0,0,230,3,0,0,167,3,0,0,198,3,0,0,229,3,0,0,135,3,0,0,166,3,0,0,197,3,0,0,228,3,0,0,134,3,0,0,165,3,0,0,196,3,0,0,133,3,0,0,164,3,0,0,132,3,0,0,127,0,0,0,95,0,0,0,126,0,0,0,63,0,0,0,94,0,0,0,125,0,0,0,31,0,0,0,62,0,0,0,93,0,0,0,124,0,0,0,30,0,0,0,61,0,0,0,92,0,0,0,29,0,0,0,60,0,0,0,28,0,0,0,251,0,0,0,219,0,0,0,250,0,0,0,187,0,0,0,218,0,0,0,249,0,0,0,155,0,0,0,186,0,0,0,217,0,0,0,248,0,0,0,154,0,0,0,185,0,0,0,216,0,0,0,153,0,0,0,184,0,0,0,152,0,0,0,119,1,0,0,87,1,0,0,118,1,0,0,55,1,0,0,86,1,0,0,117,1,0,0,23,1,0,0,54,1,0,0,85,1,0,0,116,1,0,0,22,1,0,0,53,1,0,0,84,1,0,0,21,1,0,0,52,1,0,0,20,1,0,0,243,1,0,0,211,1,0,0,242,1,0,0,179,1,0,0,210,1,0,0,241,1,0,0,147,1,0,0,178,1,0,0,209,1,0,0,240,1,0,0,146,1,0,0,177,1,0,0,208,1,0,0,145,1,0,0,176,1,0,0,144,1,0,0,111,2,0,0,79,2,0,0,110,2,0,0,47,2,0,0,78,2,0,0,109,2,0,0,15,2,0,0,46,2,0,0,77,2,0,0,108,2,0,0,14,2,0,0,45,2,0,0,76,2,0,0,13,2,0,0,44,2,0,0,12,2,0,0,235,2,0,0,203,2,0,0,234,2,0,0,171,2,0,0,202,2,0,0,233,2,0,0,139,2,0,0,170,2,0,0,201,2,0,0,232,2,0,0,138,2,0,0,169,2,0,0,200,2,0,0,137,2,0,0,168,2,0,0,136,2,0,0,103,3,0,0,71,3,0,0,102,3,0,0,39,3,0,0,70,3,0,0,101,3,0,0,7,3,0,0,38,3,0,0,69,3,0,0,100,3,0,0,6,3,0,0,37,3,0,0,68,3,0,0,5,3,0,0,36,3,0,0,4,3,0,0,227,3,0,0,195,3,0,0,226,3,0,0,163,3,0,0,194,3,0,0,225,3,0,0,131,3,0,0,162,3,0,0,193,3,0,0,224,3,0,0,130,3,0,0,161,3,0,0,192,3,0,0,129,3,0,0,160,3,0,0,128,3,0,0,123,0,0,0,91,0,0,0,122,0,0,0,59,0,0,0,90,0,0,0,121,0,0,0,27,0,0,0,58,0,0,0,89,0,0,0,120,0,0,0,26,0,0,0,57,0,0,0,88,0,0,0,25,0,0,0,56,0,0,0,24,0,0,0,247,0,0,0,215,0,0,0,246,0,0,0,183,0,0,0,214,0,0,0,245,0,0,0,151,0,0,0,182,0,0,0,213,0,0,0,244,0,0,0,150,0,0,0,181,0,0,0,212,0,0,0,149,0,0,0,180,0,0,0,148,0,0,0,115,1,0,0,83,1,0,0,114,1,0,0,51,1,0,0,82,1,0,0,113,1,0,0,19,1,0,0,50,1,0,0,81,1,0,0,112,1,0,0,18,1,0,0,49,1,0,0,80,1,0,0,17,1,0,0,48,1,0,0,16,1,0,0,239,1,0,0,207,1,0,0,238,1,0,0,175,1,0,0,206,1,0,0,237,1,0,0,143,1,0,0,174,1,0,0,205,1,0,0,236,1,0,0,142,1,0,0,173,1,0,0,204,1,0,0,141,1,0,0,172,1,0,0,140,1,0,0,107,2,0,0,75,2,0,0,106,2,0,0,43,2,0,0,74,2,0,0,105,2,0,0,11,2,0,0,42,2,0,0,73,2,0,0,104,2,0,0,10,2,0,0,41,2,0,0,72,2,0,0,9,2,0,0,40,2,0,0,8,2,0,0,231,2,0,0,199,2,0,0,230,2,0,0,167,2,0,0,198,2,0,0,229,2,0,0,135,2,0,0,166,2,0,0,197,2,0,0,228,2,0,0,134,2,0,0,165,2,0,0,196,2,0,0,133,2,0,0,164,2,0,0,132,2,0,0,99,3,0,0,67,3,0,0,98,3,0,0,35,3,0,0,66,3,0,0,97,3,0,0,3,3,0,0,34,3,0,0,65,3,0,0,96,3,0,0,2,3,0,0,33,3,0,0,64,3,0,0,1,3,0,0,32,3,0,0,0,3,0,0,119,0,0,0,87,0,0,0,118,0,0,0,55,0,0,0,86,0,0,0,117,0,0,0,23,0,0,0,54,0,0,0,85,0,0,0,116,0,0,0,22,0,0,0,53,0,0,0,84,0,0,0,21,0,0,0,52,0,0,0,20,0,0,0,243,0,0,0,211,0,0,0,242,0,0,0,179,0,0,0,210,0,0,0,241,0,0,0,147,0,0,0,178,0,0,0,209,0,0,0,240,0,0,0,146,0,0,0,177,0,0,0,208,0,0,0,145,0,0,0,176,0,0,0,144,0,0,0,111,1,0,0,79,1,0,0,110,1,0,0,47,1,0,0,78,1,0,0,109,1,0,0,15,1,0,0,46,1,0,0,77,1,0,0,108,1,0,0,14,1,0,0,45,1,0,0,76,1,0,0,13,1,0,0,44,1,0,0,12,1,0,0,235,1,0,0,203,1,0,0,234,1,0,0,171,1,0,0,202,1,0,0,233,1,0,0,139,1,0,0,170,1,0,0,201,1,0,0,232,1,0,0,138,1,0,0,169,1,0,0,200,1,0,0,137,1,0,0,168,1,0,0,136,1,0,0,103,2,0,0,71,2,0,0,102,2,0,0,39,2,0,0,70,2,0,0,101,2,0,0,7,2,0,0,38,2,0,0,69,2,0,0,100,2,0,0,6,2,0,0,37,2,0,0,68,2,0,0,5,2,0,0,36,2,0,0,4,2,0,0,227,2,0,0,195,2,0,0,226,2,0,0,163,2,0,0,194,2,0,0,225,2,0,0,131,2,0,0,162,2,0,0,193,2,0,0,224,2,0,0,130,2,0,0,161,2,0,0,192,2,0,0,129,2,0,0,160,2,0,0,128,2,0,0,115,0,0,0,83,0,0,0,114,0,0,0,51,0,0,0,82,0,0,0,113,0,0,0,19,0,0,0,50,0,0,0,81,0,0,0,112,0,0,0,18,0,0,0,49,0,0,0,80,0,0,0,17,0,0,0,48,0,0,0,16,0,0,0,239,0,0,0,207,0,0,0,238,0,0,0,175,0,0,0,206,0,0,0,237,0,0,0,143,0,0,0,174,0,0,0,205,0,0,0,236,0,0,0,142,0,0,0,173,0,0,0,204,0,0,0,141,0,0,0,172,0,0,0,140,0,0,0,107,1,0,0,75,1,0,0,106,1,0,0,43,1,0,0,74,1,0,0,105,1,0,0,11,1,0,0,42,1,0,0,73,1,0,0,104,1,0,0,10,1,0,0,41,1,0,0,72,1,0,0,9,1,0,0,40,1,0,0,8,1,0,0,231,1,0,0,199,1,0,0,230,1,0,0,167,1,0,0,198,1,0,0,229,1,0,0,135,1,0,0,166,1,0,0,197,1,0,0,228,1,0,0,134,1,0,0,165,1,0,0,196,1,0,0,133,1,0,0,164,1,0,0,132,1,0,0,99,2,0,0,67,2,0,0,98,2,0,0,35,2,0,0,66,2,0,0,97,2,0,0,3,2,0,0,34,2,0,0,65,2,0,0,96,2,0,0,2,2,0,0,33,2,0,0,64,2,0,0,1,2,0,0,32,2,0,0,0,2,0,0,111,0,0,0,79,0,0,0,110,0,0,0,47,0,0,0,78,0,0,0,109,0,0,0,15,0,0,0,46,0,0,0,77,0,0,0,108,0,0,0,14,0,0,0,45,0,0,0,76,0,0,0,13,0,0,0,44,0,0,0,12,0,0,0,235,0,0,0,203,0,0,0,234,0,0,0,171,0,0,0,202,0,0,0,233,0,0,0,139,0,0,0,170,0,0,0,201,0,0,0,232,0,0,0,138,0,0,0,169,0,0,0,200,0,0,0,137,0,0,0,168,0,0,0,136,0,0,0,103,1,0,0,71,1,0,0,102,1,0,0,39,1,0,0,70,1,0,0,101,1,0,0,7,1,0,0,38,1,0,0,69,1,0,0,100,1,0,0,6,1,0,0,37,1,0,0,68,1,0,0,5,1,0,0,36,1,0,0,4,1,0,0,227,1,0,0,195,1,0,0,226,1,0,0,163,1,0,0,194,1,0,0,225,1,0,0,131,1,0,0,162,1,0,0,193,1,0,0,224,1,0,0,130,1,0,0,161,1,0,0,192,1,0,0,129,1,0,0,160,1,0,0,128,1,0,0,107,0,0,0,75,0,0,0,106,0,0,0,43,0,0,0,74,0,0,0,105,0,0,0,11,0,0,0,42,0,0,0,73,0,0,0,104,0,0,0,10,0,0,0,41,0,0,0,72,0,0,0,9,0,0,0,40,0,0,0,8,0,0,0,231,0,0,0,199,0,0,0,230,0,0,0,167,0,0,0,198,0,0,0,229,0,0,0,135,0,0,0,166,0,0,0,197,0,0,0,228,0,0,0,134,0,0,0,165,0,0,0,196,0,0,0,133,0,0,0,164,0,0,0,132,0,0,0,99,1,0,0,67,1,0,0,98,1,0,0,35,1,0,0,66,1,0,0,97,1,0,0,3,1,0,0,34,1,0,0,65,1,0,0,96,1,0,0,2,1,0,0,33,1,0,0,64,1,0,0,1,1,0,0,32,1,0,0,0,1,0,0,103,0,0,0,71,0,0,0,102,0,0,0,39,0,0,0,70,0,0,0,101,0,0,0,7,0,0,0,38,0,0,0,69,0,0,0,100,0,0,0,6,0,0,0,37,0,0,0,68,0,0,0,5,0,0,0,36,0,0,0,4,0,0,0,227,0,0,0,195,0,0,0,226,0,0,0,163,0,0,0,194,0,0,0,225,0,0,0,131,0,0,0,162,0,0,0,193,0,0,0,224,0,0,0,130,0,0,0,161,0,0,0,192,0,0,0,129,0,0,0,160,0,0,0,128,0,0,0,99,0,0,0,67,0,0,0,98,0,0,0,35,0,0,0,66,0,0,0,97,0,0,0,3,0,0,0,34,0,0,0,65,0,0,0,96,0,0,0,2,0,0,0,33,0,0,0,64,0,0,0,1,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,14,0,0,0,14,0,0,0,15,0,0,0,15,0,0,0,16,0,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,20,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,29,0,0,0,29,0,0,0,30,0,0,0,30,0,0,0,31,0,0,0,31,0,0,0,32,0,0,0,32,0,0,0,33,0,0,0,33,0,0,0,33,0,0,0,34,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,255,255,255,255,2,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,9,0,0,0,11,0,0,0,13,0,0,0,15,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,23,0,0,0,25,0,0,0,27,0,0,0,29,0,0,0,31,0,0,0,34,0,0,0,37,0,0,0,39,0,0,0,41,0,0,0,43,0,0,0,45,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,55,0,0,0,57,0,0,0,59,0,0,0,61,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,89,0,0,0,75,0,0,0,50,0,0,0,18,0,0,0,238,255,255,255,206,255,255,255,181,255,255,255,167,255,255,255,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,75,0,0,0,238,255,255,255,167,255,255,255,206,255,255,255,50,0,0,0,89,0,0,0,18,0,0,0,181,255,255,255,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,50,0,0,0,167,255,255,255,18,0,0,0,75,0,0,0,181,255,255,255,238,255,255,255,89,0,0,0,206,255,255,255,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,18,0,0,0,206,255,255,255,75,0,0,0,167,255,255,255,89,0,0,0,181,255,255,255,50,0,0,0,238,255,255,255,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,89,0,0,0,75,0,0,0,50,0,0,0,18,0,0,0,238,255,255,255,206,255,255,255,181,255,255,255,167,255,255,255,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,75,0,0,0,238,255,255,255,167,255,255,255,206,255,255,255,50,0,0,0,89,0,0,0,18,0,0,0,181,255,255,255,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,50,0,0,0,167,255,255,255,18,0,0,0,75,0,0,0,181,255,255,255,238,255,255,255,89,0,0,0,206,255,255,255,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,18,0,0,0,206,255,255,255,75,0,0,0,167,255,255,255,89,0,0,0,181,255,255,255,50,0,0,0,238,255,255,255,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,90,0,0,0,87,0,0,0,80,0,0,0,70,0,0,0,57,0,0,0,43,0,0,0,25,0,0,0,9,0,0,0,247,255,255,255,231,255,255,255,213,255,255,255,199,255,255,255,186,255,255,255,176,255,255,255,169,255,255,255,166,255,255,255,89,0,0,0,75,0,0,0,50,0,0,0,18,0,0,0,238,255,255,255,206,255,255,255,181,255,255,255,167,255,255,255,167,255,255,255,181,255,255,255,206,255,255,255,238,255,255,255,18,0,0,0,50,0,0,0,75,0,0,0,89,0,0,0,87,0,0,0,57,0,0,0,9,0,0,0,213,255,255,255,176,255,255,255,166,255,255,255,186,255,255,255,231,255,255,255,25,0,0,0,70,0,0,0,90,0,0,0,80,0,0,0,43,0,0,0,247,255,255,255,199,255,255,255,169,255,255,255,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,80,0,0,0,9,0,0,0,186,255,255,255,169,255,255,255,231,255,255,255,57,0,0,0,90,0,0,0,43,0,0,0,213,255,255,255,166,255,255,255,199,255,255,255,25,0,0,0,87,0,0,0,70,0,0,0,247,255,255,255,176,255,255,255,75,0,0,0,238,255,255,255,167,255,255,255,206,255,255,255,50,0,0,0,89,0,0,0,18,0,0,0,181,255,255,255,181,255,255,255,18,0,0,0,89,0,0,0,50,0,0,0,206,255,255,255,167,255,255,255,238,255,255,255,75,0,0,0,70,0,0,0,213,255,255,255,169,255,255,255,9,0,0,0,90,0,0,0,25,0,0,0,176,255,255,255,199,255,255,255,57,0,0,0,80,0,0,0,231,255,255,255,166,255,255,255,247,255,255,255,87,0,0,0,43,0,0,0,186,255,255,255,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,57,0,0,0,176,255,255,255,231,255,255,255,90,0,0,0,247,255,255,255,169,255,255,255,43,0,0,0,70,0,0,0,186,255,255,255,213,255,255,255,87,0,0,0,9,0,0,0,166,255,255,255,25,0,0,0,80,0,0,0,199,255,255,255,50,0,0,0,167,255,255,255,18,0,0,0,75,0,0,0,181,255,255,255,238,255,255,255,89,0,0,0,206,255,255,255,206,255,255,255,89,0,0,0,238,255,255,255,181,255,255,255,75,0,0,0,18,0,0,0,167,255,255,255,50,0,0,0,43,0,0,0,166,255,255,255,57,0,0,0,25,0,0,0,169,255,255,255,70,0,0,0,9,0,0,0,176,255,255,255,80,0,0,0,247,255,255,255,186,255,255,255,87,0,0,0,231,255,255,255,199,255,255,255,90,0,0,0,213,255,255,255,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,25,0,0,0,186,255,255,255,90,0,0,0,176,255,255,255,43,0,0,0,9,0,0,0,199,255,255,255,87,0,0,0,169,255,255,255,57,0,0,0,247,255,255,255,213,255,255,255,80,0,0,0,166,255,255,255,70,0,0,0,231,255,255,255,18,0,0,0,206,255,255,255,75,0,0,0,167,255,255,255,89,0,0,0,181,255,255,255,50,0,0,0,238,255,255,255,238,255,255,255,50,0,0,0,181,255,255,255,89,0,0,0,167,255,255,255,75,0,0,0,206,255,255,255,18,0,0,0,9,0,0,0,231,255,255,255,43,0,0,0,199,255,255,255,70,0,0,0,176,255,255,255,87,0,0,0,166,255,255,255,90,0,0,0,169,255,255,255,80,0,0,0,186,255,255,255,57,0,0,0,213,255,255,255,25,0,0,0,247,255,255,255,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,90,0,0,0,87,0,0,0,80,0,0,0,70,0,0,0,57,0,0,0,43,0,0,0,25,0,0,0,9,0,0,0,247,255,255,255,231,255,255,255,213,255,255,255,199,255,255,255,186,255,255,255,176,255,255,255,169,255,255,255,166,255,255,255,89,0,0,0,75,0,0,0,50,0,0,0,18,0,0,0,238,255,255,255,206,255,255,255,181,255,255,255,167,255,255,255,167,255,255,255,181,255,255,255,206,255,255,255,238,255,255,255,18,0,0,0,50,0,0,0,75,0,0,0,89,0,0,0,87,0,0,0,57,0,0,0,9,0,0,0,213,255,255,255,176,255,255,255,166,255,255,255,186,255,255,255,231,255,255,255,25,0,0,0,70,0,0,0,90,0,0,0,80,0,0,0,43,0,0,0,247,255,255,255,199,255,255,255,169,255,255,255,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,80,0,0,0,9,0,0,0,186,255,255,255,169,255,255,255,231,255,255,255,57,0,0,0,90,0,0,0,43,0,0,0,213,255,255,255,166,255,255,255,199,255,255,255,25,0,0,0,87,0,0,0,70,0,0,0,247,255,255,255,176,255,255,255,75,0,0,0,238,255,255,255,167,255,255,255,206,255,255,255,50,0,0,0,89,0,0,0,18,0,0,0,181,255,255,255,181,255,255,255,18,0,0,0,89,0,0,0,50,0,0,0,206,255,255,255,167,255,255,255,238,255,255,255,75,0,0,0,70,0,0,0,213,255,255,255,169,255,255,255,9,0,0,0,90,0,0,0,25,0,0,0,176,255,255,255,199,255,255,255,57,0,0,0,80,0,0,0,231,255,255,255,166,255,255,255,247,255,255,255,87,0,0,0,43,0,0,0,186,255,255,255,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,57,0,0,0,176,255,255,255,231,255,255,255,90,0,0,0,247,255,255,255,169,255,255,255,43,0,0,0,70,0,0,0,186,255,255,255,213,255,255,255,87,0,0,0,9,0,0,0,166,255,255,255,25,0,0,0,80,0,0,0,199,255,255,255,50,0,0,0,167,255,255,255,18,0,0,0,75,0,0,0,181,255,255,255,238,255,255,255,89,0,0,0,206,255,255,255,206,255,255,255,89,0,0,0,238,255,255,255,181,255,255,255,75,0,0,0,18,0,0,0,167,255,255,255,50,0,0,0,43,0,0,0,166,255,255,255,57,0,0,0,25,0,0,0,169,255,255,255,70,0,0,0,9,0,0,0,176,255,255,255,80,0,0,0,247,255,255,255,186,255,255,255,87,0,0,0,231,255,255,255,199,255,255,255,90,0,0,0,213,255,255,255,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,25,0,0,0,186,255,255,255,90,0,0,0,176,255,255,255,43,0,0,0,9,0,0,0,199,255,255,255,87,0,0,0,169,255,255,255,57,0,0,0,247,255,255,255,213,255,255,255,80,0,0,0,166,255,255,255,70,0,0,0,231,255,255,255,18,0,0,0,206,255,255,255,75,0,0,0,167,255,255,255,89,0,0,0,181,255,255,255,50,0,0,0,238,255,255,255,238,255,255,255,50,0,0,0,181,255,255,255,89,0,0,0,167,255,255,255,75,0,0,0,206,255,255,255,18,0,0,0,9,0,0,0,231,255,255,255,43,0,0,0,199,255,255,255,70,0,0,0,176,255,255,255,87,0,0,0,166,255,255,255,90,0,0,0,169,255,255,255,80,0,0,0,186,255,255,255,57,0,0,0,213,255,255,255,25,0,0,0,247,255,255,255,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,90,0,0,0,90,0,0,0,88,0,0,0,85,0,0,0,82,0,0,0,78,0,0,0,73,0,0,0,67,0,0,0,61,0,0,0,54,0,0,0,46,0,0,0,38,0,0,0,31,0,0,0,22,0,0,0,13,0,0,0,4,0,0,0,252,255,255,255,243,255,255,255,234,255,255,255,225,255,255,255,218,255,255,255,210,255,255,255,202,255,255,255,195,255,255,255,189,255,255,255,183,255,255,255,178,255,255,255,174,255,255,255,171,255,255,255,168,255,255,255,166,255,255,255,166,255,255,255,90,0,0,0,87,0,0,0,80,0,0,0,70,0,0,0,57,0,0,0,43,0,0,0,25,0,0,0,9,0,0,0,247,255,255,255,231,255,255,255,213,255,255,255,199,255,255,255,186,255,255,255,176,255,255,255,169,255,255,255,166,255,255,255,166,255,255,255,169,255,255,255,176,255,255,255,186,255,255,255,199,255,255,255,213,255,255,255,231,255,255,255,247,255,255,255,9,0,0,0,25,0,0,0,43,0,0,0,57,0,0,0,70,0,0,0,80,0,0,0,87,0,0,0,90,0,0,0,90,0,0,0,82,0,0,0,67,0,0,0,46,0,0,0,22,0,0,0,252,255,255,255,225,255,255,255,202,255,255,255,183,255,255,255,171,255,255,255,166,255,255,255,168,255,255,255,178,255,255,255,195,255,255,255,218,255,255,255,243,255,255,255,13,0,0,0,38,0,0,0,61,0,0,0,78,0,0,0,88,0,0,0,90,0,0,0,85,0,0,0,73,0,0,0,54,0,0,0,31,0,0,0,4,0,0,0,234,255,255,255,210,255,255,255,189,255,255,255,174,255,255,255,166,255,255,255,89,0,0,0,75,0,0,0,50,0,0,0,18,0,0,0,238,255,255,255,206,255,255,255,181,255,255,255,167,255,255,255,167,255,255,255,181,255,255,255,206,255,255,255,238,255,255,255,18,0,0,0,50,0,0,0,75,0,0,0,89,0,0,0,89,0,0,0,75,0,0,0,50,0,0,0,18,0,0,0,238,255,255,255,206,255,255,255,181,255,255,255,167,255,255,255,167,255,255,255,181,255,255,255,206,255,255,255,238,255,255,255,18,0,0,0,50,0,0,0,75,0,0,0,89,0,0,0,88,0,0,0,67,0,0,0,31,0,0,0,243,255,255,255,202,255,255,255,174,255,255,255,166,255,255,255,178,255,255,255,210,255,255,255,252,255,255,255,38,0,0,0,73,0,0,0,90,0,0,0,85,0,0,0,61,0,0,0,22,0,0,0,234,255,255,255,195,255,255,255,171,255,255,255,166,255,255,255,183,255,255,255,218,255,255,255,4,0,0,0,46,0,0,0,78,0,0,0,90,0,0,0,82,0,0,0,54,0,0,0,13,0,0,0,225,255,255,255,189,255,255,255,168,255,255,255,87,0,0,0,57,0,0,0,9,0,0,0,213,255,255,255,176,255,255,255,166,255,255,255,186,255,255,255,231,255,255,255,25,0,0,0,70,0,0,0,90,0,0,0,80,0,0,0,43,0,0,0,247,255,255,255,199,255,255,255,169,255,255,255,169,255,255,255,199,255,255,255,247,255,255,255,43,0,0,0,80,0,0,0,90,0,0,0,70,0,0,0,25,0,0,0,231,255,255,255,186,255,255,255,166,255,255,255,176,255,255,255,213,255,255,255,9,0,0,0,57,0,0,0,87,0,0,0,85,0,0,0,46,0,0,0,243,255,255,255,189,255,255,255,166,255,255,255,183,255,255,255,234,255,255,255,38,0,0,0,82,0,0,0,88,0,0,0,54,0,0,0,252,255,255,255,195,255,255,255,166,255,255,255,178,255,255,255,225,255,255,255,31,0,0,0,78,0,0,0,90,0,0,0,61,0,0,0,4,0,0,0,202,255,255,255,168,255,255,255,174,255,255,255,218,255,255,255,22,0,0,0,73,0,0,0,90,0,0,0,67,0,0,0,13,0,0,0,210,255,255,255,171,255,255,255,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,82,0,0,0,22,0,0,0,202,255,255,255,166,255,255,255,195,255,255,255,13,0,0,0,78,0,0,0,85,0,0,0,31,0,0,0,210,255,255,255,166,255,255,255,189,255,255,255,4,0,0,0,73,0,0,0,88,0,0,0,38,0,0,0,218,255,255,255,168,255,255,255,183,255,255,255,252,255,255,255,67,0,0,0,90,0,0,0,46,0,0,0,225,255,255,255,171,255,255,255,178,255,255,255,243,255,255,255,61,0,0,0,90,0,0,0,54,0,0,0,234,255,255,255,174,255,255,255,80,0,0,0,9,0,0,0,186,255,255,255,169,255,255,255,231,255,255,255,57,0,0,0,90,0,0,0,43,0,0,0,213,255,255,255,166,255,255,255,199,255,255,255,25,0,0,0,87,0,0,0,70,0,0,0,247,255,255,255,176,255,255,255,176,255,255,255,247,255,255,255,70,0,0,0,87,0,0,0,25,0,0,0,199,255,255,255,166,255,255,255,213,255,255,255,43,0,0,0,90,0,0,0,57,0,0,0,231,255,255,255,169,255,255,255,186,255,255,255,9,0,0,0,80,0,0,0,78,0,0,0,252,255,255,255,174,255,255,255,183,255,255,255,13,0,0,0,85,0,0,0,67,0,0,0,234,255,255,255,168,255,255,255,195,255,255,255,31,0,0,0,90,0,0,0,54,0,0,0,218,255,255,255,166,255,255,255,210,255,255,255,46,0,0,0,90,0,0,0,38,0,0,0,202,255,255,255,166,255,255,255,225,255,255,255,61,0,0,0,88,0,0,0,22,0,0,0,189,255,255,255,171,255,255,255,243,255,255,255,73,0,0,0,82,0,0,0,4,0,0,0,178,255,255,255,75,0,0,0,238,255,255,255,167,255,255,255,206,255,255,255,50,0,0,0,89,0,0,0,18,0,0,0,181,255,255,255,181,255,255,255,18,0,0,0,89,0,0,0,50,0,0,0,206,255,255,255,167,255,255,255,238,255,255,255,75,0,0,0,75,0,0,0,238,255,255,255,167,255,255,255,206,255,255,255,50,0,0,0,89,0,0,0,18,0,0,0,181,255,255,255,181,255,255,255,18,0,0,0,89,0,0,0,50,0,0,0,206,255,255,255,167,255,255,255,238,255,255,255,75,0,0,0,73,0,0,0,225,255,255,255,166,255,255,255,234,255,255,255,78,0,0,0,67,0,0,0,218,255,255,255,166,255,255,255,243,255,255,255,82,0,0,0,61,0,0,0,210,255,255,255,168,255,255,255,252,255,255,255,85,0,0,0,54,0,0,0,202,255,255,255,171,255,255,255,4,0,0,0,88,0,0,0,46,0,0,0,195,255,255,255,174,255,255,255,13,0,0,0,90,0,0,0,38,0,0,0,189,255,255,255,178,255,255,255,22,0,0,0,90,0,0,0,31,0,0,0,183,255,255,255,70,0,0,0,213,255,255,255,169,255,255,255,9,0,0,0,90,0,0,0,25,0,0,0,176,255,255,255,199,255,255,255,57,0,0,0,80,0,0,0,231,255,255,255,166,255,255,255,247,255,255,255,87,0,0,0,43,0,0,0,186,255,255,255,186,255,255,255,43,0,0,0,87,0,0,0,247,255,255,255,166,255,255,255,231,255,255,255,80,0,0,0,57,0,0,0,199,255,255,255,176,255,255,255,25,0,0,0,90,0,0,0,9,0,0,0,169,255,255,255,213,255,255,255,70,0,0,0,67,0,0,0,202,255,255,255,178,255,255,255,38,0,0,0,85,0,0,0,234,255,255,255,166,255,255,255,4,0,0,0,90,0,0,0,13,0,0,0,168,255,255,255,225,255,255,255,82,0,0,0,46,0,0,0,183,255,255,255,195,255,255,255,61,0,0,0,73,0,0,0,210,255,255,255,174,255,255,255,31,0,0,0,88,0,0,0,243,255,255,255,166,255,255,255,252,255,255,255,90,0,0,0,22,0,0,0,171,255,255,255,218,255,255,255,78,0,0,0,54,0,0,0,189,255,255,255,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,61,0,0,0,183,255,255,255,210,255,255,255,82,0,0,0,31,0,0,0,168,255,255,255,243,255,255,255,90,0,0,0,252,255,255,255,166,255,255,255,22,0,0,0,85,0,0,0,218,255,255,255,178,255,255,255,54,0,0,0,67,0,0,0,189,255,255,255,202,255,255,255,78,0,0,0,38,0,0,0,171,255,255,255,234,255,255,255,90,0,0,0,4,0,0,0,166,255,255,255,13,0,0,0,88,0,0,0,225,255,255,255,174,255,255,255,46,0,0,0,73,0,0,0,195,255,255,255,57,0,0,0,176,255,255,255,231,255,255,255,90,0,0,0,247,255,255,255,169,255,255,255,43,0,0,0,70,0,0,0,186,255,255,255,213,255,255,255,87,0,0,0,9,0,0,0,166,255,255,255,25,0,0,0,80,0,0,0,199,255,255,255,199,255,255,255,80,0,0,0,25,0,0,0,166,255,255,255,9,0,0,0,87,0,0,0,213,255,255,255,186,255,255,255,70,0,0,0,43,0,0,0,169,255,255,255,247,255,255,255,90,0,0,0,231,255,255,255,176,255,255,255,57,0,0,0,54,0,0,0,171,255,255,255,252,255,255,255,88,0,0,0,210,255,255,255,195,255,255,255,82,0,0,0,13,0,0,0,166,255,255,255,38,0,0,0,67,0,0,0,178,255,255,255,234,255,255,255,90,0,0,0,225,255,255,255,183,255,255,255,73,0,0,0,31,0,0,0,166,255,255,255,22,0,0,0,78,0,0,0,189,255,255,255,218,255,255,255,90,0,0,0,243,255,255,255,174,255,255,255,61,0,0,0,46,0,0,0,168,255,255,255,4,0,0,0,85,0,0,0,202,255,255,255,50,0,0,0,167,255,255,255,18,0,0,0,75,0,0,0,181,255,255,255,238,255,255,255,89,0,0,0,206,255,255,255,206,255,255,255,89,0,0,0,238,255,255,255,181,255,255,255,75,0,0,0,18,0,0,0,167,255,255,255,50,0,0,0,50,0,0,0,167,255,255,255,18,0,0,0,75,0,0,0,181,255,255,255,238,255,255,255,89,0,0,0,206,255,255,255,206,255,255,255,89,0,0,0,238,255,255,255,181,255,255,255,75,0,0,0,18,0,0,0,167,255,255,255,50,0,0,0,46,0,0,0,166,255,255,255,38,0,0,0,54,0,0,0,166,255,255,255,31,0,0,0,61,0,0,0,168,255,255,255,22,0,0,0,67,0,0,0,171,255,255,255,13,0,0,0,73,0,0,0,174,255,255,255,4,0,0,0,78,0,0,0,178,255,255,255,252,255,255,255,82,0,0,0,183,255,255,255,243,255,255,255,85,0,0,0,189,255,255,255,234,255,255,255,88,0,0,0,195,255,255,255,225,255,255,255,90,0,0,0,202,255,255,255,218,255,255,255,90,0,0,0,210,255,255,255,43,0,0,0,166,255,255,255,57,0,0,0,25,0,0,0,169,255,255,255,70,0,0,0,9,0,0,0,176,255,255,255,80,0,0,0,247,255,255,255,186,255,255,255,87,0,0,0,231,255,255,255,199,255,255,255,90,0,0,0,213,255,255,255,213,255,255,255,90,0,0,0,199,255,255,255,231,255,255,255,87,0,0,0,186,255,255,255,247,255,255,255,80,0,0,0,176,255,255,255,9,0,0,0,70,0,0,0,169,255,255,255,25,0,0,0,57,0,0,0,166,255,255,255,43,0,0,0,38,0,0,0,168,255,255,255,73,0,0,0,252,255,255,255,189,255,255,255,90,0,0,0,210,255,255,255,225,255,255,255,85,0,0,0,178,255,255,255,13,0,0,0,61,0,0,0,166,255,255,255,54,0,0,0,22,0,0,0,174,255,255,255,82,0,0,0,234,255,255,255,202,255,255,255,90,0,0,0,195,255,255,255,243,255,255,255,78,0,0,0,171,255,255,255,31,0,0,0,46,0,0,0,166,255,255,255,67,0,0,0,4,0,0,0,183,255,255,255,88,0,0,0,218,255,255,255,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,31,0,0,0,178,255,255,255,90,0,0,0,195,255,255,255,4,0,0,0,54,0,0,0,168,255,255,255,82,0,0,0,218,255,255,255,234,255,255,255,73,0,0,0,166,255,255,255,67,0,0,0,243,255,255,255,210,255,255,255,85,0,0,0,171,255,255,255,46,0,0,0,13,0,0,0,189,255,255,255,90,0,0,0,183,255,255,255,22,0,0,0,38,0,0,0,174,255,255,255,88,0,0,0,202,255,255,255,252,255,255,255,61,0,0,0,166,255,255,255,78,0,0,0,225,255,255,255,25,0,0,0,186,255,255,255,90,0,0,0,176,255,255,255,43,0,0,0,9,0,0,0,199,255,255,255,87,0,0,0,169,255,255,255,57,0,0,0,247,255,255,255,213,255,255,255,80,0,0,0,166,255,255,255,70,0,0,0,231,255,255,255,231,255,255,255,70,0,0,0,166,255,255,255,80,0,0,0,213,255,255,255,247,255,255,255,57,0,0,0,169,255,255,255,87,0,0,0,199,255,255,255,9,0,0,0,43,0,0,0,176,255,255,255,90,0,0,0,186,255,255,255,25,0,0,0,22,0,0,0,195,255,255,255,85,0,0,0,166,255,255,255,73,0,0,0,218,255,255,255,252,255,255,255,46,0,0,0,178,255,255,255,90,0,0,0,174,255,255,255,54,0,0,0,243,255,255,255,225,255,255,255,67,0,0,0,168,255,255,255,88,0,0,0,189,255,255,255,31,0,0,0,13,0,0,0,202,255,255,255,82,0,0,0,166,255,255,255,78,0,0,0,210,255,255,255,4,0,0,0,38,0,0,0,183,255,255,255,90,0,0,0,171,255,255,255,61,0,0,0,234,255,255,255,18,0,0,0,206,255,255,255,75,0,0,0,167,255,255,255,89,0,0,0,181,255,255,255,50,0,0,0,238,255,255,255,238,255,255,255,50,0,0,0,181,255,255,255,89,0,0,0,167,255,255,255,75,0,0,0,206,255,255,255,18,0,0,0,18,0,0,0,206,255,255,255,75,0,0,0,167,255,255,255,89,0,0,0,181,255,255,255,50,0,0,0,238,255,255,255,238,255,255,255,50,0,0,0,181,255,255,255,89,0,0,0,167,255,255,255,75,0,0,0,206,255,255,255,18,0,0,0,13,0,0,0,218,255,255,255,61,0,0,0,178,255,255,255,88,0,0,0,166,255,255,255,85,0,0,0,183,255,255,255,54,0,0,0,225,255,255,255,4,0,0,0,22,0,0,0,210,255,255,255,67,0,0,0,174,255,255,255,90,0,0,0,166,255,255,255,82,0,0,0,189,255,255,255,46,0,0,0,234,255,255,255,252,255,255,255,31,0,0,0,202,255,255,255,73,0,0,0,171,255,255,255,90,0,0,0,168,255,255,255,78,0,0,0,195,255,255,255,38,0,0,0,243,255,255,255,9,0,0,0,231,255,255,255,43,0,0,0,199,255,255,255,70,0,0,0,176,255,255,255,87,0,0,0,166,255,255,255,90,0,0,0,169,255,255,255,80,0,0,0,186,255,255,255,57,0,0,0,213,255,255,255,25,0,0,0,247,255,255,255,247,255,255,255,25,0,0,0,213,255,255,255,57,0,0,0,186,255,255,255,80,0,0,0,169,255,255,255,90,0,0,0,166,255,255,255,87,0,0,0,176,255,255,255,70,0,0,0,199,255,255,255,43,0,0,0,231,255,255,255,9,0,0,0,4,0,0,0,243,255,255,255,22,0,0,0,225,255,255,255,38,0,0,0,210,255,255,255,54,0,0,0,195,255,255,255,67,0,0,0,183,255,255,255,78,0,0,0,174,255,255,255,85,0,0,0,168,255,255,255,90,0,0,0,166,255,255,255,90,0,0,0,166,255,255,255,88,0,0,0,171,255,255,255,82,0,0,0,178,255,255,255,73,0,0,0,189,255,255,255,61,0,0,0,202,255,255,255,46,0,0,0,218,255,255,255,31,0,0,0,234,255,255,255,13,0,0,0,252,255,255,255,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,90,0,0,0,90,0,0,0,88,0,0,0,85,0,0,0,82,0,0,0,78,0,0,0,73,0,0,0,67,0,0,0,61,0,0,0,54,0,0,0,46,0,0,0,38,0,0,0,31,0,0,0,22,0,0,0,13,0,0,0,4,0,0,0,252,255,255,255,243,255,255,255,234,255,255,255,225,255,255,255,218,255,255,255,210,255,255,255,202,255,255,255,195,255,255,255,189,255,255,255,183,255,255,255,178,255,255,255,174,255,255,255,171,255,255,255,168,255,255,255,166,255,255,255,166,255,255,255,90,0,0,0,87,0,0,0,80,0,0,0,70,0,0,0,57,0,0,0,43,0,0,0,25,0,0,0,9,0,0,0,247,255,255,255,231,255,255,255,213,255,255,255,199,255,255,255,186,255,255,255,176,255,255,255,169,255,255,255,166,255,255,255,166,255,255,255,169,255,255,255,176,255,255,255,186,255,255,255,199,255,255,255,213,255,255,255,231,255,255,255,247,255,255,255,9,0,0,0,25,0,0,0,43,0,0,0,57,0,0,0,70,0,0,0,80,0,0,0,87,0,0,0,90,0,0,0,90,0,0,0,82,0,0,0,67,0,0,0,46,0,0,0,22,0,0,0,252,255,255,255,225,255,255,255,202,255,255,255,183,255,255,255,171,255,255,255,166,255,255,255,168,255,255,255,178,255,255,255,195,255,255,255,218,255,255,255,243,255,255,255,13,0,0,0,38,0,0,0,61,0,0,0,78,0,0,0,88,0,0,0,90,0,0,0,85,0,0,0,73,0,0,0,54,0,0,0,31,0,0,0,4,0,0,0,234,255,255,255,210,255,255,255,189,255,255,255,174,255,255,255,166,255,255,255,89,0,0,0,75,0,0,0,50,0,0,0,18,0,0,0,238,255,255,255,206,255,255,255,181,255,255,255,167,255,255,255,167,255,255,255,181,255,255,255,206,255,255,255,238,255,255,255,18,0,0,0,50,0,0,0,75,0,0,0,89,0,0,0,89,0,0,0,75,0,0,0,50,0,0,0,18,0,0,0,238,255,255,255,206,255,255,255,181,255,255,255,167,255,255,255,167,255,255,255,181,255,255,255,206,255,255,255,238,255,255,255,18,0,0,0,50,0,0,0,75,0,0,0,89,0,0,0,88,0,0,0,67,0,0,0,31,0,0,0,243,255,255,255,202,255,255,255,174,255,255,255,166,255,255,255,178,255,255,255,210,255,255,255,252,255,255,255,38,0,0,0,73,0,0,0,90,0,0,0,85,0,0,0,61,0,0,0,22,0,0,0,234,255,255,255,195,255,255,255,171,255,255,255,166,255,255,255,183,255,255,255,218,255,255,255,4,0,0,0,46,0,0,0,78,0,0,0,90,0,0,0,82,0,0,0,54,0,0,0,13,0,0,0,225,255,255,255,189,255,255,255,168,255,255,255,87,0,0,0,57,0,0,0,9,0,0,0,213,255,255,255,176,255,255,255,166,255,255,255,186,255,255,255,231,255,255,255,25,0,0,0,70,0,0,0,90,0,0,0,80,0,0,0,43,0,0,0,247,255,255,255,199,255,255,255,169,255,255,255,169,255,255,255,199,255,255,255,247,255,255,255,43,0,0,0,80,0,0,0,90,0,0,0,70,0,0,0,25,0,0,0,231,255,255,255,186,255,255,255,166,255,255,255,176,255,255,255,213,255,255,255,9,0,0,0,57,0,0,0,87,0,0,0,85,0,0,0,46,0,0,0,243,255,255,255,189,255,255,255,166,255,255,255,183,255,255,255,234,255,255,255,38,0,0,0,82,0,0,0,88,0,0,0,54,0,0,0,252,255,255,255,195,255,255,255,166,255,255,255,178,255,255,255,225,255,255,255,31,0,0,0,78,0,0,0,90,0,0,0,61,0,0,0,4,0,0,0,202,255,255,255,168,255,255,255,174,255,255,255,218,255,255,255,22,0,0,0,73,0,0,0,90,0,0,0,67,0,0,0,13,0,0,0,210,255,255,255,171,255,255,255,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,83,0,0,0,36,0,0,0,220,255,255,255,173,255,255,255,173,255,255,255,220,255,255,255,36,0,0,0,83,0,0,0,82,0,0,0,22,0,0,0,202,255,255,255,166,255,255,255,195,255,255,255,13,0,0,0,78,0,0,0,85,0,0,0,31,0,0,0,210,255,255,255,166,255,255,255,189,255,255,255,4,0,0,0,73,0,0,0,88,0,0,0,38,0,0,0,218,255,255,255,168,255,255,255,183,255,255,255,252,255,255,255,67,0,0,0,90,0,0,0,46,0,0,0,225,255,255,255,171,255,255,255,178,255,255,255,243,255,255,255,61,0,0,0,90,0,0,0,54,0,0,0,234,255,255,255,174,255,255,255,80,0,0,0,9,0,0,0,186,255,255,255,169,255,255,255,231,255,255,255,57,0,0,0,90,0,0,0,43,0,0,0,213,255,255,255,166,255,255,255,199,255,255,255,25,0,0,0,87,0,0,0,70,0,0,0,247,255,255,255,176,255,255,255,176,255,255,255,247,255,255,255,70,0,0,0,87,0,0,0,25,0,0,0,199,255,255,255,166,255,255,255,213,255,255,255,43,0,0,0,90,0,0,0,57,0,0,0,231,255,255,255,169,255,255,255,186,255,255,255,9,0,0,0,80,0,0,0,78,0,0,0,252,255,255,255,174,255,255,255,183,255,255,255,13,0,0,0,85,0,0,0,67,0,0,0,234,255,255,255,168,255,255,255,195,255,255,255,31,0,0,0,90,0,0,0,54,0,0,0,218,255,255,255,166,255,255,255,210,255,255,255,46,0,0,0,90,0,0,0,38,0,0,0,202,255,255,255,166,255,255,255,225,255,255,255,61,0,0,0,88,0,0,0,22,0,0,0,189,255,255,255,171,255,255,255,243,255,255,255,73,0,0,0,82,0,0,0,4,0,0,0,178,255,255,255,75,0,0,0,238,255,255,255,167,255,255,255,206,255,255,255,50,0,0,0,89,0,0,0,18,0,0,0,181,255,255,255,181,255,255,255,18,0,0,0,89,0,0,0,50,0,0,0,206,255,255,255,167,255,255,255,238,255,255,255,75,0,0,0,75,0,0,0,238,255,255,255,167,255,255,255,206,255,255,255,50,0,0,0,89,0,0,0,18,0,0,0,181,255,255,255,181,255,255,255,18,0,0,0,89,0,0,0,50,0,0,0,206,255,255,255,167,255,255,255,238,255,255,255,75,0,0,0,73,0,0,0,225,255,255,255,166,255,255,255,234,255,255,255,78,0,0,0,67,0,0,0,218,255,255,255,166,255,255,255,243,255,255,255,82,0,0,0,61,0,0,0,210,255,255,255,168,255,255,255,252,255,255,255,85,0,0,0,54,0,0,0,202,255,255,255,171,255,255,255,4,0,0,0,88,0,0,0,46,0,0,0,195,255,255,255,174,255,255,255,13,0,0,0,90,0,0,0,38,0,0,0,189,255,255,255,178,255,255,255,22,0,0,0,90,0,0,0,31,0,0,0,183,255,255,255,70,0,0,0,213,255,255,255,169,255,255,255,9,0,0,0,90,0,0,0,25,0,0,0,176,255,255,255,199,255,255,255,57,0,0,0,80,0,0,0,231,255,255,255,166,255,255,255,247,255,255,255,87,0,0,0,43,0,0,0,186,255,255,255,186,255,255,255,43,0,0,0,87,0,0,0,247,255,255,255,166,255,255,255,231,255,255,255,80,0,0,0,57,0,0,0,199,255,255,255,176,255,255,255,25,0,0,0,90,0,0,0,9,0,0,0,169,255,255,255,213,255,255,255,70,0,0,0,67,0,0,0,202,255,255,255,178,255,255,255,38,0,0,0,85,0,0,0,234,255,255,255,166,255,255,255,4,0,0,0,90,0,0,0,13,0,0,0,168,255,255,255,225,255,255,255,82,0,0,0,46,0,0,0,183,255,255,255,195,255,255,255,61,0,0,0,73,0,0,0,210,255,255,255,174,255,255,255,31,0,0,0,88,0,0,0,243,255,255,255,166,255,255,255,252,255,255,255,90,0,0,0,22,0,0,0,171,255,255,255,218,255,255,255,78,0,0,0,54,0,0,0,189,255,255,255,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,64,0,0,0,192,255,255,255,192,255,255,255,64,0,0,0,61,0,0,0,183,255,255,255,210,255,255,255,82,0,0,0,31,0,0,0,168,255,255,255,243,255,255,255,90,0,0,0,252,255,255,255,166,255,255,255,22,0,0,0,85,0,0,0,218,255,255,255,178,255,255,255,54,0,0,0,67,0,0,0,189,255,255,255,202,255,255,255,78,0,0,0,38,0,0,0,171,255,255,255,234,255,255,255,90,0,0,0,4,0,0,0,166,255,255,255,13,0,0,0,88,0,0,0,225,255,255,255,174,255,255,255,46,0,0,0,73,0,0,0,195,255,255,255,57,0,0,0,176,255,255,255,231,255,255,255,90,0,0,0,247,255,255,255,169,255,255,255,43,0,0,0,70,0,0,0,186,255,255,255,213,255,255,255,87,0,0,0,9,0,0,0,166,255,255,255,25,0,0,0,80,0,0,0,199,255,255,255,199,255,255,255,80,0,0,0,25,0,0,0,166,255,255,255,9,0,0,0,87,0,0,0,213,255,255,255,186,255,255,255,70,0,0,0,43,0,0,0,169,255,255,255,247,255,255,255,90,0,0,0,231,255,255,255,176,255,255,255,57,0,0,0,54,0,0,0,171,255,255,255,252,255,255,255,88,0,0,0,210,255,255,255,195,255,255,255,82,0,0,0,13,0,0,0,166,255,255,255,38,0,0,0,67,0,0,0,178,255,255,255,234,255,255,255,90,0,0,0,225,255,255,255,183,255,255,255,73,0,0,0,31,0,0,0,166,255,255,255,22,0,0,0,78,0,0,0,189,255,255,255,218,255,255,255,90,0,0,0,243,255,255,255,174,255,255,255,61,0,0,0,46,0,0,0,168,255,255,255,4,0,0,0,85,0,0,0,202,255,255,255,50,0,0,0,167,255,255,255,18,0,0,0,75,0,0,0,181,255,255,255,238,255,255,255,89,0,0,0,206,255,255,255,206,255,255,255,89,0,0,0,238,255,255,255,181,255,255,255,75,0,0,0,18,0,0,0,167,255,255,255,50,0,0,0,50,0,0,0,167,255,255,255,18,0,0,0,75,0,0,0,181,255,255,255,238,255,255,255,89,0,0,0,206,255,255,255,206,255,255,255,89,0,0,0,238,255,255,255,181,255,255,255,75,0,0,0,18,0,0,0,167,255,255,255,50,0,0,0,46,0,0,0,166,255,255,255,38,0,0,0,54,0,0,0,166,255,255,255,31,0,0,0,61,0,0,0,168,255,255,255,22,0,0,0,67,0,0,0,171,255,255,255,13,0,0,0,73,0,0,0,174,255,255,255,4,0,0,0,78,0,0,0,178,255,255,255,252,255,255,255,82,0,0,0,183,255,255,255,243,255,255,255,85,0,0,0,189,255,255,255,234,255,255,255,88,0,0,0,195,255,255,255,225,255,255,255,90,0,0,0,202,255,255,255,218,255,255,255,90,0,0,0,210,255,255,255,43,0,0,0,166,255,255,255,57,0,0,0,25,0,0,0,169,255,255,255,70,0,0,0,9,0,0,0,176,255,255,255,80,0,0,0,247,255,255,255,186,255,255,255,87,0,0,0,231,255,255,255,199,255,255,255,90,0,0,0,213,255,255,255,213,255,255,255,90,0,0,0,199,255,255,255,231,255,255,255,87,0,0,0,186,255,255,255,247,255,255,255,80,0,0,0,176,255,255,255,9,0,0,0,70,0,0,0,169,255,255,255,25,0,0,0,57,0,0,0,166,255,255,255,43,0,0,0,38,0,0,0,168,255,255,255,73,0,0,0,252,255,255,255,189,255,255,255,90,0,0,0,210,255,255,255,225,255,255,255,85,0,0,0,178,255,255,255,13,0,0,0,61,0,0,0,166,255,255,255,54,0,0,0,22,0,0,0,174,255,255,255,82,0,0,0,234,255,255,255,202,255,255,255,90,0,0,0,195,255,255,255,243,255,255,255,78,0,0,0,171,255,255,255,31,0,0,0,46,0,0,0,166,255,255,255,67,0,0,0,4,0,0,0,183,255,255,255,88,0,0,0,218,255,255,255,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,36,0,0,0,173,255,255,255,83,0,0,0,220,255,255,255,220,255,255,255,83,0,0,0,173,255,255,255,36,0,0,0,31,0,0,0,178,255,255,255,90,0,0,0,195,255,255,255,4,0,0,0,54,0,0,0,168,255,255,255,82,0,0,0,218,255,255,255,234,255,255,255,73,0,0,0,166,255,255,255,67,0,0,0,243,255,255,255,210,255,255,255,85,0,0,0,171,255,255,255,46,0,0,0,13,0,0,0,189,255,255,255,90,0,0,0,183,255,255,255,22,0,0,0,38,0,0,0,174,255,255,255,88,0,0,0,202,255,255,255,252,255,255,255,61,0,0,0,166,255,255,255,78,0,0,0,225,255,255,255,25,0,0,0,186,255,255,255,90,0,0,0,176,255,255,255,43,0,0,0,9,0,0,0,199,255,255,255,87,0,0,0,169,255,255,255,57,0,0,0,247,255,255,255,213,255,255,255,80,0,0,0,166,255,255,255,70,0,0,0,231,255,255,255,231,255,255,255,70,0,0,0,166,255,255,255,80,0,0,0,213,255,255,255,247,255,255,255,57,0,0,0,169,255,255,255,87,0,0,0,199,255,255,255,9,0,0,0,43,0,0,0,176,255,255,255,90,0,0,0,186,255,255,255,25,0,0,0,22,0,0,0,195,255,255,255,85,0,0,0,166,255,255,255,73,0,0,0,218,255,255,255,252,255,255,255,46,0,0,0,178,255,255,255,90,0,0,0,174,255,255,255,54,0,0,0,243,255,255,255,225,255,255,255,67,0,0,0,168,255,255,255,88,0,0,0,189,255,255,255,31,0,0,0,13,0,0,0,202,255,255,255,82,0,0,0,166,255,255,255,78,0,0,0,210,255,255,255,4,0,0,0,38,0,0,0,183,255,255,255,90,0,0,0,171,255,255,255,61,0,0,0,234,255,255,255,18,0,0,0,206,255,255,255,75,0,0,0,167,255,255,255,89,0,0,0,181,255,255,255,50,0,0,0,238,255,255,255,238,255,255,255,50,0,0,0,181,255,255,255,89,0,0,0,167,255,255,255,75,0,0,0,206,255,255,255,18,0,0,0,18,0,0,0,206,255,255,255,75,0,0,0,167,255,255,255,89,0,0,0,181,255,255,255,50,0,0,0,238,255,255,255,238,255,255,255,50,0,0,0,181,255,255,255,89,0,0,0,167,255,255,255,75,0,0,0,206,255,255,255,18,0,0,0,13,0,0,0,218,255,255,255,61,0,0,0,178,255,255,255,88,0,0,0,166,255,255,255,85,0,0,0,183,255,255,255,54,0,0,0,225,255,255,255,4,0,0,0,22,0,0,0,210,255,255,255,67,0,0,0,174,255,255,255,90,0,0,0,166,255,255,255,82,0,0,0,189,255,255,255,46,0,0,0,234,255,255,255,252,255,255,255,31,0,0,0,202,255,255,255,73,0,0,0,171,255,255,255,90,0,0,0,168,255,255,255,78,0,0,0,195,255,255,255,38,0,0,0,243,255,255,255,9,0,0,0,231,255,255,255,43,0,0,0,199,255,255,255,70,0,0,0,176,255,255,255,87,0,0,0,166,255,255,255,90,0,0,0,169,255,255,255,80,0,0,0,186,255,255,255,57,0,0,0,213,255,255,255,25,0,0,0,247,255,255,255,247,255,255,255,25,0,0,0,213,255,255,255,57,0,0,0,186,255,255,255,80,0,0,0,169,255,255,255,90,0,0,0,166,255,255,255,87,0,0,0,176,255,255,255,70,0,0,0,199,255,255,255,43,0,0,0,231,255,255,255,9,0,0,0,4,0,0,0,243,255,255,255,22,0,0,0,225,255,255,255,38,0,0,0,210,255,255,255,54,0,0,0,195,255,255,255,67,0,0,0,183,255,255,255,78,0,0,0,174,255,255,255,85,0,0,0,168,255,255,255,90,0,0,0,166,255,255,255,90,0,0,0,166,255,255,255,88,0,0,0,171,255,255,255,82,0,0,0,178,255,255,255,73,0,0,0,189,255,255,255,61,0,0,0,202,255,255,255,46,0,0,0,218,255,255,255,31,0,0,0,234,255,255,255,13,0,0,0,252,255,255,255,29,0,0,0,55,0,0,0,74,0,0,0,84,0,0,0,74,0,0,0,74,0,0,0,0,0,0,0,182,255,255,255,84,0,0,0,227,255,255,255,182,255,255,255,55,0,0,0,55,0,0,0,172,255,255,255,74,0,0,0,227,255,255,255,29,0,0,0,55,0,0,0,74,0,0,0,84,0,0,0,74,0,0,0,74,0,0,0,0,0,0,0,182,255,255,255,84,0,0,0,227,255,255,255,182,255,255,255,55,0,0,0,55,0,0,0,172,255,255,255,74,0,0,0,227,255,255,255,0,0,0,0,232,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,216,0,0,0,1,0,0,0,6,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,96,1,0,0,1,0,0,0,11,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,112,1,0,0,1,0,0,0,15,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,0,78,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,21,0,0,0,191,229,5,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,154,249,110,251,114,252,23,253,138,253,222,253,30,254,81,254,122,254,171,254,197,254,219,254,239,254,0,255,239,254,219,254,197,254,171,254,122,254,81,254,30,254,222,253,138,253,23,253,114,252,110,251,154,249,0,240,105,116,97,98,108,101,46,98,105,110,0,37,100,10,0,243,4,53,63,243,4,53,63,243,4,53,63,243,4,53,63,243,4,53,191,243,4,53,63,215,179,93,63,0,0,0,63,243,4,53,63,50,49,141,36,0,0,128,191,243,4,53,63,215,179,93,191,0,0,0,63,243,4,53,63,94,131,108,63,243,4,53,63,21,239,195,62,243,4,53,63,21,239,195,62,243,4,53,191,94,131,108,191,243,4,53,63,21,239,195,190,243,4,53,191,94,131,108,63,243,4,53,63,94,131,108,191,243,4,53,63,21,239,195,190,243,4,53,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,243,4,53,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,243,4,53,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,243,4,53,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,243,4,53,63,234,70,119,63,215,179,93,63,243,4,53,63,0,0,0,63,238,131,132,62,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,243,4,53,63,238,131,132,62,215,179,93,191,243,4,53,191,0,0,0,63,234,70,119,63,243,4,53,63,238,131,132,190,215,179,93,191,243,4,53,63,0,0,0,63,234,70,119,191,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,243,4,53,63,234,70,119,191,215,179,93,63,243,4,53,191,0,0,0,63,238,131,132,190,243,4,53,63,224,148,121,63,229,165,102,63,28,38,72,63,7,157,31,63,2,38,222,62,135,220,99,62,243,4,53,63,28,38,72,63,135,220,99,62,2,38,222,190,229,165,102,191,224,148,121,191,7,157,31,191,243,4,53,63,2,38,222,62,7,157,31,191,224,148,121,191,135,220,99,190,28,38,72,63,229,165,102,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,243,4,53,63,2,38,222,190,7,157,31,191,224,148,121,63,135,220,99,190,28,38,72,191,229,165,102,63,243,4,53,63,28,38,72,191,135,220,99,62,2,38,222,62,229,165,102,191,224,148,121,63,7,157,31,191,243,4,53,63,224,148,121,191,229,165,102,63,28,38,72,191,7,157,31,63,2,38,222,190,135,220,99,62,243,4,53,63,190,20,123,63,94,131,108,63,49,219,84,63,243,4,53,63,218,57,14,63,21,239,195,62,194,197,71,62,243,4,53,63,49,219,84,63,21,239,195,62,194,197,71,190,243,4,53,191,190,20,123,191,94,131,108,191,218,57,14,191,243,4,53,63,218,57,14,63,21,239,195,190,190,20,123,191,243,4,53,191,194,197,71,62,94,131,108,63,49,219,84,63,243,4,53,63,194,197,71,62,94,131,108,191,218,57,14,191,243,4,53,63,49,219,84,63,21,239,195,190,190,20,123,191,243,4,53,63,194,197,71,190,94,131,108,191,218,57,14,63,243,4,53,63,49,219,84,191,21,239,195,190,190,20,123,63,243,4,53,63,218,57,14,191,21,239,195,190,190,20,123,63,243,4,53,191,194,197,71,190,94,131,108,63,49,219,84,191,243,4,53,63,49,219,84,191,21,239,195,62,194,197,71,62,243,4,53,191,190,20,123,63,94,131,108,191,218,57,14,63,243,4,53,63,190,20,123,191,94,131,108,63,49,219,84,191,243,4,53,63,218,57,14,191,21,239,195,62,194,197,71,190,243,4,53,63,92,28,124,63,178,143,112,63,215,179,93,63,125,27,68,63,187,141,36,63,0,0,0,63,68,29,175,62,212,208,49,62,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,243,4,53,63,187,141,36,63,212,208,49,190,215,179,93,191,178,143,112,191,68,29,175,190,0,0,0,63,92,28,124,63,125,27,68,63,243,4,53,63,68,29,175,62,125,27,68,191,215,179,93,191,212,208,49,62,92,28,124,63,0,0,0,63,187,141,36,191,178,143,112,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,243,4,53,63,68,29,175,190,125,27,68,191,215,179,93,63,212,208,49,62,92,28,124,191,0,0,0,63,187,141,36,63,178,143,112,191,243,4,53,63,187,141,36,191,212,208,49,190,215,179,93,63,178,143,112,191,68,29,175,62,0,0,0,63,92,28,124,191,125,27,68,63,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,243,4,53,63,92,28,124,191,178,143,112,63,215,179,93,191,125,27,68,63,187,141,36,191,0,0,0,63,68,29,175,190,212,208,49,62,243,4,53,63,37,217,124,63,113,120,115,63,1,25,100,63,189,27,79,63,243,4,53,63,24,121,22,63,113,113,232,62,122,55,158,62,91,48,32,62,243,4,53,63,1,25,100,63,24,121,22,63,91,48,32,62,122,55,158,190,243,4,53,191,113,120,115,191,37,217,124,191,189,27,79,191,113,113,232,190,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,243,4,53,63,113,113,232,62,24,121,22,191,37,217,124,191,122,55,158,190,243,4,53,63,113,120,115,63,91,48,32,62,189,27,79,191,1,25,100,191,243,4,53,63,91,48,32,62,113,120,115,191,113,113,232,190,189,27,79,63,243,4,53,63,24,121,22,191,1,25,100,191,122,55,158,62,37,217,124,63,243,4,53,63,91,48,32,190,113,120,115,191,113,113,232,62,189,27,79,63,243,4,53,191,24,121,22,191,1,25,100,63,122,55,158,62,37,217,124,191,243,4,53,63,113,113,232,190,24,121,22,191,37,217,124,63,122,55,158,190,243,4,53,191,113,120,115,63,91,48,32,190,189,27,79,191,1,25,100,63,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,243,4,53,63,1,25,100,191,24,121,22,63,91,48,32,190,122,55,158,190,243,4,53,63,113,120,115,191,37,217,124,63,189,27,79,191,113,113,232,62,243,4,53,63,37,217,124,191,113,120,115,63,1,25,100,191,189,27,79,63,243,4,53,191,24,121,22,63,113,113,232,190,122,55,158,62,91,48,32,190,243,4,53,63,240,100,125,63,85,161,117,63,164,221,104,63,100,92,87,63,206,120,65,63,244,164,39,63,112,103,10,63,71,177,212,62,64,63,144,62,251,186,17,62,243,4,53,63,164,221,104,63,244,164,39,63,64,63,144,62,251,186,17,190,112,103,10,191,100,92,87,191,240,100,125,191,85,161,117,191,206,120,65,191,71,177,212,190,243,4,53,63,206,120,65,63,251,186,17,62,112,103,10,191,85,161,117,191,164,221,104,191,71,177,212,190,64,63,144,62,100,92,87,63,240,100,125,63,244,164,39,63,243,4,53,63,112,103,10,63,71,177,212,190,240,100,125,191,244,164,39,191,64,63,144,62,85,161,117,63,206,120,65,63,251,186,17,190,164,221,104,191,100,92,87,191,243,4,53,63,64,63,144,62,100,92,87,191,206,120,65,191,71,177,212,62,240,100,125,63,251,186,17,62,164,221,104,191,244,164,39,191,112,103,10,63,85,161,117,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,243,4,53,63,64,63,144,190,100,92,87,191,206,120,65,63,71,177,212,62,240,100,125,191,251,186,17,62,164,221,104,63,244,164,39,191,112,103,10,191,85,161,117,63,243,4,53,63,112,103,10,191,71,177,212,190,240,100,125,63,244,164,39,191,64,63,144,190,85,161,117,63,206,120,65,191,251,186,17,190,164,221,104,63,100,92,87,191,243,4,53,63,206,120,65,191,251,186,17,62,112,103,10,63,85,161,117,191,164,221,104,63,71,177,212,190,64,63,144,190,100,92,87,63,240,100,125,191,244,164,39,63,243,4,53,63,164,221,104,191,244,164,39,63,64,63,144,190,251,186,17,190,112,103,10,63,100,92,87,191,240,100,125,63,85,161,117,191,206,120,65,63,71,177,212,190,243,4,53,63,240,100,125,191,85,161,117,63,164,221,104,191,100,92,87,63,206,120,65,191,244,164,39,63,112,103,10,191,71,177,212,62,64,63,144,190,251,186,17,62,243,4,53,63,85,207,125,63,234,70,119,63,94,131,108,63,215,179,93,63,52,25,75,63,243,4,53,63,202,215,27,63,0,0,0,63,21,239,195,62,238,131,132,62,168,168,5,62,243,4,53,63,94,131,108,63,243,4,53,63,21,239,195,62,50,49,141,36,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,243,4,53,63,52,25,75,63,238,131,132,62,21,239,195,190,215,179,93,191,85,207,125,191,243,4,53,191,168,168,5,190,0,0,0,63,94,131,108,63,234,70,119,63,202,215,27,63,243,4,53,63,202,215,27,63,238,131,132,190,94,131,108,191,215,179,93,191,168,168,5,190,243,4,53,63,85,207,125,63,0,0,0,63,21,239,195,190,234,70,119,191,52,25,75,191,243,4,53,63,21,239,195,62,243,4,53,191,94,131,108,191,202,201,83,165,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,243,4,53,63,168,168,5,62,234,70,119,191,21,239,195,190,215,179,93,63,202,215,27,63,243,4,53,191,52,25,75,191,0,0,0,63,94,131,108,63,238,131,132,190,85,207,125,191,243,4,53,63,168,168,5,190,234,70,119,191,21,239,195,62,215,179,93,63,202,215,27,191,243,4,53,191,52,25,75,63,0,0,0,63,94,131,108,191,238,131,132,190,85,207,125,63,243,4,53,63,21,239,195,190,243,4,53,191,94,131,108,63,126,125,176,37,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,243,4,53,63,202,215,27,191,238,131,132,190,94,131,108,63,215,179,93,191,168,168,5,62,243,4,53,63,85,207,125,191,0,0,0,63,21,239,195,62,234,70,119,191,52,25,75,63,243,4,53,63,52,25,75,191,238,131,132,62,21,239,195,62,215,179,93,191,85,207,125,63,243,4,53,191,168,168,5,62,0,0,0,63,94,131,108,191,234,70,119,63,202,215,27,191,243,4,53,63,94,131,108,191,243,4,53,63,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,243,4,53,63,85,207,125,191,234,70,119,63,94,131,108,191,215,179,93,63,52,25,75,191,243,4,53,63,202,215,27,191,0,0,0,63,21,239,195,190,238,131,132,62,168,168,5,190,243,4,53,63,43,34,126,63,165,143,120,63,57,93,111,63,63,173,98,63,18,175,82,63,103,158,63,63,104,194,41,63,177,108,17,63,50,240,237,62,198,142,181,62,42,15,117,62,239,219,246,61,243,4,53,63,57,93,111,63,103,158,63,63,50,240,237,62,239,219,246,61,42,15,117,190,177,108,17,191,18,175,82,191,165,143,120,191,43,34,126,191,63,173,98,191,104,194,41,191,198,142,181,190,243,4,53,63,18,175,82,63,198,142,181,62,42,15,117,190,103,158,63,191,43,34,126,191,63,173,98,191,50,240,237,190,239,219,246,61,104,194,41,63,165,143,120,63,57,93,111,63,177,108,17,63,243,4,53,63,104,194,41,63,239,219,246,189,18,175,82,191,165,143,120,191,50,240,237,190,198,142,181,62,57,93,111,63,63,173,98,63,42,15,117,62,177,108,17,191,43,34,126,191,103,158,63,191,243,4,53,63,50,240,237,62,177,108,17,191,43,34,126,191,198,142,181,190,104,194,41,63,165,143,120,63,42,15,117,62,103,158,63,191,57,93,111,191,239,219,246,189,18,175,82,63,63,173,98,63,243,4,53,63,42,15,117,62,63,173,98,191,104,194,41,191,177,108,17,63,57,93,111,63,239,219,246,189,43,34,126,191,198,142,181,190,18,175,82,63,103,158,63,63,50,240,237,190,165,143,120,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,243,4,53,63,42,15,117,190,63,173,98,191,104,194,41,63,177,108,17,63,57,93,111,191,239,219,246,189,43,34,126,63,198,142,181,190,18,175,82,191,103,158,63,63,50,240,237,62,165,143,120,191,243,4,53,63,50,240,237,190,177,108,17,191,43,34,126,63,198,142,181,190,104,194,41,191,165,143,120,63,42,15,117,190,103,158,63,191,57,93,111,63,239,219,246,189,18,175,82,191,63,173,98,63,243,4,53,63,104,194,41,191,239,219,246,189,18,175,82,63,165,143,120,191,50,240,237,62,198,142,181,62,57,93,111,191,63,173,98,63,42,15,117,190,177,108,17,191,43,34,126,63,103,158,63,191,243,4,53,63,18,175,82,191,198,142,181,62,42,15,117,62,103,158,63,191,43,34,126,63,63,173,98,191,50,240,237,62,239,219,246,61,104,194,41,191,165,143,120,63,57,93,111,191,177,108,17,63,243,4,53,63,57,93,111,191,103,158,63,63,50,240,237,190,239,219,246,61,42,15,117,62,177,108,17,191,18,175,82,63,165,143,120,191,43,34,126,63,63,173,98,191,104,194,41,63,198,142,181,190,243,4,53,63,43,34,126,191,165,143,120,63,57,93,111,191,63,173,98,63,18,175,82,191,103,158,63,63,104,194,41,191,177,108,17,63,50,240,237,190,198,142,181,62,42,15,117,190,239,219,246,61,243,4,53,63,236,99,126,63,224,148,121,63,87,162,113,63,229,165,102,63,235,194,88,63,28,38,72,63,243,4,53,63,7,157,31,63,65,51,8,63,2,38,222,62,86,26,169,62,135,220,99,62,162,77,229,61,243,4,53,63,87,162,113,63,28,38,72,63,65,51,8,63,135,220,99,62,162,77,229,189,2,38,222,190,243,4,53,191,229,165,102,191,236,99,126,191,224,148,121,191,235,194,88,191,7,157,31,191,86,26,169,190,243,4,53,63,235,194,88,63,2,38,222,62,162,77,229,189,7,157,31,191,87,162,113,191,224,148,121,191,243,4,53,191,135,220,99,190,86,26,169,62,28,38,72,63,236,99,126,63,229,165,102,63,65,51,8,63,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,243,4,53,63,65,51,8,63,2,38,222,190,236,99,126,191,7,157,31,191,86,26,169,62,224,148,121,63,243,4,53,63,135,220,99,190,87,162,113,191,28,38,72,191,162,77,229,61,229,165,102,63,235,194,88,63,243,4,53,63,86,26,169,62,28,38,72,191,235,194,88,191,135,220,99,62,236,99,126,63,2,38,222,62,243,4,53,191,229,165,102,191,162,77,229,61,224,148,121,63,65,51,8,63,7,157,31,191,87,162,113,191,243,4,53,63,162,77,229,61,224,148,121,191,86,26,169,190,229,165,102,63,65,51,8,63,28,38,72,191,243,4,53,191,7,157,31,63,235,194,88,63,2,38,222,190,87,162,113,191,135,220,99,62,236,99,126,63,243,4,53,63,162,77,229,189,224,148,121,191,86,26,169,62,229,165,102,63,65,51,8,191,28,38,72,191,243,4,53,63,7,157,31,63,235,194,88,191,2,38,222,190,87,162,113,63,135,220,99,62,236,99,126,191,243,4,53,63,86,26,169,190,28,38,72,191,235,194,88,63,135,220,99,62,236,99,126,191,2,38,222,62,243,4,53,63,229,165,102,191,162,77,229,189,224,148,121,63,65,51,8,191,7,157,31,191,87,162,113,63,243,4,53,63,65,51,8,191,2,38,222,190,236,99,126,63,7,157,31,191,86,26,169,190,224,148,121,63,243,4,53,191,135,220,99,190,87,162,113,63,28,38,72,191,162,77,229,189,229,165,102,63,235,194,88,191,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,243,4,53,63,235,194,88,191,2,38,222,62,162,77,229,61,7,157,31,191,87,162,113,63,224,148,121,191,243,4,53,63,135,220,99,190,86,26,169,190,28,38,72,63,236,99,126,191,229,165,102,63,65,51,8,191,243,4,53,63,87,162,113,191,28,38,72,63,65,51,8,191,135,220,99,62,162,77,229,61,2,38,222,190,243,4,53,63,229,165,102,191,236,99,126,63,224,148,121,191,235,194,88,63,7,157,31,191,86,26,169,62,243,4,53,63,236,99,126,191,224,148,121,63,87,162,113,191,229,165,102,63,235,194,88,191,28,38,72,63,243,4,53,191,7,157,31,63,65,51,8,191,2,38,222,62,86,26,169,190,135,220,99,62,162,77,229,189,243,4,53,63,253,152,126,63,226,103,122,63,113,120,115,63,29,222,105,63,215,179,93,63,189,27,79,63,189,62,62,63,37,76,43,63,24,121,22,63,0,0,0,63,201,63,208,62,122,55,158,62,205,230,84,62,5,19,214,61,243,4,53,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,50,49,141,36,122,55,158,190,24,121,22,191,189,27,79,191,113,120,115,191,0,0,128,191,113,120,115,191,189,27,79,191,24,121,22,191,122,55,158,190,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,202,201,83,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,243,4,53,63,189,62,62,63,5,19,214,61,24,121,22,191,226,103,122,191,215,179,93,191,122,55,158,190,201,63,208,62,29,222,105,63,113,120,115,63,0,0,0,63,205,230,84,190,189,27,79,191,253,152,126,191,37,76,43,191,243,4,53,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,202,201,83,165,189,27,79,63,113,120,115,63,122,55,158,62,24,121,22,191,0,0,128,191,24,121,22,191,122,55,158,62,113,120,115,63,189,27,79,63,243,4,53,63,201,63,208,62,37,76,43,191,113,120,115,191,5,19,214,189,215,179,93,63,189,27,79,63,205,230,84,190,226,103,122,191,24,121,22,191,0,0,0,63,253,152,126,63,122,55,158,62,189,62,62,191,29,222,105,191,243,4,53,63,205,230,84,62,29,222,105,191,24,121,22,191,37,76,43,63,215,179,93,63,122,55,158,190,253,152,126,191,5,19,214,189,113,120,115,63,0,0,0,63,189,62,62,191,189,27,79,191,201,63,208,62,226,103,122,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,243,4,53,63,205,230,84,190,29,222,105,191,24,121,22,63,37,76,43,63,215,179,93,191,122,55,158,190,253,152,126,63,5,19,214,189,113,120,115,191,0,0,0,63,189,62,62,63,189,27,79,191,201,63,208,190,226,103,122,63,243,4,53,63,201,63,208,190,37,76,43,191,113,120,115,63,5,19,214,189,215,179,93,191,189,27,79,63,205,230,84,62,226,103,122,191,24,121,22,63,0,0,0,63,253,152,126,191,122,55,158,62,189,62,62,63,29,222,105,191,243,4,53,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,23,22,247,165,189,27,79,63,113,120,115,191,122,55,158,62,24,121,22,63,0,0,128,191,24,121,22,63,122,55,158,62,113,120,115,191,189,27,79,63,243,4,53,63,189,62,62,191,5,19,214,61,24,121,22,63,226,103,122,191,215,179,93,63,122,55,158,190,201,63,208,190,29,222,105,63,113,120,115,191,0,0,0,63,205,230,84,62,189,27,79,191,253,152,126,63,37,76,43,191,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,195,67,119,38,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,243,4,53,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,88,215,30,38,122,55,158,190,24,121,22,63,189,27,79,191,113,120,115,63,0,0,128,191,113,120,115,63,189,27,79,191,24,121,22,63,122,55,158,190,243,4,53,63,253,152,126,191,226,103,122,63,113,120,115,191,29,222,105,63,215,179,93,191,189,27,79,63,189,62,62,191,37,76,43,63,24,121,22,191,0,0,0,63,201,63,208,190,122,55,158,62,205,230,84,190,5,19,214,61,243,4,53,63,109,196,126,63,190,20,123,63,11,250,116,63,94,131,108,63,152,197,97,63,49,219,84,63,3,228,69,63,243,4,53,63,153,103,34,63,218,57,14,63,234,90,241,62,21,239,195,62,49,160,148,62,194,197,71,62,54,189,200,61,243,4,53,63,11,250,116,63,49,219,84,63,153,103,34,63,21,239,195,62,54,189,200,61,194,197,71,190,234,90,241,190,243,4,53,191,152,197,97,191,190,20,123,191,109,196,126,191,94,131,108,191,3,228,69,191,218,57,14,191,49,160,148,190,243,4,53,63,152,197,97,63,218,57,14,63,54,189,200,61,21,239,195,190,3,228,69,191,190,20,123,191,11,250,116,191,243,4,53,191,49,160,148,190,194,197,71,62,153,103,34,63,94,131,108,63,109,196,126,63,49,219,84,63,234,90,241,62,243,4,53,63,3,228,69,63,194,197,71,62,234,90,241,190,94,131,108,191,11,250,116,191,218,57,14,191,54,189,200,61,243,4,53,63,109,196,126,63,49,219,84,63,49,160,148,62,21,239,195,190,152,197,97,191,190,20,123,191,153,103,34,191,243,4,53,63,153,103,34,63,194,197,71,190,152,197,97,191,94,131,108,191,49,160,148,190,218,57,14,63,109,196,126,63,243,4,53,63,54,189,200,189,49,219,84,191,11,250,116,191,21,239,195,190,234,90,241,62,190,20,123,63,3,228,69,63,243,4,53,63,234,90,241,62,218,57,14,191,109,196,126,191,21,239,195,190,153,103,34,63,190,20,123,63,49,160,148,62,243,4,53,191,11,250,116,191,194,197,71,190,3,228,69,63,94,131,108,63,54,189,200,61,49,219,84,191,152,197,97,191,243,4,53,63,49,160,148,62,49,219,84,191,3,228,69,191,21,239,195,62,109,196,126,63,194,197,71,62,152,197,97,191,243,4,53,191,234,90,241,62,190,20,123,63,54,189,200,61,94,131,108,191,153,103,34,191,218,57,14,63,11,250,116,63,243,4,53,63,54,189,200,61,190,20,123,191,49,160,148,190,94,131,108,63,234,90,241,62,49,219,84,191,153,103,34,191,243,4,53,63,3,228,69,63,218,57,14,191,152,197,97,191,21,239,195,62,11,250,116,63,194,197,71,190,109,196,126,191,243,4,53,63,54,189,200,189,190,20,123,191,49,160,148,62,94,131,108,63,234,90,241,190,49,219,84,191,153,103,34,63,243,4,53,63,3,228,69,191,218,57,14,191,152,197,97,63,21,239,195,62,11,250,116,191,194,197,71,190,109,196,126,63,243,4,53,63,49,160,148,190,49,219,84,191,3,228,69,63,21,239,195,62,109,196,126,191,194,197,71,62,152,197,97,63,243,4,53,191,234,90,241,190,190,20,123,63,54,189,200,189,94,131,108,191,153,103,34,63,218,57,14,63,11,250,116,191,243,4,53,63,234,90,241,190,218,57,14,191,109,196,126,63,21,239,195,190,153,103,34,191,190,20,123,63,49,160,148,190,243,4,53,191,11,250,116,63,194,197,71,190,3,228,69,191,94,131,108,63,54,189,200,189,49,219,84,191,152,197,97,63,243,4,53,63,153,103,34,191,194,197,71,190,152,197,97,63,94,131,108,191,49,160,148,62,218,57,14,63,109,196,126,191,243,4,53,63,54,189,200,61,49,219,84,191,11,250,116,63,21,239,195,190,234,90,241,190,190,20,123,63,3,228,69,191,243,4,53,63,3,228,69,191,194,197,71,62,234,90,241,62,94,131,108,191,11,250,116,63,218,57,14,191,54,189,200,189,243,4,53,63,109,196,126,191,49,219,84,63,49,160,148,190,21,239,195,190,152,197,97,63,190,20,123,191,153,103,34,63,243,4,53,63,152,197,97,191,218,57,14,63,54,189,200,189,21,239,195,190,3,228,69,63,190,20,123,191,11,250,116,63,243,4,53,191,49,160,148,62,194,197,71,62,153,103,34,191,94,131,108,63,109,196,126,191,49,219,84,63,234,90,241,190,243,4,53,63,11,250,116,191,49,219,84,63,153,103,34,191,21,239,195,62,54,189,200,189,194,197,71,190,234,90,241,62,243,4,53,191,152,197,97,63,190,20,123,191,109,196,126,63,94,131,108,191,3,228,69,63,218,57,14,191,49,160,148,62,243,4,53,63,109,196,126,191,190,20,123,63,11,250,116,191,94,131,108,63,152,197,97,191,49,219,84,63,3,228,69,191,243,4,53,63,153,103,34,191,218,57,14,63,234,90,241,190,21,239,195,62,49,160,148,190,194,197,71,62,54,189,200,189,243,4,53,63,111,232,126,63,32,164,123,63,53,58,118,63,128,182,110,63,108,41,101,63,213,167,89,63,219,74,76,63,176,47,61,63,81,119,44,63,67,70,26,63,66,196,6,63,209,55,228,62,171,244,184,62,142,29,140,62,213,40,60,62,50,247,188,61,243,4,53,63,53,58,118,63,213,167,89,63,81,119,44,63,209,55,228,62,213,40,60,62,50,247,188,189,171,244,184,190,67,70,26,191,219,74,76,191,128,182,110,191,111,232,126,191,32,164,123,191,108,41,101,191,176,47,61,191,66,196,6,191,142,29,140,190,243,4,53,63,108,41,101,63,67,70,26,63,213,40,60,62,142,29,140,190,81,119,44,191,128,182,110,191,111,232,126,191,213,167,89,191,66,196,6,191,50,247,188,189,171,244,184,62,176,47,61,63,53,58,118,63,32,164,123,63,219,74,76,63,209,55,228,62,243,4,53,63,219,74,76,63,142,29,140,62,171,244,184,190,213,167,89,191,111,232,126,191,176,47,61,191,213,40,60,190,209,55,228,62,108,41,101,63,32,164,123,63,81,119,44,63,50,247,188,61,66,196,6,191,128,182,110,191,53,58,118,191,67,70,26,191,243,4,53,63,81,119,44,63,50,247,188,189,219,74,76,191,32,164,123,191,66,196,6,191,142,29,140,62,108,41,101,63,128,182,110,63,171,244,184,62,209,55,228,190,53,58,118,191,213,167,89,191,213,40,60,190,67,70,26,63,111,232,126,63,176,47,61,63,243,4,53,63,66,196,6,63,209,55,228,190,111,232,126,191,67,70,26,191,171,244,184,62,32,164,123,63,81,119,44,63,142,29,140,190,53,58,118,191,176,47,61,191,213,40,60,62,128,182,110,63,219,74,76,63,50,247,188,189,108,41,101,191,213,167,89,191,243,4,53,63,171,244,184,62,176,47,61,191,108,41,101,191,50,247,188,61,53,58,118,63,67,70,26,63,66,196,6,191,32,164,123,191,213,40,60,190,213,167,89,63,219,74,76,63,142,29,140,190,111,232,126,191,209,55,228,190,81,119,44,63,128,182,110,63,243,4,53,63,213,40,60,62,128,182,110,191,66,196,6,191,176,47,61,63,219,74,76,63,209,55,228,190,53,58,118,191,50,247,188,61,111,232,126,63,142,29,140,62,108,41,101,191,67,70,26,191,81,119,44,63,213,167,89,63,171,244,184,190,32,164,123,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,243,4,53,63,213,40,60,190,128,182,110,191,66,196,6,63,176,47,61,63,219,74,76,191,209,55,228,190,53,58,118,63,50,247,188,61,111,232,126,191,142,29,140,62,108,41,101,63,67,70,26,191,81,119,44,191,213,167,89,63,171,244,184,62,32,164,123,191,243,4,53,63,171,244,184,190,176,47,61,191,108,41,101,63,50,247,188,61,53,58,118,191,67,70,26,63,66,196,6,63,32,164,123,191,213,40,60,62,213,167,89,63,219,74,76,191,142,29,140,190,111,232,126,63,209,55,228,190,81,119,44,191,128,182,110,63,243,4,53,63,66,196,6,191,209,55,228,190,111,232,126,63,67,70,26,191,171,244,184,190,32,164,123,63,81,119,44,191,142,29,140,190,53,58,118,63,176,47,61,191,213,40,60,190,128,182,110,63,219,74,76,191,50,247,188,189,108,41,101,63,213,167,89,191,243,4,53,63,81,119,44,191,50,247,188,189,219,74,76,63,32,164,123,191,66,196,6,63,142,29,140,62,108,41,101,191,128,182,110,63,171,244,184,190,209,55,228,190,53,58,118,63,213,167,89,191,213,40,60,62,67,70,26,63,111,232,126,191,176,47,61,63,243,4,53,63,219,74,76,191,142,29,140,62,171,244,184,62,213,167,89,191,111,232,126,63,176,47,61,191,213,40,60,62,209,55,228,62,108,41,101,191,32,164,123,63,81,119,44,191,50,247,188,61,66,196,6,63,128,182,110,191,53,58,118,63,67,70,26,191,243,4,53,63,108,41,101,191,67,70,26,63,213,40,60,190,142,29,140,190,81,119,44,63,128,182,110,191,111,232,126,63,213,167,89,191,66,196,6,63,50,247,188,189,171,244,184,190,176,47,61,63,53,58,118,191,32,164,123,63,219,74,76,191,209,55,228,62,243,4,53,63,53,58,118,191,213,167,89,63,81,119,44,191,209,55,228,62,213,40,60,190,50,247,188,189,171,244,184,62,67,70,26,191,219,74,76,63,128,182,110,191,111,232,126,63,32,164,123,191,108,41,101,63,176,47,61,191,66,196,6,63,142,29,140,190,243,4,53,63,111,232,126,191,32,164,123,63,53,58,118,191,128,182,110,63,108,41,101,191,213,167,89,63,219,74,76,191,176,47,61,63,81,119,44,191,67,70,26,63,66,196,6,191,209,55,228,62,171,244,184,190,142,29,140,62,213,40,60,190,50,247,188,61,243,4,53,63,158,6,127,63,92,28,124,63,234,70,119,63,178,143,112,63,202,3,104,63,215,179,93,63,243,179,81,63,125,27,68,63,243,4,53,63,187,141,36,63,232,213,18,63,0,0,0,63,108,97,216,62,68,29,175,62,238,131,132,62,212,208,49,62,182,126,178,61,243,4,53,63,234,70,119,63,215,179,93,63,243,4,53,63,0,0,0,63,238,131,132,62,50,49,141,36,238,131,132,190,0,0,0,191,243,4,53,191,215,179,93,191,234,70,119,191,0,0,128,191,234,70,119,191,215,179,93,191,243,4,53,191,0,0,0,191,238,131,132,190,243,4,53,63,202,3,104,63,187,141,36,63,238,131,132,62,212,208,49,190,232,213,18,191,215,179,93,191,158,6,127,191,178,143,112,191,243,4,53,191,68,29,175,190,182,126,178,61,0,0,0,63,243,179,81,63,92,28,124,63,234,70,119,63,125,27,68,63,108,97,216,62,243,4,53,63,243,179,81,63,68,29,175,62,238,131,132,190,125,27,68,191,158,6,127,191,215,179,93,191,108,97,216,190,212,208,49,62,243,4,53,63,92,28,124,63,202,3,104,63,0,0,0,63,182,126,178,189,187,141,36,191,234,70,119,191,178,143,112,191,232,213,18,191,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,243,4,53,63,232,213,18,63,68,29,175,190,234,70,119,191,125,27,68,191,182,126,178,61,215,179,93,63,202,3,104,63,212,208,49,62,243,4,53,191,92,28,124,191,108,97,216,190,0,0,0,63,158,6,127,63,187,141,36,63,238,131,132,190,178,143,112,191,243,179,81,191,243,4,53,63,108,97,216,62,187,141,36,191,234,70,119,191,212,208,49,190,243,179,81,63,215,179,93,63,182,126,178,189,178,143,112,191,243,4,53,191,68,29,175,62,158,6,127,63,0,0,0,63,232,213,18,191,92,28,124,191,238,131,132,190,125,27,68,63,202,3,104,63,243,4,53,63,238,131,132,62,215,179,93,191,243,4,53,191,0,0,0,63,234,70,119,63,126,125,176,37,234,70,119,191,0,0,0,191,243,4,53,63,215,179,93,63,238,131,132,190,0,0,128,191,238,131,132,190,215,179,93,63,243,4,53,63,0,0,0,191,234,70,119,191,243,4,53,63,182,126,178,61,92,28,124,191,238,131,132,190,178,143,112,63,108,97,216,62,215,179,93,191,232,213,18,191,125,27,68,63,243,4,53,63,187,141,36,191,243,179,81,191,0,0,0,63,202,3,104,63,68,29,175,190,234,70,119,191,212,208,49,62,158,6,127,63,243,4,53,63,182,126,178,189,92,28,124,191,238,131,132,62,178,143,112,63,108,97,216,190,215,179,93,191,232,213,18,63,125,27,68,63,243,4,53,191,187,141,36,191,243,179,81,63,0,0,0,63,202,3,104,191,68,29,175,190,234,70,119,63,212,208,49,62,158,6,127,191,243,4,53,63,238,131,132,190,215,179,93,191,243,4,53,63,0,0,0,63,234,70,119,191,122,58,194,38,234,70,119,63,0,0,0,191,243,4,53,191,215,179,93,63,238,131,132,62,0,0,128,191,238,131,132,62,215,179,93,63,243,4,53,191,0,0,0,191,234,70,119,63,243,4,53,63,108,97,216,190,187,141,36,191,234,70,119,63,212,208,49,190,243,179,81,191,215,179,93,63,182,126,178,61,178,143,112,191,243,4,53,63,68,29,175,62,158,6,127,191,0,0,0,63,232,213,18,63,92,28,124,191,238,131,132,62,125,27,68,63,202,3,104,191,243,4,53,63,232,213,18,191,68,29,175,190,234,70,119,63,125,27,68,191,182,126,178,189,215,179,93,63,202,3,104,191,212,208,49,62,243,4,53,63,92,28,124,191,108,97,216,62,0,0,0,63,158,6,127,191,187,141,36,63,238,131,132,62,178,143,112,191,243,179,81,63,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,243,4,53,63,243,179,81,191,68,29,175,62,238,131,132,62,125,27,68,191,158,6,127,63,215,179,93,191,108,97,216,62,212,208,49,62,243,4,53,191,92,28,124,63,202,3,104,191,0,0,0,63,182,126,178,61,187,141,36,191,234,70,119,63,178,143,112,191,232,213,18,63,243,4,53,63,202,3,104,191,187,141,36,63,238,131,132,190,212,208,49,190,232,213,18,63,215,179,93,191,158,6,127,63,178,143,112,191,243,4,53,63,68,29,175,190,182,126,178,189,0,0,0,63,243,179,81,191,92,28,124,63,234,70,119,191,125,27,68,63,108,97,216,190,243,4,53,63,234,70,119,191,215,179,93,63,243,4,53,191,0,0,0,63,238,131,132,190,233,136,48,167,238,131,132,62,0,0,0,191,243,4,53,63,215,179,93,191,234,70,119,63,0,0,128,191,234,70,119,63,215,179,93,191,243,4,53,63,0,0,0,191,238,131,132,62,243,4,53,63,158,6,127,191,92,28,124,63,234,70,119,191,178,143,112,63,202,3,104,191,215,179,93,63,243,179,81,191,125,27,68,63,243,4,53,191,187,141,36,63,232,213,18,191,0,0,0,63,108,97,216,190,68,29,175,62,238,131,132,190,212,208,49,62,182,126,178,189,243,4,53,63,41,32,127,63,45,130,124,63,158,42,120,63,20,33,114,63,31,112,106,63,49,37,97,63,139,80,86,63,29,5,74,63,103,88,60,63,83,98,45,63,11,61,29,63,203,4,12,63,96,175,243,62,6,171,205,62,2,63,166,62,140,96,123,62,124,139,40,62,92,31,169,61,243,4,53,63,158,42,120,63,49,37,97,63,103,88,60,63,203,4,12,63,2,63,166,62,92,31,169,61,124,139,40,190,6,171,205,190,11,61,29,191,29,5,74,191,31,112,106,191,45,130,124,191,41,32,127,191,20,33,114,191,139,80,86,191,83,98,45,191,96,175,243,190,140,96,123,190,243,4,53,63,31,112,106,63,83,98,45,63,2,63,166,62,92,31,169,189,96,175,243,190,29,5,74,191,158,42,120,191,45,130,124,191,139,80,86,191,203,4,12,191,124,139,40,190,140,96,123,62,11,61,29,63,49,37,97,63,41,32,127,63,20,33,114,63,103,88,60,63,6,171,205,62,243,4,53,63,139,80,86,63,6,171,205,62,124,139,40,190,83,98,45,191,158,42,120,191,20,33,114,191,11,61,29,191,92,31,169,189,96,175,243,62,49,37,97,63,41,32,127,63,29,5,74,63,2,63,166,62,140,96,123,190,103,88,60,191,45,130,124,191,31,112,106,191,203,4,12,191,243,4,53,63,103,88,60,63,92,31,169,61,11,61,29,191,45,130,124,191,139,80,86,191,140,96,123,190,96,175,243,62,20,33,114,63,31,112,106,63,6,171,205,62,2,63,166,190,49,37,97,191,158,42,120,191,203,4,12,191,124,139,40,62,29,5,74,63,41,32,127,63,83,98,45,63,243,4,53,63,11,61,29,63,140,96,123,190,31,112,106,191,49,37,97,191,124,139,40,190,83,98,45,63,41,32,127,63,203,4,12,63,2,63,166,190,20,33,114,191,139,80,86,191,92,31,169,189,103,88,60,63,45,130,124,63,96,175,243,62,6,171,205,190,158,42,120,191,29,5,74,191,243,4,53,63,96,175,243,62,203,4,12,191,41,32,127,191,6,171,205,190,11,61,29,63,45,130,124,63,2,63,166,62,83,98,45,191,158,42,120,191,140,96,123,190,103,88,60,63,20,33,114,63,124,139,40,62,29,5,74,191,31,112,106,191,92,31,169,189,139,80,86,63,49,37,97,63,243,4,53,63,2,63,166,62,29,5,74,191,139,80,86,191,140,96,123,62,41,32,127,63,6,171,205,62,103,88,60,191,49,37,97,191,124,139,40,62,45,130,124,63,96,175,243,62,83,98,45,191,31,112,106,191,92,31,169,61,158,42,120,63,203,4,12,63,11,61,29,191,20,33,114,191,243,4,53,63,124,139,40,62,20,33,114,191,96,175,243,190,29,5,74,63,103,88,60,63,203,4,12,191,31,112,106,191,140,96,123,62,41,32,127,63,92,31,169,61,158,42,120,191,6,171,205,190,139,80,86,63,83,98,45,63,11,61,29,191,49,37,97,191,2,63,166,62,45,130,124,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,243,4,53,63,124,139,40,190,20,33,114,191,96,175,243,62,29,5,74,63,103,88,60,191,203,4,12,191,31,112,106,63,140,96,123,62,41,32,127,191,92,31,169,61,158,42,120,63,6,171,205,190,139,80,86,191,83,98,45,63,11,61,29,63,49,37,97,191,2,63,166,190,45,130,124,63,243,4,53,63,2,63,166,190,29,5,74,191,139,80,86,63,140,96,123,62,41,32,127,191,6,171,205,62,103,88,60,63,49,37,97,191,124,139,40,190,45,130,124,63,96,175,243,190,83,98,45,191,31,112,106,63,92,31,169,61,158,42,120,191,203,4,12,63,11,61,29,63,20,33,114,191,243,4,53,63,96,175,243,190,203,4,12,191,41,32,127,63,6,171,205,190,11,61,29,191,45,130,124,63,2,63,166,190,83,98,45,191,158,42,120,63,140,96,123,190,103,88,60,191,20,33,114,63,124,139,40,190,29,5,74,191,31,112,106,63,92,31,169,189,139,80,86,191,49,37,97,63,243,4,53,63,11,61,29,191,140,96,123,190,31,112,106,63,49,37,97,191,124,139,40,62,83,98,45,63,41,32,127,191,203,4,12,63,2,63,166,62,20,33,114,191,139,80,86,63,92,31,169,189,103,88,60,191,45,130,124,63,96,175,243,190,6,171,205,190,158,42,120,63,29,5,74,191,243,4,53,63,103,88,60,191,92,31,169,61,11,61,29,63,45,130,124,191,139,80,86,63,140,96,123,190,96,175,243,190,20,33,114,63,31,112,106,191,6,171,205,62,2,63,166,62,49,37,97,191,158,42,120,63,203,4,12,191,124,139,40,190,29,5,74,63,41,32,127,191,83,98,45,63,243,4,53,63,139,80,86,191,6,171,205,62,124,139,40,62,83,98,45,191,158,42,120,63,20,33,114,191,11,61,29,63,92,31,169,189,96,175,243,190,49,37,97,63,41,32,127,191,29,5,74,63,2,63,166,190,140,96,123,190,103,88,60,63,45,130,124,191,31,112,106,63,203,4,12,191,243,4,53,63,31,112,106,191,83,98,45,63,2,63,166,190,92,31,169,189,96,175,243,62,29,5,74,191,158,42,120,63,45,130,124,191,139,80,86,63,203,4,12,191,124,139,40,62,140,96,123,62,11,61,29,191,49,37,97,63,41,32,127,191,20,33,114,63,103,88,60,191,6,171,205,62,243,4,53,63,158,42,120,191,49,37,97,63,103,88,60,191,203,4,12,63,2,63,166,190,92,31,169,61,124,139,40,62,6,171,205,190,11,61,29,63,29,5,74,191,31,112,106,63,45,130,124,191,41,32,127,63,20,33,114,191,139,80,86,63,83,98,45,191,96,175,243,62,140,96,123,190,243,4,53,63,41,32,127,191,45,130,124,63,158,42,120,191,20,33,114,63,31,112,106,191,49,37,97,63,139,80,86,191,29,5,74,63,103,88,60,191,83,98,45,63,11,61,29,191,203,4,12,63,96,175,243,190,6,171,205,62,2,63,166,190,140,96,123,62,124,139,40,190,92,31,169,61,243,4,53,63,249,53,127,63,37,217,124,63,60,237,120,63,113,120,115,63,94,131,108,63,1,25,100,63,160,70,90,63,189,27,79,63,247,169,66,63,243,4,53,63,58,66,38,63,24,121,22,63,119,194,5,63,113,113,232,62,21,239,195,62,122,55,158,62,77,12,111,62,91,48,32,62,42,175,160,61,243,4,53,63,60,237,120,63,1,25,100,63,247,169,66,63,24,121,22,63,21,239,195,62,91,48,32,62,42,175,160,189,122,55,158,190,119,194,5,191,243,4,53,191,160,70,90,191,113,120,115,191,249,53,127,191,37,217,124,191,94,131,108,191,189,27,79,191,58,66,38,191,113,113,232,190,77,12,111,190,243,4,53,63,94,131,108,63,243,4,53,63,21,239,195,62,50,49,141,36,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,202,201,83,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,243,4,53,63,160,70,90,63,113,113,232,62,42,175,160,189,24,121,22,191,94,131,108,191,37,217,124,191,247,169,66,191,122,55,158,190,77,12,111,62,243,4,53,63,60,237,120,63,113,120,115,63,58,66,38,63,91,48,32,62,21,239,195,190,189,27,79,191,249,53,127,191,1,25,100,191,119,194,5,191,243,4,53,63,247,169,66,63,91,48,32,62,119,194,5,191,113,120,115,191,94,131,108,191,113,113,232,190,77,12,111,62,189,27,79,63,249,53,127,63,243,4,53,63,42,175,160,61,24,121,22,191,60,237,120,191,1,25,100,191,21,239,195,190,122,55,158,62,160,70,90,63,37,217,124,63,58,66,38,63,243,4,53,63,58,66,38,63,91,48,32,190,160,70,90,191,113,120,115,191,21,239,195,190,113,113,232,62,60,237,120,63,189,27,79,63,42,175,160,61,243,4,53,191,249,53,127,191,24,121,22,191,77,12,111,62,1,25,100,63,94,131,108,63,122,55,158,62,119,194,5,191,37,217,124,191,247,169,66,191,243,4,53,63,119,194,5,63,113,113,232,190,249,53,127,191,24,121,22,191,21,239,195,62,37,217,124,63,58,66,38,63,122,55,158,190,60,237,120,191,243,4,53,191,77,12,111,62,113,120,115,63,247,169,66,63,91,48,32,190,94,131,108,191,189,27,79,191,42,175,160,61,1,25,100,63,160,70,90,63,243,4,53,63,21,239,195,62,243,4,53,191,94,131,108,191,202,201,83,165,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,88,215,30,38,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,243,4,53,63,77,12,111,62,1,25,100,191,58,66,38,191,24,121,22,63,94,131,108,63,91,48,32,190,249,53,127,191,122,55,158,190,160,70,90,63,243,4,53,63,119,194,5,191,113,120,115,191,42,175,160,61,37,217,124,63,21,239,195,62,189,27,79,191,247,169,66,191,113,113,232,62,60,237,120,63,243,4,53,63,42,175,160,61,37,217,124,191,77,12,111,190,113,120,115,63,21,239,195,62,1,25,100,191,119,194,5,191,189,27,79,63,58,66,38,63,243,4,53,191,247,169,66,191,24,121,22,63,160,70,90,63,113,113,232,190,94,131,108,191,122,55,158,62,60,237,120,63,91,48,32,190,249,53,127,191,243,4,53,63,42,175,160,189,37,217,124,191,77,12,111,62,113,120,115,63,21,239,195,190,1,25,100,191,119,194,5,63,189,27,79,63,58,66,38,191,243,4,53,191,247,169,66,63,24,121,22,63,160,70,90,191,113,113,232,190,94,131,108,63,122,55,158,62,60,237,120,191,91,48,32,190,249,53,127,63,243,4,53,63,77,12,111,190,1,25,100,191,58,66,38,63,24,121,22,63,94,131,108,191,91,48,32,190,249,53,127,63,122,55,158,190,160,70,90,191,243,4,53,63,119,194,5,63,113,120,115,191,42,175,160,189,37,217,124,63,21,239,195,190,189,27,79,191,247,169,66,63,113,113,232,62,60,237,120,191,243,4,53,63,21,239,195,190,243,4,53,191,94,131,108,63,126,125,176,37,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,243,4,53,63,119,194,5,191,113,113,232,190,249,53,127,63,24,121,22,191,21,239,195,190,37,217,124,63,58,66,38,191,122,55,158,190,60,237,120,63,243,4,53,191,77,12,111,190,113,120,115,63,247,169,66,191,91,48,32,190,94,131,108,63,189,27,79,191,42,175,160,189,1,25,100,63,160,70,90,191,243,4,53,63,58,66,38,191,91,48,32,190,160,70,90,63,113,120,115,191,21,239,195,62,113,113,232,62,60,237,120,191,189,27,79,63,42,175,160,189,243,4,53,191,249,53,127,63,24,121,22,191,77,12,111,190,1,25,100,63,94,131,108,191,122,55,158,62,119,194,5,63,37,217,124,191,247,169,66,63,243,4,53,63,247,169,66,191,91,48,32,62,119,194,5,63,113,120,115,191,94,131,108,63,113,113,232,190,77,12,111,190,189,27,79,63,249,53,127,191,243,4,53,63,42,175,160,189,24,121,22,191,60,237,120,63,1,25,100,191,21,239,195,62,122,55,158,62,160,70,90,191,37,217,124,63,58,66,38,191,243,4,53,63,160,70,90,191,113,113,232,62,42,175,160,61,24,121,22,191,94,131,108,63,37,217,124,191,247,169,66,63,122,55,158,190,77,12,111,190,243,4,53,63,60,237,120,191,113,120,115,63,58,66,38,191,91,48,32,62,21,239,195,62,189,27,79,191,249,53,127,63,1,25,100,191,119,194,5,63,243,4,53,63,94,131,108,191,243,4,53,63,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,222,94,13,166,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,243,4,53,63,60,237,120,191,1,25,100,63,247,169,66,191,24,121,22,63,21,239,195,190,91,48,32,62,42,175,160,61,122,55,158,190,119,194,5,63,243,4,53,191,160,70,90,63,113,120,115,191,249,53,127,63,37,217,124,191,94,131,108,63,189,27,79,191,58,66,38,63,113,113,232,190,77,12,111,62,243,4,53,63,249,53,127,191,37,217,124,63,60,237,120,191,113,120,115,63,94,131,108,191,1,25,100,63,160,70,90,191,189,27,79,63,247,169,66,191,243,4,53,63,58,66,38,191,24,121,22,63,119,194,5,191,113,113,232,62,21,239,195,190,122,55,158,62,77,12,111,190,91,48,32,62,42,175,160,189,243,4,53,63,192,72,127,63,4,36,125,63,224,148,121,63,107,160,116,63,190,77,110,63,229,165,102,63,215,179,93,63,98,132,83,63,28,38,72,63,74,169,59,63,205,31,46,63,7,157,31,63,190,53,16,63,0,0,0,63,2,38,222,62,251,13,187,62,38,234,150,62,135,220,99,62,137,158,24,62,23,12,153,61,243,4,53,63,224,148,121,63,229,165,102,63,28,38,72,63,7,157,31,63,2,38,222,62,135,220,99,62,50,49,141,36,135,220,99,190,2,38,222,190,7,157,31,191,28,38,72,191,229,165,102,191,224,148,121,191,0,0,128,191,224,148,121,191,229,165,102,191,28,38,72,191,7,157,31,191,2,38,222,190,135,220,99,190,243,4,53,63,190,77,110,63,74,169,59,63,2,38,222,62,23,12,153,61,38,234,150,190,7,157,31,191,215,179,93,191,4,36,125,191,224,148,121,191,98,132,83,191,190,53,16,191,135,220,99,190,137,158,24,62,0,0,0,63,28,38,72,63,107,160,116,63,192,72,127,63,229,165,102,63,205,31,46,63,251,13,187,62,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,202,201,83,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,95,31,172,38,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,243,4,53,63,28,38,72,63,135,220,99,62,2,38,222,190,229,165,102,191,224,148,121,191,7,157,31,191,202,201,83,165,7,157,31,63,224,148,121,63,229,165,102,63,2,38,222,62,135,220,99,190,28,38,72,191,0,0,128,191,28,38,72,191,135,220,99,190,2,38,222,62,229,165,102,63,224,148,121,63,7,157,31,63,243,4,53,63,205,31,46,63,23,12,153,189,28,38,72,191,4,36,125,191,190,53,16,191,135,220,99,62,215,179,93,63,107,160,116,63,2,38,222,62,251,13,187,190,190,77,110,191,229,165,102,191,38,234,150,190,0,0,0,63,224,148,121,63,98,132,83,63,137,158,24,62,7,157,31,191,192,72,127,191,74,169,59,191,243,4,53,63,190,53,16,63,251,13,187,190,224,148,121,191,74,169,59,191,137,158,24,62,229,165,102,63,215,179,93,63,23,12,153,61,28,38,72,191,107,160,116,191,38,234,150,190,7,157,31,63,192,72,127,63,0,0,0,63,2,38,222,190,4,36,125,191,205,31,46,191,135,220,99,62,190,77,110,63,98,132,83,63,243,4,53,63,2,38,222,62,7,157,31,191,224,148,121,191,135,220,99,190,28,38,72,63,229,165,102,63,126,125,176,37,229,165,102,191,28,38,72,191,135,220,99,62,224,148,121,63,7,157,31,63,2,38,222,190,0,0,128,191,2,38,222,190,7,157,31,63,224,148,121,63,135,220,99,62,28,38,72,191,229,165,102,191,243,4,53,63,38,234,150,62,98,132,83,191,28,38,72,191,251,13,187,62,192,72,127,63,135,220,99,62,215,179,93,191,74,169,59,191,2,38,222,62,4,36,125,63,137,158,24,62,229,165,102,191,205,31,46,191,0,0,0,63,224,148,121,63,23,12,153,61,190,77,110,191,7,157,31,191,190,53,16,63,107,160,116,63,243,4,53,63,137,158,24,62,107,160,116,191,2,38,222,190,98,132,83,63,205,31,46,63,7,157,31,191,215,179,93,191,251,13,187,62,224,148,121,63,23,12,153,189,192,72,127,191,135,220,99,190,190,77,110,63,0,0,0,63,28,38,72,191,74,169,59,191,190,53,16,63,229,165,102,63,38,234,150,190,4,36,125,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,243,4,53,63,137,158,24,190,107,160,116,191,2,38,222,62,98,132,83,63,205,31,46,191,7,157,31,191,215,179,93,63,251,13,187,62,224,148,121,191,23,12,153,189,192,72,127,63,135,220,99,190,190,77,110,191,0,0,0,63,28,38,72,63,74,169,59,191,190,53,16,191,229,165,102,63,38,234,150,62,4,36,125,191,243,4,53,63,38,234,150,190,98,132,83,191,28,38,72,63,251,13,187,62,192,72,127,191,135,220,99,62,215,179,93,63,74,169,59,191,2,38,222,190,4,36,125,63,137,158,24,190,229,165,102,191,205,31,46,63,0,0,0,63,224,148,121,191,23,12,153,61,190,77,110,63,7,157,31,191,190,53,16,191,107,160,116,63,243,4,53,63,2,38,222,190,7,157,31,191,224,148,121,63,135,220,99,190,28,38,72,191,229,165,102,63,88,215,30,38,229,165,102,191,28,38,72,63,135,220,99,62,224,148,121,191,7,157,31,63,2,38,222,62,0,0,128,191,2,38,222,62,7,157,31,63,224,148,121,191,135,220,99,62,28,38,72,63,229,165,102,191,243,4,53,63,190,53,16,191,251,13,187,190,224,148,121,63,74,169,59,191,137,158,24,190,229,165,102,63,215,179,93,191,23,12,153,61,28,38,72,63,107,160,116,191,38,234,150,62,7,157,31,63,192,72,127,191,0,0,0,63,2,38,222,62,4,36,125,191,205,31,46,63,135,220,99,62,190,77,110,191,98,132,83,63,243,4,53,63,205,31,46,191,23,12,153,189,28,38,72,63,4,36,125,191,190,53,16,63,135,220,99,62,215,179,93,191,107,160,116,63,2,38,222,190,251,13,187,190,190,77,110,63,229,165,102,191,38,234,150,62,0,0,0,63,224,148,121,191,98,132,83,63,137,158,24,190,7,157,31,191,192,72,127,63,74,169,59,191,243,4,53,63,28,38,72,191,135,220,99,62,2,38,222,62,229,165,102,191,224,148,121,63,7,157,31,191,233,136,48,167,7,157,31,63,224,148,121,191,229,165,102,63,2,38,222,190,135,220,99,190,28,38,72,63,0,0,128,191,28,38,72,63,135,220,99,190,2,38,222,190,229,165,102,63,224,148,121,191,7,157,31,63,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,195,67,119,38,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,138,140,141,165,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,243,4,53,63,190,77,110,191,74,169,59,63,2,38,222,190,23,12,153,61,38,234,150,62,7,157,31,191,215,179,93,63,4,36,125,191,224,148,121,63,98,132,83,191,190,53,16,63,135,220,99,190,137,158,24,190,0,0,0,63,28,38,72,191,107,160,116,63,192,72,127,191,229,165,102,63,205,31,46,191,251,13,187,62,243,4,53,63,224,148,121,191,229,165,102,63,28,38,72,191,7,157,31,63,2,38,222,190,135,220,99,62,8,72,141,166,135,220,99,190,2,38,222,62,7,157,31,191,28,38,72,63,229,165,102,191,224,148,121,63,0,0,128,191,224,148,121,63,229,165,102,191,28,38,72,63,7,157,31,191,2,38,222,62,135,220,99,190,243,4,53,63,192,72,127,191,4,36,125,63,224,148,121,191,107,160,116,63,190,77,110,191,229,165,102,63,215,179,93,191,98,132,83,63,28,38,72,191,74,169,59,63,205,31,46,191,7,157,31,63,190,53,16,191,0,0,0,63,2,38,222,190,251,13,187,62,38,234,150,190,135,220,99,62,137,158,24,190,23,12,153,61,243,4,53,63,6,89,127,63,240,100,125,63,76,38,122,63,85,161,117,63,240,219,111,63,164,221,104,63,146,175,96,63,100,92,87,63,69,240,76,63,206,120,65,63,243,4,53,63,244,164,39,63,67,106,25,63,112,103,10,63,32,96,245,62,71,177,212,62,248,236,178,62,64,63,144,62,183,170,89,62,251,186,17,62,71,26,146,61,243,4,53,63,76,38,122,63,164,221,104,63,69,240,76,63,244,164,39,63,32,96,245,62,64,63,144,62,71,26,146,61,251,186,17,190,248,236,178,190,112,103,10,191,243,4,53,191,100,92,87,191,240,219,111,191,240,100,125,191,6,89,127,191,85,161,117,191,146,175,96,191,206,120,65,191,67,106,25,191,71,177,212,190,183,170,89,190,243,4,53,63,240,219,111,63,206,120,65,63,32,96,245,62,251,186,17,62,183,170,89,190,112,103,10,191,69,240,76,191,85,161,117,191,6,89,127,191,164,221,104,191,243,4,53,191,71,177,212,190,71,26,146,189,64,63,144,62,67,106,25,63,100,92,87,63,76,38,122,63,240,100,125,63,146,175,96,63,244,164,39,63,248,236,178,62,243,4,53,63,146,175,96,63,112,103,10,63,71,26,146,61,71,177,212,190,69,240,76,191,240,100,125,191,240,219,111,191,244,164,39,191,183,170,89,190,64,63,144,62,243,4,53,63,85,161,117,63,76,38,122,63,206,120,65,63,248,236,178,62,251,186,17,190,67,106,25,191,164,221,104,191,6,89,127,191,100,92,87,191,32,96,245,190,243,4,53,63,69,240,76,63,64,63,144,62,248,236,178,190,100,92,87,191,6,89,127,191,206,120,65,191,183,170,89,190,71,177,212,62,146,175,96,63,240,100,125,63,243,4,53,63,251,186,17,62,32,96,245,190,164,221,104,191,76,38,122,191,244,164,39,191,71,26,146,189,112,103,10,63,240,219,111,63,85,161,117,63,67,106,25,63,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,243,4,53,63,67,106,25,63,64,63,144,190,240,219,111,191,100,92,87,191,71,26,146,189,206,120,65,63,76,38,122,63,71,177,212,62,32,96,245,190,240,100,125,191,243,4,53,191,251,186,17,62,146,175,96,63,164,221,104,63,183,170,89,62,244,164,39,191,6,89,127,191,112,103,10,191,248,236,178,62,85,161,117,63,69,240,76,63,243,4,53,63,32,96,245,62,112,103,10,191,6,89,127,191,71,177,212,190,67,106,25,63,240,100,125,63,248,236,178,62,244,164,39,191,76,38,122,191,64,63,144,190,243,4,53,63,85,161,117,63,183,170,89,62,206,120,65,191,240,219,111,191,251,186,17,190,69,240,76,63,164,221,104,63,71,26,146,61,100,92,87,191,146,175,96,191,243,4,53,63,248,236,178,62,206,120,65,191,146,175,96,191,251,186,17,62,76,38,122,63,112,103,10,63,67,106,25,191,85,161,117,191,71,26,146,189,164,221,104,63,243,4,53,63,71,177,212,190,6,89,127,191,64,63,144,190,69,240,76,63,100,92,87,63,183,170,89,190,240,100,125,191,32,96,245,190,244,164,39,63,240,219,111,63,243,4,53,63,183,170,89,62,164,221,104,191,67,106,25,191,244,164,39,63,146,175,96,63,64,63,144,190,6,89,127,191,251,186,17,190,240,219,111,63,112,103,10,63,243,4,53,191,100,92,87,191,248,236,178,62,240,100,125,63,71,26,146,61,85,161,117,191,32,96,245,190,206,120,65,63,69,240,76,63,71,177,212,190,76,38,122,191,243,4,53,63,71,26,146,61,240,100,125,191,183,170,89,190,85,161,117,63,248,236,178,62,164,221,104,191,32,96,245,190,100,92,87,63,67,106,25,63,206,120,65,191,243,4,53,191,244,164,39,63,69,240,76,63,112,103,10,191,146,175,96,191,71,177,212,62,240,219,111,63,64,63,144,190,76,38,122,191,251,186,17,62,6,89,127,63,243,4,53,63,71,26,146,189,240,100,125,191,183,170,89,62,85,161,117,63,248,236,178,190,164,221,104,191,32,96,245,62,100,92,87,63,67,106,25,191,206,120,65,191,243,4,53,63,244,164,39,63,69,240,76,191,112,103,10,191,146,175,96,63,71,177,212,62,240,219,111,191,64,63,144,190,76,38,122,63,251,186,17,62,6,89,127,191,243,4,53,63,183,170,89,190,164,221,104,191,67,106,25,63,244,164,39,63,146,175,96,191,64,63,144,190,6,89,127,63,251,186,17,190,240,219,111,191,112,103,10,63,243,4,53,63,100,92,87,191,248,236,178,190,240,100,125,63,71,26,146,189,85,161,117,191,32,96,245,62,206,120,65,63,69,240,76,191,71,177,212,190,76,38,122,63,243,4,53,63,248,236,178,190,206,120,65,191,146,175,96,63,251,186,17,62,76,38,122,191,112,103,10,63,67,106,25,63,85,161,117,191,71,26,146,61,164,221,104,63,243,4,53,191,71,177,212,190,6,89,127,63,64,63,144,190,69,240,76,191,100,92,87,63,183,170,89,62,240,100,125,191,32,96,245,62,244,164,39,63,240,219,111,191,243,4,53,63,32,96,245,190,112,103,10,191,6,89,127,63,71,177,212,190,67,106,25,191,240,100,125,63,248,236,178,190,244,164,39,191,76,38,122,63,64,63,144,190,243,4,53,191,85,161,117,63,183,170,89,190,206,120,65,191,240,219,111,63,251,186,17,190,69,240,76,191,164,221,104,63,71,26,146,189,100,92,87,191,146,175,96,63,243,4,53,63,67,106,25,191,64,63,144,190,240,219,111,63,100,92,87,191,71,26,146,61,206,120,65,63,76,38,122,191,71,177,212,62,32,96,245,62,240,100,125,191,243,4,53,63,251,186,17,62,146,175,96,191,164,221,104,63,183,170,89,190,244,164,39,191,6,89,127,63,112,103,10,191,248,236,178,190,85,161,117,63,69,240,76,191,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,243,4,53,63,69,240,76,191,64,63,144,62,248,236,178,62,100,92,87,191,6,89,127,63,206,120,65,191,183,170,89,62,71,177,212,62,146,175,96,191,240,100,125,63,243,4,53,191,251,186,17,62,32,96,245,62,164,221,104,191,76,38,122,63,244,164,39,191,71,26,146,61,112,103,10,63,240,219,111,191,85,161,117,63,67,106,25,191,243,4,53,63,146,175,96,191,112,103,10,63,71,26,146,189,71,177,212,190,69,240,76,63,240,100,125,191,240,219,111,63,244,164,39,191,183,170,89,62,64,63,144,62,243,4,53,191,85,161,117,63,76,38,122,191,206,120,65,63,248,236,178,190,251,186,17,190,67,106,25,63,164,221,104,191,6,89,127,63,100,92,87,191,32,96,245,62,243,4,53,63,240,219,111,191,206,120,65,63,32,96,245,190,251,186,17,62,183,170,89,62,112,103,10,191,69,240,76,63,85,161,117,191,6,89,127,63,164,221,104,191,243,4,53,63,71,177,212,190,71,26,146,61,64,63,144,62,67,106,25,191,100,92,87,63,76,38,122,191,240,100,125,63,146,175,96,191,244,164,39,63,248,236,178,190,243,4,53,63,76,38,122,191,164,221,104,63,69,240,76,191,244,164,39,63,32,96,245,190,64,63,144,62,71,26,146,189,251,186,17,190,248,236,178,62,112,103,10,191,243,4,53,63,100,92,87,191,240,219,111,63,240,100,125,191,6,89,127,63,85,161,117,191,146,175,96,63,206,120,65,191,67,106,25,63,71,177,212,190,183,170,89,62,243,4,53,63,6,89,127,191,240,100,125,63,76,38,122,191,85,161,117,63,240,219,111,191,164,221,104,63,146,175,96,191,100,92,87,63,69,240,76,191,206,120,65,63,243,4,53,191,244,164,39,63,67,106,25,191,112,103,10,63,32,96,245,190,71,177,212,62,248,236,178,190,64,63,144,62,183,170,89,190,251,186,17,62,71,26,146,189,243,4,53,63,56,103,127,63,152,157,125,63,65,165,122,63,191,129,118,63,3,56,113,63,92,206,106,63,114,76,99,63,59,187,90,63,240,36,81,63,4,149,70,63,17,24,59,63,206,187,46,63,251,142,33,63,82,161,19,63,116,3,5,63,165,141,235,62,58,251,203,62,87,117,171,62,205,34,138,62,198,86,80,62,69,111,11,62,174,194,139,61,243,4,53,63,65,165,122,63,92,206,106,63,240,36,81,63,206,187,46,63,116,3,5,63,87,117,171,62,69,111,11,62,174,194,139,189,205,34,138,190,165,141,235,190,251,142,33,191,4,149,70,191,114,76,99,191,191,129,118,191,56,103,127,191,152,157,125,191,3,56,113,191,59,187,90,191,17,24,59,191,82,161,19,191,58,251,203,190,198,86,80,190,243,4,53,63,3,56,113,63,4,149,70,63,116,3,5,63,198,86,80,62,69,111,11,190,165,141,235,190,17,24,59,191,92,206,106,191,56,103,127,191,191,129,118,191,240,36,81,191,82,161,19,191,205,34,138,190,174,194,139,61,58,251,203,62,206,187,46,63,114,76,99,63,152,157,125,63,65,165,122,63,59,187,90,63,251,142,33,63,87,117,171,62,243,4,53,63,114,76,99,63,82,161,19,63,69,111,11,62,87,117,171,190,17,24,59,191,191,129,118,191,65,165,122,191,4,149,70,191,58,251,203,190,174,194,139,61,116,3,5,63,59,187,90,63,56,103,127,63,92,206,106,63,251,142,33,63,198,86,80,62,205,34,138,190,206,187,46,191,3,56,113,191,152,157,125,191,240,36,81,191,165,141,235,190,243,4,53,63,240,36,81,63,87,117,171,62,205,34,138,190,4,149,70,191,56,103,127,191,59,187,90,191,58,251,203,190,198,86,80,62,17,24,59,63,152,157,125,63,114,76,99,63,165,141,235,62,69,111,11,190,206,187,46,191,65,165,122,191,92,206,106,191,116,3,5,191,174,194,139,61,251,142,33,63,191,129,118,63,3,56,113,63,82,161,19,63,243,4,53,63,17,24,59,63,174,194,139,61,251,142,33,191,152,157,125,191,240,36,81,191,198,86,80,190,116,3,5,63,191,129,118,63,114,76,99,63,87,117,171,62,58,251,203,190,92,206,106,191,3,56,113,191,165,141,235,190,205,34,138,62,59,187,90,63,65,165,122,63,82,161,19,63,69,111,11,190,4,149,70,191,56,103,127,191,206,187,46,191,243,4,53,63,251,142,33,63,198,86,80,190,114,76,99,191,92,206,106,191,205,34,138,190,82,161,19,63,56,103,127,63,206,187,46,63,69,111,11,190,59,187,90,191,3,56,113,191,87,117,171,190,116,3,5,63,152,157,125,63,17,24,59,63,174,194,139,189,240,36,81,191,191,129,118,191,58,251,203,190,165,141,235,62,65,165,122,63,4,149,70,63,243,4,53,63,116,3,5,63,165,141,235,190,56,103,127,191,82,161,19,191,58,251,203,62,152,157,125,63,251,142,33,63,87,117,171,190,65,165,122,191,206,187,46,191,205,34,138,62,191,129,118,63,17,24,59,63,198,86,80,190,3,56,113,191,4,149,70,191,69,111,11,62,92,206,106,63,240,36,81,63,174,194,139,189,114,76,99,191,59,187,90,191,243,4,53,63,58,251,203,62,206,187,46,191,3,56,113,191,174,194,139,189,114,76,99,63,4,149,70,63,205,34,138,190,152,157,125,191,116,3,5,191,82,161,19,63,65,165,122,63,198,86,80,62,240,36,81,191,59,187,90,191,69,111,11,62,191,129,118,63,251,142,33,63,165,141,235,190,56,103,127,191,87,117,171,190,17,24,59,63,92,206,106,63,243,4,53,63,205,34,138,62,59,187,90,191,17,24,59,191,165,141,235,62,65,165,122,63,174,194,139,61,3,56,113,191,82,161,19,191,251,142,33,63,92,206,106,63,69,111,11,190,152,157,125,191,58,251,203,190,4,149,70,63,240,36,81,63,87,117,171,190,56,103,127,191,198,86,80,190,114,76,99,63,206,187,46,63,116,3,5,191,191,129,118,191,243,4,53,63,69,111,11,62,191,129,118,191,58,251,203,190,59,187,90,63,251,142,33,63,206,187,46,191,240,36,81,191,165,141,235,62,3,56,113,63,198,86,80,190,56,103,127,191,174,194,139,189,65,165,122,63,87,117,171,62,114,76,99,191,82,161,19,191,17,24,59,63,4,149,70,63,116,3,5,191,92,206,106,191,205,34,138,62,152,157,125,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,243,4,53,63,69,111,11,190,191,129,118,191,58,251,203,62,59,187,90,63,251,142,33,191,206,187,46,191,240,36,81,63,165,141,235,62,3,56,113,191,198,86,80,190,56,103,127,63,174,194,139,189,65,165,122,191,87,117,171,62,114,76,99,63,82,161,19,191,17,24,59,191,4,149,70,63,116,3,5,63,92,206,106,191,205,34,138,190,152,157,125,63,243,4,53,63,205,34,138,190,59,187,90,191,17,24,59,63,165,141,235,62,65,165,122,191,174,194,139,61,3,56,113,63,82,161,19,191,251,142,33,191,92,206,106,63,69,111,11,62,152,157,125,191,58,251,203,62,4,149,70,63,240,36,81,191,87,117,171,190,56,103,127,63,198,86,80,190,114,76,99,191,206,187,46,63,116,3,5,63,191,129,118,191,243,4,53,63,58,251,203,190,206,187,46,191,3,56,113,63,174,194,139,189,114,76,99,191,4,149,70,63,205,34,138,62,152,157,125,191,116,3,5,63,82,161,19,63,65,165,122,191,198,86,80,62,240,36,81,63,59,187,90,191,69,111,11,190,191,129,118,63,251,142,33,191,165,141,235,190,56,103,127,63,87,117,171,190,17,24,59,191,92,206,106,63,243,4,53,63,116,3,5,191,165,141,235,190,56,103,127,63,82,161,19,191,58,251,203,190,152,157,125,63,251,142,33,191,87,117,171,190,65,165,122,63,206,187,46,191,205,34,138,190,191,129,118,63,17,24,59,191,198,86,80,190,3,56,113,63,4,149,70,191,69,111,11,190,92,206,106,63,240,36,81,191,174,194,139,189,114,76,99,63,59,187,90,191,243,4,53,63,251,142,33,191,198,86,80,190,114,76,99,63,92,206,106,191,205,34,138,62,82,161,19,63,56,103,127,191,206,187,46,63,69,111,11,62,59,187,90,191,3,56,113,63,87,117,171,190,116,3,5,191,152,157,125,63,17,24,59,191,174,194,139,189,240,36,81,63,191,129,118,191,58,251,203,62,165,141,235,62,65,165,122,191,4,149,70,63,243,4,53,63,17,24,59,191,174,194,139,61,251,142,33,63,152,157,125,191,240,36,81,63,198,86,80,190,116,3,5,191,191,129,118,63,114,76,99,191,87,117,171,62,58,251,203,62,92,206,106,191,3,56,113,63,165,141,235,190,205,34,138,190,59,187,90,63,65,165,122,191,82,161,19,63,69,111,11,62,4,149,70,191,56,103,127,63,206,187,46,191,243,4,53,63,240,36,81,191,87,117,171,62,205,34,138,62,4,149,70,191,56,103,127,63,59,187,90,191,58,251,203,62,198,86,80,62,17,24,59,191,152,157,125,63,114,76,99,191,165,141,235,62,69,111,11,62,206,187,46,191,65,165,122,63,92,206,106,191,116,3,5,63,174,194,139,61,251,142,33,191,191,129,118,63,3,56,113,191,82,161,19,63,243,4,53,63,114,76,99,191,82,161,19,63,69,111,11,190,87,117,171,190,17,24,59,63,191,129,118,191,65,165,122,63,4,149,70,191,58,251,203,62,174,194,139,61,116,3,5,191,59,187,90,63,56,103,127,191,92,206,106,63,251,142,33,191,198,86,80,62,205,34,138,62,206,187,46,191,3,56,113,63,152,157,125,191,240,36,81,63,165,141,235,190,243,4,53,63,3,56,113,191,4,149,70,63,116,3,5,191,198,86,80,62,69,111,11,62,165,141,235,190,17,24,59,63,92,206,106,191,56,103,127,63,191,129,118,191,240,36,81,63,82,161,19,191,205,34,138,62,174,194,139,61,58,251,203,190,206,187,46,63,114,76,99,191,152,157,125,63,65,165,122,191,59,187,90,63,251,142,33,191,87,117,171,62,243,4,53,63,65,165,122,191,92,206,106,63,240,36,81,191,206,187,46,63,116,3,5,191,87,117,171,62,69,111,11,190,174,194,139,189,205,34,138,62,165,141,235,190,251,142,33,63,4,149,70,191,114,76,99,63,191,129,118,191,56,103,127,63,152,157,125,191,3,56,113,63,59,187,90,191,17,24,59,63,82,161,19,191,58,251,203,62,198,86,80,190,243,4,53,63,56,103,127,191,152,157,125,63,65,165,122,191,191,129,118,63,3,56,113,191,92,206,106,63,114,76,99,191,59,187,90,63,240,36,81,191,4,149,70,63,17,24,59,191,206,187,46,63,251,142,33,191,82,161,19,63,116,3,5,191,165,141,235,62,58,251,203,190,87,117,171,62,205,34,138,190,198,86,80,62,69,111,11,190,174,194,139,61,243,4,53,63,175,115,127,63,85,207,125,63,190,20,123,63,234,70,119,63,3,106,114,63,94,131,108,63,116,153,101,63,215,179,93,63,49,219,84,63,52,25,75,63,147,120,64,63,243,4,53,63,227,202,40,63,202,215,27,63,218,57,14,63,0,0,0,63,170,115,226,62,21,239,195,62,183,147,164,62,238,131,132,62,194,197,71,62,168,168,5,62,19,242,133,61,243,4,53,63,190,20,123,63,94,131,108,63,49,219,84,63,243,4,53,63,218,57,14,63,21,239,195,62,194,197,71,62,50,49,141,36,194,197,71,190,21,239,195,190,218,57,14,191,243,4,53,191,49,219,84,191,94,131,108,191,190,20,123,191,0,0,128,191,190,20,123,191,94,131,108,191,49,219,84,191,243,4,53,191,218,57,14,191,21,239,195,190,194,197,71,190,243,4,53,63,3,106,114,63,52,25,75,63,218,57,14,63,238,131,132,62,19,242,133,189,21,239,195,190,227,202,40,191,215,179,93,191,190,20,123,191,85,207,125,191,116,153,101,191,243,4,53,191,170,115,226,190,168,168,5,190,194,197,71,62,0,0,0,63,147,120,64,63,94,131,108,63,175,115,127,63,234,70,119,63,49,219,84,63,202,215,27,63,183,147,164,62,243,4,53,63,116,153,101,63,202,215,27,63,194,197,71,62,238,131,132,190,227,202,40,191,94,131,108,191,175,115,127,191,215,179,93,191,218,57,14,191,168,168,5,190,183,147,164,62,243,4,53,63,3,106,114,63,85,207,125,63,49,219,84,63,0,0,0,63,19,242,133,61,21,239,195,190,147,120,64,191,234,70,119,191,190,20,123,191,52,25,75,191,170,115,226,190,243,4,53,63,49,219,84,63,21,239,195,62,194,197,71,190,243,4,53,191,190,20,123,191,94,131,108,191,218,57,14,191,202,201,83,165,218,57,14,63,94,131,108,63,190,20,123,63,243,4,53,63,194,197,71,62,21,239,195,190,49,219,84,191,0,0,128,191,49,219,84,191,21,239,195,190,194,197,71,62,243,4,53,63,190,20,123,63,94,131,108,63,218,57,14,63,243,4,53,63,147,120,64,63,168,168,5,62,218,57,14,191,234,70,119,191,116,153,101,191,21,239,195,190,183,147,164,62,215,179,93,63,190,20,123,63,202,215,27,63,19,242,133,189,243,4,53,191,175,115,127,191,52,25,75,191,194,197,71,190,0,0,0,63,3,106,114,63,94,131,108,63,170,115,226,62,238,131,132,190,49,219,84,191,85,207,125,191,227,202,40,191,243,4,53,63,227,202,40,63,168,168,5,190,49,219,84,191,234,70,119,191,170,115,226,190,21,239,195,62,3,106,114,63,215,179,93,63,194,197,71,62,202,215,27,191,175,115,127,191,243,4,53,191,19,242,133,61,52,25,75,63,190,20,123,63,0,0,0,63,183,147,164,190,94,131,108,191,116,153,101,191,238,131,132,190,218,57,14,63,85,207,125,63,147,120,64,63,243,4,53,63,218,57,14,63,21,239,195,190,190,20,123,191,243,4,53,191,194,197,71,62,94,131,108,63,49,219,84,63,126,125,176,37,49,219,84,191,94,131,108,191,194,197,71,190,243,4,53,63,190,20,123,63,21,239,195,62,218,57,14,191,0,0,128,191,218,57,14,191,21,239,195,62,190,20,123,63,243,4,53,63,194,197,71,190,94,131,108,191,49,219,84,191,243,4,53,63,170,115,226,62,202,215,27,191,190,20,123,191,238,131,132,190,147,120,64,63,94,131,108,63,19,242,133,61,215,179,93,191,49,219,84,191,168,168,5,62,3,106,114,63,243,4,53,63,183,147,164,190,85,207,125,191,218,57,14,191,0,0,0,63,175,115,127,63,21,239,195,62,227,202,40,191,234,70,119,191,194,197,71,190,52,25,75,63,116,153,101,63,243,4,53,63,183,147,164,62,52,25,75,191,49,219,84,191,238,131,132,62,175,115,127,63,21,239,195,62,147,120,64,191,215,179,93,191,194,197,71,62,85,207,125,63,170,115,226,62,243,4,53,191,116,153,101,191,168,168,5,62,190,20,123,63,0,0,0,63,227,202,40,191,94,131,108,191,19,242,133,61,234,70,119,63,218,57,14,63,202,215,27,191,3,106,114,191,243,4,53,63,194,197,71,62,94,131,108,191,218,57,14,191,243,4,53,63,49,219,84,63,21,239,195,190,190,20,123,191,23,22,247,165,190,20,123,63,21,239,195,62,49,219,84,191,243,4,53,191,218,57,14,63,94,131,108,63,194,197,71,190,0,0,128,191,194,197,71,190,94,131,108,63,218,57,14,63,243,4,53,191,49,219,84,191,21,239,195,62,190,20,123,63,243,4,53,63,19,242,133,61,85,207,125,191,194,197,71,190,234,70,119,63,183,147,164,62,94,131,108,191,170,115,226,190,215,179,93,63,218,57,14,63,52,25,75,191,227,202,40,191,243,4,53,63,147,120,64,63,202,215,27,191,49,219,84,191,0,0,0,63,116,153,101,63,21,239,195,190,3,106,114,191,238,131,132,62,190,20,123,63,168,168,5,190,175,115,127,191,243,4,53,63,19,242,133,189,85,207,125,191,194,197,71,62,234,70,119,63,183,147,164,190,94,131,108,191,170,115,226,62,215,179,93,63,218,57,14,191,52,25,75,191,227,202,40,63,243,4,53,63,147,120,64,191,202,215,27,191,49,219,84,63,0,0,0,63,116,153,101,191,21,239,195,190,3,106,114,63,238,131,132,62,190,20,123,191,168,168,5,190,175,115,127,63,243,4,53,63,194,197,71,190,94,131,108,191,218,57,14,63,243,4,53,63,49,219,84,191,21,239,195,190,190,20,123,63,88,215,30,38,190,20,123,191,21,239,195,62,49,219,84,63,243,4,53,191,218,57,14,191,94,131,108,63,194,197,71,62,0,0,128,191,194,197,71,62,94,131,108,63,218,57,14,191,243,4,53,191,49,219,84,63,21,239,195,62,190,20,123,191,243,4,53,63,183,147,164,190,52,25,75,191,49,219,84,63,238,131,132,62,175,115,127,191,21,239,195,62,147,120,64,63,215,179,93,191,194,197,71,190,85,207,125,63,170,115,226,190,243,4,53,191,116,153,101,63,168,168,5,62,190,20,123,191,0,0,0,63,227,202,40,63,94,131,108,191,19,242,133,189,234,70,119,63,218,57,14,191,202,215,27,191,3,106,114,63,243,4,53,63,170,115,226,190,202,215,27,191,190,20,123,63,238,131,132,190,147,120,64,191,94,131,108,63,19,242,133,189,215,179,93,191,49,219,84,63,168,168,5,62,3,106,114,191,243,4,53,63,183,147,164,62,85,207,125,191,218,57,14,63,0,0,0,63,175,115,127,191,21,239,195,62,227,202,40,63,234,70,119,191,194,197,71,62,52,25,75,63,116,153,101,191,243,4,53,63,218,57,14,191,21,239,195,190,190,20,123,63,243,4,53,191,194,197,71,190,94,131,108,63,49,219,84,191,233,136,48,167,49,219,84,63,94,131,108,191,194,197,71,62,243,4,53,63,190,20,123,191,21,239,195,62,218,57,14,63,0,0,128,191,218,57,14,63,21,239,195,62,190,20,123,191,243,4,53,63,194,197,71,62,94,131,108,191,49,219,84,63,243,4,53,63,227,202,40,191,168,168,5,190,49,219,84,63,234,70,119,191,170,115,226,62,21,239,195,62,3,106,114,191,215,179,93,63,194,197,71,190,202,215,27,191,175,115,127,63,243,4,53,191,19,242,133,189,52,25,75,63,190,20,123,191,0,0,0,63,183,147,164,62,94,131,108,191,116,153,101,63,238,131,132,190,218,57,14,191,85,207,125,63,147,120,64,191,243,4,53,63,147,120,64,191,168,168,5,62,218,57,14,63,234,70,119,191,116,153,101,63,21,239,195,190,183,147,164,190,215,179,93,63,190,20,123,191,202,215,27,63,19,242,133,61,243,4,53,191,175,115,127,63,52,25,75,191,194,197,71,62,0,0,0,63,3,106,114,191,94,131,108,63,170,115,226,190,238,131,132,190,49,219,84,63,85,207,125,191,227,202,40,63,243,4,53,63,49,219,84,191,21,239,195,62,194,197,71,62,243,4,53,191,190,20,123,63,94,131,108,191,218,57,14,63,8,72,141,166,218,57,14,191,94,131,108,63,190,20,123,191,243,4,53,63,194,197,71,190,21,239,195,190,49,219,84,63,0,0,128,191,49,219,84,63,21,239,195,190,194,197,71,190,243,4,53,63,190,20,123,191,94,131,108,63,218,57,14,191,243,4,53,63,116,153,101,191,202,215,27,63,194,197,71,190,238,131,132,190,227,202,40,63,94,131,108,191,175,115,127,63,215,179,93,191,218,57,14,63,168,168,5,190,183,147,164,190,243,4,53,63,3,106,114,191,85,207,125,63,49,219,84,191,0,0,0,63,19,242,133,189,21,239,195,190,147,120,64,63,234,70,119,191,190,20,123,63,52,25,75,191,170,115,226,62,243,4,53,63,3,106,114,191,52,25,75,63,218,57,14,191,238,131,132,62,19,242,133,61,21,239,195,190,227,202,40,63,215,179,93,191,190,20,123,63,85,207,125,191,116,153,101,63,243,4,53,191,170,115,226,62,168,168,5,190,194,197,71,190,0,0,0,63,147,120,64,191,94,131,108,63,175,115,127,191,234,70,119,63,49,219,84,191,202,215,27,63,183,147,164,190,243,4,53,63,190,20,123,191,94,131,108,63,49,219,84,191,243,4,53,63,218,57,14,191,21,239,195,62,194,197,71,190,15,47,66,167,194,197,71,62,21,239,195,190,218,57,14,63,243,4,53,191,49,219,84,63,94,131,108,191,190,20,123,63,0,0,128,191,190,20,123,63,94,131,108,191,49,219,84,63,243,4,53,191,218,57,14,63,21,239,195,190,194,197,71,62,243,4,53,63,175,115,127,191,85,207,125,63,190,20,123,191,234,70,119,63,3,106,114,191,94,131,108,63,116,153,101,191,215,179,93,63,49,219,84,191,52,25,75,63,147,120,64,191,243,4,53,63,227,202,40,191,202,215,27,63,218,57,14,191,0,0,0,63,170,115,226,190,21,239,195,62,183,147,164,190,238,131,132,62,194,197,71,190,168,168,5,62,19,242,133,189,243,4,53,63,174,126,127,63,59,251,125,63,45,119,123,63,17,245,119,63,113,120,115,63,213,5,110,63,191,162,103,63,162,85,96,63,224,37,88,63,189,27,79,63,91,64,69,63,176,157,58,63,123,62,47,63,56,46,35,63,24,121,22,63,242,43,9,63,107,168,246,62,190,255,217,62,210,122,188,62,122,55,158,62,144,168,126,62,227,224,63,62,91,87,0,62,81,152,128,61,243,4,53,63,45,119,123,63,213,5,110,63,224,37,88,63,176,157,58,63,24,121,22,63,190,255,217,62,144,168,126,62,81,152,128,61,91,87,0,190,122,55,158,190,107,168,246,190,56,46,35,191,91,64,69,191,162,85,96,191,113,120,115,191,59,251,125,191,174,126,127,191,17,245,119,191,191,162,103,191,189,27,79,191,123,62,47,191,242,43,9,191,210,122,188,190,227,224,63,190,243,4,53,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,50,49,141,36,122,55,158,190,24,121,22,191,189,27,79,191,113,120,115,191,0,0,128,191,113,120,115,191,189,27,79,191,24,121,22,191,122,55,158,190,202,201,83,165,122,55,158,62,24,121,22,63,189,27,79,63,113,120,115,63,0,0,128,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,243,4,53,63,191,162,103,63,56,46,35,63,144,168,126,62,227,224,63,190,24,121,22,191,162,85,96,191,174,126,127,191,213,5,110,191,123,62,47,191,122,55,158,190,91,87,0,62,242,43,9,63,224,37,88,63,59,251,125,63,113,120,115,63,176,157,58,63,210,122,188,62,81,152,128,189,107,168,246,190,189,27,79,191,45,119,123,191,17,245,119,191,91,64,69,191,190,255,217,190,243,4,53,63,224,37,88,63,190,255,217,62,91,87,0,190,56,46,35,191,113,120,115,191,17,245,119,191,123,62,47,191,227,224,63,190,210,122,188,62,189,27,79,63,174,126,127,63,162,85,96,63,107,168,246,62,81,152,128,189,24,121,22,191,213,5,110,191,45,119,123,191,176,157,58,191,144,168,126,190,122,55,158,62,91,64,69,63,59,251,125,63,191,162,103,63,242,43,9,63,243,4,53,63,91,64,69,63,227,224,63,62,107,168,246,190,213,5,110,191,113,120,115,191,242,43,9,191,91,87,0,62,176,157,58,63,174,126,127,63,189,27,79,63,144,168,126,62,190,255,217,190,191,162,103,191,17,245,119,191,24,121,22,191,81,152,128,61,123,62,47,63,59,251,125,63,224,37,88,63,122,55,158,62,210,122,188,190,162,85,96,191,45,119,123,191,56,46,35,191,243,4,53,63,123,62,47,63,81,152,128,189,91,64,69,191,59,251,125,191,24,121,22,191,227,224,63,62,224,37,88,63,17,245,119,63,107,168,246,62,122,55,158,190,191,162,103,191,213,5,110,191,210,122,188,190,190,255,217,62,113,120,115,63,162,85,96,63,144,168,126,62,242,43,9,191,45,119,123,191,189,27,79,191,91,87,0,190,56,46,35,63,174,126,127,63,176,157,58,63,243,4,53,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,202,201,83,165,189,27,79,63,113,120,115,63,122,55,158,62,24,121,22,191,0,0,128,191,24,121,22,191,122,55,158,62,113,120,115,63,189,27,79,63,88,215,30,38,189,27,79,191,113,120,115,191,122,55,158,190,24,121,22,63,0,0,128,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,243,4,53,63,107,168,246,62,242,43,9,191,174,126,127,191,190,255,217,190,24,121,22,63,59,251,125,63,210,122,188,62,56,46,35,191,45,119,123,191,122,55,158,190,123,62,47,63,17,245,119,63,144,168,126,62,176,157,58,191,113,120,115,191,227,224,63,190,91,64,69,63,213,5,110,63,91,87,0,62,189,27,79,191,191,162,103,191,81,152,128,189,224,37,88,63,162,85,96,63,243,4,53,63,210,122,188,62,176,157,58,191,191,162,103,191,81,152,128,61,113,120,115,63,56,46,35,63,107,168,246,190,59,251,125,191,144,168,126,190,189,27,79,63,224,37,88,63,227,224,63,190,45,119,123,191,242,43,9,191,24,121,22,63,17,245,119,63,91,87,0,62,162,85,96,191,91,64,69,191,122,55,158,62,174,126,127,63,190,255,217,62,123,62,47,191,213,5,110,191,243,4,53,63,144,168,126,62,162,85,96,191,123,62,47,191,242,43,9,63,113,120,115,63,81,152,128,189,45,119,123,191,190,255,217,190,91,64,69,63,189,27,79,63,210,122,188,190,59,251,125,191,91,87,0,190,213,5,110,63,24,121,22,63,56,46,35,191,191,162,103,191,227,224,63,62,174,126,127,63,122,55,158,62,224,37,88,191,176,157,58,191,107,168,246,62,17,245,119,63,243,4,53,63,91,87,0,62,17,245,119,191,210,122,188,190,162,85,96,63,24,121,22,63,176,157,58,191,91,64,69,191,242,43,9,63,191,162,103,63,122,55,158,190,45,119,123,191,81,152,128,61,174,126,127,63,227,224,63,62,113,120,115,191,190,255,217,190,224,37,88,63,56,46,35,63,123,62,47,191,189,27,79,191,107,168,246,62,213,5,110,63,144,168,126,190,59,251,125,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,243,4,53,63,91,87,0,190,17,245,119,191,210,122,188,62,162,85,96,63,24,121,22,191,176,157,58,191,91,64,69,63,242,43,9,63,191,162,103,191,122,55,158,190,45,119,123,63,81,152,128,61,174,126,127,191,227,224,63,62,113,120,115,63,190,255,217,190,224,37,88,191,56,46,35,63,123,62,47,63,189,27,79,191,107,168,246,190,213,5,110,63,144,168,126,62,59,251,125,191,243,4,53,63,144,168,126,190,162,85,96,191,123,62,47,63,242,43,9,63,113,120,115,191,81,152,128,189,45,119,123,63,190,255,217,190,91,64,69,191,189,27,79,63,210,122,188,62,59,251,125,191,91,87,0,62,213,5,110,63,24,121,22,191,56,46,35,191,191,162,103,63,227,224,63,62,174,126,127,191,122,55,158,62,224,37,88,63,176,157,58,191,107,168,246,190,17,245,119,63,243,4,53,63,210,122,188,190,176,157,58,191,191,162,103,63,81,152,128,61,113,120,115,191,56,46,35,63,107,168,246,62,59,251,125,191,144,168,126,62,189,27,79,63,224,37,88,191,227,224,63,190,45,119,123,63,242,43,9,191,24,121,22,191,17,245,119,63,91,87,0,190,162,85,96,191,91,64,69,63,122,55,158,62,174,126,127,191,190,255,217,62,123,62,47,63,213,5,110,191,243,4,53,63,107,168,246,190,242,43,9,191,174,126,127,63,190,255,217,190,24,121,22,191,59,251,125,63,210,122,188,190,56,46,35,191,45,119,123,63,122,55,158,190,123,62,47,191,17,245,119,63,144,168,126,190,176,157,58,191,113,120,115,63,227,224,63,190,91,64,69,191,213,5,110,63,91,87,0,190,189,27,79,191,191,162,103,63,81,152,128,189,224,37,88,191,162,85,96,63,243,4,53,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,23,22,247,165,189,27,79,63,113,120,115,191,122,55,158,62,24,121,22,63,0,0,128,191,24,121,22,63,122,55,158,62,113,120,115,191,189,27,79,63,222,94,13,166,189,27,79,191,113,120,115,63,122,55,158,190,24,121,22,191,0,0,128,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,243,4,53,63,123,62,47,191,81,152,128,189,91,64,69,63,59,251,125,191,24,121,22,63,227,224,63,62,224,37,88,191,17,245,119,63,107,168,246,190,122,55,158,190,191,162,103,63,213,5,110,191,210,122,188,62,190,255,217,62,113,120,115,191,162,85,96,63,144,168,126,190,242,43,9,191,45,119,123,63,189,27,79,191,91,87,0,62,56,46,35,63,174,126,127,191,176,157,58,63,243,4,53,63,91,64,69,191,227,224,63,62,107,168,246,62,213,5,110,191,113,120,115,63,242,43,9,191,91,87,0,190,176,157,58,63,174,126,127,191,189,27,79,63,144,168,126,190,190,255,217,190,191,162,103,63,17,245,119,191,24,121,22,63,81,152,128,61,123,62,47,191,59,251,125,63,224,37,88,191,122,55,158,62,210,122,188,62,162,85,96,191,45,119,123,63,56,46,35,191,243,4,53,63,224,37,88,191,190,255,217,62,91,87,0,62,56,46,35,191,113,120,115,63,17,245,119,191,123,62,47,63,227,224,63,190,210,122,188,190,189,27,79,63,174,126,127,191,162,85,96,63,107,168,246,190,81,152,128,189,24,121,22,63,213,5,110,191,45,119,123,63,176,157,58,191,144,168,126,62,122,55,158,62,91,64,69,191,59,251,125,63,191,162,103,191,242,43,9,63,243,4,53,63,191,162,103,191,56,46,35,63,144,168,126,190,227,224,63,190,24,121,22,63,162,85,96,191,174,126,127,63,213,5,110,191,123,62,47,63,122,55,158,190,91,87,0,190,242,43,9,63,224,37,88,191,59,251,125,63,113,120,115,191,176,157,58,63,210,122,188,190,81,152,128,189,107,168,246,62,189,27,79,191,45,119,123,63,17,245,119,191,91,64,69,63,190,255,217,190,243,4,53,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,88,215,30,38,122,55,158,190,24,121,22,63,189,27,79,191,113,120,115,63,0,0,128,191,113,120,115,63,189,27,79,191,24,121,22,63,122,55,158,190,130,33,119,167,122,55,158,62,24,121,22,191,189,27,79,63,113,120,115,191,0,0,128,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,243,4,53,63,45,119,123,191,213,5,110,63,224,37,88,191,176,157,58,63,24,121,22,191,190,255,217,62,144,168,126,190,81,152,128,61,91,87,0,62,122,55,158,190,107,168,246,62,56,46,35,191,91,64,69,63,162,85,96,191,113,120,115,63,59,251,125,191,174,126,127,63,17,245,119,191,191,162,103,63,189,27,79,191,123,62,47,63,242,43,9,191,210,122,188,62,227,224,63,190,243,4,53,63,174,126,127,191,59,251,125,63,45,119,123,191,17,245,119,63,113,120,115,191,213,5,110,63,191,162,103,191,162,85,96,63,224,37,88,191,189,27,79,63,91,64,69,191,176,157,58,63,123,62,47,191,56,46,35,63,24,121,22,191,242,43,9,63,107,168,246,190,190,255,217,62,210,122,188,190,122,55,158,62,144,168,126,190,227,224,63,62,91,87,0,190,81,152,128,61,243,4,53,63,111,136,127,63,43,34,126,63,132,206,123,63,165,143,120,63,150,104,116,63,57,93,111,63,69,114,105,63,63,173,98,63,123,20,91,63,18,175,82,63,219,132,73,63,103,158,63,63,243,4,53,63,104,194,41,63,74,225,29,63,177,108,17,63,64,112,4,63,50,240,237,62,161,33,210,62,198,142,181,62,82,82,152,62,42,15,117,62,199,148,56,62,239,219,246,61,113,79,119,61,243,4,53,63,132,206,123,63,57,93,111,63,123,20,91,63,103,158,63,63,74,225,29,63,50,240,237,62,82,82,152,62,239,219,246,61,113,79,119,189,42,15,117,190,161,33,210,190,177,108,17,191,243,4,53,191,18,175,82,191,69,114,105,191,165,143,120,191,111,136,127,191,43,34,126,191,150,104,116,191,63,173,98,191,219,132,73,191,104,194,41,191,64,112,4,191,198,142,181,190,199,148,56,190,243,4,53,63,150,104,116,63,18,175,82,63,74,225,29,63,198,142,181,62,113,79,119,61,42,15,117,190,64,112,4,191,103,158,63,191,69,114,105,191,43,34,126,191,132,206,123,191,63,173,98,191,243,4,53,191,50,240,237,190,199,148,56,190,239,219,246,61,161,33,210,62,104,194,41,63,123,20,91,63,165,143,120,63,111,136,127,63,57,93,111,63,219,132,73,63,177,108,17,63,82,82,152,62,243,4,53,63,69,114,105,63,104,194,41,63,82,82,152,62,239,219,246,189,64,112,4,191,18,175,82,191,132,206,123,191,165,143,120,191,219,132,73,191,50,240,237,190,113,79,119,189,198,142,181,62,243,4,53,63,57,93,111,63,111,136,127,63,63,173,98,63,74,225,29,63,42,15,117,62,199,148,56,190,177,108,17,191,123,20,91,191,43,34,126,191,150,104,116,191,103,158,63,191,161,33,210,190,243,4,53,63,123,20,91,63,50,240,237,62,113,79,119,189,177,108,17,191,69,114,105,191,43,34,126,191,219,132,73,191,198,142,181,190,199,148,56,62,104,194,41,63,150,104,116,63,165,143,120,63,243,4,53,63,42,15,117,62,82,82,152,190,103,158,63,191,132,206,123,191,57,93,111,191,74,225,29,191,239,219,246,189,161,33,210,62,18,175,82,63,111,136,127,63,63,173,98,63,64,112,4,63,243,4,53,63,219,132,73,63,42,15,117,62,161,33,210,190,63,173,98,191,132,206,123,191,104,194,41,191,113,79,119,189,177,108,17,63,150,104,116,63,57,93,111,63,64,112,4,63,239,219,246,189,243,4,53,191,43,34,126,191,123,20,91,191,198,142,181,190,82,82,152,62,18,175,82,63,111,136,127,63,103,158,63,63,199,148,56,62,50,240,237,190,69,114,105,191,165,143,120,191,74,225,29,191,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,243,4,53,63,74,225,29,63,42,15,117,190,69,114,105,191,63,173,98,191,199,148,56,190,104,194,41,63,111,136,127,63,177,108,17,63,82,82,152,190,57,93,111,191,123,20,91,191,239,219,246,189,243,4,53,63,43,34,126,63,64,112,4,63,198,142,181,190,150,104,116,191,18,175,82,191,113,79,119,189,103,158,63,63,132,206,123,63,50,240,237,62,161,33,210,190,165,143,120,191,219,132,73,191,243,4,53,63,64,112,4,63,50,240,237,190,111,136,127,191,177,108,17,191,161,33,210,62,43,34,126,63,74,225,29,63,198,142,181,190,132,206,123,191,104,194,41,191,82,82,152,62,165,143,120,63,243,4,53,63,42,15,117,190,150,104,116,191,103,158,63,191,199,148,56,62,57,93,111,63,219,132,73,63,239,219,246,189,69,114,105,191,18,175,82,191,113,79,119,61,63,173,98,63,123,20,91,63,243,4,53,63,161,33,210,62,104,194,41,191,150,104,116,191,239,219,246,189,123,20,91,63,18,175,82,63,199,148,56,190,165,143,120,191,74,225,29,191,50,240,237,62,111,136,127,63,198,142,181,62,243,4,53,191,57,93,111,191,113,79,119,189,63,173,98,63,219,132,73,63,42,15,117,190,132,206,123,191,177,108,17,191,64,112,4,63,43,34,126,63,82,82,152,62,103,158,63,191,69,114,105,191,243,4,53,63,82,82,152,62,18,175,82,191,219,132,73,191,198,142,181,62,111,136,127,63,42,15,117,62,123,20,91,191,103,158,63,191,161,33,210,62,43,34,126,63,199,148,56,62,63,173,98,191,243,4,53,191,50,240,237,62,132,206,123,63,239,219,246,61,69,114,105,191,104,194,41,191,64,112,4,63,165,143,120,63,113,79,119,61,57,93,111,191,74,225,29,191,177,108,17,63,150,104,116,63,243,4,53,63,199,148,56,62,57,93,111,191,64,112,4,191,103,158,63,63,219,132,73,63,50,240,237,190,150,104,116,191,239,219,246,61,111,136,127,63,42,15,117,62,69,114,105,191,177,108,17,191,243,4,53,63,18,175,82,63,161,33,210,190,165,143,120,191,113,79,119,61,43,34,126,63,82,82,152,62,63,173,98,191,74,225,29,191,104,194,41,63,123,20,91,63,198,142,181,190,132,206,123,191,243,4,53,63,113,79,119,61,43,34,126,191,199,148,56,190,165,143,120,63,82,82,152,62,57,93,111,191,161,33,210,190,63,173,98,63,64,112,4,63,18,175,82,191,74,225,29,191,103,158,63,63,243,4,53,63,104,194,41,191,219,132,73,191,177,108,17,63,123,20,91,63,50,240,237,190,69,114,105,191,198,142,181,62,150,104,116,63,42,15,117,190,132,206,123,191,239,219,246,61,111,136,127,63,243,4,53,63,113,79,119,189,43,34,126,191,199,148,56,62,165,143,120,63,82,82,152,190,57,93,111,191,161,33,210,62,63,173,98,63,64,112,4,191,18,175,82,191,74,225,29,63,103,158,63,63,243,4,53,191,104,194,41,191,219,132,73,63,177,108,17,63,123,20,91,191,50,240,237,190,69,114,105,63,198,142,181,62,150,104,116,191,42,15,117,190,132,206,123,63,239,219,246,61,111,136,127,191,243,4,53,63,199,148,56,190,57,93,111,191,64,112,4,63,103,158,63,63,219,132,73,191,50,240,237,190,150,104,116,63,239,219,246,61,111,136,127,191,42,15,117,62,69,114,105,63,177,108,17,191,243,4,53,191,18,175,82,63,161,33,210,62,165,143,120,191,113,79,119,189,43,34,126,63,82,82,152,190,63,173,98,191,74,225,29,63,104,194,41,63,123,20,91,191,198,142,181,190,132,206,123,63,243,4,53,63,82,82,152,190,18,175,82,191,219,132,73,63,198,142,181,62,111,136,127,191,42,15,117,62,123,20,91,63,103,158,63,191,161,33,210,190,43,34,126,63,199,148,56,190,63,173,98,191,243,4,53,63,50,240,237,62,132,206,123,191,239,219,246,61,69,114,105,63,104,194,41,191,64,112,4,191,165,143,120,63,113,79,119,189,57,93,111,191,74,225,29,63,177,108,17,63,150,104,116,191,243,4,53,63,161,33,210,190,104,194,41,191,150,104,116,63,239,219,246,189,123,20,91,191,18,175,82,63,199,148,56,62,165,143,120,191,74,225,29,63,50,240,237,62,111,136,127,191,198,142,181,62,243,4,53,63,57,93,111,191,113,79,119,61,63,173,98,63,219,132,73,191,42,15,117,190,132,206,123,63,177,108,17,191,64,112,4,191,43,34,126,63,82,82,152,190,103,158,63,191,69,114,105,63,243,4,53,63,64,112,4,191,50,240,237,190,111,136,127,63,177,108,17,191,161,33,210,190,43,34,126,63,74,225,29,191,198,142,181,190,132,206,123,63,104,194,41,191,82,82,152,190,165,143,120,63,243,4,53,191,42,15,117,190,150,104,116,63,103,158,63,191,199,148,56,190,57,93,111,63,219,132,73,191,239,219,246,189,69,114,105,63,18,175,82,191,113,79,119,189,63,173,98,63,123,20,91,191,243,4,53,63,74,225,29,191,42,15,117,190,69,114,105,63,63,173,98,191,199,148,56,62,104,194,41,63,111,136,127,191,177,108,17,63,82,82,152,62,57,93,111,191,123,20,91,63,239,219,246,189,243,4,53,191,43,34,126,63,64,112,4,191,198,142,181,190,150,104,116,63,18,175,82,191,113,79,119,61,103,158,63,63,132,206,123,191,50,240,237,62,161,33,210,62,165,143,120,191,219,132,73,63,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,243,4,53,63,219,132,73,191,42,15,117,62,161,33,210,62,63,173,98,191,132,206,123,63,104,194,41,191,113,79,119,61,177,108,17,63,150,104,116,191,57,93,111,63,64,112,4,191,239,219,246,189,243,4,53,63,43,34,126,191,123,20,91,63,198,142,181,190,82,82,152,190,18,175,82,63,111,136,127,191,103,158,63,63,199,148,56,190,50,240,237,190,69,114,105,63,165,143,120,191,74,225,29,63,243,4,53,63,123,20,91,191,50,240,237,62,113,79,119,61,177,108,17,191,69,114,105,63,43,34,126,191,219,132,73,63,198,142,181,190,199,148,56,190,104,194,41,63,150,104,116,191,165,143,120,63,243,4,53,191,42,15,117,62,82,82,152,62,103,158,63,191,132,206,123,63,57,93,111,191,74,225,29,63,239,219,246,189,161,33,210,190,18,175,82,63,111,136,127,191,63,173,98,63,64,112,4,191,243,4,53,63,69,114,105,191,104,194,41,63,82,82,152,190,239,219,246,189,64,112,4,63,18,175,82,191,132,206,123,63,165,143,120,191,219,132,73,63,50,240,237,190,113,79,119,61,198,142,181,62,243,4,53,191,57,93,111,63,111,136,127,191,63,173,98,63,74,225,29,191,42,15,117,62,199,148,56,62,177,108,17,191,123,20,91,63,43,34,126,191,150,104,116,63,103,158,63,191,161,33,210,62,243,4,53,63,150,104,116,191,18,175,82,63,74,225,29,191,198,142,181,62,113,79,119,189,42,15,117,190,64,112,4,63,103,158,63,191,69,114,105,63,43,34,126,191,132,206,123,63,63,173,98,191,243,4,53,63,50,240,237,190,199,148,56,62,239,219,246,61,161,33,210,190,104,194,41,63,123,20,91,191,165,143,120,63,111,136,127,191,57,93,111,63,219,132,73,191,177,108,17,63,82,82,152,190,243,4,53,63,132,206,123,191,57,93,111,63,123,20,91,191,103,158,63,63,74,225,29,191,50,240,237,62,82,82,152,190,239,219,246,61,113,79,119,61,42,15,117,190,161,33,210,62,177,108,17,191,243,4,53,63,18,175,82,191,69,114,105,63,165,143,120,191,111,136,127,63,43,34,126,191,150,104,116,63,63,173,98,191,219,132,73,63,104,194,41,191,64,112,4,63,198,142,181,190,199,148,56,62,243,4,53,63,111,136,127,191,43,34,126,63,132,206,123,191,165,143,120,63,150,104,116,191,57,93,111,63,69,114,105,191,63,173,98,63,123,20,91,191,18,175,82,63,219,132,73,191,103,158,63,63,243,4,53,191,104,194,41,63,74,225,29,191,177,108,17,63,64,112,4,191,50,240,237,62,161,33,210,190,198,142,181,62,82,82,152,190,42,15,117,62,199,148,56,190,239,219,246,61,113,79,119,189,243,4,53,63,32,145,127,63,222,68,126,63,92,28,124,63,120,25,121,63,205,62,117,63,178,143,112,63,54,16,107,63,28,197,100,63,215,179,93,63,135,226,85,63,242,87,77,63,125,27,68,63,41,53,58,63,136,173,47,63,187,141,36,63,99,223,24,63,159,172,12,63,0,0,0,63,2,201,229,62,248,202,202,62,68,29,175,62,224,215,146,62,145,38,108,62,212,208,49,62,31,194,237,61,70,41,110,61,243,4,53,63,92,28,124,63,178,143,112,63,215,179,93,63,125,27,68,63,187,141,36,63,0,0,0,63,68,29,175,62,212,208,49,62,50,49,141,36,212,208,49,190,68,29,175,190,0,0,0,191,187,141,36,191,125,27,68,191,215,179,93,191,178,143,112,191,92,28,124,191,0,0,128,191,92,28,124,191,178,143,112,191,215,179,93,191,125,27,68,191,187,141,36,191,0,0,0,191,68,29,175,190,212,208,49,190,243,4,53,63,205,62,117,63,135,226,85,63,187,141,36,63,248,202,202,62,31,194,237,61,212,208,49,190,2,201,229,190,136,173,47,191,215,179,93,191,120,25,121,191,32,145,127,191,178,143,112,191,242,87,77,191,99,223,24,191,68,29,175,190,70,41,110,189,145,38,108,62,0,0,0,63,41,53,58,63,28,197,100,63,92,28,124,63,222,68,126,63,54,16,107,63,125,27,68,63,159,172,12,63,224,215,146,62,243,4,53,63,54,16,107,63,136,173,47,63,68,29,175,62,70,41,110,189,2,201,229,190,125,27,68,191,205,62,117,191,222,68,126,191,215,179,93,191,99,223,24,191,145,38,108,190,212,208,49,62,159,172,12,63,135,226,85,63,92,28,124,63,120,25,121,63,242,87,77,63,0,0,0,63,31,194,237,61,224,215,146,190,187,141,36,191,28,197,100,191,32,145,127,191,178,143,112,191,41,53,58,191,248,202,202,190,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,202,201,83,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,95,31,172,38,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,23,22,247,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,243,4,53,63,242,87,77,63,224,215,146,62,68,29,175,190,135,226,85,191,32,145,127,191,125,27,68,191,145,38,108,190,248,202,202,62,215,179,93,63,222,68,126,63,41,53,58,63,212,208,49,62,2,201,229,190,28,197,100,191,92,28,124,191,136,173,47,191,31,194,237,189,0,0,0,63,54,16,107,63,120,25,121,63,187,141,36,63,70,41,110,61,159,172,12,191,178,143,112,191,205,62,117,191,99,223,24,191,243,4,53,63,41,53,58,63,70,41,110,61,187,141,36,191,222,68,126,191,242,87,77,191,212,208,49,190,159,172,12,63,120,25,121,63,215,179,93,63,224,215,146,62,2,201,229,190,178,143,112,191,54,16,107,191,248,202,202,190,68,29,175,62,28,197,100,63,205,62,117,63,0,0,0,63,145,38,108,190,135,226,85,191,92,28,124,191,99,223,24,191,31,194,237,61,125,27,68,63,32,145,127,63,136,173,47,63,243,4,53,63,187,141,36,63,212,208,49,190,215,179,93,191,178,143,112,191,68,29,175,190,0,0,0,63,92,28,124,63,125,27,68,63,126,125,176,37,125,27,68,191,92,28,124,191,0,0,0,191,68,29,175,62,178,143,112,63,215,179,93,63,212,208,49,62,187,141,36,191,0,0,128,191,187,141,36,191,212,208,49,62,215,179,93,63,178,143,112,63,68,29,175,62,0,0,0,191,92,28,124,191,125,27,68,191,243,4,53,63,159,172,12,63,248,202,202,190,92,28,124,191,136,173,47,191,145,38,108,62,178,143,112,63,242,87,77,63,70,41,110,189,215,179,93,191,28,197,100,191,31,194,237,189,125,27,68,63,205,62,117,63,224,215,146,62,187,141,36,191,222,68,126,191,2,201,229,190,0,0,0,63,32,145,127,63,99,223,24,63,68,29,175,190,120,25,121,191,41,53,58,191,212,208,49,62,54,16,107,63,135,226,85,63,243,4,53,63,2,201,229,62,99,223,24,191,92,28,124,191,224,215,146,190,41,53,58,63,178,143,112,63,31,194,237,61,135,226,85,191,215,179,93,191,70,41,110,61,54,16,107,63,125,27,68,63,145,38,108,190,120,25,121,191,187,141,36,191,248,202,202,62,32,145,127,63,0,0,0,63,159,172,12,191,222,68,126,191,68,29,175,190,136,173,47,63,205,62,117,63,212,208,49,62,242,87,77,191,28,197,100,191,243,4,53,63,68,29,175,62,125,27,68,191,215,179,93,191,212,208,49,62,92,28,124,63,0,0,0,63,187,141,36,191,178,143,112,191,23,22,247,165,178,143,112,63,187,141,36,63,0,0,0,191,92,28,124,191,212,208,49,190,215,179,93,63,125,27,68,63,68,29,175,190,0,0,128,191,68,29,175,190,125,27,68,63,215,179,93,63,212,208,49,190,92,28,124,191,0,0,0,191,187,141,36,63,178,143,112,63,243,4,53,63,145,38,108,62,28,197,100,191,187,141,36,191,99,223,24,63,54,16,107,63,212,208,49,190,32,145,127,191,224,215,146,190,215,179,93,63,136,173,47,63,159,172,12,191,178,143,112,191,31,194,237,61,222,68,126,63,68,29,175,62,135,226,85,191,41,53,58,191,0,0,0,63,205,62,117,63,70,41,110,189,92,28,124,191,248,202,202,190,242,87,77,63,125,27,68,63,2,201,229,190,120,25,121,191,243,4,53,63,31,194,237,61,120,25,121,191,68,29,175,190,28,197,100,63,159,172,12,63,125,27,68,191,41,53,58,191,99,223,24,63,215,179,93,63,248,202,202,190,205,62,117,191,212,208,49,62,32,145,127,63,70,41,110,61,92,28,124,191,224,215,146,190,54,16,107,63,0,0,0,63,242,87,77,191,136,173,47,191,187,141,36,63,135,226,85,63,2,201,229,190,178,143,112,191,145,38,108,62,222,68,126,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,243,4,53,63,31,194,237,189,120,25,121,191,68,29,175,62,28,197,100,63,159,172,12,191,125,27,68,191,41,53,58,63,99,223,24,63,215,179,93,191,248,202,202,190,205,62,117,63,212,208,49,62,32,145,127,191,70,41,110,61,92,28,124,63,224,215,146,190,54,16,107,191,0,0,0,63,242,87,77,63,136,173,47,191,187,141,36,191,135,226,85,63,2,201,229,62,178,143,112,191,145,38,108,190,222,68,126,63,243,4,53,63,145,38,108,190,28,197,100,191,187,141,36,63,99,223,24,63,54,16,107,191,212,208,49,190,32,145,127,63,224,215,146,190,215,179,93,191,136,173,47,63,159,172,12,63,178,143,112,191,31,194,237,189,222,68,126,63,68,29,175,190,135,226,85,191,41,53,58,63,0,0,0,63,205,62,117,191,70,41,110,189,92,28,124,63,248,202,202,190,242,87,77,191,125,27,68,63,2,201,229,62,120,25,121,191,243,4,53,63,68,29,175,190,125,27,68,191,215,179,93,63,212,208,49,62,92,28,124,191,0,0,0,63,187,141,36,63,178,143,112,191,46,238,158,38,178,143,112,63,187,141,36,191,0,0,0,191,92,28,124,63,212,208,49,190,215,179,93,191,125,27,68,63,68,29,175,62,0,0,128,191,68,29,175,62,125,27,68,63,215,179,93,191,212,208,49,190,92,28,124,63,0,0,0,191,187,141,36,191,178,143,112,63,243,4,53,63,2,201,229,190,99,223,24,191,92,28,124,63,224,215,146,190,41,53,58,191,178,143,112,63,31,194,237,189,135,226,85,191,215,179,93,63,70,41,110,61,54,16,107,191,125,27,68,63,145,38,108,62,120,25,121,191,187,141,36,63,248,202,202,62,32,145,127,191,0,0,0,63,159,172,12,63,222,68,126,191,68,29,175,62,136,173,47,63,205,62,117,191,212,208,49,62,242,87,77,63,28,197,100,191,243,4,53,63,159,172,12,191,248,202,202,190,92,28,124,63,136,173,47,191,145,38,108,190,178,143,112,63,242,87,77,191,70,41,110,189,215,179,93,63,28,197,100,191,31,194,237,61,125,27,68,63,205,62,117,191,224,215,146,62,187,141,36,63,222,68,126,191,2,201,229,62,0,0,0,63,32,145,127,191,99,223,24,63,68,29,175,62,120,25,121,191,41,53,58,63,212,208,49,62,54,16,107,191,135,226,85,63,243,4,53,63,187,141,36,191,212,208,49,190,215,179,93,63,178,143,112,191,68,29,175,62,0,0,0,63,92,28,124,191,125,27,68,63,8,72,141,166,125,27,68,191,92,28,124,63,0,0,0,191,68,29,175,190,178,143,112,63,215,179,93,191,212,208,49,62,187,141,36,63,0,0,128,191,187,141,36,63,212,208,49,62,215,179,93,191,178,143,112,63,68,29,175,190,0,0,0,191,92,28,124,63,125,27,68,191,243,4,53,63,41,53,58,191,70,41,110,61,187,141,36,63,222,68,126,191,242,87,77,63,212,208,49,190,159,172,12,191,120,25,121,63,215,179,93,191,224,215,146,62,2,201,229,62,178,143,112,191,54,16,107,63,248,202,202,190,68,29,175,190,28,197,100,63,205,62,117,191,0,0,0,63,145,38,108,62,135,226,85,191,92,28,124,63,99,223,24,191,31,194,237,189,125,27,68,63,32,145,127,191,136,173,47,63,243,4,53,63,242,87,77,191,224,215,146,62,68,29,175,62,135,226,85,191,32,145,127,63,125,27,68,191,145,38,108,62,248,202,202,62,215,179,93,191,222,68,126,63,41,53,58,191,212,208,49,62,2,201,229,62,28,197,100,191,92,28,124,63,136,173,47,191,31,194,237,61,0,0,0,63,54,16,107,191,120,25,121,63,187,141,36,191,70,41,110,61,159,172,12,63,178,143,112,191,205,62,117,63,99,223,24,191,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,195,67,119,38,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,138,140,141,165,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,50,146,101,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,243,4,53,63,54,16,107,191,136,173,47,63,68,29,175,190,70,41,110,189,2,201,229,62,125,27,68,191,205,62,117,63,222,68,126,191,215,179,93,63,99,223,24,191,145,38,108,62,212,208,49,62,159,172,12,191,135,226,85,63,92,28,124,191,120,25,121,63,242,87,77,191,0,0,0,63,31,194,237,189,224,215,146,190,187,141,36,63,28,197,100,191,32,145,127,63,178,143,112,191,41,53,58,63,248,202,202,190,243,4,53,63,205,62,117,191,135,226,85,63,187,141,36,191,248,202,202,62,31,194,237,189,212,208,49,190,2,201,229,62,136,173,47,191,215,179,93,63,120,25,121,191,32,145,127,63,178,143,112,191,242,87,77,63,99,223,24,191,68,29,175,62,70,41,110,189,145,38,108,190,0,0,0,63,41,53,58,191,28,197,100,63,92,28,124,191,222,68,126,63,54,16,107,191,125,27,68,63,159,172,12,191,224,215,146,62,243,4,53,63,92,28,124,191,178,143,112,63,215,179,93,191,125,27,68,63,187,141,36,191,0,0,0,63,68,29,175,190,212,208,49,62,34,2,75,39,212,208,49,190,68,29,175,62,0,0,0,191,187,141,36,63,125,27,68,191,215,179,93,63,178,143,112,191,92,28,124,63,0,0,128,191,92,28,124,63,178,143,112,191,215,179,93,63,125,27,68,191,187,141,36,63,0,0,0,191,68,29,175,62,212,208,49,190,243,4,53,63,32,145,127,191,222,68,126,63,92,28,124,191,120,25,121,63,205,62,117,191,178,143,112,63,54,16,107,191,28,197,100,63,215,179,93,191,135,226,85,63,242,87,77,191,125,27,68,63,41,53,58,191,136,173,47,63,187,141,36,191,99,223,24,63,159,172,12,191,0,0,0,63,2,201,229,190,248,202,202,62,68,29,175,190,224,215,146,62,145,38,108,190,212,208,49,62,31,194,237,189,70,41,110,61,243,4,53,63,230,152,127,63,236,99,126,63,11,98,124,63,224,148,121,63,173,254,117,63,87,162,113,63,94,131,108,63,229,165,102,63,164,14,96,63,235,194,88,63,153,200,80,63,28,38,72,63,104,226,62,63,243,4,53,63,176,149,42,63,7,157,31,63,205,35,20,63,65,51,8,63,1,170,247,62,2,38,222,62,21,239,195,62,86,26,169,62,98,189,141,62,135,220,99,62,192,134,43,62,162,77,229,61,32,170,101,61,243,4,53,63,11,98,124,63,87,162,113,63,164,14,96,63,28,38,72,63,176,149,42,63,65,51,8,63,21,239,195,62,135,220,99,62,32,170,101,61,162,77,229,189,98,189,141,190,2,38,222,190,205,35,20,191,243,4,53,191,153,200,80,191,229,165,102,191,173,254,117,191,236,99,126,191,230,152,127,191,224,148,121,191,94,131,108,191,235,194,88,191,104,226,62,191,7,157,31,191,1,170,247,190,86,26,169,190,192,134,43,190,243,4,53,63,173,254,117,63,235,194,88,63,176,149,42,63,2,38,222,62,192,134,43,62,162,77,229,189,21,239,195,190,7,157,31,191,153,200,80,191,87,162,113,191,230,152,127,191,224,148,121,191,164,14,96,191,243,4,53,191,1,170,247,190,135,220,99,190,32,170,101,61,86,26,169,62,205,35,20,63,28,38,72,63,94,131,108,63,236,99,126,63,11,98,124,63,229,165,102,63,104,226,62,63,65,51,8,63,98,189,141,62,243,4,53,63,94,131,108,63,243,4,53,63,21,239,195,62,50,49,141,36,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,202,201,83,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,126,125,176,37,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,243,4,53,63,164,14,96,63,65,51,8,63,32,170,101,61,2,38,222,190,153,200,80,191,236,99,126,191,94,131,108,191,7,157,31,191,192,134,43,190,86,26,169,62,104,226,62,63,224,148,121,63,173,254,117,63,243,4,53,63,98,189,141,62,135,220,99,190,176,149,42,191,87,162,113,191,11,98,124,191,28,38,72,191,21,239,195,190,162,77,229,61,205,35,20,63,229,165,102,63,230,152,127,63,235,194,88,63,1,170,247,62,243,4,53,63,153,200,80,63,86,26,169,62,98,189,141,190,28,38,72,191,230,152,127,191,235,194,88,191,21,239,195,190,135,220,99,62,104,226,62,63,236,99,126,63,164,14,96,63,2,38,222,62,192,134,43,190,243,4,53,191,11,98,124,191,229,165,102,191,1,170,247,190,162,77,229,61,176,149,42,63,224,148,121,63,94,131,108,63,65,51,8,63,32,170,101,189,7,157,31,191,173,254,117,191,87,162,113,191,205,35,20,191,243,4,53,63,104,226,62,63,162,77,229,61,205,35,20,191,224,148,121,191,164,14,96,191,86,26,169,190,21,239,195,62,229,165,102,63,173,254,117,63,65,51,8,63,192,134,43,190,28,38,72,191,230,152,127,191,243,4,53,191,32,170,101,189,7,157,31,63,11,98,124,63,235,194,88,63,98,189,141,62,2,38,222,190,94,131,108,191,87,162,113,191,1,170,247,190,135,220,99,62,153,200,80,63,236,99,126,63,176,149,42,63,243,4,53,63,176,149,42,63,162,77,229,189,153,200,80,191,224,148,121,191,1,170,247,190,86,26,169,62,94,131,108,63,229,165,102,63,98,189,141,62,65,51,8,191,11,98,124,191,28,38,72,191,32,170,101,189,243,4,53,63,230,152,127,63,7,157,31,63,192,134,43,190,235,194,88,191,173,254,117,191,2,38,222,190,21,239,195,62,87,162,113,63,164,14,96,63,135,220,99,62,205,35,20,191,236,99,126,191,104,226,62,191,243,4,53,63,205,35,20,63,86,26,169,190,173,254,117,191,28,38,72,191,32,170,101,61,235,194,88,63,94,131,108,63,135,220,99,62,176,149,42,191,236,99,126,191,1,170,247,190,2,38,222,62,11,98,124,63,243,4,53,63,192,134,43,190,229,165,102,191,164,14,96,191,162,77,229,189,104,226,62,63,224,148,121,63,21,239,195,62,65,51,8,191,230,152,127,191,7,157,31,191,98,189,141,62,87,162,113,63,153,200,80,63,243,4,53,63,1,170,247,62,65,51,8,191,230,152,127,191,2,38,222,190,205,35,20,63,236,99,126,63,21,239,195,62,7,157,31,191,11,98,124,191,86,26,169,190,176,149,42,63,224,148,121,63,98,189,141,62,243,4,53,191,173,254,117,191,135,220,99,190,104,226,62,63,87,162,113,63,192,134,43,62,28,38,72,191,94,131,108,191,162,77,229,189,153,200,80,63,229,165,102,63,32,170,101,61,235,194,88,191,164,14,96,191,243,4,53,63,21,239,195,62,243,4,53,191,94,131,108,191,202,201,83,165,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,88,215,30,38,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,243,4,53,63,98,189,141,62,235,194,88,191,104,226,62,191,2,38,222,62,11,98,124,63,162,77,229,61,94,131,108,191,7,157,31,191,205,35,20,63,87,162,113,63,32,170,101,189,224,148,121,191,1,170,247,190,243,4,53,63,164,14,96,63,135,220,99,190,230,152,127,191,86,26,169,190,153,200,80,63,28,38,72,63,21,239,195,190,236,99,126,191,192,134,43,190,229,165,102,63,176,149,42,63,65,51,8,191,173,254,117,191,243,4,53,63,192,134,43,62,87,162,113,191,1,170,247,190,28,38,72,63,104,226,62,63,65,51,8,191,94,131,108,191,135,220,99,62,230,152,127,63,162,77,229,61,173,254,117,191,2,38,222,190,153,200,80,63,243,4,53,63,205,35,20,191,229,165,102,191,98,189,141,62,236,99,126,63,32,170,101,61,224,148,121,191,21,239,195,190,235,194,88,63,176,149,42,63,7,157,31,191,164,14,96,191,86,26,169,62,11,98,124,63,243,4,53,63,32,170,101,61,236,99,126,191,192,134,43,190,224,148,121,63,98,189,141,62,87,162,113,191,21,239,195,190,229,165,102,63,1,170,247,62,235,194,88,191,205,35,20,191,28,38,72,63,176,149,42,63,243,4,53,191,104,226,62,191,7,157,31,63,153,200,80,63,65,51,8,191,164,14,96,191,2,38,222,62,94,131,108,63,86,26,169,190,173,254,117,191,135,220,99,62,11,98,124,63,162,77,229,189,230,152,127,191,243,4,53,63,32,170,101,189,236,99,126,191,192,134,43,62,224,148,121,63,98,189,141,190,87,162,113,191,21,239,195,62,229,165,102,63,1,170,247,190,235,194,88,191,205,35,20,63,28,38,72,63,176,149,42,191,243,4,53,191,104,226,62,63,7,157,31,63,153,200,80,191,65,51,8,191,164,14,96,63,2,38,222,62,94,131,108,191,86,26,169,190,173,254,117,63,135,220,99,62,11,98,124,191,162,77,229,189,230,152,127,63,243,4,53,63,192,134,43,190,87,162,113,191,1,170,247,62,28,38,72,63,104,226,62,191,65,51,8,191,94,131,108,63,135,220,99,62,230,152,127,191,162,77,229,61,173,254,117,63,2,38,222,190,153,200,80,191,243,4,53,63,205,35,20,63,229,165,102,191,98,189,141,190,236,99,126,63,32,170,101,189,224,148,121,191,21,239,195,62,235,194,88,63,176,149,42,191,7,157,31,191,164,14,96,63,86,26,169,62,11,98,124,191,243,4,53,63,98,189,141,190,235,194,88,191,104,226,62,63,2,38,222,62,11,98,124,191,162,77,229,61,94,131,108,63,7,157,31,191,205,35,20,191,87,162,113,63,32,170,101,61,224,148,121,191,1,170,247,62,243,4,53,63,164,14,96,191,135,220,99,190,230,152,127,63,86,26,169,190,153,200,80,191,28,38,72,63,21,239,195,62,236,99,126,191,192,134,43,62,229,165,102,63,176,149,42,191,65,51,8,191,173,254,117,63,243,4,53,63,21,239,195,190,243,4,53,191,94,131,108,63,126,125,176,37,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,138,140,141,165,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,243,4,53,63,1,170,247,190,65,51,8,191,230,152,127,63,2,38,222,190,205,35,20,191,236,99,126,63,21,239,195,190,7,157,31,191,11,98,124,63,86,26,169,190,176,149,42,191,224,148,121,63,98,189,141,190,243,4,53,191,173,254,117,63,135,220,99,190,104,226,62,191,87,162,113,63,192,134,43,190,28,38,72,191,94,131,108,63,162,77,229,189,153,200,80,191,229,165,102,63,32,170,101,189,235,194,88,191,164,14,96,63,243,4,53,63,205,35,20,191,86,26,169,190,173,254,117,63,28,38,72,191,32,170,101,189,235,194,88,63,94,131,108,191,135,220,99,62,176,149,42,63,236,99,126,191,1,170,247,62,2,38,222,62,11,98,124,191,243,4,53,63,192,134,43,62,229,165,102,191,164,14,96,63,162,77,229,189,104,226,62,191,224,148,121,63,21,239,195,190,65,51,8,191,230,152,127,63,7,157,31,191,98,189,141,190,87,162,113,63,153,200,80,191,243,4,53,63,176,149,42,191,162,77,229,189,153,200,80,63,224,148,121,191,1,170,247,62,86,26,169,62,94,131,108,191,229,165,102,63,98,189,141,190,65,51,8,191,11,98,124,63,28,38,72,191,32,170,101,61,243,4,53,63,230,152,127,191,7,157,31,63,192,134,43,62,235,194,88,191,173,254,117,63,2,38,222,190,21,239,195,190,87,162,113,63,164,14,96,191,135,220,99,62,205,35,20,63,236,99,126,191,104,226,62,63,243,4,53,63,104,226,62,191,162,77,229,61,205,35,20,63,224,148,121,191,164,14,96,63,86,26,169,190,21,239,195,190,229,165,102,63,173,254,117,191,65,51,8,63,192,134,43,62,28,38,72,191,230,152,127,63,243,4,53,191,32,170,101,61,7,157,31,63,11,98,124,191,235,194,88,63,98,189,141,190,2,38,222,190,94,131,108,63,87,162,113,191,1,170,247,62,135,220,99,62,153,200,80,191,236,99,126,63,176,149,42,191,243,4,53,63,153,200,80,191,86,26,169,62,98,189,141,62,28,38,72,191,230,152,127,63,235,194,88,191,21,239,195,62,135,220,99,62,104,226,62,191,236,99,126,63,164,14,96,191,2,38,222,62,192,134,43,62,243,4,53,191,11,98,124,63,229,165,102,191,1,170,247,62,162,77,229,61,176,149,42,191,224,148,121,63,94,131,108,191,65,51,8,63,32,170,101,61,7,157,31,191,173,254,117,63,87,162,113,191,205,35,20,63,243,4,53,63,164,14,96,191,65,51,8,63,32,170,101,189,2,38,222,190,153,200,80,63,236,99,126,191,94,131,108,63,7,157,31,191,192,134,43,62,86,26,169,62,104,226,62,191,224,148,121,63,173,254,117,191,243,4,53,63,98,189,141,190,135,220,99,190,176,149,42,63,87,162,113,191,11,98,124,63,28,38,72,191,21,239,195,62,162,77,229,61,205,35,20,191,229,165,102,63,230,152,127,191,235,194,88,63,1,170,247,190,243,4,53,63,94,131,108,191,243,4,53,63,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,222,94,13,166,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,231,54,141,167,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,243,4,53,63,173,254,117,191,235,194,88,63,176,149,42,191,2,38,222,62,192,134,43,190,162,77,229,189,21,239,195,62,7,157,31,191,153,200,80,63,87,162,113,191,230,152,127,63,224,148,121,191,164,14,96,63,243,4,53,191,1,170,247,62,135,220,99,190,32,170,101,189,86,26,169,62,205,35,20,191,28,38,72,63,94,131,108,191,236,99,126,63,11,98,124,191,229,165,102,63,104,226,62,191,65,51,8,63,98,189,141,190,243,4,53,63,11,98,124,191,87,162,113,63,164,14,96,191,28,38,72,63,176,149,42,191,65,51,8,63,21,239,195,190,135,220,99,62,32,170,101,189,162,77,229,189,98,189,141,62,2,38,222,190,205,35,20,63,243,4,53,191,153,200,80,63,229,165,102,191,173,254,117,63,236,99,126,191,230,152,127,63,224,148,121,191,94,131,108,63,235,194,88,191,104,226,62,63,7,157,31,191,1,170,247,62,86,26,169,190,192,134,43,62,243,4,53,63,230,152,127,191,236,99,126,63,11,98,124,191,224,148,121,63,173,254,117,191,87,162,113,63,94,131,108,191,229,165,102,63,164,14,96,191,235,194,88,63,153,200,80,191,28,38,72,63,104,226,62,191,243,4,53,63,176,149,42,191,7,157,31,63,205,35,20,191,65,51,8,63,1,170,247,190,2,38,222,62,21,239,195,190,86,26,169,62,98,189,141,190,135,220,99,62,192,134,43,190,162,77,229,61,32,170,101,189,243,4,53,63,227,159,127,63,211,127,126,63,170,160,124,63,206,3,122,63,54,171,118,63,102,153,114,63,107,209,109,63,221,86,104,63,216,45,98,63,254,90,91,63,109,227,83,63,193,204,75,63,13,29,67,63,215,218,57,63,18,13,48,63,28,187,37,63,179,236,26,63,245,169,15,63,86,251,3,63,59,211,239,62,180,251,214,62,192,130,189,62,125,123,163,62,121,249,136,62,54,33,92,62,46,170,37,62,129,109,221,61,195,192,93,61,243,4,53,63,170,160,124,63,102,153,114,63,216,45,98,63,193,204,75,63,18,13,48,63,245,169,15,63,180,251,214,62,121,249,136,62,129,109,221,61,195,192,93,189,54,33,92,190,192,130,189,190,86,251,3,191,28,187,37,191,13,29,67,191,254,90,91,191,107,209,109,191,206,3,122,191,227,159,127,191,211,127,126,191,54,171,118,191,221,86,104,191,109,227,83,191,215,218,57,191,179,236,26,191,59,211,239,190,125,123,163,190,46,170,37,190,243,4,53,63,54,171,118,63,254,90,91,63,18,13,48,63,59,211,239,62,54,33,92,62,195,192,93,189,125,123,163,190,245,169,15,191,13,29,67,191,221,86,104,191,170,160,124,191,211,127,126,191,107,209,109,191,193,204,75,191,179,236,26,191,192,130,189,190,129,109,221,189,46,170,37,62,180,251,214,62,28,187,37,63,109,227,83,63,102,153,114,63,227,159,127,63,206,3,122,63,216,45,98,63,215,218,57,63,86,251,3,63,121,249,136,62,243,4,53,63,107,209,109,63,215,218,57,63,180,251,214,62,195,192,93,61,125,123,163,190,28,187,37,191,216,45,98,191,211,127,126,191,54,171,118,191,193,204,75,191,86,251,3,191,46,170,37,190,54,33,92,62,245,169,15,63,109,227,83,63,206,3,122,63,170,160,124,63,254,90,91,63,179,236,26,63,121,249,136,62,129,109,221,189,59,211,239,190,13,29,67,191,102,153,114,191,227,159,127,191,221,86,104,191,18,13,48,191,192,130,189,190,243,4,53,63,216,45,98,63,245,169,15,63,129,109,221,61,192,130,189,190,13,29,67,191,206,3,122,191,54,171,118,191,215,218,57,191,125,123,163,190,46,170,37,62,179,236,26,63,221,86,104,63,227,159,127,63,254,90,91,63,86,251,3,63,195,192,93,61,180,251,214,190,193,204,75,191,170,160,124,191,102,153,114,191,18,13,48,191,121,249,136,190,54,33,92,62,28,187,37,63,107,209,109,63,211,127,126,63,109,227,83,63,59,211,239,62,243,4,53,63,109,227,83,63,192,130,189,62,54,33,92,190,215,218,57,191,170,160,124,191,221,86,104,191,86,251,3,191,195,192,93,61,179,236,26,63,102,153,114,63,54,171,118,63,28,187,37,63,129,109,221,61,59,211,239,190,216,45,98,191,211,127,126,191,13,29,67,191,121,249,136,190,125,123,163,62,193,204,75,63,227,159,127,63,254,90,91,63,180,251,214,62,46,170,37,190,18,13,48,191,206,3,122,191,107,209,109,191,245,169,15,191,243,4,53,63,13,29,67,63,46,170,37,62,86,251,3,191,102,153,114,191,107,209,109,191,59,211,239,190,54,33,92,62,193,204,75,63,227,159,127,63,215,218,57,63,129,109,221,61,245,169,15,191,54,171,118,191,221,86,104,191,180,251,214,190,121,249,136,62,109,227,83,63,211,127,126,63,18,13,48,63,195,192,93,61,179,236,26,191,206,3,122,191,216,45,98,191,192,130,189,190,125,123,163,62,254,90,91,63,170,160,124,63,28,187,37,63,243,4,53,63,18,13,48,63,195,192,93,189,13,29,67,191,211,127,126,191,179,236,26,191,46,170,37,62,109,227,83,63,206,3,122,63,86,251,3,63,121,249,136,190,216,45,98,191,102,153,114,191,180,251,214,190,192,130,189,62,107,209,109,63,221,86,104,63,125,123,163,62,59,211,239,190,54,171,118,191,254,90,91,191,54,33,92,190,245,169,15,63,170,160,124,63,193,204,75,63,129,109,221,61,28,187,37,191,227,159,127,191,215,218,57,191,243,4,53,63,179,236,26,63,121,249,136,190,107,209,109,191,254,90,91,191,129,109,221,189,215,218,57,63,170,160,124,63,59,211,239,62,180,251,214,190,206,3,122,191,13,29,67,191,195,192,93,61,109,227,83,63,102,153,114,63,125,123,163,62,245,169,15,191,227,159,127,191,28,187,37,191,54,33,92,62,221,86,104,63,216,45,98,63,46,170,37,62,18,13,48,191,211,127,126,191,86,251,3,191,192,130,189,62,54,171,118,63,193,204,75,63,243,4,53,63,86,251,3,63,59,211,239,190,227,159,127,191,245,169,15,191,180,251,214,62,211,127,126,63,179,236,26,63,192,130,189,190,170,160,124,191,28,187,37,191,125,123,163,62,206,3,122,63,18,13,48,63,121,249,136,190,54,171,118,191,215,218,57,191,54,33,92,62,102,153,114,63,13,29,67,63,46,170,37,190,107,209,109,191,193,204,75,191,129,109,221,61,221,86,104,63,109,227,83,63,195,192,93,189,216,45,98,191,254,90,91,191,243,4,53,63,180,251,214,62,28,187,37,191,54,171,118,191,46,170,37,190,109,227,83,63,254,90,91,63,129,109,221,189,102,153,114,191,18,13,48,191,192,130,189,62,227,159,127,63,59,211,239,62,179,236,26,191,206,3,122,191,54,33,92,190,193,204,75,63,216,45,98,63,195,192,93,189,107,209,109,191,215,218,57,191,125,123,163,62,211,127,126,63,86,251,3,63,245,169,15,191,170,160,124,191,121,249,136,190,13,29,67,63,221,86,104,63,243,4,53,63,125,123,163,62,193,204,75,191,109,227,83,191,121,249,136,62,227,159,127,63,192,130,189,62,13,29,67,191,254,90,91,191,54,33,92,62,211,127,126,63,180,251,214,62,215,218,57,191,216,45,98,191,46,170,37,62,170,160,124,63,59,211,239,62,18,13,48,191,221,86,104,191,129,109,221,61,206,3,122,63,86,251,3,63,28,187,37,191,107,209,109,191,195,192,93,61,54,171,118,63,245,169,15,63,179,236,26,191,102,153,114,191,243,4,53,63,54,33,92,62,221,86,104,191,179,236,26,191,28,187,37,63,216,45,98,63,121,249,136,190,227,159,127,191,46,170,37,190,107,209,109,63,245,169,15,63,18,13,48,191,254,90,91,191,125,123,163,62,211,127,126,63,129,109,221,61,102,153,114,191,86,251,3,191,215,218,57,63,109,227,83,63,192,130,189,190,170,160,124,191,195,192,93,189,54,171,118,63,59,211,239,62,13,29,67,191,193,204,75,191,180,251,214,62,206,3,122,63,243,4,53,63,129,109,221,61,206,3,122,191,125,123,163,190,221,86,104,63,86,251,3,63,193,204,75,191,18,13,48,191,28,187,37,63,109,227,83,63,59,211,239,190,107,209,109,191,121,249,136,62,170,160,124,63,195,192,93,189,227,159,127,191,46,170,37,190,54,171,118,63,192,130,189,62,216,45,98,191,245,169,15,191,13,29,67,63,215,218,57,63,179,236,26,191,254,90,91,191,180,251,214,62,102,153,114,63,54,33,92,190,211,127,126,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,243,4,53,63,129,109,221,189,206,3,122,191,125,123,163,62,221,86,104,63,86,251,3,191,193,204,75,191,18,13,48,63,28,187,37,63,109,227,83,191,59,211,239,190,107,209,109,63,121,249,136,62,170,160,124,191,195,192,93,189,227,159,127,63,46,170,37,190,54,171,118,191,192,130,189,62,216,45,98,63,245,169,15,191,13,29,67,191,215,218,57,63,179,236,26,63,254,90,91,191,180,251,214,190,102,153,114,63,54,33,92,62,211,127,126,191,243,4,53,63,54,33,92,190,221,86,104,191,179,236,26,63,28,187,37,63,216,45,98,191,121,249,136,190,227,159,127,63,46,170,37,190,107,209,109,191,245,169,15,63,18,13,48,63,254,90,91,191,125,123,163,190,211,127,126,63,129,109,221,189,102,153,114,191,86,251,3,63,215,218,57,63,109,227,83,191,192,130,189,190,170,160,124,63,195,192,93,189,54,171,118,191,59,211,239,62,13,29,67,63,193,204,75,191,180,251,214,190,206,3,122,63,243,4,53,63,125,123,163,190,193,204,75,191,109,227,83,63,121,249,136,62,227,159,127,191,192,130,189,62,13,29,67,63,254,90,91,191,54,33,92,190,211,127,126,63,180,251,214,190,215,218,57,191,216,45,98,63,46,170,37,62,170,160,124,191,59,211,239,62,18,13,48,63,221,86,104,191,129,109,221,189,206,3,122,63,86,251,3,191,28,187,37,191,107,209,109,63,195,192,93,61,54,171,118,191,245,169,15,63,179,236,26,63,102,153,114,191,243,4,53,63,180,251,214,190,28,187,37,191,54,171,118,63,46,170,37,190,109,227,83,191,254,90,91,63,129,109,221,61,102,153,114,191,18,13,48,63,192,130,189,62,227,159,127,191,59,211,239,62,179,236,26,63,206,3,122,191,54,33,92,62,193,204,75,63,216,45,98,191,195,192,93,189,107,209,109,63,215,218,57,191,125,123,163,190,211,127,126,63,86,251,3,191,245,169,15,191,170,160,124,63,121,249,136,190,13,29,67,191,221,86,104,63,243,4,53,63,86,251,3,191,59,211,239,190,227,159,127,63,245,169,15,191,180,251,214,190,211,127,126,63,179,236,26,191,192,130,189,190,170,160,124,63,28,187,37,191,125,123,163,190,206,3,122,63,18,13,48,191,121,249,136,190,54,171,118,63,215,218,57,191,54,33,92,190,102,153,114,63,13,29,67,191,46,170,37,190,107,209,109,63,193,204,75,191,129,109,221,189,221,86,104,63,109,227,83,191,195,192,93,189,216,45,98,63,254,90,91,191,243,4,53,63,179,236,26,191,121,249,136,190,107,209,109,63,254,90,91,191,129,109,221,61,215,218,57,63,170,160,124,191,59,211,239,62,180,251,214,62,206,3,122,191,13,29,67,63,195,192,93,61,109,227,83,191,102,153,114,63,125,123,163,190,245,169,15,191,227,159,127,63,28,187,37,191,54,33,92,190,221,86,104,63,216,45,98,191,46,170,37,62,18,13,48,63,211,127,126,191,86,251,3,63,192,130,189,62,54,171,118,191,193,204,75,63,243,4,53,63,18,13,48,191,195,192,93,189,13,29,67,63,211,127,126,191,179,236,26,63,46,170,37,62,109,227,83,191,206,3,122,63,86,251,3,191,121,249,136,190,216,45,98,63,102,153,114,191,180,251,214,62,192,130,189,62,107,209,109,191,221,86,104,63,125,123,163,190,59,211,239,190,54,171,118,63,254,90,91,191,54,33,92,62,245,169,15,63,170,160,124,191,193,204,75,63,129,109,221,189,28,187,37,191,227,159,127,63,215,218,57,191,243,4,53,63,13,29,67,191,46,170,37,62,86,251,3,63,102,153,114,191,107,209,109,63,59,211,239,190,54,33,92,190,193,204,75,63,227,159,127,191,215,218,57,63,129,109,221,189,245,169,15,191,54,171,118,63,221,86,104,191,180,251,214,62,121,249,136,62,109,227,83,191,211,127,126,63,18,13,48,191,195,192,93,61,179,236,26,63,206,3,122,191,216,45,98,63,192,130,189,190,125,123,163,190,254,90,91,63,170,160,124,191,28,187,37,63,243,4,53,63,109,227,83,191,192,130,189,62,54,33,92,62,215,218,57,191,170,160,124,63,221,86,104,191,86,251,3,63,195,192,93,61,179,236,26,191,102,153,114,63,54,171,118,191,28,187,37,63,129,109,221,189,59,211,239,190,216,45,98,63,211,127,126,191,13,29,67,63,121,249,136,190,125,123,163,190,193,204,75,63,227,159,127,191,254,90,91,63,180,251,214,190,46,170,37,190,18,13,48,63,206,3,122,191,107,209,109,63,245,169,15,191,243,4,53,63,216,45,98,191,245,169,15,63,129,109,221,189,192,130,189,190,13,29,67,63,206,3,122,191,54,171,118,63,215,218,57,191,125,123,163,62,46,170,37,62,179,236,26,191,221,86,104,63,227,159,127,191,254,90,91,63,86,251,3,191,195,192,93,61,180,251,214,62,193,204,75,191,170,160,124,63,102,153,114,191,18,13,48,63,121,249,136,190,54,33,92,190,28,187,37,63,107,209,109,191,211,127,126,63,109,227,83,191,59,211,239,62,243,4,53,63,107,209,109,191,215,218,57,63,180,251,214,190,195,192,93,61,125,123,163,62,28,187,37,191,216,45,98,63,211,127,126,191,54,171,118,63,193,204,75,191,86,251,3,63,46,170,37,190,54,33,92,190,245,169,15,63,109,227,83,191,206,3,122,63,170,160,124,191,254,90,91,63,179,236,26,191,121,249,136,62,129,109,221,61,59,211,239,190,13,29,67,63,102,153,114,191,227,159,127,63,221,86,104,191,18,13,48,63,192,130,189,190,243,4,53,63,54,171,118,191,254,90,91,63,18,13,48,191,59,211,239,62,54,33,92,190,195,192,93,189,125,123,163,62,245,169,15,191,13,29,67,63,221,86,104,191,170,160,124,63,211,127,126,191,107,209,109,63,193,204,75,191,179,236,26,63,192,130,189,190,129,109,221,61,46,170,37,62,180,251,214,190,28,187,37,63,109,227,83,191,102,153,114,63,227,159,127,191,206,3,122,63,216,45,98,191,215,218,57,63,86,251,3,191,121,249,136,62,243,4,53,63,170,160,124,191,102,153,114,63,216,45,98,191,193,204,75,63,18,13,48,191,245,169,15,63,180,251,214,190,121,249,136,62,129,109,221,189,195,192,93,189,54,33,92,62,192,130,189,190,86,251,3,63,28,187,37,191,13,29,67,63,254,90,91,191,107,209,109,63,206,3,122,191,227,159,127,63,211,127,126,191,54,171,118,63,221,86,104,191,109,227,83,63,215,218,57,191,179,236,26,63,59,211,239,190,125,123,163,62,46,170,37,190,243,4,53,63,227,159,127,191,211,127,126,63,170,160,124,191,206,3,122,63,54,171,118,191,102,153,114,63,107,209,109,191,221,86,104,63,216,45,98,191,254,90,91,63,109,227,83,191,193,204,75,63,13,29,67,191,215,218,57,63,18,13,48,191,28,187,37,63,179,236,26,191,245,169,15,63,86,251,3,191,59,211,239,62,180,251,214,190,192,130,189,62,125,123,163,190,121,249,136,62,54,33,92,190,46,170,37,62,129,109,221,189,195,192,93,61,243,4,53,63,47,166,127,63,253,152,126,63,37,217,124,63,226,103,122,63,234,70,119,63,113,120,115,63,32,255,110,63,29,222,105,63,1,25,100,63,215,179,93,63,29,179,86,63,189,27,79,63,10,243,70,63,189,62,62,63,243,4,53,63,37,76,43,63,36,27,33,63,24,121,22,63,119,109,11,63,0,0,0,63,113,113,232,62,201,63,208,62,1,124,183,62,122,55,158,62,238,131,132,62,205,230,84,62,91,48,32,62,5,19,214,61,58,94,86,61,243,4,53,63,37,217,124,63,113,120,115,63,1,25,100,63,189,27,79,63,243,4,53,63,24,121,22,63,113,113,232,62,122,55,158,62,91,48,32,62,50,49,141,36,91,48,32,190,122,55,158,190,113,113,232,190,24,121,22,191,243,4,53,191,189,27,79,191,1,25,100,191,113,120,115,191,37,217,124,191,0,0,128,191,37,217,124,191,113,120,115,191,1,25,100,191,189,27,79,191,243,4,53,191,24,121,22,191,113,113,232,190,122,55,158,190,91,48,32,190,243,4,53,63,234,70,119,63,215,179,93,63,243,4,53,63,0,0,0,63,238,131,132,62,50,49,141,36,238,131,132,190,0,0,0,191,243,4,53,191,215,179,93,191,234,70,119,191,0,0,128,191,234,70,119,191,215,179,93,191,243,4,53,191,0,0,0,191,238,131,132,190,202,201,83,165,238,131,132,62,0,0,0,63,243,4,53,63,215,179,93,63,234,70,119,63,0,0,128,63,234,70,119,63,215,179,93,63,243,4,53,63,0,0,0,63,238,131,132,62,243,4,53,63,32,255,110,63,189,62,62,63,113,113,232,62,5,19,214,61,238,131,132,190,24,121,22,191,29,179,86,191,226,103,122,191,37,217,124,191,215,179,93,191,36,27,33,191,122,55,158,190,58,94,86,61,201,63,208,62,243,4,53,63,29,222,105,63,47,166,127,63,113,120,115,63,10,243,70,63,0,0,0,63,91,48,32,62,205,230,84,190,119,109,11,191,189,27,79,191,234,70,119,191,253,152,126,191,1,25,100,191,37,76,43,191,1,124,183,190,243,4,53,63,1,25,100,63,24,121,22,63,91,48,32,62,122,55,158,190,243,4,53,191,113,120,115,191,37,217,124,191,189,27,79,191,113,113,232,190,202,201,83,165,113,113,232,62,189,27,79,63,37,217,124,63,113,120,115,63,243,4,53,63,122,55,158,62,91,48,32,190,24,121,22,191,1,25,100,191,0,0,128,191,1,25,100,191,24,121,22,191,91,48,32,190,122,55,158,62,243,4,53,63,113,120,115,63,37,217,124,63,189,27,79,63,113,113,232,62,243,4,53,63,29,179,86,63,201,63,208,62,91,48,32,190,37,76,43,191,234,70,119,191,113,120,115,191,36,27,33,191,5,19,214,189,113,113,232,62,215,179,93,63,47,166,127,63,189,27,79,63,1,124,183,62,205,230,84,190,243,4,53,191,226,103,122,191,32,255,110,191,24,121,22,191,58,94,86,189,0,0,0,63,1,25,100,63,253,152,126,63,10,243,70,63,122,55,158,62,238,131,132,190,189,62,62,191,37,217,124,191,29,222,105,191,119,109,11,191,243,4,53,63,10,243,70,63,205,230,84,62,113,113,232,190,29,222,105,191,234,70,119,191,24,121,22,191,58,94,86,61,37,76,43,63,37,217,124,63,215,179,93,63,1,124,183,62,122,55,158,190,29,179,86,191,253,152,126,191,243,4,53,191,5,19,214,189,119,109,11,63,113,120,115,63,32,255,110,63,0,0,0,63,91,48,32,190,189,62,62,191,47,166,127,191,189,27,79,191,238,131,132,190,201,63,208,62,1,25,100,63,226,103,122,63,36,27,33,63,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,8,72,141,166,243,4,53,191,0,0,128,191,243,4,53,191,243,4,53,63,36,27,33,63,205,230,84,190,1,25,100,191,29,222,105,191,238,131,132,190,24,121,22,63,47,166,127,63,37,76,43,63,91,48,32,190,215,179,93,191,32,255,110,191,122,55,158,190,119,109,11,63,253,152,126,63,243,4,53,63,5,19,214,189,29,179,86,191,113,120,115,191,1,124,183,190,0,0,0,63,37,217,124,63,189,62,62,63,58,94,86,189,189,27,79,191,234,70,119,191,201,63,208,190,113,113,232,62,226,103,122,63,10,243,70,63,243,4,53,63,119,109,11,63,201,63,208,190,37,217,124,191,37,76,43,191,238,131,132,62,113,120,115,63,10,243,70,63,5,19,214,189,1,25,100,191,215,179,93,191,58,94,86,189,189,27,79,63,32,255,110,63,205,230,84,62,243,4,53,191,226,103,122,191,1,124,183,190,24,121,22,63,47,166,127,63,0,0,0,63,113,113,232,190,253,152,126,191,36,27,33,191,122,55,158,62,234,70,119,63,189,62,62,63,91,48,32,190,29,222,105,191,29,179,86,191,243,4,53,63,113,113,232,62,24,121,22,191,37,217,124,191,122,55,158,190,243,4,53,63,113,120,115,63,91,48,32,62,189,27,79,191,1,25,100,191,23,22,247,165,1,25,100,63,189,27,79,63,91,48,32,190,113,120,115,191,243,4,53,191,122,55,158,62,37,217,124,63,24,121,22,63,113,113,232,190,0,0,128,191,113,113,232,190,24,121,22,63,37,217,124,63,122,55,158,62,243,4,53,191,113,120,115,191,91,48,32,190,189,27,79,63,1,25,100,63,243,4,53,63,1,124,183,62,189,62,62,191,1,25,100,191,5,19,214,61,234,70,119,63,24,121,22,63,119,109,11,191,226,103,122,191,91,48,32,190,215,179,93,63,10,243,70,63,122,55,158,190,47,166,127,191,201,63,208,190,243,4,53,63,29,222,105,63,58,94,86,189,113,120,115,191,36,27,33,191,0,0,0,63,37,217,124,63,205,230,84,62,29,179,86,191,189,27,79,191,238,131,132,62,253,152,126,63,113,113,232,62,37,76,43,191,32,255,110,191,243,4,53,63,238,131,132,62,215,179,93,191,243,4,53,191,0,0,0,63,234,70,119,63,126,125,176,37,234,70,119,191,0,0,0,191,243,4,53,63,215,179,93,63,238,131,132,190,0,0,128,191,238,131,132,190,215,179,93,63,243,4,53,63,0,0,0,191,234,70,119,191,195,67,119,38,234,70,119,63,0,0,0,63,243,4,53,191,215,179,93,191,238,131,132,62,0,0,128,63,238,131,132,62,215,179,93,191,243,4,53,191,0,0,0,63,234,70,119,63,243,4,53,63,91,48,32,62,113,120,115,191,113,113,232,190,189,27,79,63,243,4,53,63,24,121,22,191,1,25,100,191,122,55,158,62,37,217,124,63,88,215,30,38,37,217,124,191,122,55,158,190,1,25,100,63,24,121,22,63,243,4,53,191,189,27,79,191,113,113,232,62,113,120,115,63,91,48,32,190,0,0,128,191,91,48,32,190,113,120,115,63,113,113,232,62,189,27,79,191,243,4,53,191,24,121,22,63,1,25,100,63,122,55,158,190,37,217,124,191,243,4,53,63,58,94,86,61,253,152,126,191,91,48,32,190,226,103,122,63,238,131,132,62,113,120,115,191,1,124,183,190,29,222,105,63,113,113,232,62,215,179,93,191,119,109,11,191,189,27,79,63,36,27,33,63,189,62,62,191,243,4,53,191,37,76,43,63,10,243,70,63,24,121,22,191,29,179,86,191,0,0,0,63,1,25,100,63,201,63,208,190,32,255,110,191,122,55,158,62,234,70,119,63,205,230,84,190,37,217,124,191,5,19,214,61,47,166,127,63,243,4,53,63,58,94,86,189,253,152,126,191,91,48,32,62,226,103,122,63,238,131,132,190,113,120,115,191,1,124,183,62,29,222,105,63,113,113,232,190,215,179,93,191,119,109,11,63,189,27,79,63,36,27,33,191,189,62,62,191,243,4,53,63,37,76,43,63,10,243,70,191,24,121,22,191,29,179,86,63,0,0,0,63,1,25,100,191,201,63,208,190,32,255,110,63,122,55,158,62,234,70,119,191,205,230,84,190,37,217,124,63,5,19,214,61,47,166,127,191,243,4,53,63,91,48,32,190,113,120,115,191,113,113,232,62,189,27,79,63,243,4,53,191,24,121,22,191,1,25,100,63,122,55,158,62,37,217,124,191,46,238,158,38,37,217,124,63,122,55,158,190,1,25,100,191,24,121,22,63,243,4,53,63,189,27,79,191,113,113,232,190,113,120,115,63,91,48,32,62,0,0,128,191,91,48,32,62,113,120,115,63,113,113,232,190,189,27,79,191,243,4,53,63,24,121,22,63,1,25,100,191,122,55,158,190,37,217,124,63,243,4,53,63,238,131,132,190,215,179,93,191,243,4,53,63,0,0,0,63,234,70,119,191,122,58,194,38,234,70,119,63,0,0,0,191,243,4,53,191,215,179,93,63,238,131,132,62,0,0,128,191,238,131,132,62,215,179,93,63,243,4,53,191,0,0,0,191,234,70,119,63,222,94,13,166,234,70,119,191,0,0,0,63,243,4,53,63,215,179,93,191,238,131,132,190,0,0,128,63,238,131,132,190,215,179,93,191,243,4,53,63,0,0,0,63,234,70,119,191,243,4,53,63,1,124,183,190,189,62,62,191,1,25,100,63,5,19,214,61,234,70,119,191,24,121,22,63,119,109,11,63,226,103,122,191,91,48,32,62,215,179,93,63,10,243,70,191,122,55,158,190,47,166,127,63,201,63,208,190,243,4,53,191,29,222,105,63,58,94,86,61,113,120,115,191,36,27,33,63,0,0,0,63,37,217,124,191,205,230,84,62,29,179,86,63,189,27,79,191,238,131,132,190,253,152,126,63,113,113,232,190,37,76,43,191,32,255,110,63,243,4,53,63,113,113,232,190,24,121,22,191,37,217,124,63,122,55,158,190,243,4,53,191,113,120,115,63,91,48,32,190,189,27,79,191,1,25,100,63,8,72,141,166,1,25,100,191,189,27,79,63,91,48,32,62,113,120,115,191,243,4,53,63,122,55,158,62,37,217,124,191,24,121,22,63,113,113,232,62,0,0,128,191,113,113,232,62,24,121,22,63,37,217,124,191,122,55,158,62,243,4,53,63,113,120,115,191,91,48,32,62,189,27,79,63,1,25,100,191,243,4,53,63,119,109,11,191,201,63,208,190,37,217,124,63,37,76,43,191,238,131,132,190,113,120,115,63,10,243,70,191,5,19,214,189,1,25,100,63,215,179,93,191,58,94,86,61,189,27,79,63,32,255,110,191,205,230,84,62,243,4,53,63,226,103,122,191,1,124,183,62,24,121,22,63,47,166,127,191,0,0,0,63,113,113,232,62,253,152,126,191,36,27,33,63,122,55,158,62,234,70,119,191,189,62,62,63,91,48,32,62,29,222,105,191,29,179,86,63,243,4,53,63,36,27,33,191,205,230,84,190,1,25,100,63,29,222,105,191,238,131,132,62,24,121,22,63,47,166,127,191,37,76,43,63,91,48,32,62,215,179,93,191,32,255,110,63,122,55,158,190,119,109,11,191,253,152,126,63,243,4,53,191,5,19,214,189,29,179,86,63,113,120,115,191,1,124,183,62,0,0,0,63,37,217,124,191,189,62,62,63,58,94,86,61,189,27,79,191,234,70,119,63,201,63,208,190,113,113,232,190,226,103,122,63,10,243,70,191,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,250,9,150,167,243,4,53,63,0,0,128,191,243,4,53,63,243,4,53,63,10,243,70,191,205,230,84,62,113,113,232,62,29,222,105,191,234,70,119,63,24,121,22,191,58,94,86,189,37,76,43,63,37,217,124,191,215,179,93,63,1,124,183,190,122,55,158,190,29,179,86,63,253,152,126,191,243,4,53,63,5,19,214,189,119,109,11,191,113,120,115,63,32,255,110,191,0,0,0,63,91,48,32,62,189,62,62,191,47,166,127,63,189,27,79,191,238,131,132,62,201,63,208,62,1,25,100,191,226,103,122,63,36,27,33,191,243,4,53,63,29,179,86,191,201,63,208,62,91,48,32,62,37,76,43,191,234,70,119,63,113,120,115,191,36,27,33,63,5,19,214,189,113,113,232,190,215,179,93,63,47,166,127,191,189,27,79,63,1,124,183,190,205,230,84,190,243,4,53,63,226,103,122,191,32,255,110,63,24,121,22,191,58,94,86,61,0,0,0,63,1,25,100,191,253,152,126,63,10,243,70,191,122,55,158,62,238,131,132,62,189,62,62,191,37,217,124,63,29,222,105,191,119,109,11,63,243,4,53,63,1,25,100,191,24,121,22,63,91,48,32,190,122,55,158,190,243,4,53,63,113,120,115,191,37,217,124,63,189,27,79,191,113,113,232,62,119,247,83,166,113,113,232,190,189,27,79,63,37,217,124,191,113,120,115,63,243,4,53,191,122,55,158,62,91,48,32,62,24,121,22,191,1,25,100,63,0,0,128,191,1,25,100,63,24,121,22,191,91,48,32,62,122,55,158,62,243,4,53,191,113,120,115,63,37,217,124,191,189,27,79,63,113,113,232,190,243,4,53,63,32,255,110,191,189,62,62,63,113,113,232,190,5,19,214,61,238,131,132,62,24,121,22,191,29,179,86,63,226,103,122,191,37,217,124,63,215,179,93,191,36,27,33,63,122,55,158,190,58,94,86,189,201,63,208,62,243,4,53,191,29,222,105,63,47,166,127,191,113,120,115,63,10,243,70,191,0,0,0,63,91,48,32,190,205,230,84,190,119,109,11,63,189,27,79,191,234,70,119,63,253,152,126,191,1,25,100,63,37,76,43,191,1,124,183,62,243,4,53,63,234,70,119,191,215,179,93,63,243,4,53,191,0,0,0,63,238,131,132,190,233,136,48,167,238,131,132,62,0,0,0,191,243,4,53,63,215,179,93,191,234,70,119,63,0,0,128,191,234,70,119,63,215,179,93,191,243,4,53,63,0,0,0,191,238,131,132,62,175,102,4,40,238,131,132,190,0,0,0,63,243,4,53,191,215,179,93,63,234,70,119,191,0,0,128,63,234,70,119,191,215,179,93,63,243,4,53,191,0,0,0,63,238,131,132,190,243,4,53,63,37,217,124,191,113,120,115,63,1,25,100,191,189,27,79,63,243,4,53,191,24,121,22,63,113,113,232,190,122,55,158,62,91,48,32,190,53,213,83,167,91,48,32,62,122,55,158,190,113,113,232,62,24,121,22,191,243,4,53,63,189,27,79,191,1,25,100,63,113,120,115,191,37,217,124,63,0,0,128,191,37,217,124,63,113,120,115,191,1,25,100,63,189,27,79,191,243,4,53,63,24,121,22,191,113,113,232,62,122,55,158,190,91,48,32,62,243,4,53,63,47,166,127,191,253,152,126,63,37,217,124,191,226,103,122,63,234,70,119,191,113,120,115,63,32,255,110,191,29,222,105,63,1,25,100,191,215,179,93,63,29,179,86,191,189,27,79,63,10,243,70,191,189,62,62,63,243,4,53,191,37,76,43,63,36,27,33,191,24,121,22,63,119,109,11,191,0,0,0,63,113,113,232,190,201,63,208,62,1,124,183,190,122,55,158,62,238,131,132,190,205,230,84,62,91,48,32,190,5,19,214,61,58,94,86,189,243,4,53,63,227,171,127,63,194,175,126,63,67,12,125,63,121,194,122,63,231,211,119,63,120,66,116,63,134,16,112,63,210,64,107,63,133,214,101,63,46,213,95,63,192,64,89,63,142,29,82,63,71,112,74,63,249,61,66,63,5,140,57,63,35,96,48,63,89,192,38,63,250,178,28,63,162,62,18,63,47,106,7,63,128,121,248,62,88,123,225,62,3,233,201,62,254,209,177,62,32,70,153,62,135,85,128,62,51,33,78,62,226,15,27,62,86,49,207,61,129,117,79,61,243,4,53,63,67,12,125,63,120,66,116,63,133,214,101,63,142,29,82,63,5,140,57,63,250,178,28,63,128,121,248,62,254,209,177,62,51,33,78,62,129,117,79,61,86,49,207,189,135,85,128,190,3,233,201,190,47,106,7,191,89,192,38,191,249,61,66,191,192,64,89,191,210,64,107,191,231,211,119,191,194,175,126,191,227,171,127,191,121,194,122,191,134,16,112,191,46,213,95,191,71,112,74,191,35,96,48,191,162,62,18,191,88,123,225,190,32,70,153,190,226,15,27,190,243,4,53,63,231,211,119,63,46,213,95,63,5,140,57,63,47,106,7,63,32,70,153,62,129,117,79,61,51,33,78,190,88,123,225,190,89,192,38,191,142,29,82,191,134,16,112,191,194,175,126,191,67,12,125,191,210,64,107,191,71,112,74,191,250,178,28,191,3,233,201,190,226,15,27,190,86,49,207,61,254,209,177,62,162,62,18,63,249,61,66,63,133,214,101,63,121,194,122,63,227,171,127,63,120,66,116,63,192,64,89,63,35,96,48,63,128,121,248,62,135,85,128,62,243,4,53,63,134,16,112,63,249,61,66,63,128,121,248,62,226,15,27,62,51,33,78,190,47,106,7,191,71,112,74,191,120,66,116,191,227,171,127,191,210,64,107,191,5,140,57,191,88,123,225,190,86,49,207,189,135,85,128,62,162,62,18,63,142,29,82,63,231,211,119,63,194,175,126,63,133,214,101,63,35,96,48,63,3,233,201,62,129,117,79,61,32,70,153,190,250,178,28,191,192,64,89,191,121,194,122,191,67,12,125,191,46,213,95,191,89,192,38,191,254,209,177,190,243,4,53,63,133,214,101,63,250,178,28,63,51,33,78,62,135,85,128,190,89,192,38,191,210,64,107,191,227,171,127,191,46,213,95,191,162,62,18,191,226,15,27,190,32,70,153,62,35,96,48,63,134,16,112,63,194,175,126,63,192,64,89,63,47,106,7,63,86,49,207,61,254,209,177,190,5,140,57,191,120,66,116,191,67,12,125,191,142,29,82,191,128,121,248,190,129,117,79,189,3,233,201,62,249,61,66,63,231,211,119,63,121,194,122,63,71,112,74,63,88,123,225,62,243,4,53,63,192,64,89,63,88,123,225,62,86,49,207,189,250,178,28,191,134,16,112,191,121,194,122,191,5,140,57,191,135,85,128,190,32,70,153,62,249,61,66,63,67,12,125,63,210,64,107,63,162,62,18,63,129,117,79,61,128,121,248,190,46,213,95,191,227,171,127,191,142,29,82,191,3,233,201,190,226,15,27,62,89,192,38,63,120,66,116,63,231,211,119,63,35,96,48,63,51,33,78,62,254,209,177,190,71,112,74,191,194,175,126,191,133,214,101,191,47,106,7,191,243,4,53,63,71,112,74,63,135,85,128,62,3,233,201,190,46,213,95,191,67,12,125,191,35,96,48,191,86,49,207,189,47,106,7,63,134,16,112,63,120,66,116,63,162,62,18,63,129,117,79,189,89,192,38,191,121,194,122,191,133,214,101,191,88,123,225,190,51,33,78,62,249,61,66,63,227,171,127,63,142,29,82,63,32,70,153,62,254,209,177,190,192,64,89,191,194,175,126,191,5,140,57,191,226,15,27,190,128,121,248,62,210,64,107,63,231,211,119,63,250,178,28,63,243,4,53,63,5,140,57,63,129,117,79,61,89,192,38,191,194,175,126,191,71,112,74,191,226,15,27,190,162,62,18,63,121,194,122,63,192,64,89,63,135,85,128,62,128,121,248,190,120,66,116,191,133,214,101,191,254,209,177,190,3,233,201,62,210,64,107,63,134,16,112,63,88,123,225,62,32,70,153,190,46,213,95,191,231,211,119,191,47,106,7,191,51,33,78,62,142,29,82,63,67,12,125,63,250,178,28,63,86,49,207,189,249,61,66,191,227,171,127,191,35,96,48,191,243,4,53,63,89,192,38,63,226,15,27,190,192,64,89,191,120,66,116,191,3,233,201,190,88,123,225,62,231,211,119,63,142,29,82,63,86,49,207,61,35,96,48,191,227,171,127,191,250,178,28,191,51,33,78,62,46,213,95,63,134,16,112,63,254,209,177,62,128,121,248,190,121,194,122,191,71,112,74,191,129,117,79,189,5,140,57,63,194,175,126,63,162,62,18,63,135,85,128,190,133,214,101,191,210,64,107,191,32,70,153,190,47,106,7,63,67,12,125,63,249,61,66,63,243,4,53,63,162,62,18,63,254,209,177,190,231,211,119,191,249,61,66,191,86,49,207,61,46,213,95,63,133,214,101,63,226,15,27,62,5,140,57,191,121,194,122,191,3,233,201,190,47,106,7,63,227,171,127,63,250,178,28,63,32,70,153,190,120,66,116,191,71,112,74,191,129,117,79,61,192,64,89,63,210,64,107,63,51,33,78,62,35,96,48,191,67,12,125,191,88,123,225,190,128,121,248,62,194,175,126,63,89,192,38,63,135,85,128,190,134,16,112,191,142,29,82,191,243,4,53,63,128,121,248,62,47,106,7,191,227,171,127,191,88,123,225,190,162,62,18,63,194,175,126,63,3,233,201,62,250,178,28,191,67,12,125,191,254,209,177,190,89,192,38,63,121,194,122,63,32,70,153,62,35,96,48,191,231,211,119,191,135,85,128,190,5,140,57,63,120,66,116,63,51,33,78,62,249,61,66,191,134,16,112,191,226,15,27,190,71,112,74,63,210,64,107,63,86,49,207,61,142,29,82,191,133,214,101,191,129,117,79,189,192,64,89,63,46,213,95,63,243,4,53,63,3,233,201,62,35,96,48,191,134,16,112,191,129,117,79,189,133,214,101,63,249,61,66,63,32,70,153,190,194,175,126,191,128,121,248,190,250,178,28,63,231,211,119,63,226,15,27,62,192,64,89,191,142,29,82,191,51,33,78,62,121,194,122,63,162,62,18,63,47,106,7,191,67,12,125,191,135,85,128,190,71,112,74,63,46,213,95,63,86,49,207,189,120,66,116,191,89,192,38,191,88,123,225,62,227,171,127,63,254,209,177,62,5,140,57,191,210,64,107,191,243,4,53,63,32,70,153,62,142,29,82,191,71,112,74,191,254,209,177,62,227,171,127,63,135,85,128,62,192,64,89,191,249,61,66,191,3,233,201,62,194,175,126,63,51,33,78,62,46,213,95,191,5,140,57,191,88,123,225,62,67,12,125,63,226,15,27,62,133,214,101,191,35,96,48,191,128,121,248,62,121,194,122,63,86,49,207,61,210,64,107,191,89,192,38,191,47,106,7,63,231,211,119,63,129,117,79,61,134,16,112,191,250,178,28,191,162,62,18,63,120,66,116,63,243,4,53,63,51,33,78,62,210,64,107,191,162,62,18,191,35,96,48,63,192,64,89,63,254,209,177,190,67,12,125,191,129,117,79,189,231,211,119,63,88,123,225,62,71,112,74,191,249,61,66,191,128,121,248,62,120,66,116,63,86,49,207,189,194,175,126,191,32,70,153,190,46,213,95,63,89,192,38,63,250,178,28,191,133,214,101,191,135,85,128,62,227,171,127,63,226,15,27,62,134,16,112,191,47,106,7,191,5,140,57,63,142,29,82,63,3,233,201,190,121,194,122,191,243,4,53,63,86,49,207,61,121,194,122,191,32,70,153,190,210,64,107,63,128,121,248,62,142,29,82,191,89,192,38,191,35,96,48,63,71,112,74,63,47,106,7,191,133,214,101,191,254,209,177,62,231,211,119,63,226,15,27,190,227,171,127,191,129,117,79,189,67,12,125,63,135,85,128,62,134,16,112,191,88,123,225,190,192,64,89,63,250,178,28,63,5,140,57,191,249,61,66,191,162,62,18,63,46,213,95,63,3,233,201,190,120,66,116,191,51,33,78,62,194,175,126,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,243,4,53,63,86,49,207,189,121,194,122,191,32,70,153,62,210,64,107,63,128,121,248,190,142,29,82,191,89,192,38,63,35,96,48,63,71,112,74,191,47,106,7,191,133,214,101,63,254,209,177,62,231,211,119,191,226,15,27,190,227,171,127,63,129,117,79,189,67,12,125,191,135,85,128,62,134,16,112,63,88,123,225,190,192,64,89,191,250,178,28,63,5,140,57,63,249,61,66,191,162,62,18,191,46,213,95,63,3,233,201,62,120,66,116,191,51,33,78,190,194,175,126,63,243,4,53,63,51,33,78,190,210,64,107,191,162,62,18,63,35,96,48,63,192,64,89,191,254,209,177,190,67,12,125,63,129,117,79,189,231,211,119,191,88,123,225,62,71,112,74,63,249,61,66,191,128,121,248,190,120,66,116,63,86,49,207,61,194,175,126,191,32,70,153,62,46,213,95,63,89,192,38,191,250,178,28,191,133,214,101,63,135,85,128,62,227,171,127,191,226,15,27,62,134,16,112,63,47,106,7,191,5,140,57,191,142,29,82,63,3,233,201,62,121,194,122,191,243,4,53,63,32,70,153,190,142,29,82,191,71,112,74,63,254,209,177,62,227,171,127,191,135,85,128,62,192,64,89,63,249,61,66,191,3,233,201,190,194,175,126,63,51,33,78,190,46,213,95,191,5,140,57,63,88,123,225,62,67,12,125,191,226,15,27,62,133,214,101,63,35,96,48,191,128,121,248,190,121,194,122,63,86,49,207,189,210,64,107,191,89,192,38,63,47,106,7,63,231,211,119,191,129,117,79,61,134,16,112,63,250,178,28,191,162,62,18,191,120,66,116,63,243,4,53,63,3,233,201,190,35,96,48,191,134,16,112,63,129,117,79,189,133,214,101,191,249,61,66,63,32,70,153,62,194,175,126,191,128,121,248,62,250,178,28,63,231,211,119,191,226,15,27,62,192,64,89,63,142,29,82,191,51,33,78,190,121,194,122,63,162,62,18,191,47,106,7,191,67,12,125,63,135,85,128,190,71,112,74,191,46,213,95,63,86,49,207,61,120,66,116,191,89,192,38,63,88,123,225,62,227,171,127,191,254,209,177,62,5,140,57,63,210,64,107,191,243,4,53,63,128,121,248,190,47,106,7,191,227,171,127,63,88,123,225,190,162,62,18,191,194,175,126,63,3,233,201,190,250,178,28,191,67,12,125,63,254,209,177,190,89,192,38,191,121,194,122,63,32,70,153,190,35,96,48,191,231,211,119,63,135,85,128,190,5,140,57,191,120,66,116,63,51,33,78,190,249,61,66,191,134,16,112,63,226,15,27,190,71,112,74,191,210,64,107,63,86,49,207,189,142,29,82,191,133,214,101,63,129,117,79,189,192,64,89,191,46,213,95,63,243,4,53,63,162,62,18,191,254,209,177,190,231,211,119,63,249,61,66,191,86,49,207,189,46,213,95,63,133,214,101,191,226,15,27,62,5,140,57,63,121,194,122,191,3,233,201,62,47,106,7,63,227,171,127,191,250,178,28,63,32,70,153,62,120,66,116,191,71,112,74,63,129,117,79,61,192,64,89,191,210,64,107,63,51,33,78,190,35,96,48,191,67,12,125,63,88,123,225,190,128,121,248,190,194,175,126,63,89,192,38,191,135,85,128,190,134,16,112,63,142,29,82,191,243,4,53,63,89,192,38,191,226,15,27,190,192,64,89,63,120,66,116,191,3,233,201,62,88,123,225,62,231,211,119,191,142,29,82,63,86,49,207,189,35,96,48,191,227,171,127,63,250,178,28,191,51,33,78,190,46,213,95,63,134,16,112,191,254,209,177,62,128,121,248,62,121,194,122,191,71,112,74,63,129,117,79,189,5,140,57,191,194,175,126,63,162,62,18,191,135,85,128,190,133,214,101,63,210,64,107,191,32,70,153,62,47,106,7,63,67,12,125,191,249,61,66,63,243,4,53,63,5,140,57,191,129,117,79,61,89,192,38,63,194,175,126,191,71,112,74,63,226,15,27,190,162,62,18,191,121,194,122,63,192,64,89,191,135,85,128,62,128,121,248,62,120,66,116,191,133,214,101,63,254,209,177,190,3,233,201,190,210,64,107,63,134,16,112,191,88,123,225,62,32,70,153,62,46,213,95,191,231,211,119,63,47,106,7,191,51,33,78,190,142,29,82,63,67,12,125,191,250,178,28,63,86,49,207,61,249,61,66,191,227,171,127,63,35,96,48,191,243,4,53,63,71,112,74,191,135,85,128,62,3,233,201,62,46,213,95,191,67,12,125,63,35,96,48,191,86,49,207,61,47,106,7,63,134,16,112,191,120,66,116,63,162,62,18,191,129,117,79,189,89,192,38,63,121,194,122,191,133,214,101,63,88,123,225,190,51,33,78,190,249,61,66,63,227,171,127,191,142,29,82,63,32,70,153,190,254,209,177,190,192,64,89,63,194,175,126,191,5,140,57,63,226,15,27,190,128,121,248,190,210,64,107,63,231,211,119,191,250,178,28,63,243,4,53,63,192,64,89,191,88,123,225,62,86,49,207,61,250,178,28,191,134,16,112,63,121,194,122,191,5,140,57,63,135,85,128,190,32,70,153,190,249,61,66,63,67,12,125,191,210,64,107,63,162,62,18,191,129,117,79,61,128,121,248,62,46,213,95,191,227,171,127,63,142,29,82,191,3,233,201,62,226,15,27,62,89,192,38,191,120,66,116,63,231,211,119,191,35,96,48,63,51,33,78,190,254,209,177,190,71,112,74,63,194,175,126,191,133,214,101,63,47,106,7,191,243,4,53,63,133,214,101,191,250,178,28,63,51,33,78,190,135,85,128,190,89,192,38,63,210,64,107,191,227,171,127,63,46,213,95,191,162,62,18,63,226,15,27,190,32,70,153,190,35,96,48,63,134,16,112,191,194,175,126,63,192,64,89,191,47,106,7,63,86,49,207,189,254,209,177,190,5,140,57,63,120,66,116,191,67,12,125,63,142,29,82,191,128,121,248,62,129,117,79,189,3,233,201,190,249,61,66,63,231,211,119,191,121,194,122,63,71,112,74,191,88,123,225,62,243,4,53,63,134,16,112,191,249,61,66,63,128,121,248,190,226,15,27,62,51,33,78,62,47,106,7,191,71,112,74,63,120,66,116,191,227,171,127,63,210,64,107,191,5,140,57,63,88,123,225,190,86,49,207,61,135,85,128,62,162,62,18,191,142,29,82,63,231,211,119,191,194,175,126,63,133,214,101,191,35,96,48,63,3,233,201,190,129,117,79,61,32,70,153,62,250,178,28,191,192,64,89,63,121,194,122,191,67,12,125,63,46,213,95,191,89,192,38,63,254,209,177,190,243,4,53,63,231,211,119,191,46,213,95,63,5,140,57,191,47,106,7,63,32,70,153,190,129,117,79,61,51,33,78,62,88,123,225,190,89,192,38,63,142,29,82,191,134,16,112,63,194,175,126,191,67,12,125,63,210,64,107,191,71,112,74,63,250,178,28,191,3,233,201,62,226,15,27,190,86,49,207,189,254,209,177,62,162,62,18,191,249,61,66,63,133,214,101,191,121,194,122,63,227,171,127,191,120,66,116,63,192,64,89,191,35,96,48,63,128,121,248,190,135,85,128,62,243,4,53,63,67,12,125,191,120,66,116,63,133,214,101,191,142,29,82,63,5,140,57,191,250,178,28,63,128,121,248,190,254,209,177,62,51,33,78,190,129,117,79,61,86,49,207,61,135,85,128,190,3,233,201,62,47,106,7,191,89,192,38,63,249,61,66,191,192,64,89,63,210,64,107,191,231,211,119,63,194,175,126,191,227,171,127,63,121,194,122,191,134,16,112,63,46,213,95,191,71,112,74,63,35,96,48,191,162,62,18,63,88,123,225,190,32,70,153,62,226,15,27,190,243,4,53,63,227,171,127,191,194,175,126,63,67,12,125,191,121,194,122,63,231,211,119,191,120,66,116,63,134,16,112,191,210,64,107,63,133,214,101,191,46,213,95,63,192,64,89,191,142,29,82,63,71,112,74,191,249,61,66,63,5,140,57,191,35,96,48,63,89,192,38,191,250,178,28,63,162,62,18,191,47,106,7,63,128,121,248,190,88,123,225,62,3,233,201,190,254,209,177,62,32,70,153,190,135,85,128,62,51,33,78,190,226,15,27,62,86,49,207,189,129,117,79,61,243,4,53,63,15,177,127,63,109,196,126,63,172,58,125,63,190,20,123,63,248,83,120,63,11,250,116,63,8,9,113,63,94,131,108,63,216,107,103,63,152,197,97,63,26,148,91,63,49,219,84,63,2,159,77,63,3,228,69,63,249,174,61,63,243,4,53,63,74,235,43,63,153,103,34,63,192,127,24,63,218,57,14,63,61,156,3,63,234,90,241,62,128,232,218,62,21,239,195,62,212,124,172,62,49,160,148,62,204,207,120,62,194,197,71,62,131,64,22,62,54,189,200,61,48,251,72,61,243,4,53,63,172,58,125,63,11,250,116,63,216,107,103,63,49,219,84,63,249,174,61,63,153,103,34,63,61,156,3,63,21,239,195,62,204,207,120,62,54,189,200,61,48,251,72,189,194,197,71,190,212,124,172,190,234,90,241,190,192,127,24,191,243,4,53,191,2,159,77,191,152,197,97,191,8,9,113,191,190,20,123,191,15,177,127,191,109,196,126,191,248,83,120,191,94,131,108,191,26,148,91,191,3,228,69,191,74,235,43,191,218,57,14,191,128,232,218,190,49,160,148,190,131,64,22,190,243,4,53,63,248,83,120,63,152,197,97,63,249,174,61,63,218,57,14,63,212,124,172,62,54,189,200,61,131,64,22,190,21,239,195,190,192,127,24,191,3,228,69,191,216,107,103,191,190,20,123,191,15,177,127,191,11,250,116,191,26,148,91,191,243,4,53,191,61,156,3,191,49,160,148,190,48,251,72,189,194,197,71,62,128,232,218,62,153,103,34,63,2,159,77,63,94,131,108,63,172,58,125,63,109,196,126,63,8,9,113,63,49,219,84,63,74,235,43,63,234,90,241,62,204,207,120,62,243,4,53,63,8,9,113,63,3,228,69,63,61,156,3,63,194,197,71,62,131,64,22,190,234,90,241,190,249,174,61,191,94,131,108,191,15,177,127,191,11,250,116,191,2,159,77,191,218,57,14,191,204,207,120,190,54,189,200,61,128,232,218,62,243,4,53,63,216,107,103,63,109,196,126,63,248,83,120,63,49,219,84,63,192,127,24,63,49,160,148,62,48,251,72,189,21,239,195,190,74,235,43,191,152,197,97,191,172,58,125,191,190,20,123,191,26,148,91,191,153,103,34,191,212,124,172,190,243,4,53,63,216,107,103,63,153,103,34,63,204,207,120,62,194,197,71,190,192,127,24,191,152,197,97,191,15,177,127,191,94,131,108,191,74,235,43,191,49,160,148,190,131,64,22,62,218,57,14,63,26,148,91,63,109,196,126,63,8,9,113,63,243,4,53,63,212,124,172,62,54,189,200,189,61,156,3,191,49,219,84,191,172,58,125,191,11,250,116,191,249,174,61,191,21,239,195,190,48,251,72,61,234,90,241,62,2,159,77,63,190,20,123,63,248,83,120,63,3,228,69,63,128,232,218,62,243,4,53,63,26,148,91,63,234,90,241,62,48,251,72,189,218,57,14,191,216,107,103,191,109,196,126,191,2,159,77,191,21,239,195,190,131,64,22,62,153,103,34,63,8,9,113,63,190,20,123,63,249,174,61,63,49,160,148,62,204,207,120,190,243,4,53,191,248,83,120,191,11,250,116,191,74,235,43,191,194,197,71,190,212,124,172,62,3,228,69,63,172,58,125,63,94,131,108,63,192,127,24,63,54,189,200,61,128,232,218,190,49,219,84,191,15,177,127,191,152,197,97,191,61,156,3,191,243,4,53,63,2,159,77,63,49,160,148,62,212,124,172,190,49,219,84,191,15,177,127,191,3,228,69,191,204,207,120,190,21,239,195,62,26,148,91,63,109,196,126,63,249,174,61,63,194,197,71,62,128,232,218,190,152,197,97,191,172,58,125,191,243,4,53,191,131,64,22,190,234,90,241,62,216,107,103,63,190,20,123,63,74,235,43,63,54,189,200,61,61,156,3,191,94,131,108,191,248,83,120,191,153,103,34,191,48,251,72,189,218,57,14,63,8,9,113,63,11,250,116,63,192,127,24,63,243,4,53,63,249,174,61,63,54,189,200,61,192,127,24,191,190,20,123,191,26,148,91,191,49,160,148,190,128,232,218,62,94,131,108,63,8,9,113,63,234,90,241,62,204,207,120,190,49,219,84,191,172,58,125,191,153,103,34,191,48,251,72,61,243,4,53,63,15,177,127,63,3,228,69,63,131,64,22,62,218,57,14,191,248,83,120,191,152,197,97,191,212,124,172,190,21,239,195,62,216,107,103,63,11,250,116,63,61,156,3,63,194,197,71,190,2,159,77,191,109,196,126,191,74,235,43,191,243,4,53,63,74,235,43,63,54,189,200,189,2,159,77,191,190,20,123,191,61,156,3,191,49,160,148,62,216,107,103,63,94,131,108,63,212,124,172,62,234,90,241,190,248,83,120,191,49,219,84,191,131,64,22,190,153,103,34,63,15,177,127,63,243,4,53,63,48,251,72,189,3,228,69,191,172,58,125,191,218,57,14,191,204,207,120,62,152,197,97,63,8,9,113,63,21,239,195,62,128,232,218,190,11,250,116,191,26,148,91,191,194,197,71,190,192,127,24,63,109,196,126,63,249,174,61,63,243,4,53,63,192,127,24,63,49,160,148,190,8,9,113,191,49,219,84,191,48,251,72,189,3,228,69,63,248,83,120,63,21,239,195,62,61,156,3,191,109,196,126,191,74,235,43,191,194,197,71,62,216,107,103,63,152,197,97,63,131,64,22,62,243,4,53,191,172,58,125,191,234,90,241,190,128,232,218,62,190,20,123,63,249,174,61,63,54,189,200,189,26,148,91,191,94,131,108,191,204,207,120,190,153,103,34,63,15,177,127,63,218,57,14,63,212,124,172,190,11,250,116,191,2,159,77,191,243,4,53,63,61,156,3,63,234,90,241,190,15,177,127,191,218,57,14,191,128,232,218,62,109,196,126,63,192,127,24,63,21,239,195,190,172,58,125,191,153,103,34,191,212,124,172,62,190,20,123,63,74,235,43,63,49,160,148,190,248,83,120,191,243,4,53,191,204,207,120,62,11,250,116,63,249,174,61,63,194,197,71,190,8,9,113,191,3,228,69,191,131,64,22,62,94,131,108,63,2,159,77,63,54,189,200,189,216,107,103,191,49,219,84,191,48,251,72,61,152,197,97,63,26,148,91,63,243,4,53,63,128,232,218,62,153,103,34,191,248,83,120,191,194,197,71,190,2,159,77,63,152,197,97,63,48,251,72,189,94,131,108,191,249,174,61,191,49,160,148,62,172,58,125,63,218,57,14,63,61,156,3,191,109,196,126,191,212,124,172,190,243,4,53,63,8,9,113,63,54,189,200,61,26,148,91,191,49,219,84,191,131,64,22,62,11,250,116,63,74,235,43,63,21,239,195,190,15,177,127,191,234,90,241,190,192,127,24,63,190,20,123,63,204,207,120,62,3,228,69,191,216,107,103,191,243,4,53,63,212,124,172,62,3,228,69,191,26,148,91,191,194,197,71,62,172,58,125,63,234,90,241,62,74,235,43,191,94,131,108,191,48,251,72,61,11,250,116,63,192,127,24,63,218,57,14,191,248,83,120,191,54,189,200,189,216,107,103,63,243,4,53,63,128,232,218,190,109,196,126,191,204,207,120,190,49,219,84,63,2,159,77,63,49,160,148,190,15,177,127,191,21,239,195,190,249,174,61,63,152,197,97,63,131,64,22,190,190,20,123,191,61,156,3,191,153,103,34,63,8,9,113,63,243,4,53,63,204,207,120,62,152,197,97,191,74,235,43,191,218,57,14,63,8,9,113,63,54,189,200,189,172,58,125,191,21,239,195,190,2,159,77,63,3,228,69,63,128,232,218,190,190,20,123,191,48,251,72,189,11,250,116,63,61,156,3,63,243,4,53,191,26,148,91,191,49,160,148,62,15,177,127,63,194,197,71,62,216,107,103,191,153,103,34,191,192,127,24,63,94,131,108,63,131,64,22,190,109,196,126,191,212,124,172,190,49,219,84,63,249,174,61,63,234,90,241,190,248,83,120,191,243,4,53,63,131,64,22,62,11,250,116,191,128,232,218,190,49,219,84,63,74,235,43,63,153,103,34,191,26,148,91,191,21,239,195,62,248,83,120,63,54,189,200,189,15,177,127,191,194,197,71,190,8,9,113,63,234,90,241,62,2,159,77,191,243,4,53,191,192,127,24,63,152,197,97,63,212,124,172,190,190,20,123,191,48,251,72,61,109,196,126,63,204,207,120,62,94,131,108,191,61,156,3,191,3,228,69,63,249,174,61,63,218,57,14,191,216,107,103,191,49,160,148,62,172,58,125,63,243,4,53,63,48,251,72,61,109,196,126,191,131,64,22,190,190,20,123,63,204,207,120,62,11,250,116,191,212,124,172,190,94,131,108,63,128,232,218,62,152,197,97,191,61,156,3,191,49,219,84,63,192,127,24,63,3,228,69,191,74,235,43,191,243,4,53,63,249,174,61,63,153,103,34,191,2,159,77,191,218,57,14,63,26,148,91,63,234,90,241,190,216,107,103,191,21,239,195,62,8,9,113,63,49,160,148,190,248,83,120,191,194,197,71,62,172,58,125,63,54,189,200,189,15,177,127,191,243,4,53,63,48,251,72,189,109,196,126,191,131,64,22,62,190,20,123,63,204,207,120,190,11,250,116,191,212,124,172,62,94,131,108,63,128,232,218,190,152,197,97,191,61,156,3,63,49,219,84,63,192,127,24,191,3,228,69,191,74,235,43,63,243,4,53,63,249,174,61,191,153,103,34,191,2,159,77,63,218,57,14,63,26,148,91,191,234,90,241,190,216,107,103,63,21,239,195,62,8,9,113,191,49,160,148,190,248,83,120,63,194,197,71,62,172,58,125,191,54,189,200,189,15,177,127,63,243,4,53,63,131,64,22,190,11,250,116,191,128,232,218,62,49,219,84,63,74,235,43,191,153,103,34,191,26,148,91,63,21,239,195,62,248,83,120,191,54,189,200,189,15,177,127,63,194,197,71,190,8,9,113,191,234,90,241,62,2,159,77,63,243,4,53,191,192,127,24,191,152,197,97,63,212,124,172,62,190,20,123,191,48,251,72,189,109,196,126,63,204,207,120,190,94,131,108,191,61,156,3,63,3,228,69,63,249,174,61,191,218,57,14,191,216,107,103,63,49,160,148,62,172,58,125,191,243,4,53,63,204,207,120,190,152,197,97,191,74,235,43,63,218,57,14,63,8,9,113,191,54,189,200,189,172,58,125,63,21,239,195,190,2,159,77,191,3,228,69,63,128,232,218,62,190,20,123,191,48,251,72,61,11,250,116,63,61,156,3,191,243,4,53,191,26,148,91,63,49,160,148,62,15,177,127,191,194,197,71,62,216,107,103,63,153,103,34,191,192,127,24,191,94,131,108,63,131,64,22,62,109,196,126,191,212,124,172,62,49,219,84,63,249,174,61,191,234,90,241,190,248,83,120,63,243,4,53,63,212,124,172,190,3,228,69,191,26,148,91,63,194,197,71,62,172,58,125,191,234,90,241,62,74,235,43,63,94,131,108,191,48,251,72,189,11,250,116,63,192,127,24,191,218,57,14,191,248,83,120,63,54,189,200,189,216,107,103,191,243,4,53,63,128,232,218,62,109,196,126,191,204,207,120,62,49,219,84,63,2,159,77,191,49,160,148,190,15,177,127,63,21,239,195,190,249,174,61,191,152,197,97,63,131,64,22,62,190,20,123,191,61,156,3,63,153,103,34,63,8,9,113,191,243,4,53,63,128,232,218,190,153,103,34,191,248,83,120,63,194,197,71,190,2,159,77,191,152,197,97,63,48,251,72,61,94,131,108,191,249,174,61,63,49,160,148,62,172,58,125,191,218,57,14,63,61,156,3,63,109,196,126,191,212,124,172,62,243,4,53,63,8,9,113,191,54,189,200,61,26,148,91,63,49,219,84,191,131,64,22,190,11,250,116,63,74,235,43,191,21,239,195,190,15,177,127,63,234,90,241,190,192,127,24,191,190,20,123,63,204,207,120,190,3,228,69,191,216,107,103,63,243,4,53,63,61,156,3,191,234,90,241,190,15,177,127,63,218,57,14,191,128,232,218,190,109,196,126,63,192,127,24,191,21,239,195,190,172,58,125,63,153,103,34,191,212,124,172,190,190,20,123,63,74,235,43,191,49,160,148,190,248,83,120,63,243,4,53,191,204,207,120,190,11,250,116,63,249,174,61,191,194,197,71,190,8,9,113,63,3,228,69,191,131,64,22,190,94,131,108,63,2,159,77,191,54,189,200,189,216,107,103,63,49,219,84,191,48,251,72,189,152,197,97,63,26,148,91,191,243,4,53,63,192,127,24,191,49,160,148,190,8,9,113,63,49,219,84,191,48,251,72,61,3,228,69,63,248,83,120,191,21,239,195,62,61,156,3,63,109,196,126,191,74,235,43,63,194,197,71,62,216,107,103,191,152,197,97,63,131,64,22,190,243,4,53,191,172,58,125,63,234,90,241,190,128,232,218,190,190,20,123,63,249,174,61,191,54,189,200,189,26,148,91,63,94,131,108,191,204,207,120,62,153,103,34,63,15,177,127,191,218,57,14,63,212,124,172,62,11,250,116,191,2,159,77,63,243,4,53,63,74,235,43,191,54,189,200,189,2,159,77,63,190,20,123,191,61,156,3,63,49,160,148,62,216,107,103,191,94,131,108,63,212,124,172,190,234,90,241,190,248,83,120,63,49,219,84,191,131,64,22,62,153,103,34,63,15,177,127,191,243,4,53,63,48,251,72,61,3,228,69,191,172,58,125,63,218,57,14,191,204,207,120,190,152,197,97,63,8,9,113,191,21,239,195,62,128,232,218,62,11,250,116,191,26,148,91,63,194,197,71,190,192,127,24,191,109,196,126,63,249,174,61,191,243,4,53,63,249,174,61,191,54,189,200,61,192,127,24,63,190,20,123,191,26,148,91,63,49,160,148,190,128,232,218,190,94,131,108,63,8,9,113,191,234,90,241,62,204,207,120,62,49,219,84,191,172,58,125,63,153,103,34,191,48,251,72,189,243,4,53,63,15,177,127,191,3,228,69,63,131,64,22,190,218,57,14,191,248,83,120,63,152,197,97,191,212,124,172,62,21,239,195,62,216,107,103,191,11,250,116,63,61,156,3,191,194,197,71,190,2,159,77,63,109,196,126,191,74,235,43,63,243,4,53,63,2,159,77,191,49,160,148,62,212,124,172,62,49,219,84,191,15,177,127,63,3,228,69,191,204,207,120,62,21,239,195,62,26,148,91,191,109,196,126,63,249,174,61,191,194,197,71,62,128,232,218,62,152,197,97,191,172,58,125,63,243,4,53,191,131,64,22,62,234,90,241,62,216,107,103,191,190,20,123,63,74,235,43,191,54,189,200,61,61,156,3,63,94,131,108,191,248,83,120,63,153,103,34,191,48,251,72,61,218,57,14,63,8,9,113,191,11,250,116,63,192,127,24,191,243,4,53,63,26,148,91,191,234,90,241,62,48,251,72,61,218,57,14,191,216,107,103,63,109,196,126,191,2,159,77,63,21,239,195,190,131,64,22,190,153,103,34,63,8,9,113,191,190,20,123,63,249,174,61,191,49,160,148,62,204,207,120,62,243,4,53,191,248,83,120,63,11,250,116,191,74,235,43,63,194,197,71,190,212,124,172,190,3,228,69,63,172,58,125,191,94,131,108,63,192,127,24,191,54,189,200,61,128,232,218,62,49,219,84,191,15,177,127,63,152,197,97,191,61,156,3,63,243,4,53,63,216,107,103,191,153,103,34,63,204,207,120,190,194,197,71,190,192,127,24,63,152,197,97,191,15,177,127,63,94,131,108,191,74,235,43,63,49,160,148,190,131,64,22,190,218,57,14,63,26,148,91,191,109,196,126,63,8,9,113,191,243,4,53,63,212,124,172,190,54,189,200,189,61,156,3,63,49,219,84,191,172,58,125,63,11,250,116,191,249,174,61,63,21,239,195,190,48,251,72,189,234,90,241,62,2,159,77,191,190,20,123,63,248,83,120,191,3,228,69,63,128,232,218,190,243,4,53,63,8,9,113,191,3,228,69,63,61,156,3,191,194,197,71,62,131,64,22,62,234,90,241,190,249,174,61,63,94,131,108,191,15,177,127,63,11,250,116,191,2,159,77,63,218,57,14,191,204,207,120,62,54,189,200,61,128,232,218,190,243,4,53,63,216,107,103,191,109,196,126,63,248,83,120,191,49,219,84,63,192,127,24,191,49,160,148,62,48,251,72,61,21,239,195,190,74,235,43,63,152,197,97,191,172,58,125,63,190,20,123,191,26,148,91,63,153,103,34,191,212,124,172,62,243,4,53,63,248,83,120,191,152,197,97,63,249,174,61,191,218,57,14,63,212,124,172,190,54,189,200,61,131,64,22,62,21,239,195,190,192,127,24,63,3,228,69,191,216,107,103,63,190,20,123,191,15,177,127,63,11,250,116,191,26,148,91,63,243,4,53,191,61,156,3,63,49,160,148,190,48,251,72,61,194,197,71,62,128,232,218,190,153,103,34,63,2,159,77,191,94,131,108,63,172,58,125,191,109,196,126,63,8,9,113,191,49,219,84,63,74,235,43,191,234,90,241,62,204,207,120,190,243,4,53,63,172,58,125,191,11,250,116,63,216,107,103,191,49,219,84,63,249,174,61,191,153,103,34,63,61,156,3,191,21,239,195,62,204,207,120,190,54,189,200,61,48,251,72,61,194,197,71,190,212,124,172,62,234,90,241,190,192,127,24,63,243,4,53,191,2,159,77,63,152,197,97,191,8,9,113,63,190,20,123,191,15,177,127,63,109,196,126,191,248,83,120,63,94,131,108,191,26,148,91,63,3,228,69,191,74,235,43,63,218,57,14,191,128,232,218,62,49,160,148,190,131,64,22,62,243,4,53,63,15,177,127,191,109,196,126,63,172,58,125,191,190,20,123,63,248,83,120,191,11,250,116,63,8,9,113,191,94,131,108,63,216,107,103,191,152,197,97,63,26,148,91,191,49,219,84,63,2,159,77,191,3,228,69,63,249,174,61,191,243,4,53,63,74,235,43,191,153,103,34,63,192,127,24,191,218,57,14,63,61,156,3,191,234,90,241,62,128,232,218,190,21,239,195,62,212,124,172,190,49,160,148,62,204,207,120,190,194,197,71,62,131,64,22,190,54,189,200,61,48,251,72,189,243,4,53,63,197,181,127,63,63,215,126,63,240,100,125,63,174,95,123,63,165,200,120,63,85,161,117,63,147,235,113,63,133,169,109,63,164,221,104,63,184,138,99,63,215,179,93,63,100,92,87,63,13,136,80,63,199,58,73,63,206,120,65,63,162,70,57,63,5,169,48,63,244,164,39,63,171,63,30,63,156,126,20,63,112,103,10,63,0,0,0,63,171,156,234,62,71,177,212,62,139,74,190,62,116,117,167,62,64,63,144,62,202,106,113,62,20,203,65,62,251,186,17,62,190,172,194,61,65,229,66,61,243,4,53,63,240,100,125,63,85,161,117,63,164,221,104,63,100,92,87,63,206,120,65,63,244,164,39,63,112,103,10,63,71,177,212,62,64,63,144,62,251,186,17,62,50,49,141,36,251,186,17,190,64,63,144,190,71,177,212,190,112,103,10,191,244,164,39,191,206,120,65,191,100,92,87,191,164,221,104,191,85,161,117,191,240,100,125,191,0,0,128,191,240,100,125,191,85,161,117,191,164,221,104,191,100,92,87,191,206,120,65,191,244,164,39,191,112,103,10,191,71,177,212,190,64,63,144,190,251,186,17,190,243,4,53,63,165,200,120,63,184,138,99,63,206,120,65,63,156,126,20,63,139,74,190,62,251,186,17,62,190,172,194,189,116,117,167,190,112,103,10,191,162,70,57,191,215,179,93,191,85,161,117,191,197,181,127,191,174,95,123,191,164,221,104,191,199,58,73,191,171,63,30,191,71,177,212,190,20,203,65,190,65,229,66,61,64,63,144,62,0,0,0,63,5,169,48,63,100,92,87,63,147,235,113,63,63,215,126,63,240,100,125,63,133,169,109,63,13,136,80,63,244,164,39,63,171,156,234,62,202,106,113,62,243,4,53,63,147,235,113,63,199,58,73,63,112,103,10,63,202,106,113,62,190,172,194,189,71,177,212,190,5,169,48,191,184,138,99,191,240,100,125,191,174,95,123,191,215,179,93,191,244,164,39,191,139,74,190,190,65,229,66,189,64,63,144,62,156,126,20,63,13,136,80,63,85,161,117,63,197,181,127,63,133,169,109,63,206,120,65,63,0,0,0,63,20,203,65,62,251,186,17,190,171,156,234,190,162,70,57,191,164,221,104,191,63,215,126,191,165,200,120,191,100,92,87,191,171,63,30,191,116,117,167,190,243,4,53,63,164,221,104,63,244,164,39,63,64,63,144,62,251,186,17,190,112,103,10,191,100,92,87,191,240,100,125,191,85,161,117,191,206,120,65,191,71,177,212,190,202,201,83,165,71,177,212,62,206,120,65,63,85,161,117,63,240,100,125,63,100,92,87,63,112,103,10,63,251,186,17,62,64,63,144,190,244,164,39,191,164,221,104,191,0,0,128,191,164,221,104,191,244,164,39,191,64,63,144,190,251,186,17,62,112,103,10,63,100,92,87,63,240,100,125,63,85,161,117,63,206,120,65,63,71,177,212,62,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,202,201,83,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,95,31,172,38,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,23,22,247,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,214,181,39,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,243,4,53,63,13,136,80,63,116,117,167,62,64,63,144,190,199,58,73,191,197,181,127,191,100,92,87,191,139,74,190,190,202,106,113,62,206,120,65,63,63,215,126,63,215,179,93,63,71,177,212,62,20,203,65,190,162,70,57,191,240,100,125,191,184,138,99,191,171,156,234,190,251,186,17,62,5,169,48,63,174,95,123,63,164,221,104,63,0,0,0,63,190,172,194,189,244,164,39,191,165,200,120,191,133,169,109,191,112,103,10,191,65,229,66,61,171,63,30,63,85,161,117,63,147,235,113,63,156,126,20,63,243,4,53,63,206,120,65,63,251,186,17,62,112,103,10,191,85,161,117,191,164,221,104,191,71,177,212,190,64,63,144,62,100,92,87,63,240,100,125,63,244,164,39,63,95,31,172,38,244,164,39,191,240,100,125,191,100,92,87,191,64,63,144,190,71,177,212,62,164,221,104,63,85,161,117,63,112,103,10,63,251,186,17,190,206,120,65,191,0,0,128,191,206,120,65,191,251,186,17,190,112,103,10,63,85,161,117,63,164,221,104,63,71,177,212,62,64,63,144,190,100,92,87,191,240,100,125,191,244,164,39,191,243,4,53,63,5,169,48,63,65,229,66,189,206,120,65,191,63,215,126,191,171,63,30,191,251,186,17,62,13,136,80,63,174,95,123,63,112,103,10,63,202,106,113,190,215,179,93,191,85,161,117,191,171,156,234,190,116,117,167,62,164,221,104,63,133,169,109,63,139,74,190,62,71,177,212,190,147,235,113,191,184,138,99,191,64,63,144,190,0,0,0,63,165,200,120,63,100,92,87,63,20,203,65,62,156,126,20,191,240,100,125,191,199,58,73,191,190,172,194,189,244,164,39,63,197,181,127,63,162,70,57,63,243,4,53,63,171,63,30,63,202,106,113,190,164,221,104,191,184,138,99,191,20,203,65,190,244,164,39,63,197,181,127,63,156,126,20,63,64,63,144,190,133,169,109,191,215,179,93,191,251,186,17,190,5,169,48,63,63,215,126,63,112,103,10,63,116,117,167,190,147,235,113,191,100,92,87,191,190,172,194,189,162,70,57,63,240,100,125,63,0,0,0,63,139,74,190,190,85,161,117,191,13,136,80,191,65,229,66,189,206,120,65,63,174,95,123,63,171,156,234,62,71,177,212,190,165,200,120,191,199,58,73,191,243,4,53,63,112,103,10,63,71,177,212,190,240,100,125,191,244,164,39,191,64,63,144,62,85,161,117,63,206,120,65,63,251,186,17,190,164,221,104,191,100,92,87,191,23,22,247,165,100,92,87,63,164,221,104,63,251,186,17,62,206,120,65,191,85,161,117,191,64,63,144,190,244,164,39,63,240,100,125,63,71,177,212,62,112,103,10,191,0,0,128,191,112,103,10,191,71,177,212,62,240,100,125,63,244,164,39,63,64,63,144,190,85,161,117,191,206,120,65,191,251,186,17,62,164,221,104,63,100,92,87,63,243,4,53,63,171,156,234,62,156,126,20,191,240,100,125,191,116,117,167,190,5,169,48,63,85,161,117,63,20,203,65,62,199,58,73,191,164,221,104,191,65,229,66,189,215,179,93,63,100,92,87,63,190,172,194,189,133,169,109,191,206,120,65,191,202,106,113,62,165,200,120,63,244,164,39,63,139,74,190,190,63,215,126,191,112,103,10,191,0,0,0,63,197,181,127,63,71,177,212,62,171,63,30,191,174,95,123,191,64,63,144,190,162,70,57,63,147,235,113,63,251,186,17,62,13,136,80,191,184,138,99,191,243,4,53,63,139,74,190,62,162,70,57,191,164,221,104,191,65,229,66,61,147,235,113,63,244,164,39,63,171,156,234,190,63,215,126,191,64,63,144,190,199,58,73,63,215,179,93,63,251,186,17,190,165,200,120,191,156,126,20,191,112,103,10,63,174,95,123,63,20,203,65,62,100,92,87,191,13,136,80,191,202,106,113,62,240,100,125,63,0,0,0,63,171,63,30,191,85,161,117,191,190,172,194,189,184,138,99,63,206,120,65,63,116,117,167,190,197,181,127,191,71,177,212,190,5,169,48,63,133,169,109,63,243,4,53,63,64,63,144,62,100,92,87,191,206,120,65,191,71,177,212,62,240,100,125,63,251,186,17,62,164,221,104,191,244,164,39,191,112,103,10,63,85,161,117,63,84,148,176,166,85,161,117,191,112,103,10,191,244,164,39,63,164,221,104,63,251,186,17,190,240,100,125,191,71,177,212,190,206,120,65,63,100,92,87,63,64,63,144,190,0,0,128,191,64,63,144,190,100,92,87,63,206,120,65,63,71,177,212,190,240,100,125,191,251,186,17,190,164,221,104,63,244,164,39,63,112,103,10,191,85,161,117,191,243,4,53,63,20,203,65,62,133,169,109,191,112,103,10,191,162,70,57,63,13,136,80,63,71,177,212,190,165,200,120,191,65,229,66,61,240,100,125,63,116,117,167,62,215,179,93,191,244,164,39,191,171,63,30,63,184,138,99,63,64,63,144,190,63,215,126,191,190,172,194,189,85,161,117,63,171,156,234,62,199,58,73,191,206,120,65,191,0,0,0,63,147,235,113,63,251,186,17,190,197,181,127,191,202,106,113,190,164,221,104,63,156,126,20,63,5,169,48,191,100,92,87,191,139,74,190,62,174,95,123,63,243,4,53,63,190,172,194,61,174,95,123,191,64,63,144,190,133,169,109,63,171,156,234,62,100,92,87,191,171,63,30,191,162,70,57,63,206,120,65,63,156,126,20,191,215,179,93,191,71,177,212,62,147,235,113,63,202,106,113,190,240,100,125,191,65,229,66,61,197,181,127,63,251,186,17,62,165,200,120,191,116,117,167,190,164,221,104,63,0,0,0,63,13,136,80,191,244,164,39,191,5,169,48,63,199,58,73,63,112,103,10,191,184,138,99,191,139,74,190,62,85,161,117,63,20,203,65,190,63,215,126,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,243,4,53,63,190,172,194,189,174,95,123,191,64,63,144,62,133,169,109,63,171,156,234,190,100,92,87,191,171,63,30,63,162,70,57,63,206,120,65,191,156,126,20,191,215,179,93,63,71,177,212,62,147,235,113,191,202,106,113,190,240,100,125,63,65,229,66,61,197,181,127,191,251,186,17,62,165,200,120,63,116,117,167,190,164,221,104,191,0,0,0,63,13,136,80,63,244,164,39,191,5,169,48,191,199,58,73,63,112,103,10,63,184,138,99,191,139,74,190,190,85,161,117,63,20,203,65,62,63,215,126,191,243,4,53,63,20,203,65,190,133,169,109,191,112,103,10,63,162,70,57,63,13,136,80,191,71,177,212,190,165,200,120,63,65,229,66,61,240,100,125,191,116,117,167,62,215,179,93,63,244,164,39,191,171,63,30,191,184,138,99,63,64,63,144,62,63,215,126,191,190,172,194,61,85,161,117,63,171,156,234,190,199,58,73,191,206,120,65,63,0,0,0,63,147,235,113,191,251,186,17,190,197,181,127,63,202,106,113,190,164,221,104,191,156,126,20,63,5,169,48,63,100,92,87,191,139,74,190,190,174,95,123,63,243,4,53,63,64,63,144,190,100,92,87,191,206,120,65,63,71,177,212,62,240,100,125,191,251,186,17,62,164,221,104,63,244,164,39,191,112,103,10,191,85,161,117,63,8,72,141,166,85,161,117,191,112,103,10,63,244,164,39,63,164,221,104,191,251,186,17,190,240,100,125,63,71,177,212,190,206,120,65,191,100,92,87,63,64,63,144,62,0,0,128,191,64,63,144,62,100,92,87,63,206,120,65,191,71,177,212,190,240,100,125,63,251,186,17,190,164,221,104,191,244,164,39,63,112,103,10,63,85,161,117,191,243,4,53,63,139,74,190,190,162,70,57,191,164,221,104,63,65,229,66,61,147,235,113,191,244,164,39,63,171,156,234,62,63,215,126,191,64,63,144,62,199,58,73,63,215,179,93,191,251,186,17,190,165,200,120,63,156,126,20,191,112,103,10,191,174,95,123,63,20,203,65,190,100,92,87,191,13,136,80,63,202,106,113,62,240,100,125,191,0,0,0,63,171,63,30,63,85,161,117,191,190,172,194,61,184,138,99,63,206,120,65,191,116,117,167,190,197,181,127,63,71,177,212,190,5,169,48,191,133,169,109,63,243,4,53,63,171,156,234,190,156,126,20,191,240,100,125,63,116,117,167,190,5,169,48,191,85,161,117,63,20,203,65,190,199,58,73,191,164,221,104,63,65,229,66,189,215,179,93,191,100,92,87,63,190,172,194,61,133,169,109,191,206,120,65,63,202,106,113,62,165,200,120,191,244,164,39,63,139,74,190,62,63,215,126,191,112,103,10,63,0,0,0,63,197,181,127,191,71,177,212,62,171,63,30,63,174,95,123,191,64,63,144,62,162,70,57,63,147,235,113,191,251,186,17,62,13,136,80,63,184,138,99,191,243,4,53,63,112,103,10,191,71,177,212,190,240,100,125,63,244,164,39,191,64,63,144,190,85,161,117,63,206,120,65,191,251,186,17,190,164,221,104,63,100,92,87,191,15,47,66,167,100,92,87,63,164,221,104,191,251,186,17,62,206,120,65,63,85,161,117,191,64,63,144,62,244,164,39,63,240,100,125,191,71,177,212,62,112,103,10,63,0,0,128,191,112,103,10,63,71,177,212,62,240,100,125,191,244,164,39,63,64,63,144,62,85,161,117,191,206,120,65,63,251,186,17,62,164,221,104,191,100,92,87,63,243,4,53,63,171,63,30,191,202,106,113,190,164,221,104,63,184,138,99,191,20,203,65,62,244,164,39,63,197,181,127,191,156,126,20,63,64,63,144,62,133,169,109,191,215,179,93,63,251,186,17,190,5,169,48,191,63,215,126,63,112,103,10,191,116,117,167,190,147,235,113,63,100,92,87,191,190,172,194,61,162,70,57,63,240,100,125,191,0,0,0,63,139,74,190,62,85,161,117,191,13,136,80,63,65,229,66,189,206,120,65,191,174,95,123,63,171,156,234,190,71,177,212,190,165,200,120,63,199,58,73,191,243,4,53,63,5,169,48,191,65,229,66,189,206,120,65,63,63,215,126,191,171,63,30,63,251,186,17,62,13,136,80,191,174,95,123,63,112,103,10,191,202,106,113,190,215,179,93,63,85,161,117,191,171,156,234,62,116,117,167,62,164,221,104,191,133,169,109,63,139,74,190,190,71,177,212,190,147,235,113,63,184,138,99,191,64,63,144,62,0,0,0,63,165,200,120,191,100,92,87,63,20,203,65,190,156,126,20,191,240,100,125,63,199,58,73,191,190,172,194,61,244,164,39,63,197,181,127,191,162,70,57,63,243,4,53,63,206,120,65,191,251,186,17,62,112,103,10,63,85,161,117,191,164,221,104,63,71,177,212,190,64,63,144,190,100,92,87,63,240,100,125,191,244,164,39,63,34,2,75,39,244,164,39,191,240,100,125,63,100,92,87,191,64,63,144,62,71,177,212,62,164,221,104,191,85,161,117,63,112,103,10,191,251,186,17,190,206,120,65,63,0,0,128,191,206,120,65,63,251,186,17,190,112,103,10,191,85,161,117,63,164,221,104,191,71,177,212,62,64,63,144,62,100,92,87,191,240,100,125,63,244,164,39,191,243,4,53,63,13,136,80,191,116,117,167,62,64,63,144,62,199,58,73,191,197,181,127,63,100,92,87,191,139,74,190,62,202,106,113,62,206,120,65,191,63,215,126,63,215,179,93,191,71,177,212,62,20,203,65,62,162,70,57,191,240,100,125,63,184,138,99,191,171,156,234,62,251,186,17,62,5,169,48,191,174,95,123,63,164,221,104,191,0,0,0,63,190,172,194,61,244,164,39,191,165,200,120,63,133,169,109,191,112,103,10,63,65,229,66,61,171,63,30,191,85,161,117,63,147,235,113,191,156,126,20,63,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,195,67,119,38,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,138,140,141,165,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,50,146,101,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,91,26,141,38,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,243,4,53,63,164,221,104,191,244,164,39,63,64,63,144,190,251,186,17,190,112,103,10,63,100,92,87,191,240,100,125,63,85,161,117,191,206,120,65,63,71,177,212,190,42,171,48,38,71,177,212,62,206,120,65,191,85,161,117,63,240,100,125,191,100,92,87,63,112,103,10,191,251,186,17,62,64,63,144,62,244,164,39,191,164,221,104,63,0,0,128,191,164,221,104,63,244,164,39,191,64,63,144,62,251,186,17,62,112,103,10,191,100,92,87,63,240,100,125,191,85,161,117,63,206,120,65,191,71,177,212,62,243,4,53,63,147,235,113,191,199,58,73,63,112,103,10,191,202,106,113,62,190,172,194,61,71,177,212,190,5,169,48,63,184,138,99,191,240,100,125,63,174,95,123,191,215,179,93,63,244,164,39,191,139,74,190,62,65,229,66,189,64,63,144,190,156,126,20,63,13,136,80,191,85,161,117,63,197,181,127,191,133,169,109,63,206,120,65,191,0,0,0,63,20,203,65,190,251,186,17,190,171,156,234,62,162,70,57,191,164,221,104,63,63,215,126,191,165,200,120,63,100,92,87,191,171,63,30,63,116,117,167,190,243,4,53,63,165,200,120,191,184,138,99,63,206,120,65,191,156,126,20,63,139,74,190,190,251,186,17,62,190,172,194,61,116,117,167,190,112,103,10,63,162,70,57,191,215,179,93,63,85,161,117,191,197,181,127,63,174,95,123,191,164,221,104,63,199,58,73,191,171,63,30,63,71,177,212,190,20,203,65,62,65,229,66,61,64,63,144,190,0,0,0,63,5,169,48,191,100,92,87,63,147,235,113,191,63,215,126,63,240,100,125,191,133,169,109,63,13,136,80,191,244,164,39,63,171,156,234,190,202,106,113,62,243,4,53,63,240,100,125,191,85,161,117,63,164,221,104,191,100,92,87,63,206,120,65,191,244,164,39,63,112,103,10,191,71,177,212,62,64,63,144,190,251,186,17,62,222,94,13,166,251,186,17,190,64,63,144,62,71,177,212,190,112,103,10,63,244,164,39,191,206,120,65,63,100,92,87,191,164,221,104,63,85,161,117,191,240,100,125,63,0,0,128,191,240,100,125,63,85,161,117,191,164,221,104,63,100,92,87,191,206,120,65,63,244,164,39,191,112,103,10,63,71,177,212,190,64,63,144,62,251,186,17,190,243,4,53,63,197,181,127,191,63,215,126,63,240,100,125,191,174,95,123,63,165,200,120,191,85,161,117,63,147,235,113,191,133,169,109,63,164,221,104,191,184,138,99,63,215,179,93,191,100,92,87,63,13,136,80,191,199,58,73,63,206,120,65,191,162,70,57,63,5,169,48,191,244,164,39,63,171,63,30,191,156,126,20,63,112,103,10,191,0,0,0,63,171,156,234,190,71,177,212,62,139,74,190,190,116,117,167,62,64,63,144,190,202,106,113,62,20,203,65,190,251,186,17,62,190,172,194,189,65,229,66,61,243,4,53,63,18,186,127,63,111,232,126,63,138,139,125,63,32,164,123,63,61,51,121,63,53,58,118,63,168,186,114,63,128,182,110,63,238,47,106,63,108,41,101,63,184,165,95,63,213,167,89,63,9,51,83,63,219,74,76,63,18,243,68,63,176,47,61,63,243,4,53,63,81,119,44,63,119,139,35,63,67,70,26,63,200,172,16,63,66,196,6,63,57,36,249,62,209,55,228,62,188,206,206,62,171,244,184,62,143,181,162,62,142,29,140,62,3,114,106,62,213,40,60,62,220,120,13,62,50,247,188,61,222,42,61,61,243,4,53,63,138,139,125,63,53,58,118,63,238,47,106,63,213,167,89,63,18,243,68,63,81,119,44,63,200,172,16,63,209,55,228,62,143,181,162,62,213,40,60,62,222,42,61,61,50,247,188,189,3,114,106,190,171,244,184,190,57,36,249,190,67,70,26,191,243,4,53,191,219,74,76,191,184,165,95,191,128,182,110,191,61,51,121,191,111,232,126,191,18,186,127,191,32,164,123,191,168,186,114,191,108,41,101,191,9,51,83,191,176,47,61,191,119,139,35,191,66,196,6,191,188,206,206,190,142,29,140,190,220,120,13,190,243,4,53,63,61,51,121,63,108,41,101,63,18,243,68,63,67,70,26,63,188,206,206,62,213,40,60,62,222,42,61,189,142,29,140,190,57,36,249,190,81,119,44,191,9,51,83,191,128,182,110,191,138,139,125,191,111,232,126,191,168,186,114,191,213,167,89,191,243,4,53,191,66,196,6,191,143,181,162,190,50,247,188,189,220,120,13,62,171,244,184,62,200,172,16,63,176,47,61,63,184,165,95,63,53,58,118,63,18,186,127,63,32,164,123,63,238,47,106,63,219,74,76,63,119,139,35,63,209,55,228,62,3,114,106,62,243,4,53,63,168,186,114,63,219,74,76,63,200,172,16,63,142,29,140,62,222,42,61,189,171,244,184,190,119,139,35,191,213,167,89,191,61,51,121,191,111,232,126,191,238,47,106,191,176,47,61,191,57,36,249,190,213,40,60,190,220,120,13,62,209,55,228,62,243,4,53,63,108,41,101,63,138,139,125,63,32,164,123,63,184,165,95,63,81,119,44,63,188,206,206,62,50,247,188,61,3,114,106,190,66,196,6,191,18,243,68,191,128,182,110,191,18,186,127,191,53,58,118,191,9,51,83,191,67,70,26,191,143,181,162,190,243,4,53,63,238,47,106,63,81,119,44,63,143,181,162,62,50,247,188,189,57,36,249,190,219,74,76,191,61,51,121,191,32,164,123,191,9,51,83,191,66,196,6,191,220,120,13,190,142,29,140,62,119,139,35,63,108,41,101,63,18,186,127,63,128,182,110,63,243,4,53,63,171,244,184,62,222,42,61,189,209,55,228,190,18,243,68,191,53,58,118,191,138,139,125,191,213,167,89,191,200,172,16,191,213,40,60,190,3,114,106,62,67,70,26,63,184,165,95,63,111,232,126,63,168,186,114,63,176,47,61,63,188,206,206,62,243,4,53,63,184,165,95,63,66,196,6,63,222,42,61,61,209,55,228,190,9,51,83,191,111,232,126,191,238,47,106,191,67,70,26,191,220,120,13,190,171,244,184,62,18,243,68,63,32,164,123,63,168,186,114,63,81,119,44,63,3,114,106,62,142,29,140,190,243,4,53,191,53,58,118,191,61,51,121,191,176,47,61,191,143,181,162,190,213,40,60,62,119,139,35,63,128,182,110,63,138,139,125,63,219,74,76,63,188,206,206,62,50,247,188,189,200,172,16,191,108,41,101,191,18,186,127,191,213,167,89,191,57,36,249,190,243,4,53,63,9,51,83,63,171,244,184,62,3,114,106,190,176,47,61,191,138,139,125,191,108,41,101,191,57,36,249,190,50,247,188,61,119,139,35,63,53,58,118,63,168,186,114,63,67,70,26,63,222,42,61,61,66,196,6,191,238,47,106,191,32,164,123,191,243,4,53,191,213,40,60,190,188,206,206,62,213,167,89,63,18,186,127,63,219,74,76,63,143,181,162,62,142,29,140,190,18,243,68,191,111,232,126,191,184,165,95,191,209,55,228,190,220,120,13,62,81,119,44,63,61,51,121,63,128,182,110,63,200,172,16,63,243,4,53,63,18,243,68,63,213,40,60,62,57,36,249,190,128,182,110,191,168,186,114,191,66,196,6,191,220,120,13,62,176,47,61,63,18,186,127,63,219,74,76,63,3,114,106,62,209,55,228,190,238,47,106,191,53,58,118,191,200,172,16,191,50,247,188,61,243,4,53,63,111,232,126,63,9,51,83,63,142,29,140,62,188,206,206,190,108,41,101,191,61,51,121,191,67,70,26,191,222,42,61,61,81,119,44,63,138,139,125,63,213,167,89,63,143,181,162,62,171,244,184,190,184,165,95,191,32,164,123,191,119,139,35,191,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,8,72,141,166,243,4,53,191,0,0,128,191,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,63,243,4,53,63,243,4,53,63,119,139,35,63,213,40,60,190,184,165,95,191,128,182,110,191,143,181,162,190,66,196,6,63,138,139,125,63,176,47,61,63,222,42,61,189,219,74,76,191,61,51,121,191,209,55,228,190,188,206,206,62,53,58,118,63,9,51,83,63,50,247,188,61,243,4,53,191,111,232,126,191,200,172,16,191,142,29,140,62,238,47,106,63,108,41,101,63,3,114,106,62,67,70,26,191,18,186,127,191,81,119,44,191,220,120,13,62,213,167,89,63,168,186,114,63,171,244,184,62,57,36,249,190,32,164,123,191,18,243,68,191,243,4,53,63,200,172,16,63,171,244,184,190,61,51,121,191,176,47,61,191,220,120,13,62,108,41,101,63,184,165,95,63,50,247,188,61,18,243,68,191,53,58,118,191,143,181,162,190,67,70,26,63,18,186,127,63,66,196,6,63,188,206,206,190,32,164,123,191,243,4,53,191,213,40,60,62,238,47,106,63,213,167,89,63,222,42,61,61,219,74,76,191,168,186,114,191,142,29,140,190,119,139,35,63,111,232,126,63,57,36,249,62,209,55,228,190,138,139,125,191,81,119,44,191,3,114,106,62,128,182,110,63,9,51,83,63,243,4,53,63,57,36,249,62,66,196,6,191,18,186,127,191,209,55,228,190,200,172,16,63,111,232,126,63,188,206,206,62,67,70,26,191,138,139,125,191,171,244,184,190,119,139,35,63,32,164,123,63,143,181,162,62,81,119,44,191,61,51,121,191,142,29,140,190,243,4,53,63,53,58,118,63,3,114,106,62,176,47,61,191,168,186,114,191,213,40,60,190,18,243,68,63,128,182,110,63,220,120,13,62,219,74,76,191,238,47,106,191,50,247,188,189,9,51,83,63,108,41,101,63,222,42,61,61,213,167,89,191,184,165,95,191,243,4,53,63,188,206,206,62,81,119,44,191,168,186,114,191,50,247,188,189,184,165,95,63,219,74,76,63,3,114,106,190,32,164,123,191,200,172,16,191,66,196,6,63,138,139,125,63,142,29,140,62,18,243,68,191,108,41,101,191,222,42,61,61,128,182,110,63,243,4,53,63,171,244,184,190,18,186,127,191,209,55,228,190,119,139,35,63,53,58,118,63,220,120,13,62,213,167,89,191,9,51,83,191,213,40,60,62,61,51,121,63,67,70,26,63,57,36,249,190,111,232,126,191,143,181,162,190,176,47,61,63,238,47,106,63,243,4,53,63,143,181,162,62,219,74,76,191,9,51,83,191,142,29,140,62,18,186,127,63,171,244,184,62,18,243,68,191,213,167,89,191,3,114,106,62,111,232,126,63,188,206,206,62,176,47,61,191,184,165,95,191,213,40,60,62,138,139,125,63,209,55,228,62,243,4,53,191,108,41,101,191,220,120,13,62,32,164,123,63,57,36,249,62,81,119,44,191,238,47,106,191,50,247,188,61,61,51,121,63,66,196,6,63,119,139,35,191,128,182,110,191,222,42,61,61,53,58,118,63,200,172,16,63,67,70,26,191,168,186,114,191,243,4,53,63,3,114,106,62,108,41,101,191,119,139,35,191,67,70,26,63,238,47,106,63,213,40,60,190,18,186,127,191,142,29,140,190,184,165,95,63,81,119,44,63,200,172,16,191,128,182,110,191,220,120,13,62,111,232,126,63,143,181,162,62,213,167,89,191,243,4,53,191,66,196,6,63,168,186,114,63,50,247,188,189,138,139,125,191,171,244,184,190,9,51,83,63,176,47,61,63,57,36,249,190,53,58,118,191,222,42,61,61,32,164,123,63,188,206,206,62,219,74,76,191,18,243,68,191,209,55,228,62,61,51,121,63,243,4,53,63,220,120,13,62,53,58,118,191,188,206,206,190,213,167,89,63,119,139,35,63,81,119,44,191,9,51,83,191,209,55,228,62,168,186,114,63,213,40,60,190,18,186,127,191,50,247,188,189,61,51,121,63,171,244,184,62,184,165,95,191,67,70,26,191,243,4,53,63,219,74,76,63,57,36,249,190,128,182,110,191,3,114,106,62,111,232,126,63,222,42,61,61,32,164,123,191,143,181,162,190,108,41,101,63,200,172,16,63,176,47,61,191,18,243,68,191,66,196,6,63,238,47,106,63,142,29,140,190,138,139,125,191,243,4,53,63,222,42,61,61,111,232,126,191,220,120,13,190,32,164,123,63,3,114,106,62,53,58,118,191,143,181,162,190,128,182,110,63,188,206,206,62,108,41,101,191,57,36,249,190,213,167,89,63,200,172,16,63,219,74,76,191,119,139,35,191,176,47,61,63,243,4,53,63,81,119,44,191,18,243,68,191,67,70,26,63,9,51,83,63,66,196,6,191,184,165,95,191,209,55,228,62,238,47,106,63,171,244,184,190,168,186,114,191,142,29,140,62,61,51,121,63,213,40,60,190,138,139,125,191,50,247,188,61,18,186,127,63,243,4,53,63,222,42,61,189,111,232,126,191,220,120,13,62,32,164,123,63,3,114,106,190,53,58,118,191,143,181,162,62,128,182,110,63,188,206,206,190,108,41,101,191,57,36,249,62,213,167,89,63,200,172,16,191,219,74,76,191,119,139,35,63,176,47,61,63,243,4,53,191,81,119,44,191,18,243,68,63,67,70,26,63,9,51,83,191,66,196,6,191,184,165,95,63,209,55,228,62,238,47,106,191,171,244,184,190,168,186,114,63,142,29,140,62,61,51,121,191,213,40,60,190,138,139,125,63,50,247,188,61,18,186,127,191,243,4,53,63,220,120,13,190,53,58,118,191,188,206,206,62,213,167,89,63,119,139,35,191,81,119,44,191,9,51,83,63,209,55,228,62,168,186,114,191,213,40,60,190,18,186,127,63,50,247,188,189,61,51,121,191,171,244,184,62,184,165,95,63,67,70,26,191,243,4,53,191,219,74,76,63,57,36,249,62,128,182,110,191,3,114,106,190,111,232,126,63,222,42,61,189,32,164,123,191,143,181,162,62,108,41,101,63,200,172,16,191,176,47,61,191,18,243,68,63,66,196,6,63,238,47,106,191,142,29,140,190,138,139,125,63,243,4,53,63,3,114,106,190,108,41,101,191,119,139,35,63,67,70,26,63,238,47,106,191,213,40,60,190,18,186,127,63,142,29,140,190,184,165,95,191,81,119,44,63,200,172,16,63,128,182,110,191,220,120,13,190,111,232,126,63,143,181,162,190,213,167,89,191,243,4,53,63,66,196,6,63,168,186,114,191,50,247,188,189,138,139,125,63,171,244,184,190,9,51,83,191,176,47,61,63,57,36,249,62,53,58,118,191,222,42,61,189,32,164,123,63,188,206,206,190,219,74,76,191,18,243,68,63,209,55,228,62,61,51,121,191,243,4,53,63,143,181,162,190,219,74,76,191,9,51,83,63,142,29,140,62,18,186,127,191,171,244,184,62,18,243,68,63,213,167,89,191,3,114,106,190,111,232,126,63,188,206,206,190,176,47,61,191,184,165,95,63,213,40,60,62,138,139,125,191,209,55,228,62,243,4,53,63,108,41,101,191,220,120,13,190,32,164,123,63,57,36,249,190,81,119,44,191,238,47,106,63,50,247,188,61,61,51,121,191,66,196,6,63,119,139,35,63,128,182,110,191,222,42,61,189,53,58,118,63,200,172,16,191,67,70,26,191,168,186,114,63,243,4,53,63,188,206,206,190,81,119,44,191,168,186,114,63,50,247,188,189,184,165,95,191,219,74,76,63,3,114,106,62,32,164,123,191,200,172,16,63,66,196,6,63,138,139,125,191,142,29,140,62,18,243,68,63,108,41,101,191,222,42,61,189,128,182,110,63,243,4,53,191,171,244,184,190,18,186,127,63,209,55,228,190,119,139,35,191,53,58,118,63,220,120,13,190,213,167,89,191,9,51,83,63,213,40,60,62,61,51,121,191,67,70,26,63,57,36,249,62,111,232,126,191,143,181,162,62,176,47,61,63,238,47,106,191,243,4,53,63,57,36,249,190,66,196,6,191,18,186,127,63,209,55,228,190,200,172,16,191,111,232,126,63,188,206,206,190,67,70,26,191,138,139,125,63,171,244,184,190,119,139,35,191,32,164,123,63,143,181,162,190,81,119,44,191,61,51,121,63,142,29,140,190,243,4,53,191,53,58,118,63,3,114,106,190,176,47,61,191,168,186,114,63,213,40,60,190,18,243,68,191,128,182,110,63,220,120,13,190,219,74,76,191,238,47,106,63,50,247,188,189,9,51,83,191,108,41,101,63,222,42,61,189,213,167,89,191,184,165,95,63,243,4,53,63,200,172,16,191,171,244,184,190,61,51,121,63,176,47,61,191,220,120,13,190,108,41,101,63,184,165,95,191,50,247,188,61,18,243,68,63,53,58,118,191,143,181,162,62,67,70,26,63,18,186,127,191,66,196,6,63,188,206,206,62,32,164,123,191,243,4,53,63,213,40,60,62,238,47,106,191,213,167,89,63,222,42,61,189,219,74,76,191,168,186,114,63,142,29,140,190,119,139,35,191,111,232,126,63,57,36,249,190,209,55,228,190,138,139,125,63,81,119,44,191,3,114,106,190,128,182,110,63,9,51,83,191,243,4,53,63,119,139,35,191,213,40,60,190,184,165,95,63,128,182,110,191,143,181,162,62,66,196,6,63,138,139,125,191,176,47,61,63,222,42,61,61,219,74,76,191,61,51,121,63,209,55,228,190,188,206,206,190,53,58,118,63,9,51,83,191,50,247,188,61,243,4,53,63,111,232,126,191,200,172,16,63,142,29,140,62,238,47,106,191,108,41,101,63,3,114,106,190,67,70,26,191,18,186,127,63,81,119,44,191,220,120,13,190,213,167,89,63,168,186,114,191,171,244,184,62,57,36,249,62,32,164,123,191,18,243,68,63,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,250,9,150,167,243,4,53,63,0,0,128,191,243,4,53,63,91,26,141,38,243,4,53,191,0,0,128,63,243,4,53,191,243,4,53,63,18,243,68,191,213,40,60,62,57,36,249,62,128,182,110,191,168,186,114,63,66,196,6,191,220,120,13,190,176,47,61,63,18,186,127,191,219,74,76,63,3,114,106,190,209,55,228,190,238,47,106,63,53,58,118,191,200,172,16,63,50,247,188,61,243,4,53,191,111,232,126,63,9,51,83,191,142,29,140,62,188,206,206,62,108,41,101,191,61,51,121,63,67,70,26,191,222,42,61,189,81,119,44,63,138,139,125,191,213,167,89,63,143,181,162,190,171,244,184,190,184,165,95,63,32,164,123,191,119,139,35,63,243,4,53,63,9,51,83,191,171,244,184,62,3,114,106,62,176,47,61,191,138,139,125,63,108,41,101,191,57,36,249,62,50,247,188,61,119,139,35,191,53,58,118,63,168,186,114,191,67,70,26,63,222,42,61,189,66,196,6,191,238,47,106,63,32,164,123,191,243,4,53,63,213,40,60,190,188,206,206,190,213,167,89,63,18,186,127,191,219,74,76,63,143,181,162,190,142,29,140,190,18,243,68,63,111,232,126,191,184,165,95,63,209,55,228,190,220,120,13,190,81,119,44,63,61,51,121,191,128,182,110,63,200,172,16,191,243,4,53,63,184,165,95,191,66,196,6,63,222,42,61,189,209,55,228,190,9,51,83,63,111,232,126,191,238,47,106,63,67,70,26,191,220,120,13,62,171,244,184,62,18,243,68,191,32,164,123,63,168,186,114,191,81,119,44,63,3,114,106,190,142,29,140,190,243,4,53,63,53,58,118,191,61,51,121,63,176,47,61,191,143,181,162,62,213,40,60,62,119,139,35,191,128,182,110,63,138,139,125,191,219,74,76,63,188,206,206,190,50,247,188,189,200,172,16,63,108,41,101,191,18,186,127,63,213,167,89,191,57,36,249,62,243,4,53,63,238,47,106,191,81,119,44,63,143,181,162,190,50,247,188,189,57,36,249,62,219,74,76,191,61,51,121,63,32,164,123,191,9,51,83,63,66,196,6,191,220,120,13,62,142,29,140,62,119,139,35,191,108,41,101,63,18,186,127,191,128,182,110,63,243,4,53,191,171,244,184,62,222,42,61,61,209,55,228,190,18,243,68,63,53,58,118,191,138,139,125,63,213,167,89,191,200,172,16,63,213,40,60,190,3,114,106,190,67,70,26,63,184,165,95,191,111,232,126,63,168,186,114,191,176,47,61,63,188,206,206,190,243,4,53,63,168,186,114,191,219,74,76,63,200,172,16,191,142,29,140,62,222,42,61,61,171,244,184,190,119,139,35,63,213,167,89,191,61,51,121,63,111,232,126,191,238,47,106,63,176,47,61,191,57,36,249,62,213,40,60,190,220,120,13,190,209,55,228,62,243,4,53,191,108,41,101,63,138,139,125,191,32,164,123,63,184,165,95,191,81,119,44,63,188,206,206,190,50,247,188,61,3,114,106,62,66,196,6,191,18,243,68,63,128,182,110,191,18,186,127,63,53,58,118,191,9,51,83,63,67,70,26,191,143,181,162,62,243,4,53,63,61,51,121,191,108,41,101,63,18,243,68,191,67,70,26,63,188,206,206,190,213,40,60,62,222,42,61,61,142,29,140,190,57,36,249,62,81,119,44,191,9,51,83,63,128,182,110,191,138,139,125,63,111,232,126,191,168,186,114,63,213,167,89,191,243,4,53,63,66,196,6,191,143,181,162,62,50,247,188,189,220,120,13,190,171,244,184,62,200,172,16,191,176,47,61,63,184,165,95,191,53,58,118,63,18,186,127,191,32,164,123,63,238,47,106,191,219,74,76,63,119,139,35,191,209,55,228,62,3,114,106,190,243,4,53,63,138,139,125,191,53,58,118,63,238,47,106,191,213,167,89,63,18,243,68,191,81,119,44,63,200,172,16,191,209,55,228,62,143,181,162,190,213,40,60,62,222,42,61,189,50,247,188,189,3,114,106,62,171,244,184,190,57,36,249,62,67,70,26,191,243,4,53,63,219,74,76,191,184,165,95,63,128,182,110,191,61,51,121,63,111,232,126,191,18,186,127,63,32,164,123,191,168,186,114,63,108,41,101,191,9,51,83,63,176,47,61,191,119,139,35,63,66,196,6,191,188,206,206,62,142,29,140,190,220,120,13,62,243,4,53,63,18,186,127,191,111,232,126,63,138,139,125,191,32,164,123,63,61,51,121,191,53,58,118,63,168,186,114,191,128,182,110,63,238,47,106,191,108,41,101,63,184,165,95,191,213,167,89,63,9,51,83,191,219,74,76,63,18,243,68,191,176,47,61,63,243,4,53,191,81,119,44,63,119,139,35,191,67,70,26,63,200,172,16,191,66,196,6,63,57,36,249,190,209,55,228,62,188,206,206,190,171,244,184,62,143,181,162,190,142,29,140,62,3,114,106,190,213,40,60,62,220,120,13,190,50,247,188,61,222,42,61,189,243,4,53,63,2,190,127,63,44,248,126,63,226,174,125,63,207,226,123,63,224,148,121,63,69,198,118,63,113,120,115,63,23,173,111,63,44,102,107,63,229,165,102,63,181,110,97,63,77,195,91,63,152,166,85,63,189,27,79,63,28,38,72,63,75,201,64,63,22,9,57,63,123,233,48,63,172,110,40,63,7,157,31,63,24,121,22,63,150,7,13,63,94,77,3,63,234,158,242,62,2,38,222,62,148,58,201,62,103,231,179,62,122,55,158,62,251,53,136,62,135,220,99,62,158,215,54,62,114,116,9,62,208,148,183,61,47,196,55,61,243,4,53,63,226,174,125,63,69,198,118,63,44,102,107,63,77,195,91,63,28,38,72,63,123,233,48,63,24,121,22,63,234,158,242,62,103,231,179,62,135,220,99,62,208,148,183,61,47,196,55,189,158,215,54,190,122,55,158,190,2,38,222,190,150,7,13,191,172,110,40,191,75,201,64,191,152,166,85,191,229,165,102,191,113,120,115,191,207,226,123,191,2,190,127,191,44,248,126,191,224,148,121,191,23,173,111,191,181,110,97,191,189,27,79,191,22,9,57,191,7,157,31,191,94,77,3,191,148,58,201,190,251,53,136,190,114,116,9,190,243,4,53,63,224,148,121,63,229,165,102,63,28,38,72,63,7,157,31,63,2,38,222,62,135,220,99,62,50,49,141,36,135,220,99,190,2,38,222,190,7,157,31,191,28,38,72,191,229,165,102,191,224,148,121,191,0,0,128,191,224,148,121,191,229,165,102,191,28,38,72,191,7,157,31,191,2,38,222,190,135,220,99,190,202,201,83,165,135,220,99,62,2,38,222,62,7,157,31,63,28,38,72,63,229,165,102,63,224,148,121,63,0,0,128,63,224,148,121,63,229,165,102,63,28,38,72,63,7,157,31,63,2,38,222,62,135,220,99,62,243,4,53,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,50,49,141,36,122,55,158,190,24,121,22,191,189,27,79,191,113,120,115,191,0,0,128,191,113,120,115,191,189,27,79,191,24,121,22,191,122,55,158,190,202,201,83,165,122,55,158,62,24,121,22,63,189,27,79,63,113,120,115,63,0,0,128,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,126,125,176,37,122,55,158,190,24,121,22,191,189,27,79,191,113,120,115,191,0,0,128,191,113,120,115,191,189,27,79,191,24,121,22,191,122,55,158,190,243,4,53,63,44,102,107,63,123,233,48,63,103,231,179,62,47,196,55,189,2,38,222,190,75,201,64,191,113,120,115,191,44,248,126,191,181,110,97,191,7,157,31,191,251,53,136,190,114,116,9,62,94,77,3,63,189,27,79,63,224,148,121,63,207,226,123,63,152,166,85,63,150,7,13,63,158,215,54,62,135,220,99,190,24,121,22,191,77,195,91,191,226,174,125,191,69,198,118,191,28,38,72,191,234,158,242,190,208,148,183,189,122,55,158,62,172,110,40,63,229,165,102,63,2,190,127,63,23,173,111,63,22,9,57,63,148,58,201,62,243,4,53,63,181,110,97,63,150,7,13,63,208,148,183,61,148,58,201,190,28,38,72,191,207,226,123,191,113,120,115,191,123,233,48,191,251,53,136,190,135,220,99,62,172,110,40,63,23,173,111,63,226,174,125,63,189,27,79,63,2,38,222,62,47,196,55,189,94,77,3,191,77,195,91,191,2,190,127,191,229,165,102,191,24,121,22,191,114,116,9,190,103,231,179,62,75,201,64,63,224,148,121,63,69,198,118,63,22,9,57,63,122,55,158,62,158,215,54,190,7,157,31,191,44,102,107,191,44,248,126,191,152,166,85,191,234,158,242,190,243,4,53,63,152,166,85,63,148,58,201,62,158,215,54,190,123,233,48,191,224,148,121,191,23,173,111,191,24,121,22,191,47,196,55,189,94,77,3,63,229,165,102,63,226,174,125,63,75,201,64,63,251,53,136,62,122,55,158,190,28,38,72,191,44,248,126,191,181,110,97,191,234,158,242,190,208,148,183,61,7,157,31,63,113,120,115,63,69,198,118,63,172,110,40,63,114,116,9,62,2,38,222,190,77,195,91,191,2,190,127,191,189,27,79,191,103,231,179,190,135,220,99,62,22,9,57,63,207,226,123,63,44,102,107,63,150,7,13,63,243,4,53,63,28,38,72,63,135,220,99,62,2,38,222,190,229,165,102,191,224,148,121,191,7,157,31,191,202,201,83,165,7,157,31,63,224,148,121,63,229,165,102,63,2,38,222,62,135,220,99,190,28,38,72,191,0,0,128,191,28,38,72,191,135,220,99,190,2,38,222,62,229,165,102,63,224,148,121,63,7,157,31,63,88,215,30,38,7,157,31,191,224,148,121,191,229,165,102,191,2,38,222,190,135,220,99,62,28,38,72,63,0,0,128,63,28,38,72,63,135,220,99,62,2,38,222,190,229,165,102,191,224,148,121,191,7,157,31,191,243,4,53,63,22,9,57,63,47,196,55,61,172,110,40,191,44,248,126,191,28,38,72,191,114,116,9,190,24,121,22,63,207,226,123,63,152,166,85,63,135,220,99,62,94,77,3,191,69,198,118,191,181,110,97,191,122,55,158,190,2,38,222,62,23,173,111,63,44,102,107,63,148,58,201,62,103,231,179,190,229,165,102,191,113,120,115,191,234,158,242,190,251,53,136,62,77,195,91,63,224,148,121,63,150,7,13,63,158,215,54,190,189,27,79,191,226,174,125,191,7,157,31,191,208,148,183,61,75,201,64,63,2,190,127,63,123,233,48,63,243,4,53,63,172,110,40,63,114,116,9,190,152,166,85,191,69,198,118,191,2,38,222,190,148,58,201,62,113,120,115,63,77,195,91,63,158,215,54,62,7,157,31,191,2,190,127,191,123,233,48,191,208,148,183,61,189,27,79,63,224,148,121,63,234,158,242,62,103,231,179,190,23,173,111,191,181,110,97,191,135,220,99,190,24,121,22,63,44,248,126,63,22,9,57,63,47,196,55,189,28,38,72,191,207,226,123,191,94,77,3,191,122,55,158,62,44,102,107,63,229,165,102,63,251,53,136,62,150,7,13,191,226,174,125,191,75,201,64,191,243,4,53,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,202,201,83,165,189,27,79,63,113,120,115,63,122,55,158,62,24,121,22,191,0,0,128,191,24,121,22,191,122,55,158,62,113,120,115,63,189,27,79,63,88,215,30,38,189,27,79,191,113,120,115,191,122,55,158,190,24,121,22,63,0,0,128,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,15,47,66,167,189,27,79,63,113,120,115,63,122,55,158,62,24,121,22,191,0,0,128,191,24,121,22,191,122,55,158,62,113,120,115,63,189,27,79,63,243,4,53,63,94,77,3,63,234,158,242,190,2,190,127,191,150,7,13,191,2,38,222,62,44,248,126,63,24,121,22,63,148,58,201,190,226,174,125,191,7,157,31,191,103,231,179,62,207,226,123,63,172,110,40,63,122,55,158,190,224,148,121,191,123,233,48,191,251,53,136,62,69,198,118,63,22,9,57,63,135,220,99,190,113,120,115,191,75,201,64,191,158,215,54,62,23,173,111,63,28,38,72,63,114,116,9,190,44,102,107,191,189,27,79,191,208,148,183,61,229,165,102,63,152,166,85,63,47,196,55,189,181,110,97,191,77,195,91,191,243,4,53,63,2,38,222,62,7,157,31,191,224,148,121,191,135,220,99,190,28,38,72,63,229,165,102,63,126,125,176,37,229,165,102,191,28,38,72,191,135,220,99,62,224,148,121,63,7,157,31,63,2,38,222,190,0,0,128,191,2,38,222,190,7,157,31,63,224,148,121,63,135,220,99,62,28,38,72,191,229,165,102,191,15,47,66,167,229,165,102,63,28,38,72,63,135,220,99,190,224,148,121,191,7,157,31,191,2,38,222,62,0,0,128,63,2,38,222,62,7,157,31,191,224,148,121,191,135,220,99,190,28,38,72,63,229,165,102,63,243,4,53,63,103,231,179,62,75,201,64,191,181,110,97,191,114,116,9,62,224,148,121,63,150,7,13,63,24,121,22,191,69,198,118,191,208,148,183,189,229,165,102,63,22,9,57,63,148,58,201,190,2,190,127,191,122,55,158,190,28,38,72,63,77,195,91,63,158,215,54,190,207,226,123,191,94,77,3,191,7,157,31,63,113,120,115,63,47,196,55,61,44,102,107,191,123,233,48,191,2,38,222,62,44,248,126,63,251,53,136,62,189,27,79,191,152,166,85,191,135,220,99,62,226,174,125,63,234,158,242,62,172,110,40,191,23,173,111,191,243,4,53,63,251,53,136,62,77,195,91,191,22,9,57,191,234,158,242,62,224,148,121,63,47,196,55,61,113,120,115,191,150,7,13,191,172,110,40,63,229,165,102,63,158,215,54,190,44,248,126,191,103,231,179,190,189,27,79,63,28,38,72,63,148,58,201,190,226,174,125,191,114,116,9,190,44,102,107,63,7,157,31,63,24,121,22,191,23,173,111,191,208,148,183,61,207,226,123,63,2,38,222,62,75,201,64,191,152,166,85,191,122,55,158,62,2,190,127,63,135,220,99,62,181,110,97,191,123,233,48,191,94,77,3,63,69,198,118,63,243,4,53,63,158,215,54,62,23,173,111,191,94,77,3,191,75,201,64,63,28,38,72,63,234,158,242,190,113,120,115,191,114,116,9,62,2,190,127,63,135,220,99,62,44,102,107,191,150,7,13,191,22,9,57,63,189,27,79,63,2,38,222,190,69,198,118,191,208,148,183,61,44,248,126,63,251,53,136,62,229,165,102,191,24,121,22,191,123,233,48,63,152,166,85,63,148,58,201,190,224,148,121,191,47,196,55,61,226,174,125,63,122,55,158,62,181,110,97,191,7,157,31,191,172,110,40,63,77,195,91,63,103,231,179,190,207,226,123,191,243,4,53,63,208,148,183,61,207,226,123,191,251,53,136,190,23,173,111,63,2,38,222,62,77,195,91,191,24,121,22,191,75,201,64,63,22,9,57,63,7,157,31,191,152,166,85,191,234,158,242,62,44,102,107,63,122,55,158,190,224,148,121,191,114,116,9,62,2,190,127,63,47,196,55,61,226,174,125,191,135,220,99,190,113,120,115,63,148,58,201,62,181,110,97,191,150,7,13,191,28,38,72,63,123,233,48,63,172,110,40,191,189,27,79,191,94,77,3,63,229,165,102,63,103,231,179,190,69,198,118,191,158,215,54,62,44,248,126,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,243,4,53,63,208,148,183,189,207,226,123,191,251,53,136,62,23,173,111,63,2,38,222,190,77,195,91,191,24,121,22,63,75,201,64,63,22,9,57,191,7,157,31,191,152,166,85,63,234,158,242,62,44,102,107,191,122,55,158,190,224,148,121,63,114,116,9,62,2,190,127,191,47,196,55,61,226,174,125,63,135,220,99,190,113,120,115,191,148,58,201,62,181,110,97,63,150,7,13,191,28,38,72,191,123,233,48,63,172,110,40,63,189,27,79,191,94,77,3,191,229,165,102,63,103,231,179,62,69,198,118,191,158,215,54,190,44,248,126,63,243,4,53,63,158,215,54,190,23,173,111,191,94,77,3,63,75,201,64,63,28,38,72,191,234,158,242,190,113,120,115,63,114,116,9,62,2,190,127,191,135,220,99,62,44,102,107,63,150,7,13,191,22,9,57,191,189,27,79,63,2,38,222,62,69,198,118,191,208,148,183,189,44,248,126,63,251,53,136,190,229,165,102,191,24,121,22,63,123,233,48,63,152,166,85,191,148,58,201,190,224,148,121,63,47,196,55,61,226,174,125,191,122,55,158,62,181,110,97,63,7,157,31,191,172,110,40,191,77,195,91,63,103,231,179,62,207,226,123,191,243,4,53,63,251,53,136,190,77,195,91,191,22,9,57,63,234,158,242,62,224,148,121,191,47,196,55,61,113,120,115,63,150,7,13,191,172,110,40,191,229,165,102,63,158,215,54,62,44,248,126,191,103,231,179,62,189,27,79,63,28,38,72,191,148,58,201,190,226,174,125,63,114,116,9,190,44,102,107,191,7,157,31,63,24,121,22,63,23,173,111,191,208,148,183,189,207,226,123,63,2,38,222,190,75,201,64,191,152,166,85,63,122,55,158,62,2,190,127,191,135,220,99,62,181,110,97,63,123,233,48,191,94,77,3,191,69,198,118,63,243,4,53,63,103,231,179,190,75,201,64,191,181,110,97,63,114,116,9,62,224,148,121,191,150,7,13,63,24,121,22,63,69,198,118,191,208,148,183,61,229,165,102,63,22,9,57,191,148,58,201,190,2,190,127,63,122,55,158,190,28,38,72,191,77,195,91,63,158,215,54,62,207,226,123,191,94,77,3,63,7,157,31,63,113,120,115,191,47,196,55,61,44,102,107,63,123,233,48,191,2,38,222,190,44,248,126,63,251,53,136,190,189,27,79,191,152,166,85,63,135,220,99,62,226,174,125,191,234,158,242,62,172,110,40,63,23,173,111,191,243,4,53,63,2,38,222,190,7,157,31,191,224,148,121,63,135,220,99,190,28,38,72,191,229,165,102,63,88,215,30,38,229,165,102,191,28,38,72,63,135,220,99,62,224,148,121,191,7,157,31,63,2,38,222,62,0,0,128,191,2,38,222,62,7,157,31,63,224,148,121,191,135,220,99,62,28,38,72,63,229,165,102,191,130,33,119,167,229,165,102,63,28,38,72,191,135,220,99,190,224,148,121,63,7,157,31,191,2,38,222,190,0,0,128,63,2,38,222,190,7,157,31,191,224,148,121,63,135,220,99,190,28,38,72,191,229,165,102,63,243,4,53,63,94,77,3,191,234,158,242,190,2,190,127,63,150,7,13,191,2,38,222,190,44,248,126,63,24,121,22,191,148,58,201,190,226,174,125,63,7,157,31,191,103,231,179,190,207,226,123,63,172,110,40,191,122,55,158,190,224,148,121,63,123,233,48,191,251,53,136,190,69,198,118,63,22,9,57,191,135,220,99,190,113,120,115,63,75,201,64,191,158,215,54,190,23,173,111,63,28,38,72,191,114,116,9,190,44,102,107,63,189,27,79,191,208,148,183,189,229,165,102,63,152,166,85,191,47,196,55,189,181,110,97,63,77,195,91,191,243,4,53,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,23,22,247,165,189,27,79,63,113,120,115,191,122,55,158,62,24,121,22,63,0,0,128,191,24,121,22,63,122,55,158,62,113,120,115,191,189,27,79,63,222,94,13,166,189,27,79,191,113,120,115,63,122,55,158,190,24,121,22,191,0,0,128,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,231,54,141,167,189,27,79,63,113,120,115,191,122,55,158,62,24,121,22,63,0,0,128,191,24,121,22,63,122,55,158,62,113,120,115,191,189,27,79,63,243,4,53,63,172,110,40,191,114,116,9,190,152,166,85,63,69,198,118,191,2,38,222,62,148,58,201,62,113,120,115,191,77,195,91,63,158,215,54,190,7,157,31,191,2,190,127,63,123,233,48,191,208,148,183,189,189,27,79,63,224,148,121,191,234,158,242,62,103,231,179,62,23,173,111,191,181,110,97,63,135,220,99,190,24,121,22,191,44,248,126,63,22,9,57,191,47,196,55,189,28,38,72,63,207,226,123,191,94,77,3,63,122,55,158,62,44,102,107,191,229,165,102,63,251,53,136,190,150,7,13,191,226,174,125,63,75,201,64,191,243,4,53,63,22,9,57,191,47,196,55,61,172,110,40,63,44,248,126,191,28,38,72,63,114,116,9,190,24,121,22,191,207,226,123,63,152,166,85,191,135,220,99,62,94,77,3,63,69,198,118,191,181,110,97,63,122,55,158,190,2,38,222,190,23,173,111,63,44,102,107,191,148,58,201,62,103,231,179,62,229,165,102,191,113,120,115,63,234,158,242,190,251,53,136,190,77,195,91,63,224,148,121,191,150,7,13,63,158,215,54,62,189,27,79,191,226,174,125,63,7,157,31,191,208,148,183,189,75,201,64,63,2,190,127,191,123,233,48,63,243,4,53,63,28,38,72,191,135,220,99,62,2,38,222,62,229,165,102,191,224,148,121,63,7,157,31,191,233,136,48,167,7,157,31,63,224,148,121,191,229,165,102,63,2,38,222,190,135,220,99,190,28,38,72,63,0,0,128,191,28,38,72,63,135,220,99,190,2,38,222,190,229,165,102,63,224,148,121,191,7,157,31,63,217,213,140,37,7,157,31,191,224,148,121,63,229,165,102,191,2,38,222,62,135,220,99,62,28,38,72,191,0,0,128,63,28,38,72,191,135,220,99,62,2,38,222,62,229,165,102,191,224,148,121,63,7,157,31,191,243,4,53,63,152,166,85,191,148,58,201,62,158,215,54,62,123,233,48,191,224,148,121,63,23,173,111,191,24,121,22,63,47,196,55,189,94,77,3,191,229,165,102,63,226,174,125,191,75,201,64,63,251,53,136,190,122,55,158,190,28,38,72,63,44,248,126,191,181,110,97,63,234,158,242,190,208,148,183,189,7,157,31,63,113,120,115,191,69,198,118,63,172,110,40,191,114,116,9,62,2,38,222,62,77,195,91,191,2,190,127,63,189,27,79,191,103,231,179,62,135,220,99,62,22,9,57,191,207,226,123,63,44,102,107,191,150,7,13,63,243,4,53,63,181,110,97,191,150,7,13,63,208,148,183,189,148,58,201,190,28,38,72,63,207,226,123,191,113,120,115,63,123,233,48,191,251,53,136,62,135,220,99,62,172,110,40,191,23,173,111,63,226,174,125,191,189,27,79,63,2,38,222,190,47,196,55,189,94,77,3,63,77,195,91,191,2,190,127,63,229,165,102,191,24,121,22,63,114,116,9,190,103,231,179,190,75,201,64,63,224,148,121,191,69,198,118,63,22,9,57,191,122,55,158,62,158,215,54,62,7,157,31,191,44,102,107,63,44,248,126,191,152,166,85,63,234,158,242,190,243,4,53,63,44,102,107,191,123,233,48,63,103,231,179,190,47,196,55,189,2,38,222,62,75,201,64,191,113,120,115,63,44,248,126,191,181,110,97,63,7,157,31,191,251,53,136,62,114,116,9,62,94,77,3,191,189,27,79,63,224,148,121,191,207,226,123,63,152,166,85,191,150,7,13,63,158,215,54,190,135,220,99,190,24,121,22,63,77,195,91,191,226,174,125,63,69,198,118,191,28,38,72,63,234,158,242,190,208,148,183,61,122,55,158,62,172,110,40,191,229,165,102,63,2,190,127,191,23,173,111,63,22,9,57,191,148,58,201,62,243,4,53,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,88,215,30,38,122,55,158,190,24,121,22,63,189,27,79,191,113,120,115,63,0,0,128,191,113,120,115,63,189,27,79,191,24,121,22,63,122,55,158,190,130,33,119,167,122,55,158,62,24,121,22,191,189,27,79,63,113,120,115,191,0,0,128,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,91,26,141,38,122,55,158,190,24,121,22,63,189,27,79,191,113,120,115,63,0,0,128,191,113,120,115,63,189,27,79,191,24,121,22,63,122,55,158,190,243,4,53,63,224,148,121,191,229,165,102,63,28,38,72,191,7,157,31,63,2,38,222,190,135,220,99,62,8,72,141,166,135,220,99,190,2,38,222,62,7,157,31,191,28,38,72,63,229,165,102,191,224,148,121,63,0,0,128,191,224,148,121,63,229,165,102,191,28,38,72,63,7,157,31,191,2,38,222,62,135,220,99,190,250,9,150,167,135,220,99,62,2,38,222,190,7,157,31,63,28,38,72,191,229,165,102,63,224,148,121,191,0,0,128,63,224,148,121,191,229,165,102,63,28,38,72,191,7,157,31,63,2,38,222,190,135,220,99,62,243,4,53,63,226,174,125,191,69,198,118,63,44,102,107,191,77,195,91,63,28,38,72,191,123,233,48,63,24,121,22,191,234,158,242,62,103,231,179,190,135,220,99,62,208,148,183,189,47,196,55,189,158,215,54,62,122,55,158,190,2,38,222,62,150,7,13,191,172,110,40,63,75,201,64,191,152,166,85,63,229,165,102,191,113,120,115,63,207,226,123,191,2,190,127,63,44,248,126,191,224,148,121,63,23,173,111,191,181,110,97,63,189,27,79,191,22,9,57,63,7,157,31,191,94,77,3,63,148,58,201,190,251,53,136,62,114,116,9,190,243,4,53,63,2,190,127,191,44,248,126,63,226,174,125,191,207,226,123,63,224,148,121,191,69,198,118,63,113,120,115,191,23,173,111,63,44,102,107,191,229,165,102,63,181,110,97,191,77,195,91,63,152,166,85,191,189,27,79,63,28,38,72,191,75,201,64,63,22,9,57,191,123,233,48,63,172,110,40,191,7,157,31,63,24,121,22,191,150,7,13,63,94,77,3,191,234,158,242,62,2,38,222,190,148,58,201,62,103,231,179,190,122,55,158,62,251,53,136,190,135,220,99,62,158,215,54,190,114,116,9,62,208,148,183,189,47,196,55,61,243,4,53,63,160,193,127,63,158,6,127,63,85,207,125,63,92,28,124,63,137,238,121,63,234,70,119,63,203,38,116,63,178,143,112,63,94,131,108,63,202,3,104,63,36,19,99,63,215,179,93,63,128,232,87,63,243,179,81,63,52,25,75,63,125,27,68,63,53,190,60,63,243,4,53,63,123,243,44,63,187,141,36,63,202,215,27,63,232,213,18,63,120,140,9,63,0,0,0,63,80,106,236,62,108,97,216,62,21,239,195,62,68,29,175,62,28,246,153,62,238,131,132,62,89,162,93,62,212,208,49,62,168,168,5,62,182,126,178,61,62,170,50,61,243,4,53,63,85,207,125,63,234,70,119,63,94,131,108,63,215,179,93,63,52,25,75,63,243,4,53,63,202,215,27,63,0,0,0,63,21,239,195,62,238,131,132,62,168,168,5,62,50,49,141,36,168,168,5,190,238,131,132,190,21,239,195,190,0,0,0,191,202,215,27,191,243,4,53,191,52,25,75,191,215,179,93,191,94,131,108,191,234,70,119,191,85,207,125,191,0,0,128,191,85,207,125,191,234,70,119,191,94,131,108,191,215,179,93,191,52,25,75,191,243,4,53,191,202,215,27,191,0,0,0,191,21,239,195,190,238,131,132,190,168,168,5,190,243,4,53,63,137,238,121,63,202,3,104,63,52,25,75,63,187,141,36,63,80,106,236,62,238,131,132,62,62,170,50,61,212,208,49,190,21,239,195,190,232,213,18,191,53,190,60,191,215,179,93,191,203,38,116,191,158,6,127,191,85,207,125,191,178,143,112,191,128,232,87,191,243,4,53,191,120,140,9,191,68,29,175,190,168,168,5,190,182,126,178,61,28,246,153,62,0,0,0,63,123,243,44,63,243,179,81,63,94,131,108,63,92,28,124,63,160,193,127,63,234,70,119,63,36,19,99,63,125,27,68,63,202,215,27,63,108,97,216,62,89,162,93,62,243,4,53,63,203,38,116,63,243,179,81,63,202,215,27,63,68,29,175,62,62,170,50,61,238,131,132,190,120,140,9,191,125,27,68,191,94,131,108,191,158,6,127,191,137,238,121,191,215,179,93,191,123,243,44,191,108,97,216,190,168,168,5,190,212,208,49,62,80,106,236,62,243,4,53,63,36,19,99,63,92,28,124,63,85,207,125,63,202,3,104,63,53,190,60,63,0,0,0,63,89,162,93,62,182,126,178,189,21,239,195,190,187,141,36,191,128,232,87,191,234,70,119,191,160,193,127,191,178,143,112,191,52,25,75,191,232,213,18,191,28,246,153,190,243,4,53,63,94,131,108,63,243,4,53,63,21,239,195,62,50,49,141,36,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,202,201,83,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,126,125,176,37,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,243,4,53,63,36,19,99,63,232,213,18,63,168,168,5,62,68,29,175,190,53,190,60,191,234,70,119,191,137,238,121,191,125,27,68,191,21,239,195,190,182,126,178,61,120,140,9,63,215,179,93,63,160,193,127,63,202,3,104,63,202,215,27,63,212,208,49,62,28,246,153,190,243,4,53,191,203,38,116,191,92,28,124,191,52,25,75,191,108,97,216,190,62,170,50,61,0,0,0,63,128,232,87,63,158,6,127,63,94,131,108,63,187,141,36,63,89,162,93,62,238,131,132,190,123,243,44,191,178,143,112,191,85,207,125,191,243,179,81,191,80,106,236,190,243,4,53,63,128,232,87,63,108,97,216,62,168,168,5,190,187,141,36,191,203,38,116,191,234,70,119,191,123,243,44,191,212,208,49,190,21,239,195,62,243,179,81,63,160,193,127,63,215,179,93,63,80,106,236,62,182,126,178,189,202,215,27,191,178,143,112,191,137,238,121,191,243,4,53,191,89,162,93,190,68,29,175,62,52,25,75,63,158,6,127,63,36,19,99,63,0,0,0,63,62,170,50,189,232,213,18,191,94,131,108,191,92,28,124,191,53,190,60,191,238,131,132,190,28,246,153,62,125,27,68,63,85,207,125,63,202,3,104,63,120,140,9,63,243,4,53,63,52,25,75,63,238,131,132,62,21,239,195,190,215,179,93,191,85,207,125,191,243,4,53,191,168,168,5,190,0,0,0,63,94,131,108,63,234,70,119,63,202,215,27,63,126,125,176,37,202,215,27,191,234,70,119,191,94,131,108,191,0,0,0,191,168,168,5,62,243,4,53,63,85,207,125,63,215,179,93,63,21,239,195,62,238,131,132,190,52,25,75,191,0,0,128,191,52,25,75,191,238,131,132,190,21,239,195,62,215,179,93,63,85,207,125,63,243,4,53,63,168,168,5,62,0,0,0,191,94,131,108,191,234,70,119,191,202,215,27,191,243,4,53,63,53,190,60,63,182,126,178,61,202,215,27,191,92,28,124,191,128,232,87,191,238,131,132,190,80,106,236,62,178,143,112,63,94,131,108,63,108,97,216,62,28,246,153,190,215,179,93,191,137,238,121,191,232,213,18,191,168,168,5,62,125,27,68,63,160,193,127,63,243,4,53,63,62,170,50,61,187,141,36,191,85,207,125,191,243,179,81,191,89,162,93,190,0,0,0,63,203,38,116,63,202,3,104,63,21,239,195,62,68,29,175,190,36,19,99,191,234,70,119,191,120,140,9,191,212,208,49,62,52,25,75,63,158,6,127,63,123,243,44,63,243,4,53,63,123,243,44,63,182,126,178,189,52,25,75,191,92,28,124,191,120,140,9,191,238,131,132,62,36,19,99,63,178,143,112,63,21,239,195,62,108,97,216,190,203,38,116,191,215,179,93,191,89,162,93,190,232,213,18,63,85,207,125,63,125,27,68,63,62,170,50,61,243,4,53,191,160,193,127,191,187,141,36,191,168,168,5,62,243,179,81,63,137,238,121,63,0,0,0,63,28,246,153,190,202,3,104,191,94,131,108,191,68,29,175,190,80,106,236,62,234,70,119,63,128,232,87,63,212,208,49,62,202,215,27,191,158,6,127,191,53,190,60,191,243,4,53,63,202,215,27,63,238,131,132,190,94,131,108,191,215,179,93,191,168,168,5,190,243,4,53,63,85,207,125,63,0,0,0,63,21,239,195,190,234,70,119,191,52,25,75,191,122,58,194,38,52,25,75,63,234,70,119,63,21,239,195,62,0,0,0,191,85,207,125,191,243,4,53,191,168,168,5,62,215,179,93,63,94,131,108,63,238,131,132,62,202,215,27,191,0,0,128,191,202,215,27,191,238,131,132,62,94,131,108,63,215,179,93,63,168,168,5,62,243,4,53,191,85,207,125,191,0,0,0,191,21,239,195,62,234,70,119,63,52,25,75,63,243,4,53,63,120,140,9,63,108,97,216,190,85,207,125,191,187,141,36,191,28,246,153,62,234,70,119,63,53,190,60,63,212,208,49,190,94,131,108,191,243,179,81,191,62,170,50,61,215,179,93,63,36,19,99,63,182,126,178,61,52,25,75,191,178,143,112,191,89,162,93,190,243,4,53,63,137,238,121,63,68,29,175,62,202,215,27,191,158,6,127,191,80,106,236,190,0,0,0,63,160,193,127,63,232,213,18,63,21,239,195,190,92,28,124,191,123,243,44,191,238,131,132,62,203,38,116,63,125,27,68,63,168,168,5,190,202,3,104,191,128,232,87,191,243,4,53,63,80,106,236,62,232,213,18,191,85,207,125,191,68,29,175,190,123,243,44,63,234,70,119,63,89,162,93,62,125,27,68,191,94,131,108,191,182,126,178,189,128,232,87,63,215,179,93,63,62,170,50,189,202,3,104,191,52,25,75,191,212,208,49,62,203,38,116,63,243,4,53,63,28,246,153,190,92,28,124,191,202,215,27,191,108,97,216,62,160,193,127,63,0,0,0,63,120,140,9,191,158,6,127,191,21,239,195,190,187,141,36,63,137,238,121,63,238,131,132,62,53,190,60,191,178,143,112,191,168,168,5,190,243,179,81,63,36,19,99,63,243,4,53,63,21,239,195,62,243,4,53,191,94,131,108,191,202,201,83,165,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,88,215,30,38,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,222,94,13,166,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,243,4,53,63,28,246,153,62,243,179,81,191,52,25,75,191,68,29,175,62,160,193,127,63,238,131,132,62,128,232,87,191,125,27,68,191,21,239,195,62,158,6,127,63,89,162,93,62,215,179,93,191,53,190,60,191,108,97,216,62,85,207,125,63,212,208,49,62,36,19,99,191,243,4,53,191,80,106,236,62,92,28,124,63,168,168,5,62,202,3,104,191,123,243,44,191,0,0,0,63,137,238,121,63,182,126,178,61,94,131,108,191,187,141,36,191,120,140,9,63,234,70,119,63,62,170,50,61,178,143,112,191,202,215,27,191,232,213,18,63,203,38,116,63,243,4,53,63,89,162,93,62,202,3,104,191,202,215,27,191,187,141,36,63,36,19,99,63,238,131,132,190,160,193,127,191,212,208,49,190,94,131,108,63,232,213,18,63,123,243,44,191,215,179,93,191,28,246,153,62,158,6,127,63,168,168,5,62,178,143,112,191,120,140,9,191,243,4,53,63,128,232,87,63,68,29,175,190,85,207,125,191,182,126,178,189,203,38,116,63,0,0,0,63,53,190,60,191,243,179,81,191,21,239,195,62,92,28,124,63,62,170,50,61,234,70,119,191,80,106,236,190,125,27,68,63,52,25,75,63,108,97,216,190,137,238,121,191,243,4,53,63,168,168,5,62,234,70,119,191,21,239,195,190,215,179,93,63,202,215,27,63,243,4,53,191,52,25,75,191,0,0,0,63,94,131,108,63,238,131,132,190,85,207,125,191,233,136,48,167,85,207,125,63,238,131,132,62,94,131,108,191,0,0,0,191,52,25,75,63,243,4,53,63,202,215,27,191,215,179,93,191,21,239,195,62,234,70,119,63,168,168,5,190,0,0,128,191,168,168,5,190,234,70,119,63,21,239,195,62,215,179,93,191,202,215,27,191,243,4,53,63,52,25,75,63,0,0,0,191,94,131,108,191,238,131,132,62,85,207,125,63,243,4,53,63,62,170,50,61,158,6,127,191,168,168,5,190,92,28,124,63,89,162,93,62,234,70,119,191,28,246,153,190,178,143,112,63,21,239,195,62,202,3,104,191,80,106,236,190,215,179,93,63,120,140,9,63,243,179,81,191,202,215,27,191,125,27,68,63,123,243,44,63,243,4,53,191,53,190,60,191,187,141,36,63,52,25,75,63,232,213,18,191,128,232,87,191,0,0,0,63,36,19,99,63,108,97,216,190,94,131,108,191,68,29,175,62,203,38,116,63,238,131,132,190,137,238,121,191,212,208,49,62,85,207,125,63,182,126,178,189,160,193,127,191,243,4,53,63,62,170,50,189,158,6,127,191,168,168,5,62,92,28,124,63,89,162,93,190,234,70,119,191,28,246,153,62,178,143,112,63,21,239,195,190,202,3,104,191,80,106,236,62,215,179,93,63,120,140,9,191,243,179,81,191,202,215,27,63,125,27,68,63,123,243,44,191,243,4,53,191,53,190,60,63,187,141,36,63,52,25,75,191,232,213,18,191,128,232,87,63,0,0,0,63,36,19,99,191,108,97,216,190,94,131,108,63,68,29,175,62,203,38,116,191,238,131,132,190,137,238,121,63,212,208,49,62,85,207,125,191,182,126,178,189,160,193,127,63,243,4,53,63,168,168,5,190,234,70,119,191,21,239,195,62,215,179,93,63,202,215,27,191,243,4,53,191,52,25,75,63,0,0,0,63,94,131,108,191,238,131,132,190,85,207,125,63,252,91,57,39,85,207,125,191,238,131,132,62,94,131,108,63,0,0,0,191,52,25,75,191,243,4,53,63,202,215,27,63,215,179,93,191,21,239,195,190,234,70,119,63,168,168,5,62,0,0,128,191,168,168,5,62,234,70,119,63,21,239,195,190,215,179,93,191,202,215,27,63,243,4,53,63,52,25,75,191,0,0,0,191,94,131,108,63,238,131,132,62,85,207,125,191,243,4,53,63,89,162,93,190,202,3,104,191,202,215,27,63,187,141,36,63,36,19,99,191,238,131,132,190,160,193,127,63,212,208,49,190,94,131,108,191,232,213,18,63,123,243,44,63,215,179,93,191,28,246,153,190,158,6,127,63,168,168,5,190,178,143,112,191,120,140,9,63,243,4,53,63,128,232,87,191,68,29,175,190,85,207,125,63,182,126,178,189,203,38,116,191,0,0,0,63,53,190,60,63,243,179,81,191,21,239,195,190,92,28,124,63,62,170,50,189,234,70,119,191,80,106,236,62,125,27,68,63,52,25,75,191,108,97,216,190,137,238,121,63,243,4,53,63,28,246,153,190,243,179,81,191,52,25,75,63,68,29,175,62,160,193,127,191,238,131,132,62,128,232,87,63,125,27,68,191,21,239,195,190,158,6,127,63,89,162,93,190,215,179,93,191,53,190,60,63,108,97,216,62,85,207,125,191,212,208,49,62,36,19,99,63,243,4,53,191,80,106,236,190,92,28,124,63,168,168,5,190,202,3,104,191,123,243,44,63,0,0,0,63,137,238,121,191,182,126,178,61,94,131,108,63,187,141,36,191,120,140,9,191,234,70,119,63,62,170,50,189,178,143,112,191,202,215,27,63,232,213,18,63,203,38,116,191,243,4,53,63,21,239,195,190,243,4,53,191,94,131,108,63,126,125,176,37,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,138,140,141,165,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,231,54,141,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,243,4,53,63,80,106,236,190,232,213,18,191,85,207,125,63,68,29,175,190,123,243,44,191,234,70,119,63,89,162,93,190,125,27,68,191,94,131,108,63,182,126,178,189,128,232,87,191,215,179,93,63,62,170,50,61,202,3,104,191,52,25,75,63,212,208,49,62,203,38,116,191,243,4,53,63,28,246,153,62,92,28,124,191,202,215,27,63,108,97,216,62,160,193,127,191,0,0,0,63,120,140,9,63,158,6,127,191,21,239,195,62,187,141,36,63,137,238,121,191,238,131,132,62,53,190,60,63,178,143,112,191,168,168,5,62,243,179,81,63,36,19,99,191,243,4,53,63,120,140,9,191,108,97,216,190,85,207,125,63,187,141,36,191,28,246,153,190,234,70,119,63,53,190,60,191,212,208,49,190,94,131,108,63,243,179,81,191,62,170,50,189,215,179,93,63,36,19,99,191,182,126,178,61,52,25,75,63,178,143,112,191,89,162,93,62,243,4,53,63,137,238,121,191,68,29,175,62,202,215,27,63,158,6,127,191,80,106,236,62,0,0,0,63,160,193,127,191,232,213,18,63,21,239,195,62,92,28,124,191,123,243,44,63,238,131,132,62,203,38,116,191,125,27,68,63,168,168,5,62,202,3,104,191,128,232,87,63,243,4,53,63,202,215,27,191,238,131,132,190,94,131,108,63,215,179,93,191,168,168,5,62,243,4,53,63,85,207,125,191,0,0,0,63,21,239,195,62,234,70,119,191,52,25,75,63,119,247,83,166,52,25,75,191,234,70,119,63,21,239,195,190,0,0,0,191,85,207,125,63,243,4,53,191,168,168,5,190,215,179,93,63,94,131,108,191,238,131,132,62,202,215,27,63,0,0,128,191,202,215,27,63,238,131,132,62,94,131,108,191,215,179,93,63,168,168,5,190,243,4,53,191,85,207,125,63,0,0,0,191,21,239,195,190,234,70,119,63,52,25,75,191,243,4,53,63,123,243,44,191,182,126,178,189,52,25,75,63,92,28,124,191,120,140,9,63,238,131,132,62,36,19,99,191,178,143,112,63,21,239,195,190,108,97,216,190,203,38,116,63,215,179,93,191,89,162,93,62,232,213,18,63,85,207,125,191,125,27,68,63,62,170,50,189,243,4,53,191,160,193,127,63,187,141,36,191,168,168,5,190,243,179,81,63,137,238,121,191,0,0,0,63,28,246,153,62,202,3,104,191,94,131,108,63,68,29,175,190,80,106,236,190,234,70,119,63,128,232,87,191,212,208,49,62,202,215,27,63,158,6,127,191,53,190,60,63,243,4,53,63,53,190,60,191,182,126,178,61,202,215,27,63,92,28,124,191,128,232,87,63,238,131,132,190,80,106,236,190,178,143,112,63,94,131,108,191,108,97,216,62,28,246,153,62,215,179,93,191,137,238,121,63,232,213,18,191,168,168,5,190,125,27,68,63,160,193,127,191,243,4,53,63,62,170,50,189,187,141,36,191,85,207,125,63,243,179,81,191,89,162,93,62,0,0,0,63,203,38,116,191,202,3,104,63,21,239,195,190,68,29,175,190,36,19,99,63,234,70,119,191,120,140,9,63,212,208,49,62,52,25,75,191,158,6,127,63,123,243,44,191,243,4,53,63,52,25,75,191,238,131,132,62,21,239,195,62,215,179,93,191,85,207,125,63,243,4,53,191,168,168,5,62,0,0,0,63,94,131,108,191,234,70,119,63,202,215,27,191,53,213,83,167,202,215,27,63,234,70,119,191,94,131,108,63,0,0,0,191,168,168,5,190,243,4,53,63,85,207,125,191,215,179,93,63,21,239,195,190,238,131,132,190,52,25,75,63,0,0,128,191,52,25,75,63,238,131,132,190,21,239,195,190,215,179,93,63,85,207,125,191,243,4,53,63,168,168,5,190,0,0,0,191,94,131,108,63,234,70,119,191,202,215,27,63,243,4,53,63,128,232,87,191,108,97,216,62,168,168,5,62,187,141,36,191,203,38,116,63,234,70,119,191,123,243,44,63,212,208,49,190,21,239,195,190,243,179,81,63,160,193,127,191,215,179,93,63,80,106,236,190,182,126,178,189,202,215,27,63,178,143,112,191,137,238,121,63,243,4,53,191,89,162,93,62,68,29,175,62,52,25,75,191,158,6,127,63,36,19,99,191,0,0,0,63,62,170,50,61,232,213,18,191,94,131,108,63,92,28,124,191,53,190,60,63,238,131,132,190,28,246,153,190,125,27,68,63,85,207,125,191,202,3,104,63,120,140,9,191,243,4,53,63,36,19,99,191,232,213,18,63,168,168,5,190,68,29,175,190,53,190,60,63,234,70,119,191,137,238,121,63,125,27,68,191,21,239,195,62,182,126,178,61,120,140,9,191,215,179,93,63,160,193,127,191,202,3,104,63,202,215,27,191,212,208,49,62,28,246,153,62,243,4,53,191,203,38,116,63,92,28,124,191,52,25,75,63,108,97,216,190,62,170,50,189,0,0,0,63,128,232,87,191,158,6,127,63,94,131,108,191,187,141,36,63,89,162,93,190,238,131,132,190,123,243,44,63,178,143,112,191,85,207,125,63,243,179,81,191,80,106,236,62,243,4,53,63,94,131,108,191,243,4,53,63,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,222,94,13,166,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,231,54,141,167,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,213,12,22,40,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,243,4,53,63,203,38,116,191,243,179,81,63,202,215,27,191,68,29,175,62,62,170,50,189,238,131,132,190,120,140,9,63,125,27,68,191,94,131,108,63,158,6,127,191,137,238,121,63,215,179,93,191,123,243,44,63,108,97,216,190,168,168,5,62,212,208,49,62,80,106,236,190,243,4,53,63,36,19,99,191,92,28,124,63,85,207,125,191,202,3,104,63,53,190,60,191,0,0,0,63,89,162,93,190,182,126,178,189,21,239,195,62,187,141,36,191,128,232,87,63,234,70,119,191,160,193,127,63,178,143,112,191,52,25,75,63,232,213,18,191,28,246,153,62,243,4,53,63,137,238,121,191,202,3,104,63,52,25,75,191,187,141,36,63,80,106,236,190,238,131,132,62,62,170,50,189,212,208,49,190,21,239,195,62,232,213,18,191,53,190,60,63,215,179,93,191,203,38,116,63,158,6,127,191,85,207,125,63,178,143,112,191,128,232,87,63,243,4,53,191,120,140,9,63,68,29,175,190,168,168,5,62,182,126,178,61,28,246,153,190,0,0,0,63,123,243,44,191,243,179,81,63,94,131,108,191,92,28,124,63,160,193,127,191,234,70,119,63,36,19,99,191,125,27,68,63,202,215,27,191,108,97,216,62,89,162,93,190,243,4,53,63,85,207,125,191,234,70,119,63,94,131,108,191,215,179,93,63,52,25,75,191,243,4,53,63,202,215,27,191,0,0,0,63,21,239,195,190,238,131,132,62,168,168,5,190,82,66,141,39,168,168,5,62,238,131,132,190,21,239,195,62,0,0,0,191,202,215,27,63,243,4,53,191,52,25,75,63,215,179,93,191,94,131,108,63,234,70,119,191,85,207,125,63,0,0,128,191,85,207,125,63,234,70,119,191,94,131,108,63,215,179,93,191,52,25,75,63,243,4,53,191,202,215,27,63,0,0,0,191,21,239,195,62,238,131,132,190,168,168,5,62,243,4,53,63,160,193,127,191,158,6,127,63,85,207,125,191,92,28,124,63,137,238,121,191,234,70,119,63,203,38,116,191,178,143,112,63,94,131,108,191,202,3,104,63,36,19,99,191,215,179,93,63,128,232,87,191,243,179,81,63,52,25,75,191,125,27,68,63,53,190,60,191,243,4,53,63,123,243,44,191,187,141,36,63,202,215,27,191,232,213,18,63,120,140,9,191,0,0,0,63,80,106,236,190,108,97,216,62,21,239,195,190,68,29,175,62,28,246,153,190,238,131,132,62,89,162,93,190,212,208,49,62,168,168,5,190,182,126,178,61,62,170,50,189,243,4,53,63,243,196,127,63,232,19,127,63,48,237,125,63,83,81,124,63,15,65,122,63,89,189,119,63,88,199,116,63,107,96,113,63,35,138,109,63,69,70,105,63,202,150,100,63,218,125,95,63,208,253,89,63,53,25,84,63,194,210,77,63,90,45,71,63,15,44,64,63,29,210,56,63,232,34,49,63,251,33,41,63,7,211,32,63,225,57,24,63,130,90,15,63,1,57,6,63,39,179,249,62,27,129,230,62,184,228,210,62,11,231,190,62,77,145,170,62,222,236,149,62,69,3,129,62,78,188,87,62,141,14,45,62,246,16,2,62,187,174,173,61,212,214,45,61,243,4,53,63,48,237,125,63,89,189,119,63,35,138,109,63,218,125,95,63,194,210,77,63,29,210,56,63,7,211,32,63,1,57,6,63,184,228,210,62,222,236,149,62,141,14,45,62,212,214,45,61,187,174,173,189,78,188,87,190,77,145,170,190,27,129,230,190,130,90,15,191,251,33,41,191,15,44,64,191,53,25,84,191,202,150,100,191,107,96,113,191,15,65,122,191,232,19,127,191,243,196,127,191,83,81,124,191,88,199,116,191,69,70,105,191,208,253,89,191,90,45,71,191,232,34,49,191,225,57,24,191,39,179,249,190,11,231,190,190,69,3,129,190,246,16,2,190,243,4,53,63,15,65,122,63,69,70,105,63,194,210,77,63,251,33,41,63,39,179,249,62,222,236,149,62,187,174,173,61,246,16,2,190,77,145,170,190,1,57,6,191,232,34,49,191,53,25,84,191,35,138,109,191,83,81,124,191,243,196,127,191,89,189,119,191,202,150,100,191,90,45,71,191,7,211,32,191,27,129,230,190,69,3,129,190,212,214,45,189,141,14,45,62,11,231,190,62,130,90,15,63,29,210,56,63,208,253,89,63,107,96,113,63,48,237,125,63,232,19,127,63,88,199,116,63,218,125,95,63,15,44,64,63,225,57,24,63,184,228,210,62,78,188,87,62,243,4,53,63,88,199,116,63,53,25,84,63,7,211,32,63,11,231,190,62,187,174,173,61,78,188,87,190,39,179,249,190,29,210,56,191,202,150,100,191,83,81,124,191,48,237,125,191,69,70,105,191,15,44,64,191,1,57,6,191,69,3,129,190,212,214,45,61,77,145,170,62,225,57,24,63,194,210,77,63,107,96,113,63,243,196,127,63,89,189,119,63,208,253,89,63,251,33,41,63,184,228,210,62,246,16,2,62,141,14,45,190,27,129,230,190,232,34,49,191,218,125,95,191,15,65,122,191,232,19,127,191,35,138,109,191,90,45,71,191,130,90,15,191,222,236,149,190,243,4,53,63,35,138,109,63,29,210,56,63,184,228,210,62,212,214,45,61,77,145,170,190,251,33,41,191,202,150,100,191,232,19,127,191,88,199,116,191,90,45,71,191,39,179,249,190,246,16,2,190,69,3,129,62,225,57,24,63,208,253,89,63,83,81,124,63,15,65,122,63,53,25,84,63,130,90,15,63,78,188,87,62,141,14,45,190,1,57,6,191,194,210,77,191,89,189,119,191,48,237,125,191,218,125,95,191,7,211,32,191,222,236,149,190,187,174,173,61,27,129,230,62,15,44,64,63,107,96,113,63,243,196,127,63,69,70,105,63,232,34,49,63,11,231,190,62,243,4,53,63,202,150,100,63,225,57,24,63,141,14,45,62,222,236,149,190,232,34,49,191,107,96,113,191,48,237,125,191,53,25,84,191,39,179,249,190,212,214,45,189,184,228,210,62,90,45,71,63,15,65,122,63,89,189,119,63,15,44,64,63,11,231,190,62,187,174,173,189,1,57,6,191,208,253,89,191,232,19,127,191,35,138,109,191,251,33,41,191,69,3,129,190,78,188,87,62,7,211,32,63,69,70,105,63,243,196,127,63,218,125,95,63,130,90,15,63,246,16,2,62,77,145,170,190,29,210,56,191,88,199,116,191,83,81,124,191,194,210,77,191,27,129,230,190,243,4,53,63,208,253,89,63,27,129,230,62,187,174,173,189,225,57,24,191,35,138,109,191,83,81,124,191,15,44,64,191,222,236,149,190,69,3,129,62,29,210,56,63,15,65,122,63,107,96,113,63,7,211,32,63,246,16,2,62,184,228,210,190,53,25,84,191,243,196,127,191,218,125,95,191,39,179,249,190,212,214,45,61,130,90,15,63,69,70,105,63,48,237,125,63,90,45,71,63,77,145,170,62,78,188,87,190,232,34,49,191,89,189,119,191,88,199,116,191,251,33,41,191,141,14,45,190,11,231,190,62,194,210,77,63,232,19,127,63,202,150,100,63,1,57,6,63,243,4,53,63,194,210,77,63,222,236,149,62,77,145,170,190,53,25,84,191,243,196,127,191,90,45,71,191,69,3,129,190,11,231,190,62,208,253,89,63,232,19,127,63,15,44,64,63,78,188,87,62,184,228,210,190,218,125,95,191,48,237,125,191,29,210,56,191,141,14,45,190,27,129,230,62,202,150,100,63,83,81,124,63,232,34,49,63,246,16,2,62,39,179,249,190,69,70,105,191,15,65,122,191,251,33,41,191,187,174,173,189,1,57,6,63,35,138,109,63,89,189,119,63,7,211,32,63,212,214,45,61,130,90,15,191,107,96,113,191,88,199,116,191,225,57,24,191,243,4,53,63,15,44,64,63,246,16,2,62,130,90,15,191,89,189,119,191,202,150,100,191,11,231,190,190,77,145,170,62,218,125,95,63,15,65,122,63,225,57,24,63,187,174,173,189,29,210,56,191,243,196,127,191,90,45,71,191,141,14,45,190,1,57,6,63,88,199,116,63,69,70,105,63,184,228,210,62,222,236,149,190,208,253,89,191,83,81,124,191,7,211,32,191,212,214,45,61,232,34,49,63,232,19,127,63,194,210,77,63,78,188,87,62,39,179,249,190,107,96,113,191,35,138,109,191,27,129,230,190,69,3,129,62,53,25,84,63,48,237,125,63,251,33,41,63,243,4,53,63,232,34,49,63,212,214,45,189,15,44,64,191,232,19,127,191,7,211,32,191,246,16,2,62,194,210,77,63,83,81,124,63,130,90,15,63,78,188,87,190,208,253,89,191,89,189,119,191,39,179,249,190,222,236,149,62,202,150,100,63,107,96,113,63,184,228,210,62,11,231,190,190,35,138,109,191,69,70,105,191,77,145,170,190,27,129,230,62,88,199,116,63,218,125,95,63,69,3,129,62,1,57,6,191,15,65,122,191,53,25,84,191,141,14,45,190,225,57,24,63,48,237,125,63,90,45,71,63,187,174,173,61,251,33,41,191,243,196,127,191,29,210,56,191,243,4,53,63,7,211,32,63,78,188,87,190,202,150,100,191,69,70,105,191,69,3,129,190,225,57,24,63,243,196,127,63,251,33,41,63,141,14,45,190,218,125,95,191,35,138,109,191,222,236,149,190,130,90,15,63,232,19,127,63,232,34,49,63,246,16,2,190,208,253,89,191,107,96,113,191,77,145,170,190,1,57,6,63,48,237,125,63,29,210,56,63,187,174,173,189,53,25,84,191,88,199,116,191,11,231,190,190,39,179,249,62,83,81,124,63,15,44,64,63,212,214,45,189,194,210,77,191,89,189,119,191,184,228,210,190,27,129,230,62,15,65,122,63,90,45,71,63,243,4,53,63,130,90,15,63,11,231,190,190,15,65,122,191,29,210,56,191,141,14,45,62,69,70,105,63,208,253,89,63,212,214,45,61,194,210,77,191,107,96,113,191,69,3,129,190,251,33,41,63,48,237,125,63,27,129,230,62,39,179,249,190,232,19,127,191,7,211,32,191,222,236,149,62,88,199,116,63,90,45,71,63,187,174,173,189,218,125,95,191,202,150,100,191,246,16,2,190,15,44,64,63,89,189,119,63,77,145,170,62,225,57,24,191,243,196,127,191,1,57,6,191,184,228,210,62,83,81,124,63,232,34,49,63,78,188,87,190,35,138,109,191,53,25,84,191,243,4,53,63,39,179,249,62,1,57,6,191,243,196,127,191,27,129,230,190,130,90,15,63,232,19,127,63,184,228,210,62,225,57,24,191,48,237,125,191,11,231,190,190,7,211,32,63,83,81,124,63,77,145,170,62,251,33,41,191,15,65,122,191,222,236,149,190,232,34,49,63,89,189,119,63,69,3,129,62,29,210,56,191,88,199,116,191,78,188,87,190,15,44,64,63,107,96,113,63,141,14,45,62,90,45,71,191,35,138,109,191,246,16,2,190,194,210,77,63,69,70,105,63,187,174,173,61,53,25,84,191,202,150,100,191,212,214,45,189,208,253,89,63,218,125,95,63,243,4,53,63,184,228,210,62,251,33,41,191,88,199,116,191,246,16,2,190,208,253,89,63,53,25,84,63,141,14,45,190,89,189,119,191,7,211,32,191,27,129,230,62,243,196,127,63,11,231,190,62,232,34,49,191,107,96,113,191,187,174,173,189,218,125,95,63,194,210,77,63,78,188,87,190,15,65,122,191,225,57,24,191,39,179,249,62,232,19,127,63,77,145,170,62,29,210,56,191,35,138,109,191,212,214,45,189,202,150,100,63,90,45,71,63,69,3,129,190,83,81,124,191,130,90,15,191,1,57,6,63,48,237,125,63,222,236,149,62,15,44,64,191,69,70,105,191,243,4,53,63,77,145,170,62,90,45,71,191,208,253,89,191,78,188,87,62,48,237,125,63,27,129,230,62,232,34,49,191,69,70,105,191,187,174,173,61,89,189,119,63,130,90,15,63,225,57,24,191,88,199,116,191,212,214,45,189,35,138,109,63,251,33,41,63,39,179,249,190,83,81,124,191,141,14,45,190,218,125,95,63,15,44,64,63,11,231,190,190,243,196,127,191,222,236,149,190,194,210,77,63,53,25,84,63,69,3,129,190,232,19,127,191,184,228,210,190,29,210,56,63,202,150,100,63,246,16,2,190,15,65,122,191,1,57,6,191,7,211,32,63,107,96,113,63,243,4,53,63,69,3,129,62,218,125,95,191,232,34,49,191,1,57,6,63,88,199,116,63,212,214,45,189,15,65,122,191,27,129,230,190,15,44,64,63,53,25,84,63,77,145,170,190,232,19,127,191,141,14,45,190,69,70,105,63,7,211,32,63,225,57,24,191,35,138,109,191,246,16,2,62,48,237,125,63,11,231,190,62,194,210,77,191,90,45,71,191,184,228,210,62,83,81,124,63,187,174,173,61,107,96,113,191,130,90,15,191,251,33,41,63,202,150,100,63,78,188,87,190,243,196,127,191,222,236,149,190,208,253,89,63,29,210,56,63,39,179,249,190,89,189,119,191,243,4,53,63,141,14,45,62,107,96,113,191,39,179,249,190,90,45,71,63,15,44,64,63,1,57,6,191,35,138,109,191,78,188,87,62,243,196,127,63,246,16,2,62,88,199,116,191,27,129,230,190,194,210,77,63,29,210,56,63,130,90,15,191,69,70,105,191,69,3,129,62,232,19,127,63,187,174,173,61,89,189,119,191,184,228,210,190,53,25,84,63,232,34,49,63,225,57,24,191,202,150,100,191,222,236,149,62,48,237,125,63,212,214,45,61,15,65,122,191,11,231,190,190,208,253,89,63,251,33,41,63,7,211,32,191,218,125,95,191,77,145,170,62,83,81,124,63,243,4,53,63,187,174,173,61,83,81,124,191,69,3,129,190,107,96,113,63,184,228,210,62,218,125,95,191,130,90,15,191,90,45,71,63,232,34,49,63,251,33,41,191,194,210,77,191,1,57,6,63,202,150,100,63,11,231,190,190,88,199,116,191,78,188,87,62,48,237,125,63,212,214,45,189,243,196,127,191,246,16,2,190,15,65,122,63,222,236,149,62,35,138,109,191,27,129,230,190,208,253,89,63,225,57,24,63,15,44,64,191,29,210,56,191,7,211,32,63,53,25,84,63,39,179,249,190,69,70,105,191,77,145,170,62,89,189,119,63,141,14,45,190,232,19,127,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,243,4,53,63,187,174,173,189,83,81,124,191,69,3,129,62,107,96,113,63,184,228,210,190,218,125,95,191,130,90,15,63,90,45,71,63,232,34,49,191,251,33,41,191,194,210,77,63,1,57,6,63,202,150,100,191,11,231,190,190,88,199,116,63,78,188,87,62,48,237,125,191,212,214,45,189,243,196,127,63,246,16,2,190,15,65,122,191,222,236,149,62,35,138,109,63,27,129,230,190,208,253,89,191,225,57,24,63,15,44,64,63,29,210,56,191,7,211,32,191,53,25,84,63,39,179,249,62,69,70,105,191,77,145,170,190,89,189,119,63,141,14,45,62,232,19,127,191,243,4,53,63,141,14,45,190,107,96,113,191,39,179,249,62,90,45,71,63,15,44,64,191,1,57,6,191,35,138,109,63,78,188,87,62,243,196,127,191,246,16,2,62,88,199,116,63,27,129,230,190,194,210,77,191,29,210,56,63,130,90,15,63,69,70,105,191,69,3,129,190,232,19,127,63,187,174,173,189,89,189,119,191,184,228,210,62,53,25,84,63,232,34,49,191,225,57,24,191,202,150,100,63,222,236,149,62,48,237,125,191,212,214,45,61,15,65,122,63,11,231,190,190,208,253,89,191,251,33,41,63,7,211,32,63,218,125,95,191,77,145,170,190,83,81,124,63,243,4,53,63,69,3,129,190,218,125,95,191,232,34,49,63,1,57,6,63,88,199,116,191,212,214,45,189,15,65,122,63,27,129,230,190,15,44,64,191,53,25,84,63,77,145,170,62,232,19,127,191,141,14,45,62,69,70,105,63,7,211,32,191,225,57,24,191,35,138,109,63,246,16,2,62,48,237,125,191,11,231,190,62,194,210,77,63,90,45,71,191,184,228,210,190,83,81,124,63,187,174,173,189,107,96,113,191,130,90,15,63,251,33,41,63,202,150,100,191,78,188,87,190,243,196,127,63,222,236,149,190,208,253,89,191,29,210,56,63,39,179,249,62,89,189,119,191,243,4,53,63,77,145,170,190,90,45,71,191,208,253,89,63,78,188,87,62,48,237,125,191,27,129,230,62,232,34,49,63,69,70,105,191,187,174,173,189,89,189,119,63,130,90,15,191,225,57,24,191,88,199,116,63,212,214,45,189,35,138,109,191,251,33,41,63,39,179,249,62,83,81,124,191,141,14,45,62,218,125,95,63,15,44,64,191,11,231,190,190,243,196,127,63,222,236,149,190,194,210,77,191,53,25,84,63,69,3,129,62,232,19,127,191,184,228,210,62,29,210,56,63,202,150,100,191,246,16,2,190,15,65,122,63,1,57,6,191,7,211,32,191,107,96,113,63,243,4,53,63,184,228,210,190,251,33,41,191,88,199,116,63,246,16,2,190,208,253,89,191,53,25,84,63,141,14,45,62,89,189,119,191,7,211,32,63,27,129,230,62,243,196,127,191,11,231,190,62,232,34,49,63,107,96,113,191,187,174,173,61,218,125,95,63,194,210,77,191,78,188,87,190,15,65,122,63,225,57,24,191,39,179,249,190,232,19,127,63,77,145,170,190,29,210,56,191,35,138,109,63,212,214,45,189,202,150,100,191,90,45,71,63,69,3,129,62,83,81,124,191,130,90,15,63,1,57,6,63,48,237,125,191,222,236,149,62,15,44,64,63,69,70,105,191,243,4,53,63,39,179,249,190,1,57,6,191,243,196,127,63,27,129,230,190,130,90,15,191,232,19,127,63,184,228,210,190,225,57,24,191,48,237,125,63,11,231,190,190,7,211,32,191,83,81,124,63,77,145,170,190,251,33,41,191,15,65,122,63,222,236,149,190,232,34,49,191,89,189,119,63,69,3,129,190,29,210,56,191,88,199,116,63,78,188,87,190,15,44,64,191,107,96,113,63,141,14,45,190,90,45,71,191,35,138,109,63,246,16,2,190,194,210,77,191,69,70,105,63,187,174,173,189,53,25,84,191,202,150,100,63,212,214,45,189,208,253,89,191,218,125,95,63,243,4,53,63,130,90,15,191,11,231,190,190,15,65,122,63,29,210,56,191,141,14,45,190,69,70,105,63,208,253,89,191,212,214,45,61,194,210,77,63,107,96,113,191,69,3,129,62,251,33,41,63,48,237,125,191,27,129,230,62,39,179,249,62,232,19,127,191,7,211,32,63,222,236,149,62,88,199,116,191,90,45,71,63,187,174,173,61,218,125,95,191,202,150,100,63,246,16,2,190,15,44,64,191,89,189,119,63,77,145,170,190,225,57,24,191,243,196,127,63,1,57,6,191,184,228,210,190,83,81,124,63,232,34,49,191,78,188,87,190,35,138,109,63,53,25,84,191,243,4,53,63,7,211,32,191,78,188,87,190,202,150,100,63,69,70,105,191,69,3,129,62,225,57,24,63,243,196,127,191,251,33,41,63,141,14,45,62,218,125,95,191,35,138,109,63,222,236,149,190,130,90,15,191,232,19,127,63,232,34,49,191,246,16,2,190,208,253,89,63,107,96,113,191,77,145,170,62,1,57,6,63,48,237,125,191,29,210,56,63,187,174,173,61,53,25,84,191,88,199,116,63,11,231,190,190,39,179,249,190,83,81,124,63,15,44,64,191,212,214,45,189,194,210,77,63,89,189,119,191,184,228,210,62,27,129,230,62,15,65,122,191,90,45,71,63,243,4,53,63,232,34,49,191,212,214,45,189,15,44,64,63,232,19,127,191,7,211,32,63,246,16,2,62,194,210,77,191,83,81,124,63,130,90,15,191,78,188,87,190,208,253,89,63,89,189,119,191,39,179,249,62,222,236,149,62,202,150,100,191,107,96,113,63,184,228,210,190,11,231,190,190,35,138,109,63,69,70,105,191,77,145,170,62,27,129,230,62,88,199,116,191,218,125,95,63,69,3,129,190,1,57,6,191,15,65,122,63,53,25,84,191,141,14,45,62,225,57,24,63,48,237,125,191,90,45,71,63,187,174,173,189,251,33,41,191,243,196,127,63,29,210,56,191,243,4,53,63,15,44,64,191,246,16,2,62,130,90,15,63,89,189,119,191,202,150,100,63,11,231,190,190,77,145,170,190,218,125,95,63,15,65,122,191,225,57,24,63,187,174,173,61,29,210,56,191,243,196,127,63,90,45,71,191,141,14,45,62,1,57,6,63,88,199,116,191,69,70,105,63,184,228,210,190,222,236,149,190,208,253,89,63,83,81,124,191,7,211,32,63,212,214,45,61,232,34,49,191,232,19,127,63,194,210,77,191,78,188,87,62,39,179,249,62,107,96,113,191,35,138,109,63,27,129,230,190,69,3,129,190,53,25,84,63,48,237,125,191,251,33,41,63,243,4,53,63,194,210,77,191,222,236,149,62,77,145,170,62,53,25,84,191,243,196,127,63,90,45,71,191,69,3,129,62,11,231,190,62,208,253,89,191,232,19,127,63,15,44,64,191,78,188,87,62,184,228,210,62,218,125,95,191,48,237,125,63,29,210,56,191,141,14,45,62,27,129,230,62,202,150,100,191,83,81,124,63,232,34,49,191,246,16,2,62,39,179,249,62,69,70,105,191,15,65,122,63,251,33,41,191,187,174,173,61,1,57,6,63,35,138,109,191,89,189,119,63,7,211,32,191,212,214,45,61,130,90,15,63,107,96,113,191,88,199,116,63,225,57,24,191,243,4,53,63,208,253,89,191,27,129,230,62,187,174,173,61,225,57,24,191,35,138,109,63,83,81,124,191,15,44,64,63,222,236,149,190,69,3,129,190,29,210,56,63,15,65,122,191,107,96,113,63,7,211,32,191,246,16,2,62,184,228,210,62,53,25,84,191,243,196,127,63,218,125,95,191,39,179,249,62,212,214,45,61,130,90,15,191,69,70,105,63,48,237,125,191,90,45,71,63,77,145,170,190,78,188,87,190,232,34,49,63,89,189,119,191,88,199,116,63,251,33,41,191,141,14,45,62,11,231,190,62,194,210,77,191,232,19,127,63,202,150,100,191,1,57,6,63,243,4,53,63,202,150,100,191,225,57,24,63,141,14,45,190,222,236,149,190,232,34,49,63,107,96,113,191,48,237,125,63,53,25,84,191,39,179,249,62,212,214,45,189,184,228,210,190,90,45,71,63,15,65,122,191,89,189,119,63,15,44,64,191,11,231,190,62,187,174,173,61,1,57,6,191,208,253,89,63,232,19,127,191,35,138,109,63,251,33,41,191,69,3,129,62,78,188,87,62,7,211,32,191,69,70,105,63,243,196,127,191,218,125,95,63,130,90,15,191,246,16,2,62,77,145,170,62,29,210,56,191,88,199,116,63,83,81,124,191,194,210,77,63,27,129,230,190,243,4,53,63,35,138,109,191,29,210,56,63,184,228,210,190,212,214,45,61,77,145,170,62,251,33,41,191,202,150,100,63,232,19,127,191,88,199,116,63,90,45,71,191,39,179,249,62,246,16,2,190,69,3,129,190,225,57,24,63,208,253,89,191,83,81,124,63,15,65,122,191,53,25,84,63,130,90,15,191,78,188,87,62,141,14,45,62,1,57,6,191,194,210,77,63,89,189,119,191,48,237,125,63,218,125,95,191,7,211,32,63,222,236,149,190,187,174,173,189,27,129,230,62,15,44,64,191,107,96,113,63,243,196,127,191,69,70,105,63,232,34,49,191,11,231,190,62,243,4,53,63,88,199,116,191,53,25,84,63,7,211,32,191,11,231,190,62,187,174,173,189,78,188,87,190,39,179,249,62,29,210,56,191,202,150,100,63,83,81,124,191,48,237,125,63,69,70,105,191,15,44,64,63,1,57,6,191,69,3,129,62,212,214,45,61,77,145,170,190,225,57,24,63,194,210,77,191,107,96,113,63,243,196,127,191,89,189,119,63,208,253,89,191,251,33,41,63,184,228,210,190,246,16,2,62,141,14,45,62,27,129,230,190,232,34,49,63,218,125,95,191,15,65,122,63,232,19,127,191,35,138,109,63,90,45,71,191,130,90,15,63,222,236,149,190,243,4,53,63,15,65,122,191,69,70,105,63,194,210,77,191,251,33,41,63,39,179,249,190,222,236,149,62,187,174,173,189,246,16,2,190,77,145,170,62,1,57,6,191,232,34,49,63,53,25,84,191,35,138,109,63,83,81,124,191,243,196,127,63,89,189,119,191,202,150,100,63,90,45,71,191,7,211,32,63,27,129,230,190,69,3,129,62,212,214,45,189,141,14,45,190,11,231,190,62,130,90,15,191,29,210,56,63,208,253,89,191,107,96,113,63,48,237,125,191,232,19,127,63,88,199,116,191,218,125,95,63,15,44,64,191,225,57,24,63,184,228,210,190,78,188,87,62,243,4,53,63,48,237,125,191,89,189,119,63,35,138,109,191,218,125,95,63,194,210,77,191,29,210,56,63,7,211,32,191,1,57,6,63,184,228,210,190,222,236,149,62,141,14,45,190,212,214,45,61,187,174,173,61,78,188,87,190,77,145,170,62,27,129,230,190,130,90,15,63,251,33,41,191,15,44,64,63,53,25,84,191,202,150,100,63,107,96,113,191,15,65,122,63,232,19,127,191,243,196,127,63,83,81,124,191,88,199,116,63,69,70,105,191,208,253,89,63,90,45,71,191,232,34,49,63,225,57,24,191,39,179,249,62,11,231,190,190,69,3,129,62,246,16,2,190,243,4,53,63,243,196,127,191,232,19,127,63,48,237,125,191,83,81,124,63,15,65,122,191,89,189,119,63,88,199,116,191,107,96,113,63,35,138,109,191,69,70,105,63,202,150,100,191,218,125,95,63,208,253,89,191,53,25,84,63,194,210,77,191,90,45,71,63,15,44,64,191,29,210,56,63,232,34,49,191,251,33,41,63,7,211,32,191,225,57,24,63,130,90,15,191,1,57,6,63,39,179,249,190,27,129,230,62,184,228,210,190,11,231,190,62,77,145,170,190,222,236,149,62,69,3,129,190,78,188,87,62,141,14,45,190,246,16,2,62,187,174,173,189,212,214,45,61,243,4,53,63,4,200,127,63,41,32,127,63,185,8,126,63,45,130,124,63,48,141,122,63,158,42,120,63,129,91,117,63,20,33,114,63,193,124,110,63,31,112,106,63,244,252,101,63,49,37,97,63,246,234,91,63,139,80,86,63,100,88,80,63,29,5,74,63,122,89,67,63,103,88,60,63,243,4,53,63,83,98,45,63,222,115,37,63,11,61,29,63,115,193,20,63,203,4,12,63,230,10,3,63,96,175,243,62,96,222,224,62,6,171,205,62,183,29,186,62,2,63,166,62,151,23,146,62,140,96,123,62,248,35,82,62,124,139,40,62,144,82,253,61,92,31,169,61,96,68,41,61,243,4,53,63,185,8,126,63,158,42,120,63,193,124,110,63,49,37,97,63,100,88,80,63,103,88,60,63,222,115,37,63,203,4,12,63,96,222,224,62,2,63,166,62,248,35,82,62,92,31,169,61,96,68,41,189,124,139,40,190,151,23,146,190,6,171,205,190,230,10,3,191,11,61,29,191,243,4,53,191,29,5,74,191,246,234,91,191,31,112,106,191,129,91,117,191,45,130,124,191,4,200,127,191,41,32,127,191,48,141,122,191,20,33,114,191,244,252,101,191,139,80,86,191,122,89,67,191,83,98,45,191,115,193,20,191,96,175,243,190,183,29,186,190,140,96,123,190,144,82,253,189,243,4,53,63,48,141,122,63,31,112,106,63,100,88,80,63,83,98,45,63,230,10,3,63,2,63,166,62,144,82,253,61,92,31,169,189,151,23,146,190,96,175,243,190,222,115,37,191,29,5,74,191,244,252,101,191,158,42,120,191,4,200,127,191,45,130,124,191,193,124,110,191,139,80,86,191,243,4,53,191,203,4,12,191,183,29,186,190,124,139,40,190,96,68,41,61,140,96,123,62,96,222,224,62,11,61,29,63,122,89,67,63,49,37,97,63,129,91,117,63,41,32,127,63,185,8,126,63,20,33,114,63,246,234,91,63,103,88,60,63,115,193,20,63,6,171,205,62,248,35,82,62,243,4,53,63,129,91,117,63,139,80,86,63,222,115,37,63,6,171,205,62,144,82,253,61,124,139,40,190,96,222,224,190,83,98,45,191,246,234,91,191,158,42,120,191,4,200,127,191,20,33,114,191,100,88,80,191,11,61,29,191,183,29,186,190,92,31,169,189,248,35,82,62,96,175,243,62,243,4,53,63,49,37,97,63,48,141,122,63,41,32,127,63,193,124,110,63,29,5,74,63,115,193,20,63,2,63,166,62,96,68,41,61,140,96,123,190,230,10,3,191,103,88,60,191,244,252,101,191,45,130,124,191,185,8,126,191,31,112,106,191,122,89,67,191,203,4,12,191,151,23,146,190,243,4,53,63,193,124,110,63,103,88,60,63,96,222,224,62,92,31,169,61,151,23,146,190,11,61,29,191,246,234,91,191,45,130,124,191,48,141,122,191,139,80,86,191,115,193,20,191,140,96,123,190,144,82,253,61,96,175,243,62,122,89,67,63,20,33,114,63,4,200,127,63,31,112,106,63,243,4,53,63,6,171,205,62,96,68,41,61,2,63,166,190,222,115,37,191,49,37,97,191,185,8,126,191,158,42,120,191,100,88,80,191,203,4,12,191,248,35,82,190,124,139,40,62,230,10,3,63,29,5,74,63,129,91,117,63,41,32,127,63,244,252,101,63,83,98,45,63,183,29,186,62,243,4,53,63,244,252,101,63,11,61,29,63,248,35,82,62,140,96,123,190,222,115,37,191,31,112,106,191,4,200,127,191,49,37,97,191,115,193,20,191,124,139,40,190,151,23,146,62,83,98,45,63,193,124,110,63,41,32,127,63,246,234,91,63,203,4,12,63,144,82,253,61,2,63,166,190,243,4,53,191,20,33,114,191,185,8,126,191,139,80,86,191,230,10,3,191,92,31,169,189,183,29,186,62,103,88,60,63,129,91,117,63,45,130,124,63,100,88,80,63,96,175,243,62,96,68,41,61,6,171,205,190,122,89,67,191,158,42,120,191,48,141,122,191,29,5,74,191,96,222,224,190,243,4,53,63,246,234,91,63,96,175,243,62,96,68,41,189,203,4,12,191,244,252,101,191,41,32,127,191,100,88,80,191,6,171,205,190,144,82,253,61,11,61,29,63,193,124,110,63,45,130,124,63,122,89,67,63,2,63,166,62,248,35,82,190,83,98,45,191,129,91,117,191,158,42,120,191,243,4,53,191,140,96,123,190,151,23,146,62,103,88,60,63,48,141,122,63,20,33,114,63,222,115,37,63,124,139,40,62,183,29,186,190,29,5,74,191,185,8,126,191,31,112,106,191,115,193,20,191,92,31,169,189,96,222,224,62,139,80,86,63,4,200,127,63,49,37,97,63,230,10,3,63,243,4,53,63,100,88,80,63,2,63,166,62,151,23,146,190,29,5,74,191,4,200,127,191,139,80,86,191,183,29,186,190,140,96,123,62,122,89,67,63,41,32,127,63,246,234,91,63,6,171,205,62,248,35,82,190,103,88,60,191,185,8,126,191,49,37,97,191,96,222,224,190,124,139,40,62,243,4,53,63,45,130,124,63,244,252,101,63,96,175,243,62,144,82,253,189,83,98,45,191,48,141,122,191,31,112,106,191,230,10,3,191,92,31,169,61,222,115,37,63,158,42,120,63,193,124,110,63,203,4,12,63,96,68,41,189,11,61,29,191,129,91,117,191,20,33,114,191,115,193,20,191,243,4,53,63,122,89,67,63,124,139,40,62,230,10,3,191,20,33,114,191,193,124,110,191,96,175,243,190,248,35,82,62,29,5,74,63,4,200,127,63,103,88,60,63,144,82,253,61,203,4,12,191,129,91,117,191,31,112,106,191,96,222,224,190,140,96,123,62,100,88,80,63,41,32,127,63,243,4,53,63,92,31,169,61,115,193,20,191,158,42,120,191,244,252,101,191,6,171,205,190,151,23,146,62,139,80,86,63,185,8,126,63,83,98,45,63,96,68,41,61,11,61,29,191,48,141,122,191,49,37,97,191,183,29,186,190,2,63,166,62,246,234,91,63,45,130,124,63,222,115,37,63,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,8,72,141,166,243,4,53,191,0,0,128,191,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,63,243,4,53,63,119,247,83,166,243,4,53,191,0,0,128,191,243,4,53,191,243,4,53,63,222,115,37,63,124,139,40,190,246,234,91,191,20,33,114,191,183,29,186,190,96,175,243,62,48,141,122,63,29,5,74,63,96,68,41,61,103,88,60,191,185,8,126,191,203,4,12,191,151,23,146,62,31,112,106,63,244,252,101,63,140,96,123,62,115,193,20,191,41,32,127,191,243,4,53,191,92,31,169,61,100,88,80,63,158,42,120,63,96,222,224,62,6,171,205,190,129,91,117,191,139,80,86,191,144,82,253,189,83,98,45,63,4,200,127,63,11,61,29,63,248,35,82,190,49,37,97,191,193,124,110,191,2,63,166,190,230,10,3,63,45,130,124,63,122,89,67,63,243,4,53,63,115,193,20,63,2,63,166,190,129,91,117,191,29,5,74,191,96,68,41,61,139,80,86,63,193,124,110,63,140,96,123,62,222,115,37,191,41,32,127,191,230,10,3,191,6,171,205,62,48,141,122,63,103,88,60,63,144,82,253,189,49,37,97,191,244,252,101,191,124,139,40,190,243,4,53,63,45,130,124,63,96,222,224,62,96,175,243,190,185,8,126,191,83,98,45,191,248,35,82,62,31,112,106,63,246,234,91,63,92,31,169,61,122,89,67,191,158,42,120,191,183,29,186,190,203,4,12,63,4,200,127,63,11,61,29,63,151,23,146,190,20,33,114,191,100,88,80,191,243,4,53,63,230,10,3,63,96,175,243,190,4,200,127,191,203,4,12,191,96,222,224,62,41,32,127,63,115,193,20,63,6,171,205,190,185,8,126,191,11,61,29,191,183,29,186,62,45,130,124,63,222,115,37,63,2,63,166,190,48,141,122,191,83,98,45,191,151,23,146,62,158,42,120,63,243,4,53,63,140,96,123,190,129,91,117,191,103,88,60,191,248,35,82,62,20,33,114,63,122,89,67,63,124,139,40,190,193,124,110,191,29,5,74,191,144,82,253,61,31,112,106,63,100,88,80,63,92,31,169,189,244,252,101,191,139,80,86,191,96,68,41,61,49,37,97,63,246,234,91,63,243,4,53,63,96,222,224,62,11,61,29,191,48,141,122,191,140,96,123,190,122,89,67,63,31,112,106,63,96,68,41,61,49,37,97,191,100,88,80,191,124,139,40,62,129,91,117,63,83,98,45,63,183,29,186,190,41,32,127,191,230,10,3,191,203,4,12,63,185,8,126,63,2,63,166,62,243,4,53,191,20,33,114,191,144,82,253,189,139,80,86,63,246,234,91,63,92,31,169,189,193,124,110,191,103,88,60,191,151,23,146,62,45,130,124,63,115,193,20,63,96,175,243,190,4,200,127,191,6,171,205,190,222,115,37,63,158,42,120,63,248,35,82,62,29,5,74,191,244,252,101,191,243,4,53,63,183,29,186,62,103,88,60,191,244,252,101,191,92,31,169,61,129,91,117,63,11,61,29,63,230,10,3,191,45,130,124,191,248,35,82,190,139,80,86,63,100,88,80,63,140,96,123,190,185,8,126,191,96,175,243,190,222,115,37,63,20,33,114,63,96,68,41,61,31,112,106,191,243,4,53,191,6,171,205,62,4,200,127,63,2,63,166,62,122,89,67,191,49,37,97,191,144,82,253,61,158,42,120,63,115,193,20,63,203,4,12,191,48,141,122,191,124,139,40,190,246,234,91,63,29,5,74,63,151,23,146,190,41,32,127,191,96,222,224,190,83,98,45,63,193,124,110,63,243,4,53,63,151,23,146,62,139,80,86,191,122,89,67,191,6,171,205,62,185,8,126,63,124,139,40,62,244,252,101,191,83,98,45,191,230,10,3,63,158,42,120,63,96,68,41,61,20,33,114,191,115,193,20,191,11,61,29,63,193,124,110,63,92,31,169,189,48,141,122,191,96,175,243,190,243,4,53,63,49,37,97,63,248,35,82,190,41,32,127,191,183,29,186,190,29,5,74,63,100,88,80,63,2,63,166,190,4,200,127,191,140,96,123,190,246,234,91,63,103,88,60,63,96,222,224,190,45,130,124,191,144,82,253,189,31,112,106,63,222,115,37,63,203,4,12,191,129,91,117,191,243,4,53,63,248,35,82,62,31,112,106,191,115,193,20,191,83,98,45,63,246,234,91,63,2,63,166,190,185,8,126,191,92,31,169,189,129,91,117,63,96,175,243,62,122,89,67,191,29,5,74,191,96,222,224,62,158,42,120,63,96,68,41,189,45,130,124,191,183,29,186,190,139,80,86,63,243,4,53,63,203,4,12,191,193,124,110,191,124,139,40,62,4,200,127,63,140,96,123,62,244,252,101,191,11,61,29,191,222,115,37,63,49,37,97,63,151,23,146,190,41,32,127,191,144,82,253,189,20,33,114,63,230,10,3,63,103,88,60,191,100,88,80,191,6,171,205,62,48,141,122,63,243,4,53,63,144,82,253,61,158,42,120,191,183,29,186,190,49,37,97,63,115,193,20,63,103,88,60,191,122,89,67,191,203,4,12,63,244,252,101,63,2,63,166,190,48,141,122,191,92,31,169,61,4,200,127,63,124,139,40,62,129,91,117,191,6,171,205,190,246,234,91,63,11,61,29,63,243,4,53,191,29,5,74,191,230,10,3,63,31,112,106,63,151,23,146,190,45,130,124,191,96,68,41,61,41,32,127,63,248,35,82,62,20,33,114,191,96,222,224,190,139,80,86,63,222,115,37,63,83,98,45,191,100,88,80,191,96,175,243,62,193,124,110,63,140,96,123,190,185,8,126,191,243,4,53,63,96,68,41,61,41,32,127,191,144,82,253,189,45,130,124,63,248,35,82,62,158,42,120,191,151,23,146,190,20,33,114,63,183,29,186,62,31,112,106,191,96,222,224,190,49,37,97,63,230,10,3,63,139,80,86,191,115,193,20,191,29,5,74,63,222,115,37,63,103,88,60,191,243,4,53,191,83,98,45,63,122,89,67,63,11,61,29,191,100,88,80,191,203,4,12,63,246,234,91,63,96,175,243,190,244,252,101,191,6,171,205,62,193,124,110,63,2,63,166,190,129,91,117,191,140,96,123,62,48,141,122,63,124,139,40,190,185,8,126,191,92,31,169,61,4,200,127,63,243,4,53,63,96,68,41,189,41,32,127,191,144,82,253,61,45,130,124,63,248,35,82,190,158,42,120,191,151,23,146,62,20,33,114,63,183,29,186,190,31,112,106,191,96,222,224,62,49,37,97,63,230,10,3,191,139,80,86,191,115,193,20,63,29,5,74,63,222,115,37,191,103,88,60,191,243,4,53,63,83,98,45,63,122,89,67,191,11,61,29,191,100,88,80,63,203,4,12,63,246,234,91,191,96,175,243,190,244,252,101,63,6,171,205,62,193,124,110,191,2,63,166,190,129,91,117,63,140,96,123,62,48,141,122,191,124,139,40,190,185,8,126,63,92,31,169,61,4,200,127,191,243,4,53,63,144,82,253,189,158,42,120,191,183,29,186,62,49,37,97,63,115,193,20,191,103,88,60,191,122,89,67,63,203,4,12,63,244,252,101,191,2,63,166,190,48,141,122,63,92,31,169,61,4,200,127,191,124,139,40,62,129,91,117,63,6,171,205,190,246,234,91,191,11,61,29,63,243,4,53,63,29,5,74,191,230,10,3,191,31,112,106,63,151,23,146,62,45,130,124,191,96,68,41,189,41,32,127,63,248,35,82,190,20,33,114,191,96,222,224,62,139,80,86,63,222,115,37,191,83,98,45,191,100,88,80,63,96,175,243,62,193,124,110,191,140,96,123,190,185,8,126,63,243,4,53,63,248,35,82,190,31,112,106,191,115,193,20,63,83,98,45,63,246,234,91,191,2,63,166,190,185,8,126,63,92,31,169,189,129,91,117,191,96,175,243,62,122,89,67,63,29,5,74,191,96,222,224,190,158,42,120,63,96,68,41,61,45,130,124,191,183,29,186,62,139,80,86,63,243,4,53,191,203,4,12,191,193,124,110,63,124,139,40,62,4,200,127,191,140,96,123,62,244,252,101,63,11,61,29,191,222,115,37,191,49,37,97,63,151,23,146,62,41,32,127,191,144,82,253,61,20,33,114,63,230,10,3,191,103,88,60,191,100,88,80,63,6,171,205,62,48,141,122,191,243,4,53,63,151,23,146,190,139,80,86,191,122,89,67,63,6,171,205,62,185,8,126,191,124,139,40,62,244,252,101,63,83,98,45,191,230,10,3,191,158,42,120,63,96,68,41,189,20,33,114,191,115,193,20,63,11,61,29,63,193,124,110,191,92,31,169,189,48,141,122,63,96,175,243,190,243,4,53,191,49,37,97,63,248,35,82,62,41,32,127,191,183,29,186,62,29,5,74,63,100,88,80,191,2,63,166,190,4,200,127,63,140,96,123,190,246,234,91,191,103,88,60,63,96,222,224,62,45,130,124,191,144,82,253,61,31,112,106,63,222,115,37,191,203,4,12,191,129,91,117,63,243,4,53,63,183,29,186,190,103,88,60,191,244,252,101,63,92,31,169,61,129,91,117,191,11,61,29,63,230,10,3,63,45,130,124,191,248,35,82,62,139,80,86,63,100,88,80,191,140,96,123,190,185,8,126,63,96,175,243,190,222,115,37,191,20,33,114,63,96,68,41,189,31,112,106,191,243,4,53,63,6,171,205,62,4,200,127,191,2,63,166,62,122,89,67,63,49,37,97,191,144,82,253,189,158,42,120,63,115,193,20,191,203,4,12,191,48,141,122,63,124,139,40,190,246,234,91,191,29,5,74,63,151,23,146,62,41,32,127,191,96,222,224,62,83,98,45,63,193,124,110,191,243,4,53,63,96,222,224,190,11,61,29,191,48,141,122,63,140,96,123,190,122,89,67,191,31,112,106,63,96,68,41,189,49,37,97,191,100,88,80,63,124,139,40,62,129,91,117,191,83,98,45,63,183,29,186,62,41,32,127,191,230,10,3,63,203,4,12,63,185,8,126,191,2,63,166,62,243,4,53,63,20,33,114,191,144,82,253,61,139,80,86,63,246,234,91,191,92,31,169,189,193,124,110,63,103,88,60,191,151,23,146,190,45,130,124,63,115,193,20,191,96,175,243,190,4,200,127,63,6,171,205,190,222,115,37,191,158,42,120,63,248,35,82,190,29,5,74,191,244,252,101,63,243,4,53,63,230,10,3,191,96,175,243,190,4,200,127,63,203,4,12,191,96,222,224,190,41,32,127,63,115,193,20,191,6,171,205,190,185,8,126,63,11,61,29,191,183,29,186,190,45,130,124,63,222,115,37,191,2,63,166,190,48,141,122,63,83,98,45,191,151,23,146,190,158,42,120,63,243,4,53,191,140,96,123,190,129,91,117,63,103,88,60,191,248,35,82,190,20,33,114,63,122,89,67,191,124,139,40,190,193,124,110,63,29,5,74,191,144,82,253,189,31,112,106,63,100,88,80,191,92,31,169,189,244,252,101,63,139,80,86,191,96,68,41,189,49,37,97,63,246,234,91,191,243,4,53,63,115,193,20,191,2,63,166,190,129,91,117,63,29,5,74,191,96,68,41,189,139,80,86,63,193,124,110,191,140,96,123,62,222,115,37,63,41,32,127,191,230,10,3,63,6,171,205,62,48,141,122,191,103,88,60,63,144,82,253,61,49,37,97,191,244,252,101,63,124,139,40,190,243,4,53,191,45,130,124,63,96,222,224,190,96,175,243,190,185,8,126,63,83,98,45,191,248,35,82,190,31,112,106,63,246,234,91,191,92,31,169,61,122,89,67,63,158,42,120,191,183,29,186,62,203,4,12,63,4,200,127,191,11,61,29,63,151,23,146,62,20,33,114,191,100,88,80,63,243,4,53,63,222,115,37,191,124,139,40,190,246,234,91,63,20,33,114,191,183,29,186,62,96,175,243,62,48,141,122,191,29,5,74,63,96,68,41,189,103,88,60,191,185,8,126,63,203,4,12,191,151,23,146,190,31,112,106,63,244,252,101,191,140,96,123,62,115,193,20,63,41,32,127,191,243,4,53,63,92,31,169,61,100,88,80,191,158,42,120,63,96,222,224,190,6,171,205,190,129,91,117,63,139,80,86,191,144,82,253,61,83,98,45,63,4,200,127,191,11,61,29,63,248,35,82,62,49,37,97,191,193,124,110,63,2,63,166,190,230,10,3,191,45,130,124,63,122,89,67,191,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,250,9,150,167,243,4,53,63,0,0,128,191,243,4,53,63,91,26,141,38,243,4,53,191,0,0,128,63,243,4,53,191,52,131,176,167,243,4,53,63,0,0,128,191,243,4,53,63,243,4,53,63,122,89,67,191,124,139,40,62,230,10,3,63,20,33,114,191,193,124,110,63,96,175,243,190,248,35,82,190,29,5,74,63,4,200,127,191,103,88,60,63,144,82,253,189,203,4,12,191,129,91,117,63,31,112,106,191,96,222,224,62,140,96,123,62,100,88,80,191,41,32,127,63,243,4,53,191,92,31,169,61,115,193,20,63,158,42,120,191,244,252,101,63,6,171,205,190,151,23,146,190,139,80,86,63,185,8,126,191,83,98,45,63,96,68,41,189,11,61,29,191,48,141,122,63,49,37,97,191,183,29,186,62,2,63,166,62,246,234,91,191,45,130,124,63,222,115,37,191,243,4,53,63,100,88,80,191,2,63,166,62,151,23,146,62,29,5,74,191,4,200,127,63,139,80,86,191,183,29,186,62,140,96,123,62,122,89,67,191,41,32,127,63,246,234,91,191,6,171,205,62,248,35,82,62,103,88,60,191,185,8,126,63,49,37,97,191,96,222,224,62,124,139,40,62,243,4,53,191,45,130,124,63,244,252,101,191,96,175,243,62,144,82,253,61,83,98,45,191,48,141,122,63,31,112,106,191,230,10,3,63,92,31,169,61,222,115,37,191,158,42,120,63,193,124,110,191,203,4,12,63,96,68,41,61,11,61,29,191,129,91,117,63,20,33,114,191,115,193,20,63,243,4,53,63,246,234,91,191,96,175,243,62,96,68,41,61,203,4,12,191,244,252,101,63,41,32,127,191,100,88,80,63,6,171,205,190,144,82,253,189,11,61,29,63,193,124,110,191,45,130,124,63,122,89,67,191,2,63,166,62,248,35,82,62,83,98,45,191,129,91,117,63,158,42,120,191,243,4,53,63,140,96,123,190,151,23,146,190,103,88,60,63,48,141,122,191,20,33,114,63,222,115,37,191,124,139,40,62,183,29,186,62,29,5,74,191,185,8,126,63,31,112,106,191,115,193,20,63,92,31,169,189,96,222,224,190,139,80,86,63,4,200,127,191,49,37,97,63,230,10,3,191,243,4,53,63,244,252,101,191,11,61,29,63,248,35,82,190,140,96,123,190,222,115,37,63,31,112,106,191,4,200,127,63,49,37,97,191,115,193,20,63,124,139,40,190,151,23,146,190,83,98,45,63,193,124,110,191,41,32,127,63,246,234,91,191,203,4,12,63,144,82,253,189,2,63,166,190,243,4,53,63,20,33,114,191,185,8,126,63,139,80,86,191,230,10,3,63,92,31,169,189,183,29,186,190,103,88,60,63,129,91,117,191,45,130,124,63,100,88,80,191,96,175,243,62,96,68,41,189,6,171,205,190,122,89,67,63,158,42,120,191,48,141,122,63,29,5,74,191,96,222,224,62,243,4,53,63,193,124,110,191,103,88,60,63,96,222,224,190,92,31,169,61,151,23,146,62,11,61,29,191,246,234,91,63,45,130,124,191,48,141,122,63,139,80,86,191,115,193,20,63,140,96,123,190,144,82,253,189,96,175,243,62,122,89,67,191,20,33,114,63,4,200,127,191,31,112,106,63,243,4,53,191,6,171,205,62,96,68,41,189,2,63,166,190,222,115,37,63,49,37,97,191,185,8,126,63,158,42,120,191,100,88,80,63,203,4,12,191,248,35,82,62,124,139,40,62,230,10,3,191,29,5,74,63,129,91,117,191,41,32,127,63,244,252,101,191,83,98,45,63,183,29,186,190,243,4,53,63,129,91,117,191,139,80,86,63,222,115,37,191,6,171,205,62,144,82,253,189,124,139,40,190,96,222,224,62,83,98,45,191,246,234,91,63,158,42,120,191,4,200,127,63,20,33,114,191,100,88,80,63,11,61,29,191,183,29,186,62,92,31,169,189,248,35,82,190,96,175,243,62,243,4,53,191,49,37,97,63,48,141,122,191,41,32,127,63,193,124,110,191,29,5,74,63,115,193,20,191,2,63,166,62,96,68,41,189,140,96,123,190,230,10,3,63,103,88,60,191,244,252,101,63,45,130,124,191,185,8,126,63,31,112,106,191,122,89,67,63,203,4,12,191,151,23,146,62,243,4,53,63,48,141,122,191,31,112,106,63,100,88,80,191,83,98,45,63,230,10,3,191,2,63,166,62,144,82,253,189,92,31,169,189,151,23,146,62,96,175,243,190,222,115,37,63,29,5,74,191,244,252,101,63,158,42,120,191,4,200,127,63,45,130,124,191,193,124,110,63,139,80,86,191,243,4,53,63,203,4,12,191,183,29,186,62,124,139,40,190,96,68,41,189,140,96,123,62,96,222,224,190,11,61,29,63,122,89,67,191,49,37,97,63,129,91,117,191,41,32,127,63,185,8,126,191,20,33,114,63,246,234,91,191,103,88,60,63,115,193,20,191,6,171,205,62,248,35,82,190,243,4,53,63,185,8,126,191,158,42,120,63,193,124,110,191,49,37,97,63,100,88,80,191,103,88,60,63,222,115,37,191,203,4,12,63,96,222,224,190,2,63,166,62,248,35,82,190,92,31,169,61,96,68,41,61,124,139,40,190,151,23,146,62,6,171,205,190,230,10,3,63,11,61,29,191,243,4,53,63,29,5,74,191,246,234,91,63,31,112,106,191,129,91,117,63,45,130,124,191,4,200,127,63,41,32,127,191,48,141,122,63,20,33,114,191,244,252,101,63,139,80,86,191,122,89,67,63,83,98,45,191,115,193,20,63,96,175,243,190,183,29,186,62,140,96,123,190,144,82,253,61,243,4,53,63,4,200,127,191,41,32,127,63,185,8,126,191,45,130,124,63,48,141,122,191,158,42,120,63,129,91,117,191,20,33,114,63,193,124,110,191,31,112,106,63,244,252,101,191,49,37,97,63,246,234,91,191,139,80,86,63,100,88,80,191,29,5,74,63,122,89,67,191,103,88,60,63,243,4,53,191,83,98,45,63,222,115,37,191,11,61,29,63,115,193,20,191,203,4,12,63,230,10,3,191,96,175,243,62,96,222,224,190,6,171,205,62,183,29,186,190,2,63,166,62,151,23,146,190,140,96,123,62,248,35,82,190,124,139,40,62,144,82,253,189,92,31,169,61,96,68,41,189,243,4,53,63,218,202,127,63,125,43,127,63,43,34,126,63,83,175,124,63,143,211,122,63,165,143,120,63,132,228,117,63,73,211,114,63,57,93,111,63,198,131,107,63,135,72,103,63,63,173,98,63,215,179,93,63,97,94,88,63,18,175,82,63,72,168,76,63,131,76,70,63,103,158,63,63,185,160,56,63,98,86,49,63,104,194,41,63,241,231,33,63,63,202,25,63,177,108,17,63,193,210,8,63,0,0,0,63,50,240,237,62,151,125,219,62,217,175,200,62,198,142,181,62,79,34,162,62,133,114,142,62,42,15,117,62,137,211,76,62,219,66,36,62,239,219,246,61,168,203,164,61,230,237,36,61,243,4,53,63,43,34,126,63,165,143,120,63,57,93,111,63,63,173,98,63,18,175,82,63,103,158,63,63,104,194,41,63,177,108,17,63,50,240,237,62,198,142,181,62,42,15,117,62,239,219,246,61,50,49,141,36,239,219,246,189,42,15,117,190,198,142,181,190,50,240,237,190,177,108,17,191,104,194,41,191,103,158,63,191,18,175,82,191,63,173,98,191,57,93,111,191,165,143,120,191,43,34,126,191,0,0,128,191,43,34,126,191,165,143,120,191,57,93,111,191,63,173,98,191,18,175,82,191,103,158,63,191,104,194,41,191,177,108,17,191,50,240,237,190,198,142,181,190,42,15,117,190,239,219,246,189,243,4,53,63,143,211,122,63,198,131,107,63,18,175,82,63,98,86,49,63,193,210,8,63,198,142,181,62,219,66,36,62,230,237,36,189,42,15,117,190,151,125,219,190,63,202,25,191,103,158,63,191,215,179,93,191,73,211,114,191,43,34,126,191,125,43,127,191,132,228,117,191,63,173,98,191,131,76,70,191,241,231,33,191,50,240,237,190,133,114,142,190,168,203,164,189,239,219,246,61,79,34,162,62,0,0,0,63,104,194,41,63,72,168,76,63,135,72,103,63,165,143,120,63,218,202,127,63,83,175,124,63,57,93,111,63,97,94,88,63,185,160,56,63,177,108,17,63,217,175,200,62,137,211,76,62,243,4,53,63,132,228,117,63,97,94,88,63,104,194,41,63,151,125,219,62,219,66,36,62,239,219,246,189,217,175,200,190,241,231,33,191,18,175,82,191,73,211,114,191,218,202,127,191,165,143,120,191,215,179,93,191,98,86,49,191,50,240,237,190,137,211,76,190,168,203,164,61,198,142,181,62,63,202,25,63,72,168,76,63,57,93,111,63,125,43,127,63,143,211,122,63,63,173,98,63,185,160,56,63,0,0,0,63,42,15,117,62,230,237,36,189,79,34,162,190,177,108,17,191,131,76,70,191,198,131,107,191,43,34,126,191,83,175,124,191,135,72,103,191,103,158,63,191,193,210,8,191,133,114,142,190,243,4,53,63,57,93,111,63,103,158,63,63,50,240,237,62,239,219,246,61,42,15,117,190,177,108,17,191,18,175,82,191,165,143,120,191,43,34,126,191,63,173,98,191,104,194,41,191,198,142,181,190,202,201,83,165,198,142,181,62,104,194,41,63,63,173,98,63,43,34,126,63,165,143,120,63,18,175,82,63,177,108,17,63,42,15,117,62,239,219,246,189,50,240,237,190,103,158,63,191,57,93,111,191,0,0,128,191,57,93,111,191,103,158,63,191,50,240,237,190,239,219,246,189,42,15,117,62,177,108,17,63,18,175,82,63,165,143,120,63,43,34,126,63,63,173,98,63,104,194,41,63,198,142,181,62,243,4,53,63,135,72,103,63,241,231,33,63,42,15,117,62,137,211,76,190,63,202,25,191,63,173,98,191,218,202,127,191,198,131,107,191,104,194,41,191,133,114,142,190,219,66,36,62,177,108,17,63,215,179,93,63,125,43,127,63,57,93,111,63,98,86,49,63,79,34,162,62,239,219,246,189,193,210,8,191,97,94,88,191,43,34,126,191,73,211,114,191,185,160,56,191,198,142,181,190,168,203,164,61,0,0,0,63,18,175,82,63,83,175,124,63,132,228,117,63,103,158,63,63,217,175,200,62,230,237,36,189,50,240,237,190,72,168,76,191,143,211,122,191,165,143,120,191,131,76,70,191,151,125,219,190,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,202,201,83,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,95,31,172,38,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,23,22,247,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,214,181,39,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,233,136,48,167,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,243,4,53,63,18,175,82,63,198,142,181,62,42,15,117,190,103,158,63,191,43,34,126,191,63,173,98,191,50,240,237,190,239,219,246,61,104,194,41,63,165,143,120,63,57,93,111,63,177,108,17,63,65,193,39,166,177,108,17,191,57,93,111,191,165,143,120,191,104,194,41,191,239,219,246,189,50,240,237,62,63,173,98,63,43,34,126,63,103,158,63,63,42,15,117,62,198,142,181,190,18,175,82,191,0,0,128,191,18,175,82,191,198,142,181,190,42,15,117,62,103,158,63,63,43,34,126,63,63,173,98,63,50,240,237,62,239,219,246,189,104,194,41,191,165,143,120,191,57,93,111,191,177,108,17,191,243,4,53,63,131,76,70,63,137,211,76,62,50,240,237,190,198,131,107,191,132,228,117,191,177,108,17,191,168,203,164,61,98,86,49,63,43,34,126,63,97,94,88,63,79,34,162,62,198,142,181,190,215,179,93,191,83,175,124,191,104,194,41,191,230,237,36,189,63,202,25,63,165,143,120,63,135,72,103,63,151,125,219,62,42,15,117,190,72,168,76,191,218,202,127,191,103,158,63,191,219,66,36,190,0,0,0,63,57,93,111,63,73,211,114,63,193,210,8,63,239,219,246,189,185,160,56,191,125,43,127,191,18,175,82,191,133,114,142,190,217,175,200,62,63,173,98,63,143,211,122,63,241,231,33,63,243,4,53,63,185,160,56,63,230,237,36,61,104,194,41,191,125,43,127,191,131,76,70,191,239,219,246,189,63,202,25,63,83,175,124,63,18,175,82,63,137,211,76,62,193,210,8,191,165,143,120,191,215,179,93,191,133,114,142,190,50,240,237,62,73,211,114,63,135,72,103,63,198,142,181,62,217,175,200,190,198,131,107,191,57,93,111,191,151,125,219,190,79,34,162,62,63,173,98,63,132,228,117,63,0,0,0,63,42,15,117,190,97,94,88,191,143,211,122,191,177,108,17,191,219,66,36,62,72,168,76,63,43,34,126,63,241,231,33,63,168,203,164,189,103,158,63,191,218,202,127,191,98,86,49,191,243,4,53,63,104,194,41,63,239,219,246,189,18,175,82,191,165,143,120,191,50,240,237,190,198,142,181,62,57,93,111,63,63,173,98,63,42,15,117,62,177,108,17,191,43,34,126,191,103,158,63,191,23,22,247,165,103,158,63,63,43,34,126,63,177,108,17,63,42,15,117,190,63,173,98,191,57,93,111,191,198,142,181,190,50,240,237,62,165,143,120,63,18,175,82,63,239,219,246,61,104,194,41,191,0,0,128,191,104,194,41,191,239,219,246,61,18,175,82,63,165,143,120,63,50,240,237,62,198,142,181,190,57,93,111,191,63,173,98,191,42,15,117,190,177,108,17,63,43,34,126,63,103,158,63,63,243,4,53,63,63,202,25,63,133,114,142,190,57,93,111,191,97,94,88,191,168,203,164,189,103,158,63,63,143,211,122,63,151,125,219,62,50,240,237,190,83,175,124,191,185,160,56,191,239,219,246,61,215,179,93,63,198,131,107,63,42,15,117,62,241,231,33,191,218,202,127,191,177,108,17,191,79,34,162,62,73,211,114,63,18,175,82,63,230,237,36,61,131,76,70,191,165,143,120,191,217,175,200,190,0,0,0,63,43,34,126,63,98,86,49,63,219,66,36,190,63,173,98,191,135,72,103,191,137,211,76,190,104,194,41,63,125,43,127,63,193,210,8,63,198,142,181,190,132,228,117,191,72,168,76,191,243,4,53,63,193,210,8,63,151,125,219,190,43,34,126,191,241,231,33,191,79,34,162,62,165,143,120,63,185,160,56,63,137,211,76,190,57,93,111,191,72,168,76,191,168,203,164,61,63,173,98,63,215,179,93,63,230,237,36,61,18,175,82,191,198,131,107,191,219,66,36,190,103,158,63,63,132,228,117,63,133,114,142,62,104,194,41,191,83,175,124,191,217,175,200,190,177,108,17,63,218,202,127,63,0,0,0,63,50,240,237,190,125,43,127,191,63,202,25,191,198,142,181,62,143,211,122,63,98,86,49,63,42,15,117,190,73,211,114,191,131,76,70,191,239,219,246,61,135,72,103,63,97,94,88,63,243,4,53,63,50,240,237,62,177,108,17,191,43,34,126,191,198,142,181,190,104,194,41,63,165,143,120,63,42,15,117,62,103,158,63,191,57,93,111,191,239,219,246,189,18,175,82,63,63,173,98,63,88,215,30,38,63,173,98,191,18,175,82,191,239,219,246,61,57,93,111,63,103,158,63,63,42,15,117,190,165,143,120,191,104,194,41,191,198,142,181,62,43,34,126,63,177,108,17,63,50,240,237,190,0,0,128,191,50,240,237,190,177,108,17,63,43,34,126,63,198,142,181,62,104,194,41,191,165,143,120,191,42,15,117,190,103,158,63,63,57,93,111,63,239,219,246,61,18,175,82,191,63,173,98,191,243,4,53,63,217,175,200,62,98,86,49,191,57,93,111,191,230,237,36,189,135,72,103,63,103,158,63,63,79,34,162,190,125,43,127,191,50,240,237,190,241,231,33,63,132,228,117,63,239,219,246,61,215,179,93,191,72,168,76,191,42,15,117,62,83,175,124,63,193,210,8,63,177,108,17,191,143,211,122,191,137,211,76,190,18,175,82,63,97,94,88,63,219,66,36,190,165,143,120,191,63,202,25,191,0,0,0,63,43,34,126,63,133,114,142,62,131,76,70,191,63,173,98,191,168,203,164,61,73,211,114,63,104,194,41,63,151,125,219,190,218,202,127,191,198,142,181,190,185,160,56,63,198,131,107,63,243,4,53,63,79,34,162,62,72,168,76,191,18,175,82,191,133,114,142,62,218,202,127,63,198,142,181,62,131,76,70,191,97,94,88,191,42,15,117,62,125,43,127,63,217,175,200,62,103,158,63,191,215,179,93,191,137,211,76,62,43,34,126,63,151,125,219,62,185,160,56,191,63,173,98,191,219,66,36,62,83,175,124,63,50,240,237,62,98,86,49,191,135,72,103,191,239,219,246,61,143,211,122,63,0,0,0,63,104,194,41,191,198,131,107,191,168,203,164,61,165,143,120,63,193,210,8,63,241,231,33,191,57,93,111,191,230,237,36,61,132,228,117,63,177,108,17,63,63,202,25,191,73,211,114,191,243,4,53,63,42,15,117,62,63,173,98,191,104,194,41,191,177,108,17,63,57,93,111,63,239,219,246,189,43,34,126,191,198,142,181,190,18,175,82,63,103,158,63,63,50,240,237,190,165,143,120,191,233,136,48,167,165,143,120,63,50,240,237,62,103,158,63,191,18,175,82,191,198,142,181,62,43,34,126,63,239,219,246,61,57,93,111,191,177,108,17,191,104,194,41,63,63,173,98,63,42,15,117,190,0,0,128,191,42,15,117,190,63,173,98,63,104,194,41,63,177,108,17,191,57,93,111,191,239,219,246,61,43,34,126,63,198,142,181,62,18,175,82,191,103,158,63,191,50,240,237,62,165,143,120,63,243,4,53,63,219,66,36,62,73,211,114,191,50,240,237,190,72,168,76,63,185,160,56,63,177,108,17,191,135,72,103,191,133,114,142,62,43,34,126,63,230,237,36,61,143,211,122,191,198,142,181,190,215,179,93,63,241,231,33,63,104,194,41,191,97,94,88,191,217,175,200,62,165,143,120,63,168,203,164,189,125,43,127,191,42,15,117,190,198,131,107,63,193,210,8,63,103,158,63,191,131,76,70,191,0,0,0,63,57,93,111,63,137,211,76,190,218,202,127,191,239,219,246,189,132,228,117,63,151,125,219,62,18,175,82,191,98,86,49,191,63,202,25,63,63,173,98,63,79,34,162,190,83,175,124,191,243,4,53,63,168,203,164,61,83,175,124,191,42,15,117,190,73,211,114,63,217,175,200,62,63,173,98,191,193,210,8,191,72,168,76,63,104,194,41,63,98,86,49,191,131,76,70,191,177,108,17,63,215,179,93,63,151,125,219,190,57,93,111,191,133,114,142,62,143,211,122,63,239,219,246,189,218,202,127,191,230,237,36,189,43,34,126,63,137,211,76,62,132,228,117,191,198,142,181,190,135,72,103,63,0,0,0,63,18,175,82,191,241,231,33,191,185,160,56,63,103,158,63,63,63,202,25,191,97,94,88,191,50,240,237,62,198,131,107,63,79,34,162,190,165,143,120,191,219,66,36,62,125,43,127,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,243,4,53,63,168,203,164,189,83,175,124,191,42,15,117,62,73,211,114,63,217,175,200,190,63,173,98,191,193,210,8,63,72,168,76,63,104,194,41,191,98,86,49,191,131,76,70,63,177,108,17,63,215,179,93,191,151,125,219,190,57,93,111,63,133,114,142,62,143,211,122,191,239,219,246,189,218,202,127,63,230,237,36,189,43,34,126,191,137,211,76,62,132,228,117,63,198,142,181,190,135,72,103,191,0,0,0,63,18,175,82,63,241,231,33,191,185,160,56,191,103,158,63,63,63,202,25,63,97,94,88,191,50,240,237,190,198,131,107,63,79,34,162,62,165,143,120,191,219,66,36,190,125,43,127,63,243,4,53,63,219,66,36,190,73,211,114,191,50,240,237,62,72,168,76,63,185,160,56,191,177,108,17,191,135,72,103,63,133,114,142,62,43,34,126,191,230,237,36,61,143,211,122,63,198,142,181,190,215,179,93,191,241,231,33,63,104,194,41,63,97,94,88,191,217,175,200,190,165,143,120,63,168,203,164,61,125,43,127,191,42,15,117,62,198,131,107,63,193,210,8,191,103,158,63,191,131,76,70,63,0,0,0,63,57,93,111,191,137,211,76,190,218,202,127,63,239,219,246,189,132,228,117,191,151,125,219,62,18,175,82,63,98,86,49,191,63,202,25,191,63,173,98,63,79,34,162,62,83,175,124,191,243,4,53,63,42,15,117,190,63,173,98,191,104,194,41,63,177,108,17,63,57,93,111,191,239,219,246,189,43,34,126,63,198,142,181,190,18,175,82,191,103,158,63,63,50,240,237,62,165,143,120,191,15,47,66,167,165,143,120,63,50,240,237,190,103,158,63,191,18,175,82,63,198,142,181,62,43,34,126,191,239,219,246,61,57,93,111,63,177,108,17,191,104,194,41,191,63,173,98,63,42,15,117,62,0,0,128,191,42,15,117,62,63,173,98,63,104,194,41,191,177,108,17,191,57,93,111,63,239,219,246,61,43,34,126,191,198,142,181,62,18,175,82,63,103,158,63,191,50,240,237,190,165,143,120,63,243,4,53,63,79,34,162,190,72,168,76,191,18,175,82,63,133,114,142,62,218,202,127,191,198,142,181,62,131,76,70,63,97,94,88,191,42,15,117,190,125,43,127,63,217,175,200,190,103,158,63,191,215,179,93,63,137,211,76,62,43,34,126,191,151,125,219,62,185,160,56,63,63,173,98,191,219,66,36,190,83,175,124,63,50,240,237,190,98,86,49,191,135,72,103,63,239,219,246,61,143,211,122,191,0,0,0,63,104,194,41,63,198,131,107,191,168,203,164,189,165,143,120,63,193,210,8,191,241,231,33,191,57,93,111,63,230,237,36,61,132,228,117,191,177,108,17,63,63,202,25,63,73,211,114,191,243,4,53,63,217,175,200,190,98,86,49,191,57,93,111,63,230,237,36,189,135,72,103,191,103,158,63,63,79,34,162,62,125,43,127,191,50,240,237,62,241,231,33,63,132,228,117,191,239,219,246,61,215,179,93,63,72,168,76,191,42,15,117,190,83,175,124,63,193,210,8,191,177,108,17,191,143,211,122,63,137,211,76,190,18,175,82,191,97,94,88,63,219,66,36,62,165,143,120,191,63,202,25,63,0,0,0,63,43,34,126,191,133,114,142,62,131,76,70,63,63,173,98,191,168,203,164,189,73,211,114,63,104,194,41,191,151,125,219,190,218,202,127,63,198,142,181,190,185,160,56,191,198,131,107,63,243,4,53,63,50,240,237,190,177,108,17,191,43,34,126,63,198,142,181,190,104,194,41,191,165,143,120,63,42,15,117,190,103,158,63,191,57,93,111,63,239,219,246,189,18,175,82,191,63,173,98,63,119,247,83,166,63,173,98,191,18,175,82,63,239,219,246,61,57,93,111,191,103,158,63,63,42,15,117,62,165,143,120,191,104,194,41,63,198,142,181,62,43,34,126,191,177,108,17,63,50,240,237,62,0,0,128,191,50,240,237,62,177,108,17,63,43,34,126,191,198,142,181,62,104,194,41,63,165,143,120,191,42,15,117,62,103,158,63,63,57,93,111,191,239,219,246,61,18,175,82,63,63,173,98,191,243,4,53,63,193,210,8,191,151,125,219,190,43,34,126,63,241,231,33,191,79,34,162,190,165,143,120,63,185,160,56,191,137,211,76,190,57,93,111,63,72,168,76,191,168,203,164,189,63,173,98,63,215,179,93,191,230,237,36,61,18,175,82,63,198,131,107,191,219,66,36,62,103,158,63,63,132,228,117,191,133,114,142,62,104,194,41,63,83,175,124,191,217,175,200,62,177,108,17,63,218,202,127,191,0,0,0,63,50,240,237,62,125,43,127,191,63,202,25,63,198,142,181,62,143,211,122,191,98,86,49,63,42,15,117,62,73,211,114,191,131,76,70,63,239,219,246,61,135,72,103,191,97,94,88,63,243,4,53,63,63,202,25,191,133,114,142,190,57,93,111,63,97,94,88,191,168,203,164,61,103,158,63,63,143,211,122,191,151,125,219,62,50,240,237,62,83,175,124,191,185,160,56,63,239,219,246,61,215,179,93,191,198,131,107,63,42,15,117,190,241,231,33,191,218,202,127,63,177,108,17,191,79,34,162,190,73,211,114,63,18,175,82,191,230,237,36,61,131,76,70,63,165,143,120,191,217,175,200,62,0,0,0,63,43,34,126,191,98,86,49,63,219,66,36,62,63,173,98,191,135,72,103,63,137,211,76,190,104,194,41,191,125,43,127,63,193,210,8,191,198,142,181,190,132,228,117,63,72,168,76,191,243,4,53,63,104,194,41,191,239,219,246,189,18,175,82,63,165,143,120,191,50,240,237,62,198,142,181,62,57,93,111,191,63,173,98,63,42,15,117,190,177,108,17,191,43,34,126,63,103,158,63,191,53,213,83,167,103,158,63,63,43,34,126,191,177,108,17,63,42,15,117,62,63,173,98,191,57,93,111,63,198,142,181,190,50,240,237,190,165,143,120,63,18,175,82,191,239,219,246,61,104,194,41,63,0,0,128,191,104,194,41,63,239,219,246,61,18,175,82,191,165,143,120,63,50,240,237,190,198,142,181,190,57,93,111,63,63,173,98,191,42,15,117,62,177,108,17,63,43,34,126,191,103,158,63,63,243,4,53,63,185,160,56,191,230,237,36,61,104,194,41,63,125,43,127,191,131,76,70,63,239,219,246,189,63,202,25,191,83,175,124,63,18,175,82,191,137,211,76,62,193,210,8,63,165,143,120,191,215,179,93,63,133,114,142,190,50,240,237,190,73,211,114,63,135,72,103,191,198,142,181,62,217,175,200,62,198,131,107,191,57,93,111,63,151,125,219,190,79,34,162,190,63,173,98,63,132,228,117,191,0,0,0,63,42,15,117,62,97,94,88,191,143,211,122,63,177,108,17,191,219,66,36,190,72,168,76,63,43,34,126,191,241,231,33,63,168,203,164,61,103,158,63,191,218,202,127,63,98,86,49,191,243,4,53,63,131,76,70,191,137,211,76,62,50,240,237,62,198,131,107,191,132,228,117,63,177,108,17,191,168,203,164,189,98,86,49,63,43,34,126,191,97,94,88,63,79,34,162,190,198,142,181,190,215,179,93,63,83,175,124,191,104,194,41,63,230,237,36,189,63,202,25,191,165,143,120,63,135,72,103,191,151,125,219,62,42,15,117,62,72,168,76,191,218,202,127,63,103,158,63,191,219,66,36,62,0,0,0,63,57,93,111,191,73,211,114,63,193,210,8,191,239,219,246,189,185,160,56,63,125,43,127,191,18,175,82,63,133,114,142,190,217,175,200,190,63,173,98,63,143,211,122,191,241,231,33,63,243,4,53,63,18,175,82,191,198,142,181,62,42,15,117,62,103,158,63,191,43,34,126,63,63,173,98,191,50,240,237,62,239,219,246,61,104,194,41,191,165,143,120,63,57,93,111,191,177,108,17,63,222,94,13,166,177,108,17,191,57,93,111,63,165,143,120,191,104,194,41,63,239,219,246,189,50,240,237,190,63,173,98,63,43,34,126,191,103,158,63,63,42,15,117,190,198,142,181,190,18,175,82,63,0,0,128,191,18,175,82,63,198,142,181,190,42,15,117,190,103,158,63,63,43,34,126,191,63,173,98,63,50,240,237,190,239,219,246,189,104,194,41,63,165,143,120,191,57,93,111,63,177,108,17,191,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,195,67,119,38,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,138,140,141,165,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,50,146,101,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,91,26,141,38,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,115,83,13,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,243,4,53,63,135,72,103,191,241,231,33,63,42,15,117,190,137,211,76,190,63,202,25,63,63,173,98,191,218,202,127,63,198,131,107,191,104,194,41,63,133,114,142,190,219,66,36,190,177,108,17,63,215,179,93,191,125,43,127,63,57,93,111,191,98,86,49,63,79,34,162,190,239,219,246,189,193,210,8,63,97,94,88,191,43,34,126,63,73,211,114,191,185,160,56,63,198,142,181,190,168,203,164,189,0,0,0,63,18,175,82,191,83,175,124,63,132,228,117,191,103,158,63,63,217,175,200,190,230,237,36,189,50,240,237,62,72,168,76,191,143,211,122,63,165,143,120,191,131,76,70,63,151,125,219,190,243,4,53,63,57,93,111,191,103,158,63,63,50,240,237,190,239,219,246,61,42,15,117,62,177,108,17,191,18,175,82,63,165,143,120,191,43,34,126,63,63,173,98,191,104,194,41,63,198,142,181,190,92,123,101,167,198,142,181,62,104,194,41,191,63,173,98,63,43,34,126,191,165,143,120,63,18,175,82,191,177,108,17,63,42,15,117,190,239,219,246,189,50,240,237,62,103,158,63,191,57,93,111,63,0,0,128,191,57,93,111,63,103,158,63,191,50,240,237,62,239,219,246,189,42,15,117,190,177,108,17,63,18,175,82,191,165,143,120,63,43,34,126,191,63,173,98,63,104,194,41,191,198,142,181,62,243,4,53,63,132,228,117,191,97,94,88,63,104,194,41,191,151,125,219,62,219,66,36,190,239,219,246,189,217,175,200,62,241,231,33,191,18,175,82,63,73,211,114,191,218,202,127,63,165,143,120,191,215,179,93,63,98,86,49,191,50,240,237,62,137,211,76,190,168,203,164,189,198,142,181,62,63,202,25,191,72,168,76,63,57,93,111,191,125,43,127,63,143,211,122,191,63,173,98,63,185,160,56,191,0,0,0,63,42,15,117,190,230,237,36,189,79,34,162,62,177,108,17,191,131,76,70,63,198,131,107,191,43,34,126,63,83,175,124,191,135,72,103,63,103,158,63,191,193,210,8,63,133,114,142,190,243,4,53,63,143,211,122,191,198,131,107,63,18,175,82,191,98,86,49,63,193,210,8,191,198,142,181,62,219,66,36,190,230,237,36,189,42,15,117,62,151,125,219,190,63,202,25,63,103,158,63,191,215,179,93,63,73,211,114,191,43,34,126,63,125,43,127,191,132,228,117,63,63,173,98,191,131,76,70,63,241,231,33,191,50,240,237,62,133,114,142,190,168,203,164,61,239,219,246,61,79,34,162,190,0,0,0,63,104,194,41,191,72,168,76,63,135,72,103,191,165,143,120,63,218,202,127,191,83,175,124,63,57,93,111,191,97,94,88,63,185,160,56,191,177,108,17,63,217,175,200,190,137,211,76,62,243,4,53,63,43,34,126,191,165,143,120,63,57,93,111,191,63,173,98,63,18,175,82,191,103,158,63,63,104,194,41,191,177,108,17,63,50,240,237,190,198,142,181,62,42,15,117,190,239,219,246,61,138,140,141,165,239,219,246,189,42,15,117,62,198,142,181,190,50,240,237,62,177,108,17,191,104,194,41,63,103,158,63,191,18,175,82,63,63,173,98,191,57,93,111,63,165,143,120,191,43,34,126,63,0,0,128,191,43,34,126,63,165,143,120,191,57,93,111,63,63,173,98,191,18,175,82,63,103,158,63,191,104,194,41,63,177,108,17,191,50,240,237,62,198,142,181,190,42,15,117,62,239,219,246,189,243,4,53,63,218,202,127,191,125,43,127,63,43,34,126,191,83,175,124,63,143,211,122,191,165,143,120,63,132,228,117,191,73,211,114,63,57,93,111,191,198,131,107,63,135,72,103,191,63,173,98,63,215,179,93,191,97,94,88,63,18,175,82,191,72,168,76,63,131,76,70,191,103,158,63,63,185,160,56,191,98,86,49,63,104,194,41,191,241,231,33,63,63,202,25,191,177,108,17,63,193,210,8,191,0,0,0,63,50,240,237,190,151,125,219,62,217,175,200,190,198,142,181,62,79,34,162,190,133,114,142,62,42,15,117,190,137,211,76,62,219,66,36,190,239,219,246,61,168,203,164,189,230,237,36,61,243,4,53,63,121,205,127,63,249,53,127,63,188,57,126,63,37,217,124,63,190,20,123,63,60,237,120,63,119,99,118,63,113,120,115,63,79,45,112,63,94,131,108,63,18,124,104,63,1,25,100,63,230,91,95,63,160,70,90,63,49,219,84,63,189,27,79,63,136,10,73,63,247,169,66,63,143,252,59,63,243,4,53,63,227,197,45,63,58,66,38,63,241,124,30,63,24,121,22,63,218,57,14,63,119,194,5,63,144,44,250,62,113,113,232,62,146,90,214,62,21,239,195,62,65,54,177,62,122,55,158,62,62,250,138,62,77,12,111,62,194,197,71,62,91,48,32,62,114,183,240,61,42,175,160,61,231,206,32,61,243,4,53,63,188,57,126,63,60,237,120,63,79,45,112,63,1,25,100,63,49,219,84,63,247,169,66,63,227,197,45,63,24,121,22,63,144,44,250,62,21,239,195,62,62,250,138,62,91,48,32,62,231,206,32,61,42,175,160,189,194,197,71,190,122,55,158,190,146,90,214,190,119,194,5,191,241,124,30,191,243,4,53,191,136,10,73,191,160,70,90,191,18,124,104,191,113,120,115,191,190,20,123,191,249,53,127,191,121,205,127,191,37,217,124,191,119,99,118,191,94,131,108,191,230,91,95,191,189,27,79,191,143,252,59,191,58,66,38,191,218,57,14,191,113,113,232,190,65,54,177,190,77,12,111,190,114,183,240,189,243,4,53,63,190,20,123,63,94,131,108,63,49,219,84,63,243,4,53,63,218,57,14,63,21,239,195,62,194,197,71,62,50,49,141,36,194,197,71,190,21,239,195,190,218,57,14,191,243,4,53,191,49,219,84,191,94,131,108,191,190,20,123,191,0,0,128,191,190,20,123,191,94,131,108,191,49,219,84,191,243,4,53,191,218,57,14,191,21,239,195,190,194,197,71,190,202,201,83,165,194,197,71,62,21,239,195,62,218,57,14,63,243,4,53,63,49,219,84,63,94,131,108,63,190,20,123,63,0,0,128,63,190,20,123,63,94,131,108,63,49,219,84,63,243,4,53,63,218,57,14,63,21,239,195,62,194,197,71,62,243,4,53,63,119,99,118,63,160,70,90,63,227,197,45,63,113,113,232,62,194,197,71,62,42,175,160,189,65,54,177,190,24,121,22,191,136,10,73,191,94,131,108,191,188,57,126,191,37,217,124,191,18,124,104,191,247,169,66,191,218,57,14,191,122,55,158,190,231,206,32,189,77,12,111,62,144,44,250,62,243,4,53,63,230,91,95,63,60,237,120,63,121,205,127,63,113,120,115,63,49,219,84,63,58,66,38,63,146,90,214,62,91,48,32,62,114,183,240,189,21,239,195,190,241,124,30,191,189,27,79,191,79,45,112,191,249,53,127,191,190,20,123,191,1,25,100,191,143,252,59,191,119,194,5,191,62,250,138,190,243,4,53,63,79,45,112,63,247,169,66,63,144,44,250,62,91,48,32,62,194,197,71,190,119,194,5,191,136,10,73,191,113,120,115,191,121,205,127,191,94,131,108,191,143,252,59,191,113,113,232,190,114,183,240,189,77,12,111,62,218,57,14,63,189,27,79,63,119,99,118,63,249,53,127,63,18,124,104,63,243,4,53,63,146,90,214,62,42,175,160,61,62,250,138,190,24,121,22,191,49,219,84,191,60,237,120,191,188,57,126,191,1,25,100,191,227,197,45,191,21,239,195,190,231,206,32,189,122,55,158,62,241,124,30,63,160,70,90,63,190,20,123,63,37,217,124,63,230,91,95,63,58,66,38,63,65,54,177,62,243,4,53,63,18,124,104,63,58,66,38,63,62,250,138,62,91,48,32,190,218,57,14,191,160,70,90,191,188,57,126,191,113,120,115,191,143,252,59,191,21,239,195,190,231,206,32,61,113,113,232,62,136,10,73,63,60,237,120,63,190,20,123,63,189,27,79,63,144,44,250,62,42,175,160,61,65,54,177,190,243,4,53,191,79,45,112,191,249,53,127,191,230,91,95,191,24,121,22,191,194,197,71,190,77,12,111,62,241,124,30,63,1,25,100,63,121,205,127,63,94,131,108,63,227,197,45,63,122,55,158,62,114,183,240,189,119,194,5,191,49,219,84,191,37,217,124,191,119,99,118,191,247,169,66,191,146,90,214,190,243,4,53,63,230,91,95,63,119,194,5,63,231,206,32,61,113,113,232,190,49,219,84,191,249,53,127,191,18,124,104,191,24,121,22,191,114,183,240,189,21,239,195,62,136,10,73,63,37,217,124,63,79,45,112,63,58,66,38,63,194,197,71,62,122,55,158,190,143,252,59,191,60,237,120,191,119,99,118,191,243,4,53,191,62,250,138,190,77,12,111,62,227,197,45,63,113,120,115,63,190,20,123,63,247,169,66,63,65,54,177,62,91,48,32,190,241,124,30,191,94,131,108,191,188,57,126,191,189,27,79,191,146,90,214,190,42,175,160,61,218,57,14,63,1,25,100,63,121,205,127,63,160,70,90,63,144,44,250,62,243,4,53,63,49,219,84,63,21,239,195,62,194,197,71,190,243,4,53,191,190,20,123,191,94,131,108,191,218,57,14,191,202,201,83,165,218,57,14,63,94,131,108,63,190,20,123,63,243,4,53,63,194,197,71,62,21,239,195,190,49,219,84,191,0,0,128,191,49,219,84,191,21,239,195,190,194,197,71,62,243,4,53,63,190,20,123,63,94,131,108,63,218,57,14,63,88,215,30,38,218,57,14,191,94,131,108,191,190,20,123,191,243,4,53,191,194,197,71,190,21,239,195,62,49,219,84,63,0,0,128,63,49,219,84,63,21,239,195,62,194,197,71,190,243,4,53,191,190,20,123,191,94,131,108,191,218,57,14,191,243,4,53,63,136,10,73,63,77,12,111,62,146,90,214,190,1,25,100,191,190,20,123,191,58,66,38,191,231,206,32,189,24,121,22,63,119,99,118,63,94,131,108,63,144,44,250,62,91,48,32,190,143,252,59,191,249,53,127,191,49,219,84,191,122,55,158,190,65,54,177,62,160,70,90,63,188,57,126,63,243,4,53,63,114,183,240,61,119,194,5,191,79,45,112,191,113,120,115,191,218,57,14,191,42,175,160,61,227,197,45,63,37,217,124,63,230,91,95,63,21,239,195,62,62,250,138,190,189,27,79,191,121,205,127,191,247,169,66,191,194,197,71,190,113,113,232,62,18,124,104,63,60,237,120,63,241,124,30,63,243,4,53,63,143,252,59,63,42,175,160,61,241,124,30,191,37,217,124,191,49,219,84,191,77,12,111,190,144,44,250,62,113,120,115,63,18,124,104,63,21,239,195,62,65,54,177,190,1,25,100,191,119,99,118,191,119,194,5,191,194,197,71,62,189,27,79,63,188,57,126,63,58,66,38,63,231,206,32,189,243,4,53,191,121,205,127,191,247,169,66,191,114,183,240,189,24,121,22,63,190,20,123,63,160,70,90,63,62,250,138,62,113,113,232,190,79,45,112,191,94,131,108,191,146,90,214,190,122,55,158,62,230,91,95,63,60,237,120,63,218,57,14,63,91,48,32,190,136,10,73,191,249,53,127,191,227,197,45,191,243,4,53,63,227,197,45,63,42,175,160,189,136,10,73,191,37,217,124,191,218,57,14,191,77,12,111,62,230,91,95,63,113,120,115,63,146,90,214,62,21,239,195,190,79,45,112,191,1,25,100,191,62,250,138,190,119,194,5,63,190,20,123,63,189,27,79,63,114,183,240,61,58,66,38,191,121,205,127,191,243,4,53,191,231,206,32,61,247,169,66,63,188,57,126,63,24,121,22,63,194,197,71,190,160,70,90,191,119,99,118,191,113,113,232,190,65,54,177,62,94,131,108,63,18,124,104,63,122,55,158,62,144,44,250,190,60,237,120,191,49,219,84,191,91,48,32,190,241,124,30,63,249,53,127,63,143,252,59,63,243,4,53,63,241,124,30,63,77,12,111,190,18,124,104,191,1,25,100,191,194,197,71,190,58,66,38,63,121,205,127,63,24,121,22,63,62,250,138,190,94,131,108,191,230,91,95,191,91,48,32,190,227,197,45,63,249,53,127,63,218,57,14,63,122,55,158,190,79,45,112,191,160,70,90,191,114,183,240,189,243,4,53,63,188,57,126,63,119,194,5,63,65,54,177,190,113,120,115,191,49,219,84,191,42,175,160,189,143,252,59,63,37,217,124,63,144,44,250,62,21,239,195,190,119,99,118,191,189,27,79,191,231,206,32,189,247,169,66,63,190,20,123,63,113,113,232,62,146,90,214,190,60,237,120,191,136,10,73,191,243,4,53,63,218,57,14,63,21,239,195,190,190,20,123,191,243,4,53,191,194,197,71,62,94,131,108,63,49,219,84,63,126,125,176,37,49,219,84,191,94,131,108,191,194,197,71,190,243,4,53,63,190,20,123,63,21,239,195,62,218,57,14,191,0,0,128,191,218,57,14,191,21,239,195,62,190,20,123,63,243,4,53,63,194,197,71,190,94,131,108,191,49,219,84,191,15,47,66,167,49,219,84,63,94,131,108,63,194,197,71,62,243,4,53,191,190,20,123,191,21,239,195,190,218,57,14,63,0,0,128,63,218,57,14,63,21,239,195,190,190,20,123,191,243,4,53,191,194,197,71,62,94,131,108,63,49,219,84,63,243,4,53,63,144,44,250,62,119,194,5,191,121,205,127,191,113,113,232,190,218,57,14,63,249,53,127,63,146,90,214,62,24,121,22,191,188,57,126,191,21,239,195,190,241,124,30,63,37,217,124,63,65,54,177,62,58,66,38,191,190,20,123,191,122,55,158,190,227,197,45,63,60,237,120,63,62,250,138,62,243,4,53,191,119,99,118,191,77,12,111,190,143,252,59,63,113,120,115,63,194,197,71,62,247,169,66,191,79,45,112,191,91,48,32,190,136,10,73,63,94,131,108,63,114,183,240,61,189,27,79,191,18,124,104,191,42,175,160,189,49,219,84,63,1,25,100,63,231,206,32,61,160,70,90,191,230,91,95,191,243,4,53,63,146,90,214,62,58,66,38,191,119,99,118,191,91,48,32,190,49,219,84,63,160,70,90,63,114,183,240,189,113,120,115,191,227,197,45,191,21,239,195,62,121,205,127,63,113,113,232,62,241,124,30,191,60,237,120,191,194,197,71,190,189,27,79,63,230,91,95,63,42,175,160,189,79,45,112,191,243,4,53,191,65,54,177,62,249,53,127,63,144,44,250,62,24,121,22,191,190,20,123,191,77,12,111,190,136,10,73,63,1,25,100,63,231,206,32,189,94,131,108,191,143,252,59,191,122,55,158,62,188,57,126,63,119,194,5,63,218,57,14,191,37,217,124,191,62,250,138,190,247,169,66,63,18,124,104,63,243,4,53,63,65,54,177,62,247,169,66,191,230,91,95,191,91,48,32,62,190,20,123,63,119,194,5,63,241,124,30,191,113,120,115,191,231,206,32,189,94,131,108,63,227,197,45,63,113,113,232,190,188,57,126,191,77,12,111,190,49,219,84,63,189,27,79,63,62,250,138,190,249,53,127,191,146,90,214,190,243,4,53,63,18,124,104,63,42,175,160,189,119,99,118,191,24,121,22,191,218,57,14,63,60,237,120,63,114,183,240,61,1,25,100,191,143,252,59,191,21,239,195,62,121,205,127,63,122,55,158,62,136,10,73,191,160,70,90,191,194,197,71,62,37,217,124,63,144,44,250,62,58,66,38,191,79,45,112,191,243,4,53,63,62,250,138,62,160,70,90,191,143,252,59,191,113,113,232,62,190,20,123,63,42,175,160,61,79,45,112,191,24,121,22,191,241,124,30,63,94,131,108,63,114,183,240,189,37,217,124,191,146,90,214,190,247,169,66,63,49,219,84,63,122,55,158,190,121,205,127,191,77,12,111,190,230,91,95,63,243,4,53,63,144,44,250,190,60,237,120,191,231,206,32,189,113,120,115,63,218,57,14,63,58,66,38,191,18,124,104,191,91,48,32,62,188,57,126,63,21,239,195,62,136,10,73,191,189,27,79,191,65,54,177,62,249,53,127,63,194,197,71,62,1,25,100,191,227,197,45,191,119,194,5,63,119,99,118,63,243,4,53,63,194,197,71,62,94,131,108,191,218,57,14,191,243,4,53,63,49,219,84,63,21,239,195,190,190,20,123,191,23,22,247,165,190,20,123,63,21,239,195,62,49,219,84,191,243,4,53,191,218,57,14,63,94,131,108,63,194,197,71,190,0,0,128,191,194,197,71,190,94,131,108,63,218,57,14,63,243,4,53,191,49,219,84,191,21,239,195,62,190,20,123,63,222,94,13,166,190,20,123,191,21,239,195,190,49,219,84,63,243,4,53,63,218,57,14,191,94,131,108,191,194,197,71,62,0,0,128,63,194,197,71,62,94,131,108,191,218,57,14,191,243,4,53,63,49,219,84,63,21,239,195,190,190,20,123,191,243,4,53,63,114,183,240,61,60,237,120,191,65,54,177,190,1,25,100,63,218,57,14,63,247,169,66,191,143,252,59,191,24,121,22,63,230,91,95,63,21,239,195,190,119,99,118,191,91,48,32,62,121,205,127,63,42,175,160,61,190,20,123,191,122,55,158,190,18,124,104,63,119,194,5,63,136,10,73,191,243,4,53,191,241,124,30,63,160,70,90,63,146,90,214,190,113,120,115,191,194,197,71,62,249,53,127,63,231,206,32,61,37,217,124,191,62,250,138,190,94,131,108,63,144,44,250,62,189,27,79,191,227,197,45,191,58,66,38,63,49,219,84,63,113,113,232,190,79,45,112,191,77,12,111,62,188,57,126,63,243,4,53,63,231,206,32,61,249,53,127,191,114,183,240,189,37,217,124,63,194,197,71,62,60,237,120,191,62,250,138,190,113,120,115,63,65,54,177,62,94,131,108,191,146,90,214,190,1,25,100,63,144,44,250,62,160,70,90,191,218,57,14,191,189,27,79,63,241,124,30,63,247,169,66,191,227,197,45,191,243,4,53,63,143,252,59,63,58,66,38,191,136,10,73,191,24,121,22,63,49,219,84,63,119,194,5,191,230,91,95,191,113,113,232,62,18,124,104,63,21,239,195,190,79,45,112,191,122,55,158,62,119,99,118,63,77,12,111,190,190,20,123,191,91,48,32,62,188,57,126,63,42,175,160,189,121,205,127,191,243,4,53,63,231,206,32,189,249,53,127,191,114,183,240,61,37,217,124,63,194,197,71,190,60,237,120,191,62,250,138,62,113,120,115,63,65,54,177,190,94,131,108,191,146,90,214,62,1,25,100,63,144,44,250,190,160,70,90,191,218,57,14,63,189,27,79,63,241,124,30,191,247,169,66,191,227,197,45,63,243,4,53,63,143,252,59,191,58,66,38,191,136,10,73,63,24,121,22,63,49,219,84,191,119,194,5,191,230,91,95,63,113,113,232,62,18,124,104,191,21,239,195,190,79,45,112,63,122,55,158,62,119,99,118,191,77,12,111,190,190,20,123,63,91,48,32,62,188,57,126,191,42,175,160,189,121,205,127,63,243,4,53,63,114,183,240,189,60,237,120,191,65,54,177,62,1,25,100,63,218,57,14,191,247,169,66,191,143,252,59,63,24,121,22,63,230,91,95,191,21,239,195,190,119,99,118,63,91,48,32,62,121,205,127,191,42,175,160,61,190,20,123,63,122,55,158,190,18,124,104,191,119,194,5,63,136,10,73,63,243,4,53,191,241,124,30,191,160,70,90,63,146,90,214,62,113,120,115,191,194,197,71,190,249,53,127,63,231,206,32,189,37,217,124,191,62,250,138,62,94,131,108,63,144,44,250,190,189,27,79,191,227,197,45,63,58,66,38,63,49,219,84,191,113,113,232,190,79,45,112,63,77,12,111,62,188,57,126,191,243,4,53,63,194,197,71,190,94,131,108,191,218,57,14,63,243,4,53,63,49,219,84,191,21,239,195,190,190,20,123,63,88,215,30,38,190,20,123,191,21,239,195,62,49,219,84,63,243,4,53,191,218,57,14,191,94,131,108,63,194,197,71,62,0,0,128,191,194,197,71,62,94,131,108,63,218,57,14,191,243,4,53,191,49,219,84,63,21,239,195,62,190,20,123,191,130,33,119,167,190,20,123,63,21,239,195,190,49,219,84,191,243,4,53,63,218,57,14,63,94,131,108,191,194,197,71,190,0,0,128,63,194,197,71,190,94,131,108,191,218,57,14,63,243,4,53,63,49,219,84,191,21,239,195,190,190,20,123,63,243,4,53,63,62,250,138,190,160,70,90,191,143,252,59,63,113,113,232,62,190,20,123,191,42,175,160,61,79,45,112,63,24,121,22,191,241,124,30,191,94,131,108,63,114,183,240,61,37,217,124,191,146,90,214,62,247,169,66,63,49,219,84,191,122,55,158,190,121,205,127,63,77,12,111,190,230,91,95,191,243,4,53,63,144,44,250,62,60,237,120,191,231,206,32,61,113,120,115,63,218,57,14,191,58,66,38,191,18,124,104,63,91,48,32,62,188,57,126,191,21,239,195,62,136,10,73,63,189,27,79,191,65,54,177,190,249,53,127,63,194,197,71,190,1,25,100,191,227,197,45,63,119,194,5,63,119,99,118,191,243,4,53,63,65,54,177,190,247,169,66,191,230,91,95,63,91,48,32,62,190,20,123,191,119,194,5,63,241,124,30,63,113,120,115,191,231,206,32,61,94,131,108,63,227,197,45,191,113,113,232,190,188,57,126,63,77,12,111,190,49,219,84,191,189,27,79,63,62,250,138,62,249,53,127,191,146,90,214,62,243,4,53,63,18,124,104,191,42,175,160,189,119,99,118,63,24,121,22,191,218,57,14,191,60,237,120,63,114,183,240,189,1,25,100,191,143,252,59,63,21,239,195,62,121,205,127,191,122,55,158,62,136,10,73,63,160,70,90,191,194,197,71,190,37,217,124,63,144,44,250,190,58,66,38,191,79,45,112,63,243,4,53,63,146,90,214,190,58,66,38,191,119,99,118,63,91,48,32,190,49,219,84,191,160,70,90,63,114,183,240,61,113,120,115,191,227,197,45,63,21,239,195,62,121,205,127,191,113,113,232,62,241,124,30,63,60,237,120,191,194,197,71,62,189,27,79,63,230,91,95,191,42,175,160,189,79,45,112,63,243,4,53,191,65,54,177,190,249,53,127,63,144,44,250,190,24,121,22,191,190,20,123,63,77,12,111,190,136,10,73,191,1,25,100,63,231,206,32,61,94,131,108,191,143,252,59,63,122,55,158,62,188,57,126,191,119,194,5,63,218,57,14,63,37,217,124,191,62,250,138,62,247,169,66,63,18,124,104,191,243,4,53,63,144,44,250,190,119,194,5,191,121,205,127,63,113,113,232,190,218,57,14,191,249,53,127,63,146,90,214,190,24,121,22,191,188,57,126,63,21,239,195,190,241,124,30,191,37,217,124,63,65,54,177,190,58,66,38,191,190,20,123,63,122,55,158,190,227,197,45,191,60,237,120,63,62,250,138,190,243,4,53,191,119,99,118,63,77,12,111,190,143,252,59,191,113,120,115,63,194,197,71,190,247,169,66,191,79,45,112,63,91,48,32,190,136,10,73,191,94,131,108,63,114,183,240,189,189,27,79,191,18,124,104,63,42,175,160,189,49,219,84,191,1,25,100,63,231,206,32,189,160,70,90,191,230,91,95,63,243,4,53,63,218,57,14,191,21,239,195,190,190,20,123,63,243,4,53,191,194,197,71,190,94,131,108,63,49,219,84,191,233,136,48,167,49,219,84,63,94,131,108,191,194,197,71,62,243,4,53,63,190,20,123,191,21,239,195,62,218,57,14,63,0,0,128,191,218,57,14,63,21,239,195,62,190,20,123,191,243,4,53,63,194,197,71,62,94,131,108,191,49,219,84,63,175,102,4,40,49,219,84,191,94,131,108,63,194,197,71,190,243,4,53,191,190,20,123,63,21,239,195,190,218,57,14,191,0,0,128,63,218,57,14,191,21,239,195,190,190,20,123,63,243,4,53,191,194,197,71,190,94,131,108,63,49,219,84,191,243,4,53,63,241,124,30,191,77,12,111,190,18,124,104,63,1,25,100,191,194,197,71,62,58,66,38,63,121,205,127,191,24,121,22,63,62,250,138,62,94,131,108,191,230,91,95,63,91,48,32,190,227,197,45,191,249,53,127,63,218,57,14,191,122,55,158,190,79,45,112,63,160,70,90,191,114,183,240,61,243,4,53,63,188,57,126,191,119,194,5,63,65,54,177,62,113,120,115,191,49,219,84,63,42,175,160,189,143,252,59,191,37,217,124,63,144,44,250,190,21,239,195,190,119,99,118,63,189,27,79,191,231,206,32,61,247,169,66,63,190,20,123,191,113,113,232,62,146,90,214,62,60,237,120,191,136,10,73,63,243,4,53,63,227,197,45,191,42,175,160,189,136,10,73,63,37,217,124,191,218,57,14,63,77,12,111,62,230,91,95,191,113,120,115,63,146,90,214,190,21,239,195,190,79,45,112,63,1,25,100,191,62,250,138,62,119,194,5,63,190,20,123,191,189,27,79,63,114,183,240,189,58,66,38,191,121,205,127,63,243,4,53,191,231,206,32,189,247,169,66,63,188,57,126,191,24,121,22,63,194,197,71,62,160,70,90,191,119,99,118,63,113,113,232,190,65,54,177,190,94,131,108,63,18,124,104,191,122,55,158,62,144,44,250,62,60,237,120,191,49,219,84,63,91,48,32,190,241,124,30,191,249,53,127,63,143,252,59,191,243,4,53,63,143,252,59,191,42,175,160,61,241,124,30,63,37,217,124,191,49,219,84,63,77,12,111,190,144,44,250,190,113,120,115,63,18,124,104,191,21,239,195,62,65,54,177,62,1,25,100,191,119,99,118,63,119,194,5,191,194,197,71,190,189,27,79,63,188,57,126,191,58,66,38,63,231,206,32,61,243,4,53,191,121,205,127,63,247,169,66,191,114,183,240,61,24,121,22,63,190,20,123,191,160,70,90,63,62,250,138,190,113,113,232,190,79,45,112,63,94,131,108,191,146,90,214,62,122,55,158,62,230,91,95,191,60,237,120,63,218,57,14,191,91,48,32,190,136,10,73,63,249,53,127,191,227,197,45,63,243,4,53,63,136,10,73,191,77,12,111,62,146,90,214,62,1,25,100,191,190,20,123,63,58,66,38,191,231,206,32,61,24,121,22,63,119,99,118,191,94,131,108,63,144,44,250,190,91,48,32,190,143,252,59,63,249,53,127,191,49,219,84,63,122,55,158,190,65,54,177,190,160,70,90,63,188,57,126,191,243,4,53,63,114,183,240,189,119,194,5,191,79,45,112,63,113,120,115,191,218,57,14,63,42,175,160,61,227,197,45,191,37,217,124,63,230,91,95,191,21,239,195,62,62,250,138,62,189,27,79,191,121,205,127,63,247,169,66,191,194,197,71,62,113,113,232,62,18,124,104,191,60,237,120,63,241,124,30,191,243,4,53,63,49,219,84,191,21,239,195,62,194,197,71,62,243,4,53,191,190,20,123,63,94,131,108,191,218,57,14,63,8,72,141,166,218,57,14,191,94,131,108,63,190,20,123,191,243,4,53,63,194,197,71,190,21,239,195,190,49,219,84,63,0,0,128,191,49,219,84,63,21,239,195,190,194,197,71,190,243,4,53,63,190,20,123,191,94,131,108,63,218,57,14,191,12,236,83,39,218,57,14,63,94,131,108,191,190,20,123,63,243,4,53,191,194,197,71,62,21,239,195,62,49,219,84,191,0,0,128,63,49,219,84,191,21,239,195,62,194,197,71,62,243,4,53,191,190,20,123,63,94,131,108,191,218,57,14,63,243,4,53,63,230,91,95,191,119,194,5,63,231,206,32,189,113,113,232,190,49,219,84,63,249,53,127,191,18,124,104,63,24,121,22,191,114,183,240,61,21,239,195,62,136,10,73,191,37,217,124,63,79,45,112,191,58,66,38,63,194,197,71,190,122,55,158,190,143,252,59,63,60,237,120,191,119,99,118,63,243,4,53,191,62,250,138,62,77,12,111,62,227,197,45,191,113,120,115,63,190,20,123,191,247,169,66,63,65,54,177,190,91,48,32,190,241,124,30,63,94,131,108,191,188,57,126,63,189,27,79,191,146,90,214,62,42,175,160,61,218,57,14,191,1,25,100,63,121,205,127,191,160,70,90,63,144,44,250,190,243,4,53,63,18,124,104,191,58,66,38,63,62,250,138,190,91,48,32,190,218,57,14,63,160,70,90,191,188,57,126,63,113,120,115,191,143,252,59,63,21,239,195,190,231,206,32,189,113,113,232,62,136,10,73,191,60,237,120,63,190,20,123,191,189,27,79,63,144,44,250,190,42,175,160,61,65,54,177,62,243,4,53,191,79,45,112,63,249,53,127,191,230,91,95,63,24,121,22,191,194,197,71,62,77,12,111,62,241,124,30,191,1,25,100,63,121,205,127,191,94,131,108,63,227,197,45,191,122,55,158,62,114,183,240,61,119,194,5,191,49,219,84,63,37,217,124,191,119,99,118,63,247,169,66,191,146,90,214,62,243,4,53,63,79,45,112,191,247,169,66,63,144,44,250,190,91,48,32,62,194,197,71,62,119,194,5,191,136,10,73,63,113,120,115,191,121,205,127,63,94,131,108,191,143,252,59,63,113,113,232,190,114,183,240,61,77,12,111,62,218,57,14,191,189,27,79,63,119,99,118,191,249,53,127,63,18,124,104,191,243,4,53,63,146,90,214,190,42,175,160,61,62,250,138,62,24,121,22,191,49,219,84,63,60,237,120,191,188,57,126,63,1,25,100,191,227,197,45,63,21,239,195,190,231,206,32,61,122,55,158,62,241,124,30,191,160,70,90,63,190,20,123,191,37,217,124,63,230,91,95,191,58,66,38,63,65,54,177,190,243,4,53,63,119,99,118,191,160,70,90,63,227,197,45,191,113,113,232,62,194,197,71,190,42,175,160,189,65,54,177,62,24,121,22,191,136,10,73,63,94,131,108,191,188,57,126,63,37,217,124,191,18,124,104,63,247,169,66,191,218,57,14,63,122,55,158,190,231,206,32,61,77,12,111,62,144,44,250,190,243,4,53,63,230,91,95,191,60,237,120,63,121,205,127,191,113,120,115,63,49,219,84,191,58,66,38,63,146,90,214,190,91,48,32,62,114,183,240,61,21,239,195,190,241,124,30,63,189,27,79,191,79,45,112,63,249,53,127,191,190,20,123,63,1,25,100,191,143,252,59,63,119,194,5,191,62,250,138,62,243,4,53,63,190,20,123,191,94,131,108,63,49,219,84,191,243,4,53,63,218,57,14,191,21,239,195,62,194,197,71,190,15,47,66,167,194,197,71,62,21,239,195,190,218,57,14,63,243,4,53,191,49,219,84,63,94,131,108,191,190,20,123,63,0,0,128,191,190,20,123,63,94,131,108,191,49,219,84,63,243,4,53,191,218,57,14,63,21,239,195,190,194,197,71,62,166,209,136,40,194,197,71,190,21,239,195,62,218,57,14,191,243,4,53,63,49,219,84,191,94,131,108,63,190,20,123,191,0,0,128,63,190,20,123,191,94,131,108,63,49,219,84,191,243,4,53,63,218,57,14,191,21,239,195,62,194,197,71,190,243,4,53,63,188,57,126,191,60,237,120,63,79,45,112,191,1,25,100,63,49,219,84,191,247,169,66,63,227,197,45,191,24,121,22,63,144,44,250,190,21,239,195,62,62,250,138,190,91,48,32,62,231,206,32,189,42,175,160,189,194,197,71,62,122,55,158,190,146,90,214,62,119,194,5,191,241,124,30,63,243,4,53,191,136,10,73,63,160,70,90,191,18,124,104,63,113,120,115,191,190,20,123,63,249,53,127,191,121,205,127,63,37,217,124,191,119,99,118,63,94,131,108,191,230,91,95,63,189,27,79,191,143,252,59,63,58,66,38,191,218,57,14,63,113,113,232,190,65,54,177,62,77,12,111,190,114,183,240,61,243,4,53,63,121,205,127,191,249,53,127,63,188,57,126,191,37,217,124,63,190,20,123,191,60,237,120,63,119,99,118,191,113,120,115,63,79,45,112,191,94,131,108,63,18,124,104,191,1,25,100,63,230,91,95,191,160,70,90,63,49,219,84,191,189,27,79,63,136,10,73,191,247,169,66,63,143,252,59,191,243,4,53,63,227,197,45,191,58,66,38,63,241,124,30,191,24,121,22,63,218,57,14,191,119,194,5,63,144,44,250,190,113,113,232,62,146,90,214,190,21,239,195,62,65,54,177,190,122,55,158,62,62,250,138,190,77,12,111,62,194,197,71,190,91,48,32,62,114,183,240,189,42,175,160,61,231,206,32,189,243,4,53,63,233,207,127,63,180,63,127,63,153,79,126,63,242,255,124,63,61,81,123,63,26,68,121,63,81,217,118,63,201,17,116,63,142,238,112,63,205,112,109,63,214,153,105,63,27,107,101,63,46,230,96,63,193,12,92,63,167,224,86,63,210,99,81,63,80,152,75,63,81,128,69,63,29,30,63,63,26,116,56,63,203,132,49,63,201,82,42,63,201,224,34,63,151,49,27,63,21,72,19,63,62,39,11,63,31,210,2,63,177,151,244,62,63,47,227,62,114,113,209,62,244,100,191,62,140,16,173,62,31,123,154,62,168,171,135,62,110,82,105,62,227,245,66,62,24,80,28,62,37,223,234,61,219,197,156,61,84,227,28,61,243,4,53,63,153,79,126,63,26,68,121,63,142,238,112,63,27,107,101,63,167,224,86,63,81,128,69,63,203,132,49,63,151,49,27,63,31,210,2,63,114,113,209,62,31,123,154,62,227,245,66,62,219,197,156,61,84,227,28,189,24,80,28,190,168,171,135,190,244,100,191,190,177,151,244,190,21,72,19,191,201,82,42,191,29,30,63,191,210,99,81,191,46,230,96,191,205,112,109,191,81,217,118,191,242,255,124,191,233,207,127,191,180,63,127,191,61,81,123,191,201,17,116,191,214,153,105,191,193,12,92,191,80,152,75,191,26,116,56,191,201,224,34,191,62,39,11,191,63,47,227,190,140,16,173,190,110,82,105,190,37,223,234,189,243,4,53,63,61,81,123,63,205,112,109,63,167,224,86,63,26,116,56,63,21,72,19,63,114,113,209,62,110,82,105,62,84,227,28,61,24,80,28,190,140,16,173,190,31,210,2,191,201,82,42,191,80,152,75,191,27,107,101,191,81,217,118,191,180,63,127,191,153,79,126,191,201,17,116,191,46,230,96,191,81,128,69,191,201,224,34,191,177,151,244,190,31,123,154,190,37,223,234,189,219,197,156,61,168,171,135,62,63,47,227,62,151,49,27,63,29,30,63,63,193,12,92,63,142,238,112,63,242,255,124,63,233,207,127,63,26,68,121,63,214,153,105,63,210,99,81,63,203,132,49,63,62,39,11,63,244,100,191,62,227,245,66,62,243,4,53,63,81,217,118,63,193,12,92,63,203,132,49,63,177,151,244,62,110,82,105,62,84,227,28,189,31,123,154,190,62,39,11,191,29,30,63,191,27,107,101,191,61,81,123,191,180,63,127,191,142,238,112,191,210,99,81,191,201,224,34,191,114,113,209,190,24,80,28,190,37,223,234,61,244,100,191,62,151,49,27,63,80,152,75,63,205,112,109,63,153,79,126,63,242,255,124,63,214,153,105,63,81,128,69,63,21,72,19,63,140,16,173,62,219,197,156,61,227,245,66,190,63,47,227,190,201,82,42,191,167,224,86,191,201,17,116,191,233,207,127,191,26,68,121,191,46,230,96,191,26,116,56,191,31,210,2,191,168,171,135,190,243,4,53,63,142,238,112,63,81,128,69,63,31,210,2,63,227,245,66,62,24,80,28,190,177,151,244,190,29,30,63,191,205,112,109,191,233,207,127,191,201,17,116,191,80,152,75,191,62,39,11,191,110,82,105,190,37,223,234,61,63,47,227,62,26,116,56,63,214,153,105,63,180,63,127,63,81,217,118,63,210,99,81,63,21,72,19,63,168,171,135,62,219,197,156,189,114,113,209,190,203,132,49,191,27,107,101,191,153,79,126,191,26,68,121,191,167,224,86,191,151,49,27,191,31,123,154,190,84,227,28,61,244,100,191,62,201,82,42,63,46,230,96,63,242,255,124,63,61,81,123,63,193,12,92,63,201,224,34,63,140,16,173,62,243,4,53,63,214,153,105,63,201,82,42,63,31,123,154,62,37,223,234,189,31,210,2,191,210,99,81,191,61,81,123,191,26,68,121,191,80,152,75,191,177,151,244,190,219,197,156,189,140,16,173,62,203,132,49,63,205,112,109,63,233,207,127,63,27,107,101,63,201,224,34,63,168,171,135,62,24,80,28,190,62,39,11,191,167,224,86,191,242,255,124,191,81,217,118,191,81,128,69,191,63,47,227,190,84,227,28,189,244,100,191,62,26,116,56,63,142,238,112,63,180,63,127,63,46,230,96,63,151,49,27,63,110,82,105,62,227,245,66,190,21,72,19,191,193,12,92,191,153,79,126,191,201,17,116,191,29,30,63,191,114,113,209,190,243,4,53,63,46,230,96,63,62,39,11,63,219,197,156,61,114,113,209,190,80,152,75,191,242,255,124,191,142,238,112,191,201,82,42,191,110,82,105,190,168,171,135,62,203,132,49,63,201,17,116,63,61,81,123,63,81,128,69,63,244,100,191,62,37,223,234,189,21,72,19,191,27,107,101,191,233,207,127,191,193,12,92,191,31,210,2,191,84,227,28,189,63,47,227,62,210,99,81,63,153,79,126,63,205,112,109,63,201,224,34,63,227,245,66,62,31,123,154,190,26,116,56,191,81,217,118,191,26,68,121,191,29,30,63,191,140,16,173,190,24,80,28,62,151,49,27,63,214,153,105,63,180,63,127,63,167,224,86,63,177,151,244,62,243,4,53,63,167,224,86,63,114,113,209,62,24,80,28,190,201,82,42,191,81,217,118,191,201,17,116,191,201,224,34,191,37,223,234,189,63,47,227,62,193,12,92,63,233,207,127,63,210,99,81,63,244,100,191,62,227,245,66,190,203,132,49,191,26,68,121,191,142,238,112,191,151,49,27,191,219,197,156,189,177,151,244,62,46,230,96,63,180,63,127,63,80,152,75,63,140,16,173,62,110,82,105,190,26,116,56,191,61,81,123,191,205,112,109,191,21,72,19,191,84,227,28,189,31,210,2,63,27,107,101,63,153,79,126,63,81,128,69,63,31,123,154,62,168,171,135,190,29,30,63,191,242,255,124,191,214,153,105,191,62,39,11,191,243,4,53,63,80,152,75,63,168,171,135,62,244,100,191,190,193,12,92,191,153,79,126,191,26,116,56,191,24,80,28,190,177,151,244,62,214,153,105,63,26,68,121,63,201,224,34,63,84,227,28,61,21,72,19,191,201,17,116,191,142,238,112,191,62,39,11,191,219,197,156,61,201,82,42,63,61,81,123,63,27,107,101,63,63,47,227,62,227,245,66,190,29,30,63,191,180,63,127,191,167,224,86,191,140,16,173,190,31,123,154,62,210,99,81,63,233,207,127,63,81,128,69,63,110,82,105,62,114,113,209,190,46,230,96,191,242,255,124,191,203,132,49,191,37,223,234,189,31,210,2,63,205,112,109,63,81,217,118,63,151,49,27,63,243,4,53,63,29,30,63,63,37,223,234,61,21,72,19,191,26,68,121,191,46,230,96,191,140,16,173,190,244,100,191,62,27,107,101,63,81,217,118,63,62,39,11,63,24,80,28,190,81,128,69,191,233,207,127,191,26,116,56,191,219,197,156,189,151,49,27,63,61,81,123,63,193,12,92,63,31,123,154,62,114,113,209,190,214,153,105,191,201,17,116,191,31,210,2,191,227,245,66,62,80,152,75,63,180,63,127,63,203,132,49,63,84,227,28,61,201,224,34,191,242,255,124,191,167,224,86,191,168,171,135,190,63,47,227,62,205,112,109,63,142,238,112,63,177,151,244,62,110,82,105,190,210,99,81,191,153,79,126,191,201,82,42,191,243,4,53,63,203,132,49,63,84,227,28,189,29,30,63,191,180,63,127,191,201,224,34,191,37,223,234,61,80,152,75,63,242,255,124,63,21,72,19,63,227,245,66,190,167,224,86,191,26,68,121,191,31,210,2,191,168,171,135,62,46,230,96,63,201,17,116,63,63,47,227,62,140,16,173,190,214,153,105,191,205,112,109,191,244,100,191,190,114,113,209,62,142,238,112,63,27,107,101,63,31,123,154,62,177,151,244,190,81,217,118,191,193,12,92,191,110,82,105,190,62,39,11,63,61,81,123,63,210,99,81,63,24,80,28,62,151,49,27,191,153,79,126,191,81,128,69,191,219,197,156,189,201,82,42,63,233,207,127,63,26,116,56,63,243,4,53,63,201,224,34,63,227,245,66,190,46,230,96,191,205,112,109,191,31,123,154,190,62,39,11,63,153,79,126,63,26,116,56,63,219,197,156,189,210,99,81,191,81,217,118,191,114,113,209,190,63,47,227,62,26,68,121,63,80,152,75,63,84,227,28,61,29,30,63,191,242,255,124,191,31,210,2,191,140,16,173,62,142,238,112,63,193,12,92,63,24,80,28,62,201,82,42,191,233,207,127,191,151,49,27,191,110,82,105,62,27,107,101,63,214,153,105,63,168,171,135,62,21,72,19,191,180,63,127,191,203,132,49,191,37,223,234,61,167,224,86,63,201,17,116,63,244,100,191,62,177,151,244,190,61,81,123,191,81,128,69,191,243,4,53,63,21,72,19,63,140,16,173,190,81,217,118,191,81,128,69,191,219,197,156,61,193,12,92,63,214,153,105,63,227,245,66,62,203,132,49,191,242,255,124,191,63,47,227,190,177,151,244,62,153,79,126,63,201,82,42,63,110,82,105,190,205,112,109,191,167,224,86,191,84,227,28,189,80,152,75,63,201,17,116,63,31,123,154,62,151,49,27,191,233,207,127,191,62,39,11,191,244,100,191,62,26,68,121,63,29,30,63,63,37,223,234,189,46,230,96,191,27,107,101,191,24,80,28,190,26,116,56,63,61,81,123,63,114,113,209,62,31,210,2,191,180,63,127,191,201,224,34,191,168,171,135,62,142,238,112,63,210,99,81,63,243,4,53,63,31,210,2,63,177,151,244,190,233,207,127,191,62,39,11,191,63,47,227,62,180,63,127,63,21,72,19,63,114,113,209,190,153,79,126,191,151,49,27,191,244,100,191,62,242,255,124,63,201,224,34,63,140,16,173,190,61,81,123,191,201,82,42,191,31,123,154,62,26,68,121,63,203,132,49,63,168,171,135,190,81,217,118,191,26,116,56,191,110,82,105,62,201,17,116,63,29,30,63,63,227,245,66,190,142,238,112,191,81,128,69,191,24,80,28,62,205,112,109,63,80,152,75,63,37,223,234,189,214,153,105,191,210,99,81,191,219,197,156,61,27,107,101,63,167,224,86,63,84,227,28,189,46,230,96,191,193,12,92,191,243,4,53,63,63,47,227,62,151,49,27,191,61,81,123,191,168,171,135,190,29,30,63,63,205,112,109,63,219,197,156,61,193,12,92,191,167,224,86,191,37,223,234,61,142,238,112,63,26,116,56,63,31,123,154,190,242,255,124,191,21,72,19,191,177,151,244,62,233,207,127,63,114,113,209,62,201,224,34,191,26,68,121,191,110,82,105,190,81,128,69,63,214,153,105,63,84,227,28,61,46,230,96,191,210,99,81,191,24,80,28,62,201,17,116,63,203,132,49,63,140,16,173,190,153,79,126,191,62,39,11,191,31,210,2,63,180,63,127,63,244,100,191,62,201,82,42,191,81,217,118,191,227,245,66,190,80,152,75,63,27,107,101,63,243,4,53,63,244,100,191,62,26,116,56,191,214,153,105,191,84,227,28,61,142,238,112,63,201,82,42,63,63,47,227,190,180,63,127,191,31,123,154,190,81,128,69,63,46,230,96,63,37,223,234,189,81,217,118,191,151,49,27,191,31,210,2,63,242,255,124,63,110,82,105,62,210,99,81,191,167,224,86,191,227,245,66,62,61,81,123,63,62,39,11,63,21,72,19,191,26,68,121,191,24,80,28,190,193,12,92,63,80,152,75,63,168,171,135,190,153,79,126,191,177,151,244,190,201,224,34,63,201,17,116,63,219,197,156,61,27,107,101,191,29,30,63,191,140,16,173,62,233,207,127,63,114,113,209,62,203,132,49,191,205,112,109,191,243,4,53,63,31,123,154,62,210,99,81,191,80,152,75,191,140,16,173,62,233,207,127,63,168,171,135,62,167,224,86,191,81,128,69,191,244,100,191,62,180,63,127,63,110,82,105,62,193,12,92,191,29,30,63,191,114,113,209,62,153,79,126,63,227,245,66,62,46,230,96,191,26,116,56,191,63,47,227,62,242,255,124,63,24,80,28,62,27,107,101,191,203,132,49,191,177,151,244,62,61,81,123,63,37,223,234,61,214,153,105,191,201,82,42,191,31,210,2,63,26,68,121,63,219,197,156,61,205,112,109,191,201,224,34,191,62,39,11,63,81,217,118,63,84,227,28,61,142,238,112,191,151,49,27,191,21,72,19,63,201,17,116,63,243,4,53,63,110,82,105,62,27,107,101,191,201,224,34,191,151,49,27,63,214,153,105,63,227,245,66,190,233,207,127,191,168,171,135,190,46,230,96,63,201,82,42,63,21,72,19,191,205,112,109,191,24,80,28,62,180,63,127,63,31,123,154,62,193,12,92,191,203,132,49,191,62,39,11,63,142,238,112,63,37,223,234,189,153,79,126,191,140,16,173,190,167,224,86,63,26,116,56,63,31,210,2,191,201,17,116,191,219,197,156,61,242,255,124,63,244,100,191,62,210,99,81,191,29,30,63,191,177,151,244,62,81,217,118,63,84,227,28,189,61,81,123,191,114,113,209,190,80,152,75,63,81,128,69,63,63,47,227,190,26,68,121,191,243,4,53,63,24,80,28,62,201,17,116,191,63,47,227,190,210,99,81,63,203,132,49,63,151,49,27,191,46,230,96,191,140,16,173,62,61,81,123,63,84,227,28,189,153,79,126,191,168,171,135,190,214,153,105,63,62,39,11,63,29,30,63,191,81,128,69,191,31,210,2,63,205,112,109,63,110,82,105,190,180,63,127,191,219,197,156,189,26,68,121,63,244,100,191,62,193,12,92,191,201,224,34,191,201,82,42,63,167,224,86,63,114,113,209,190,81,217,118,191,37,223,234,61,233,207,127,63,227,245,66,62,142,238,112,191,177,151,244,190,80,152,75,63,26,116,56,63,21,72,19,191,27,107,101,191,31,123,154,62,242,255,124,63,243,4,53,63,219,197,156,61,242,255,124,191,110,82,105,190,201,17,116,63,244,100,191,62,27,107,101,191,31,210,2,191,210,99,81,63,201,224,34,63,26,116,56,191,29,30,63,191,151,49,27,63,167,224,86,63,177,151,244,190,214,153,105,191,140,16,173,62,81,217,118,63,227,245,66,190,153,79,126,191,84,227,28,61,233,207,127,63,37,223,234,61,61,81,123,191,168,171,135,190,142,238,112,63,114,113,209,62,46,230,96,191,62,39,11,191,80,152,75,63,201,82,42,63,203,132,49,191,81,128,69,191,21,72,19,63,193,12,92,63,63,47,227,190,205,112,109,191,31,123,154,62,26,68,121,63,24,80,28,190,180,63,127,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,243,4,53,63,219,197,156,189,242,255,124,191,110,82,105,62,201,17,116,63,244,100,191,190,27,107,101,191,31,210,2,63,210,99,81,63,201,224,34,191,26,116,56,191,29,30,63,63,151,49,27,63,167,224,86,191,177,151,244,190,214,153,105,63,140,16,173,62,81,217,118,191,227,245,66,190,153,79,126,63,84,227,28,61,233,207,127,191,37,223,234,61,61,81,123,63,168,171,135,190,142,238,112,191,114,113,209,62,46,230,96,63,62,39,11,191,80,152,75,191,201,82,42,63,203,132,49,63,81,128,69,191,21,72,19,191,193,12,92,63,63,47,227,62,205,112,109,191,31,123,154,190,26,68,121,63,24,80,28,62,180,63,127,191,243,4,53,63,24,80,28,190,201,17,116,191,63,47,227,62,210,99,81,63,203,132,49,191,151,49,27,191,46,230,96,63,140,16,173,62,61,81,123,191,84,227,28,189,153,79,126,63,168,171,135,190,214,153,105,191,62,39,11,63,29,30,63,63,81,128,69,191,31,210,2,191,205,112,109,63,110,82,105,62,180,63,127,191,219,197,156,61,26,68,121,63,244,100,191,190,193,12,92,191,201,224,34,63,201,82,42,63,167,224,86,191,114,113,209,190,81,217,118,63,37,223,234,61,233,207,127,191,227,245,66,62,142,238,112,63,177,151,244,190,80,152,75,191,26,116,56,63,21,72,19,63,27,107,101,191,31,123,154,190,242,255,124,63,243,4,53,63,110,82,105,190,27,107,101,191,201,224,34,63,151,49,27,63,214,153,105,191,227,245,66,190,233,207,127,63,168,171,135,190,46,230,96,191,201,82,42,63,21,72,19,63,205,112,109,191,24,80,28,190,180,63,127,63,31,123,154,190,193,12,92,191,203,132,49,63,62,39,11,63,142,238,112,191,37,223,234,189,153,79,126,63,140,16,173,190,167,224,86,191,26,116,56,63,31,210,2,63,201,17,116,191,219,197,156,189,242,255,124,63,244,100,191,190,210,99,81,191,29,30,63,63,177,151,244,62,81,217,118,191,84,227,28,189,61,81,123,63,114,113,209,190,80,152,75,191,81,128,69,63,63,47,227,62,26,68,121,191,243,4,53,63,31,123,154,190,210,99,81,191,80,152,75,63,140,16,173,62,233,207,127,191,168,171,135,62,167,224,86,63,81,128,69,191,244,100,191,190,180,63,127,63,110,82,105,190,193,12,92,191,29,30,63,63,114,113,209,62,153,79,126,191,227,245,66,62,46,230,96,63,26,116,56,191,63,47,227,190,242,255,124,63,24,80,28,190,27,107,101,191,203,132,49,63,177,151,244,62,61,81,123,191,37,223,234,61,214,153,105,63,201,82,42,191,31,210,2,191,26,68,121,63,219,197,156,189,205,112,109,191,201,224,34,63,62,39,11,63,81,217,118,191,84,227,28,61,142,238,112,63,151,49,27,191,21,72,19,191,201,17,116,63,243,4,53,63,244,100,191,190,26,116,56,191,214,153,105,63,84,227,28,61,142,238,112,191,201,82,42,63,63,47,227,62,180,63,127,191,31,123,154,62,81,128,69,63,46,230,96,191,37,223,234,189,81,217,118,63,151,49,27,191,31,210,2,191,242,255,124,63,110,82,105,190,210,99,81,191,167,224,86,63,227,245,66,62,61,81,123,191,62,39,11,63,21,72,19,63,26,68,121,191,24,80,28,62,193,12,92,63,80,152,75,191,168,171,135,190,153,79,126,63,177,151,244,190,201,224,34,191,201,17,116,63,219,197,156,189,27,107,101,191,29,30,63,63,140,16,173,62,233,207,127,191,114,113,209,62,203,132,49,63,205,112,109,191,243,4,53,63,63,47,227,190,151,49,27,191,61,81,123,63,168,171,135,190,29,30,63,191,205,112,109,63,219,197,156,189,193,12,92,191,167,224,86,63,37,223,234,61,142,238,112,191,26,116,56,63,31,123,154,62,242,255,124,191,21,72,19,63,177,151,244,62,233,207,127,191,114,113,209,62,201,224,34,63,26,68,121,191,110,82,105,62,81,128,69,63,214,153,105,191,84,227,28,61,46,230,96,63,210,99,81,191,24,80,28,190,201,17,116,63,203,132,49,191,140,16,173,190,153,79,126,63,62,39,11,191,31,210,2,191,180,63,127,63,244,100,191,190,201,82,42,191,81,217,118,63,227,245,66,190,80,152,75,191,27,107,101,63,243,4,53,63,31,210,2,191,177,151,244,190,233,207,127,63,62,39,11,191,63,47,227,190,180,63,127,63,21,72,19,191,114,113,209,190,153,79,126,63,151,49,27,191,244,100,191,190,242,255,124,63,201,224,34,191,140,16,173,190,61,81,123,63,201,82,42,191,31,123,154,190,26,68,121,63,203,132,49,191,168,171,135,190,81,217,118,63,26,116,56,191,110,82,105,190,201,17,116,63,29,30,63,191,227,245,66,190,142,238,112,63,81,128,69,191,24,80,28,190,205,112,109,63,80,152,75,191,37,223,234,189,214,153,105,63,210,99,81,191,219,197,156,189,27,107,101,63,167,224,86,191,84,227,28,189,46,230,96,63,193,12,92,191,243,4,53,63,21,72,19,191,140,16,173,190,81,217,118,63,81,128,69,191,219,197,156,189,193,12,92,63,214,153,105,191,227,245,66,62,203,132,49,63,242,255,124,191,63,47,227,62,177,151,244,62,153,79,126,191,201,82,42,63,110,82,105,62,205,112,109,191,167,224,86,63,84,227,28,189,80,152,75,191,201,17,116,63,31,123,154,190,151,49,27,191,233,207,127,63,62,39,11,191,244,100,191,190,26,68,121,63,29,30,63,191,37,223,234,189,46,230,96,63,27,107,101,191,24,80,28,62,26,116,56,63,61,81,123,191,114,113,209,62,31,210,2,63,180,63,127,191,201,224,34,63,168,171,135,62,142,238,112,191,210,99,81,63,243,4,53,63,201,224,34,191,227,245,66,190,46,230,96,63,205,112,109,191,31,123,154,62,62,39,11,63,153,79,126,191,26,116,56,63,219,197,156,61,210,99,81,191,81,217,118,63,114,113,209,190,63,47,227,190,26,68,121,63,80,152,75,191,84,227,28,61,29,30,63,63,242,255,124,191,31,210,2,63,140,16,173,62,142,238,112,191,193,12,92,63,24,80,28,190,201,82,42,191,233,207,127,63,151,49,27,191,110,82,105,190,27,107,101,63,214,153,105,191,168,171,135,62,21,72,19,63,180,63,127,191,203,132,49,63,37,223,234,61,167,224,86,191,201,17,116,63,244,100,191,190,177,151,244,190,61,81,123,63,81,128,69,191,243,4,53,63,203,132,49,191,84,227,28,189,29,30,63,63,180,63,127,191,201,224,34,63,37,223,234,61,80,152,75,191,242,255,124,63,21,72,19,191,227,245,66,190,167,224,86,63,26,68,121,191,31,210,2,63,168,171,135,62,46,230,96,191,201,17,116,63,63,47,227,190,140,16,173,190,214,153,105,63,205,112,109,191,244,100,191,62,114,113,209,62,142,238,112,191,27,107,101,63,31,123,154,190,177,151,244,190,81,217,118,63,193,12,92,191,110,82,105,62,62,39,11,63,61,81,123,191,210,99,81,63,24,80,28,190,151,49,27,191,153,79,126,63,81,128,69,191,219,197,156,61,201,82,42,63,233,207,127,191,26,116,56,63,243,4,53,63,29,30,63,191,37,223,234,61,21,72,19,63,26,68,121,191,46,230,96,63,140,16,173,190,244,100,191,190,27,107,101,63,81,217,118,191,62,39,11,63,24,80,28,62,81,128,69,191,233,207,127,63,26,116,56,191,219,197,156,61,151,49,27,63,61,81,123,191,193,12,92,63,31,123,154,190,114,113,209,190,214,153,105,63,201,17,116,191,31,210,2,63,227,245,66,62,80,152,75,191,180,63,127,63,203,132,49,191,84,227,28,61,201,224,34,63,242,255,124,191,167,224,86,63,168,171,135,190,63,47,227,190,205,112,109,63,142,238,112,191,177,151,244,62,110,82,105,62,210,99,81,191,153,79,126,63,201,82,42,191,243,4,53,63,80,152,75,191,168,171,135,62,244,100,191,62,193,12,92,191,153,79,126,63,26,116,56,191,24,80,28,62,177,151,244,62,214,153,105,191,26,68,121,63,201,224,34,191,84,227,28,61,21,72,19,63,201,17,116,191,142,238,112,63,62,39,11,191,219,197,156,189,201,82,42,63,61,81,123,191,27,107,101,63,63,47,227,190,227,245,66,190,29,30,63,63,180,63,127,191,167,224,86,63,140,16,173,190,31,123,154,190,210,99,81,63,233,207,127,191,81,128,69,63,110,82,105,190,114,113,209,190,46,230,96,63,242,255,124,191,203,132,49,63,37,223,234,189,31,210,2,191,205,112,109,63,81,217,118,191,151,49,27,63,243,4,53,63,167,224,86,191,114,113,209,62,24,80,28,62,201,82,42,191,81,217,118,63,201,17,116,191,201,224,34,63,37,223,234,189,63,47,227,190,193,12,92,63,233,207,127,191,210,99,81,63,244,100,191,190,227,245,66,190,203,132,49,63,26,68,121,191,142,238,112,63,151,49,27,191,219,197,156,61,177,151,244,62,46,230,96,191,180,63,127,63,80,152,75,191,140,16,173,62,110,82,105,62,26,116,56,191,61,81,123,63,205,112,109,191,21,72,19,63,84,227,28,189,31,210,2,191,27,107,101,63,153,79,126,191,81,128,69,63,31,123,154,190,168,171,135,190,29,30,63,63,242,255,124,191,214,153,105,63,62,39,11,191,243,4,53,63,46,230,96,191,62,39,11,63,219,197,156,189,114,113,209,190,80,152,75,63,242,255,124,191,142,238,112,63,201,82,42,191,110,82,105,62,168,171,135,62,203,132,49,191,201,17,116,63,61,81,123,191,81,128,69,63,244,100,191,190,37,223,234,189,21,72,19,63,27,107,101,191,233,207,127,63,193,12,92,191,31,210,2,63,84,227,28,189,63,47,227,190,210,99,81,63,153,79,126,191,205,112,109,63,201,224,34,191,227,245,66,62,31,123,154,62,26,116,56,191,81,217,118,63,26,68,121,191,29,30,63,63,140,16,173,190,24,80,28,190,151,49,27,63,214,153,105,191,180,63,127,63,167,224,86,191,177,151,244,62,243,4,53,63,214,153,105,191,201,82,42,63,31,123,154,190,37,223,234,189,31,210,2,63,210,99,81,191,61,81,123,63,26,68,121,191,80,152,75,63,177,151,244,190,219,197,156,61,140,16,173,62,203,132,49,191,205,112,109,63,233,207,127,191,27,107,101,63,201,224,34,191,168,171,135,62,24,80,28,62,62,39,11,191,167,224,86,63,242,255,124,191,81,217,118,63,81,128,69,191,63,47,227,62,84,227,28,189,244,100,191,190,26,116,56,63,142,238,112,191,180,63,127,63,46,230,96,191,151,49,27,63,110,82,105,190,227,245,66,190,21,72,19,63,193,12,92,191,153,79,126,63,201,17,116,191,29,30,63,63,114,113,209,190,243,4,53,63,142,238,112,191,81,128,69,63,31,210,2,191,227,245,66,62,24,80,28,62,177,151,244,190,29,30,63,63,205,112,109,191,233,207,127,63,201,17,116,191,80,152,75,63,62,39,11,191,110,82,105,62,37,223,234,61,63,47,227,190,26,116,56,63,214,153,105,191,180,63,127,63,81,217,118,191,210,99,81,63,21,72,19,191,168,171,135,62,219,197,156,61,114,113,209,190,203,132,49,63,27,107,101,191,153,79,126,63,26,68,121,191,167,224,86,63,151,49,27,191,31,123,154,62,84,227,28,61,244,100,191,190,201,82,42,63,46,230,96,191,242,255,124,63,61,81,123,191,193,12,92,63,201,224,34,191,140,16,173,62,243,4,53,63,81,217,118,191,193,12,92,63,203,132,49,191,177,151,244,62,110,82,105,190,84,227,28,189,31,123,154,62,62,39,11,191,29,30,63,63,27,107,101,191,61,81,123,63,180,63,127,191,142,238,112,63,210,99,81,191,201,224,34,63,114,113,209,190,24,80,28,62,37,223,234,61,244,100,191,190,151,49,27,63,80,152,75,191,205,112,109,63,153,79,126,191,242,255,124,63,214,153,105,191,81,128,69,63,21,72,19,191,140,16,173,62,219,197,156,189,227,245,66,190,63,47,227,62,201,82,42,191,167,224,86,63,201,17,116,191,233,207,127,63,26,68,121,191,46,230,96,63,26,116,56,191,31,210,2,63,168,171,135,190,243,4,53,63,61,81,123,191,205,112,109,63,167,224,86,191,26,116,56,63,21,72,19,191,114,113,209,62,110,82,105,190,84,227,28,61,24,80,28,62,140,16,173,190,31,210,2,63,201,82,42,191,80,152,75,63,27,107,101,191,81,217,118,63,180,63,127,191,153,79,126,63,201,17,116,191,46,230,96,63,81,128,69,191,201,224,34,63,177,151,244,190,31,123,154,62,37,223,234,189,219,197,156,189,168,171,135,62,63,47,227,190,151,49,27,63,29,30,63,191,193,12,92,63,142,238,112,191,242,255,124,63,233,207,127,191,26,68,121,63,214,153,105,191,210,99,81,63,203,132,49,191,62,39,11,63,244,100,191,190,227,245,66,62,243,4,53,63,153,79,126,191,26,68,121,63,142,238,112,191,27,107,101,63,167,224,86,191,81,128,69,63,203,132,49,191,151,49,27,63,31,210,2,191,114,113,209,62,31,123,154,190,227,245,66,62,219,197,156,189,84,227,28,189,24,80,28,62,168,171,135,190,244,100,191,62,177,151,244,190,21,72,19,63,201,82,42,191,29,30,63,63,210,99,81,191,46,230,96,63,205,112,109,191,81,217,118,63,242,255,124,191,233,207,127,63,180,63,127,191,61,81,123,63,201,17,116,191,214,153,105,63,193,12,92,191,80,152,75,63,26,116,56,191,201,224,34,63,62,39,11,191,63,47,227,62,140,16,173,190,110,82,105,62,37,223,234,189,243,4,53,63,233,207,127,191,180,63,127,63,153,79,126,191,242,255,124,63,61,81,123,191,26,68,121,63,81,217,118,191,201,17,116,63,142,238,112,191,205,112,109,63,214,153,105,191,27,107,101,63,46,230,96,191,193,12,92,63,167,224,86,191,210,99,81,63,80,152,75,191,81,128,69,63,29,30,63,191,26,116,56,63,203,132,49,191,201,82,42,63,201,224,34,191,151,49,27,63,21,72,19,191,62,39,11,63,31,210,2,191,177,151,244,62,63,47,227,190,114,113,209,62,244,100,191,190,140,16,173,62,31,123,154,190,168,171,135,62,110,82,105,190,227,245,66,62,24,80,28,190,37,223,234,61,219,197,156,189,84,227,28,61,243,4,53,63,44,210,127,63,192,72,127,63,236,99,126,63,4,36,125,63,122,137,123,63,224,148,121,63,234,70,119,63,107,160,116,63,87,162,113,63,190,77,110,63,211,163,106,63,229,165,102,63,99,85,98,63,215,179,93,63,235,194,88,63,98,132,83,63,31,250,77,63,28,38,72,63,111,10,66,63,74,169,59,63,243,4,53,63,205,31,46,63,79,252,38,63,7,157,31,63,154,4,24,63,190,53,16,63,65,51,8,63,0,0,0,63,213,61,239,62,2,38,222,62,166,190,204,62,251,13,187,62,86,26,169,62,38,234,150,62,238,131,132,62,135,220,99,62,157,95,62,62,137,158,24,62,162,77,229,61,23,12,153,61,130,39,25,61,243,4,53,63,236,99,126,63,224,148,121,63,87,162,113,63,229,165,102,63,235,194,88,63,28,38,72,63,243,4,53,63,7,157,31,63,65,51,8,63,2,38,222,62,86,26,169,62,135,220,99,62,162,77,229,61,50,49,141,36,162,77,229,189,135,220,99,190,86,26,169,190,2,38,222,190,65,51,8,191,7,157,31,191,243,4,53,191,28,38,72,191,235,194,88,191,229,165,102,191,87,162,113,191,224,148,121,191,236,99,126,191,0,0,128,191,236,99,126,191,224,148,121,191,87,162,113,191,229,165,102,191,235,194,88,191,28,38,72,191,243,4,53,191,7,157,31,191,65,51,8,191,2,38,222,190,86,26,169,190,135,220,99,190,162,77,229,189,243,4,53,63,122,137,123,63,190,77,110,63,235,194,88,63,74,169,59,63,154,4,24,63,2,38,222,62,238,131,132,62,23,12,153,61,162,77,229,189,38,234,150,190,213,61,239,190,7,157,31,191,111,10,66,191,215,179,93,191,87,162,113,191,4,36,125,191,44,210,127,191,224,148,121,191,211,163,106,191,98,132,83,191,243,4,53,191,190,53,16,191,166,190,204,190,135,220,99,190,130,39,25,189,137,158,24,62,86,26,169,62,0,0,0,63,79,252,38,63,28,38,72,63,99,85,98,63,107,160,116,63,236,99,126,63,192,72,127,63,234,70,119,63,229,165,102,63,31,250,77,63,205,31,46,63,65,51,8,63,251,13,187,62,157,95,62,62,243,4,53,63,234,70,119,63,215,179,93,63,243,4,53,63,0,0,0,63,238,131,132,62,50,49,141,36,238,131,132,190,0,0,0,191,243,4,53,191,215,179,93,191,234,70,119,191,0,0,128,191,234,70,119,191,215,179,93,191,243,4,53,191,0,0,0,191,238,131,132,190,202,201,83,165,238,131,132,62,0,0,0,63,243,4,53,63,215,179,93,63,234,70,119,63,0,0,128,63,234,70,119,63,215,179,93,63,243,4,53,63,0,0,0,63,238,131,132,62,95,31,172,38,238,131,132,190,0,0,0,191,243,4,53,191,215,179,93,191,234,70,119,191,0,0,128,191,234,70,119,191,215,179,93,191,243,4,53,191,0,0,0,191,238,131,132,190,243,4,53,63,87,162,113,63,28,38,72,63,65,51,8,63,135,220,99,62,162,77,229,189,2,38,222,190,243,4,53,191,229,165,102,191,236,99,126,191,224,148,121,191,235,194,88,191,7,157,31,191,86,26,169,190,202,201,83,165,86,26,169,62,7,157,31,63,235,194,88,63,224,148,121,63,236,99,126,63,229,165,102,63,243,4,53,63,2,38,222,62,162,77,229,61,135,220,99,190,65,51,8,191,28,38,72,191,87,162,113,191,0,0,128,191,87,162,113,191,28,38,72,191,65,51,8,191,135,220,99,190,162,77,229,61,2,38,222,62,243,4,53,63,229,165,102,63,236,99,126,63,224,148,121,63,235,194,88,63,7,157,31,63,86,26,169,62,243,4,53,63,211,163,106,63,205,31,46,63,86,26,169,62,23,12,153,189,213,61,239,190,28,38,72,191,234,70,119,191,4,36,125,191,235,194,88,191,190,53,16,191,157,95,62,190,135,220,99,62,154,4,24,63,215,179,93,63,236,99,126,63,107,160,116,63,111,10,66,63,2,38,222,62,130,39,25,61,251,13,187,190,243,4,53,191,190,77,110,191,44,210,127,191,229,165,102,191,79,252,38,191,38,234,150,190,162,77,229,61,0,0,0,63,31,250,77,63,224,148,121,63,122,137,123,63,98,132,83,63,65,51,8,63,137,158,24,62,238,131,132,190,7,157,31,191,99,85,98,191,192,72,127,191,87,162,113,191,74,169,59,191,166,190,204,190,243,4,53,63,99,85,98,63,190,53,16,63,162,77,229,61,251,13,187,190,111,10,66,191,224,148,121,191,234,70,119,191,74,169,59,191,86,26,169,190,137,158,24,62,154,4,24,63,229,165,102,63,44,210,127,63,215,179,93,63,65,51,8,63,23,12,153,61,166,190,204,190,28,38,72,191,122,137,123,191,107,160,116,191,243,4,53,191,38,234,150,190,157,95,62,62,7,157,31,63,211,163,106,63,192,72,127,63,235,194,88,63,0,0,0,63,130,39,25,61,2,38,222,190,31,250,77,191,4,36,125,191,87,162,113,191,205,31,46,191,238,131,132,190,135,220,99,62,79,252,38,63,190,77,110,63,236,99,126,63,98,132,83,63,213,61,239,62,243,4,53,63,235,194,88,63,2,38,222,62,162,77,229,189,7,157,31,191,87,162,113,191,224,148,121,191,243,4,53,191,135,220,99,190,86,26,169,62,28,38,72,63,236,99,126,63,229,165,102,63,65,51,8,63,126,125,176,37,65,51,8,191,229,165,102,191,236,99,126,191,28,38,72,191,86,26,169,190,135,220,99,62,243,4,53,63,224,148,121,63,87,162,113,63,7,157,31,63,162,77,229,61,2,38,222,190,235,194,88,191,0,0,128,191,235,194,88,191,2,38,222,190,162,77,229,61,7,157,31,63,87,162,113,63,224,148,121,63,243,4,53,63,135,220,99,62,86,26,169,190,28,38,72,191,236,99,126,191,229,165,102,191,65,51,8,191,243,4,53,63,31,250,77,63,38,234,150,62,86,26,169,190,98,132,83,191,44,210,127,191,28,38,72,191,238,131,132,190,251,13,187,62,235,194,88,63,192,72,127,63,111,10,66,63,135,220,99,62,166,190,204,190,215,179,93,191,236,99,126,191,74,169,59,191,157,95,62,190,2,38,222,62,99,85,98,63,4,36,125,63,243,4,53,63,137,158,24,62,213,61,239,190,229,165,102,191,122,137,123,191,205,31,46,191,162,77,229,189,0,0,0,63,211,163,106,63,224,148,121,63,79,252,38,63,23,12,153,61,65,51,8,191,190,77,110,191,234,70,119,191,7,157,31,191,130,39,25,189,190,53,16,63,87,162,113,63,107,160,116,63,154,4,24,63,243,4,53,63,111,10,66,63,137,158,24,62,65,51,8,191,107,160,116,191,211,163,106,191,2,38,222,190,238,131,132,62,98,132,83,63,236,99,126,63,205,31,46,63,130,39,25,61,7,157,31,191,122,137,123,191,215,179,93,191,86,26,169,190,251,13,187,62,99,85,98,63,224,148,121,63,154,4,24,63,23,12,153,189,243,4,53,191,192,72,127,191,31,250,77,191,135,220,99,190,213,61,239,62,190,77,110,63,87,162,113,63,0,0,0,63,157,95,62,190,28,38,72,191,44,210,127,191,74,169,59,191,162,77,229,189,190,53,16,63,234,70,119,63,229,165,102,63,166,190,204,62,38,234,150,190,235,194,88,191,4,36,125,191,79,252,38,191,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,8,72,141,166,243,4,53,191,0,0,128,191,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,63,243,4,53,63,119,247,83,166,243,4,53,191,0,0,128,191,243,4,53,191,53,213,83,167,243,4,53,63,0,0,128,63,243,4,53,63,243,4,53,63,79,252,38,63,137,158,24,190,235,194,88,191,107,160,116,191,166,190,204,190,2,38,222,62,234,70,119,63,98,132,83,63,162,77,229,61,205,31,46,191,44,210,127,191,7,157,31,191,157,95,62,62,215,179,93,63,87,162,113,63,251,13,187,62,213,61,239,190,224,148,121,191,31,250,77,191,23,12,153,189,243,4,53,63,192,72,127,63,154,4,24,63,135,220,99,190,99,85,98,191,190,77,110,191,86,26,169,190,0,0,0,63,122,137,123,63,28,38,72,63,130,39,25,61,74,169,59,191,236,99,126,191,190,53,16,191,238,131,132,62,229,165,102,63,211,163,106,63,38,234,150,62,65,51,8,191,4,36,125,191,111,10,66,191,243,4,53,63,154,4,24,63,38,234,150,190,87,162,113,191,98,132,83,191,130,39,25,189,28,38,72,63,234,70,119,63,251,13,187,62,65,51,8,191,192,72,127,191,79,252,38,191,135,220,99,62,211,163,106,63,215,179,93,63,162,77,229,61,74,169,59,191,122,137,123,191,2,38,222,190,213,61,239,62,4,36,125,63,243,4,53,63,137,158,24,190,99,85,98,191,229,165,102,191,157,95,62,190,205,31,46,63,236,99,126,63,0,0,0,63,166,190,204,190,224,148,121,191,111,10,66,191,23,12,153,61,235,194,88,63,190,77,110,63,238,131,132,62,7,157,31,191,44,210,127,191,190,53,16,191,86,26,169,62,107,160,116,63,31,250,77,63,243,4,53,63,65,51,8,63,2,38,222,190,236,99,126,191,7,157,31,191,86,26,169,62,224,148,121,63,243,4,53,63,135,220,99,190,87,162,113,191,28,38,72,191,162,77,229,61,229,165,102,63,235,194,88,63,88,215,30,38,235,194,88,191,229,165,102,191,162,77,229,189,28,38,72,63,87,162,113,63,135,220,99,62,243,4,53,191,224,148,121,191,86,26,169,190,7,157,31,63,236,99,126,63,2,38,222,62,65,51,8,191,0,0,128,191,65,51,8,191,2,38,222,62,236,99,126,63,7,157,31,63,86,26,169,190,224,148,121,191,243,4,53,191,135,220,99,62,87,162,113,63,28,38,72,63,162,77,229,189,229,165,102,191,235,194,88,191,243,4,53,63,213,61,239,62,190,53,16,191,236,99,126,191,251,13,187,190,79,252,38,63,224,148,121,63,238,131,132,62,74,169,59,191,87,162,113,191,137,158,24,190,31,250,77,63,229,165,102,63,130,39,25,61,215,179,93,191,235,194,88,191,23,12,153,61,211,163,106,63,28,38,72,63,157,95,62,190,107,160,116,191,243,4,53,191,38,234,150,62,122,137,123,63,7,157,31,63,166,190,204,190,192,72,127,191,65,51,8,191,0,0,0,63,44,210,127,63,2,38,222,62,154,4,24,191,4,36,125,191,86,26,169,190,205,31,46,63,234,70,119,63,135,220,99,62,111,10,66,191,190,77,110,191,162,77,229,189,98,132,83,63,99,85,98,63,243,4,53,63,166,190,204,62,205,31,46,191,87,162,113,191,23,12,153,189,99,85,98,63,28,38,72,63,238,131,132,190,4,36,125,191,65,51,8,191,190,53,16,63,122,137,123,63,135,220,99,62,31,250,77,191,215,179,93,191,162,77,229,61,107,160,116,63,79,252,38,63,2,38,222,190,44,210,127,191,251,13,187,190,243,4,53,63,190,77,110,63,130,39,25,61,229,165,102,191,111,10,66,191,38,234,150,62,236,99,126,63,0,0,0,63,154,4,24,191,224,148,121,191,157,95,62,190,98,132,83,63,235,194,88,63,137,158,24,190,234,70,119,191,7,157,31,191,213,61,239,62,192,72,127,63,86,26,169,62,74,169,59,191,211,163,106,191,243,4,53,63,86,26,169,62,28,38,72,191,235,194,88,191,135,220,99,62,236,99,126,63,2,38,222,62,243,4,53,191,229,165,102,191,162,77,229,61,224,148,121,63,65,51,8,63,7,157,31,191,87,162,113,191,233,136,48,167,87,162,113,63,7,157,31,63,65,51,8,191,224,148,121,191,162,77,229,189,229,165,102,63,243,4,53,63,2,38,222,190,236,99,126,191,135,220,99,190,235,194,88,63,28,38,72,63,86,26,169,190,0,0,128,191,86,26,169,190,28,38,72,63,235,194,88,63,135,220,99,190,236,99,126,191,2,38,222,190,243,4,53,63,229,165,102,63,162,77,229,189,224,148,121,191,65,51,8,191,7,157,31,63,87,162,113,63,243,4,53,63,238,131,132,62,215,179,93,191,243,4,53,191,0,0,0,63,234,70,119,63,126,125,176,37,234,70,119,191,0,0,0,191,243,4,53,63,215,179,93,63,238,131,132,190,0,0,128,191,238,131,132,190,215,179,93,63,243,4,53,63,0,0,0,191,234,70,119,191,195,67,119,38,234,70,119,63,0,0,0,63,243,4,53,191,215,179,93,191,238,131,132,62,0,0,128,63,238,131,132,62,215,179,93,191,243,4,53,191,0,0,0,63,234,70,119,63,138,140,141,165,234,70,119,191,0,0,0,191,243,4,53,63,215,179,93,63,238,131,132,190,0,0,128,191,238,131,132,190,215,179,93,63,243,4,53,63,0,0,0,191,234,70,119,191,243,4,53,63,157,95,62,62,190,77,110,191,65,51,8,191,74,169,59,63,31,250,77,63,2,38,222,190,234,70,119,191,23,12,153,61,236,99,126,63,38,234,150,62,99,85,98,191,7,157,31,191,79,252,38,63,215,179,93,63,86,26,169,190,4,36,125,191,130,39,25,189,224,148,121,63,166,190,204,62,98,132,83,191,243,4,53,191,190,53,16,63,211,163,106,63,135,220,99,190,44,210,127,191,137,158,24,190,87,162,113,63,0,0,0,63,111,10,66,191,28,38,72,191,213,61,239,62,107,160,116,63,162,77,229,189,192,72,127,191,238,131,132,190,229,165,102,63,154,4,24,63,205,31,46,191,235,194,88,191,251,13,187,62,122,137,123,63,243,4,53,63,162,77,229,61,224,148,121,191,86,26,169,190,229,165,102,63,65,51,8,63,28,38,72,191,243,4,53,191,7,157,31,63,235,194,88,63,2,38,222,190,87,162,113,191,135,220,99,62,236,99,126,63,8,72,141,166,236,99,126,191,135,220,99,190,87,162,113,63,2,38,222,62,235,194,88,191,7,157,31,191,243,4,53,63,28,38,72,63,65,51,8,191,229,165,102,191,86,26,169,62,224,148,121,63,162,77,229,189,0,0,128,191,162,77,229,189,224,148,121,63,86,26,169,62,229,165,102,191,65,51,8,191,28,38,72,63,243,4,53,63,7,157,31,191,235,194,88,191,2,38,222,62,87,162,113,63,135,220,99,190,236,99,126,191,243,4,53,63,130,39,25,61,192,72,127,191,162,77,229,189,4,36,125,63,157,95,62,62,224,148,121,191,238,131,132,190,107,160,116,63,86,26,169,62,190,77,110,191,166,190,204,190,229,165,102,63,213,61,239,62,215,179,93,191,65,51,8,191,98,132,83,63,154,4,24,63,28,38,72,191,79,252,38,191,74,169,59,63,243,4,53,63,205,31,46,191,111,10,66,191,7,157,31,63,31,250,77,63,190,53,16,191,235,194,88,191,0,0,0,63,99,85,98,63,2,38,222,190,211,163,106,191,251,13,187,62,87,162,113,63,38,234,150,190,234,70,119,191,135,220,99,62,122,137,123,63,137,158,24,190,236,99,126,191,23,12,153,61,44,210,127,63,243,4,53,63,130,39,25,189,192,72,127,191,162,77,229,61,4,36,125,63,157,95,62,190,224,148,121,191,238,131,132,62,107,160,116,63,86,26,169,190,190,77,110,191,166,190,204,62,229,165,102,63,213,61,239,190,215,179,93,191,65,51,8,63,98,132,83,63,154,4,24,191,28,38,72,191,79,252,38,63,74,169,59,63,243,4,53,191,205,31,46,191,111,10,66,63,7,157,31,63,31,250,77,191,190,53,16,191,235,194,88,63,0,0,0,63,99,85,98,191,2,38,222,190,211,163,106,63,251,13,187,62,87,162,113,191,38,234,150,190,234,70,119,63,135,220,99,62,122,137,123,191,137,158,24,190,236,99,126,63,23,12,153,61,44,210,127,191,243,4,53,63,162,77,229,189,224,148,121,191,86,26,169,62,229,165,102,63,65,51,8,191,28,38,72,191,243,4,53,63,7,157,31,63,235,194,88,191,2,38,222,190,87,162,113,63,135,220,99,62,236,99,126,191,15,47,66,167,236,99,126,63,135,220,99,190,87,162,113,191,2,38,222,62,235,194,88,63,7,157,31,191,243,4,53,191,28,38,72,63,65,51,8,63,229,165,102,191,86,26,169,190,224,148,121,63,162,77,229,61,0,0,128,191,162,77,229,61,224,148,121,63,86,26,169,190,229,165,102,191,65,51,8,63,28,38,72,63,243,4,53,191,7,157,31,191,235,194,88,63,2,38,222,62,87,162,113,191,135,220,99,190,236,99,126,63,243,4,53,63,157,95,62,190,190,77,110,191,65,51,8,63,74,169,59,63,31,250,77,191,2,38,222,190,234,70,119,63,23,12,153,61,236,99,126,191,38,234,150,62,99,85,98,63,7,157,31,191,79,252,38,191,215,179,93,63,86,26,169,62,4,36,125,191,130,39,25,61,224,148,121,63,166,190,204,190,98,132,83,191,243,4,53,63,190,53,16,63,211,163,106,191,135,220,99,190,44,210,127,63,137,158,24,190,87,162,113,191,0,0,0,63,111,10,66,63,28,38,72,191,213,61,239,190,107,160,116,63,162,77,229,61,192,72,127,191,238,131,132,62,229,165,102,63,154,4,24,191,205,31,46,191,235,194,88,63,251,13,187,62,122,137,123,191,243,4,53,63,238,131,132,190,215,179,93,191,243,4,53,63,0,0,0,63,234,70,119,191,122,58,194,38,234,70,119,63,0,0,0,191,243,4,53,191,215,179,93,63,238,131,132,62,0,0,128,191,238,131,132,62,215,179,93,63,243,4,53,191,0,0,0,191,234,70,119,63,222,94,13,166,234,70,119,191,0,0,0,63,243,4,53,63,215,179,93,191,238,131,132,190,0,0,128,63,238,131,132,190,215,179,93,191,243,4,53,63,0,0,0,63,234,70,119,191,50,146,101,39,234,70,119,63,0,0,0,191,243,4,53,191,215,179,93,63,238,131,132,62,0,0,128,191,238,131,132,62,215,179,93,63,243,4,53,191,0,0,0,191,234,70,119,63,243,4,53,63,86,26,169,190,28,38,72,191,235,194,88,63,135,220,99,62,236,99,126,191,2,38,222,62,243,4,53,63,229,165,102,191,162,77,229,189,224,148,121,63,65,51,8,191,7,157,31,191,87,162,113,63,34,2,75,39,87,162,113,191,7,157,31,63,65,51,8,63,224,148,121,191,162,77,229,61,229,165,102,63,243,4,53,191,2,38,222,190,236,99,126,63,135,220,99,190,235,194,88,191,28,38,72,63,86,26,169,62,0,0,128,191,86,26,169,62,28,38,72,63,235,194,88,191,135,220,99,190,236,99,126,63,2,38,222,190,243,4,53,191,229,165,102,63,162,77,229,61,224,148,121,191,65,51,8,63,7,157,31,63,87,162,113,191,243,4,53,63,166,190,204,190,205,31,46,191,87,162,113,63,23,12,153,189,99,85,98,191,28,38,72,63,238,131,132,62,4,36,125,191,65,51,8,63,190,53,16,63,122,137,123,191,135,220,99,62,31,250,77,63,215,179,93,191,162,77,229,189,107,160,116,63,79,252,38,191,2,38,222,190,44,210,127,63,251,13,187,190,243,4,53,191,190,77,110,63,130,39,25,189,229,165,102,191,111,10,66,63,38,234,150,62,236,99,126,191,0,0,0,63,154,4,24,63,224,148,121,191,157,95,62,62,98,132,83,63,235,194,88,191,137,158,24,190,234,70,119,63,7,157,31,191,213,61,239,190,192,72,127,63,86,26,169,190,74,169,59,191,211,163,106,63,243,4,53,63,213,61,239,190,190,53,16,191,236,99,126,63,251,13,187,190,79,252,38,191,224,148,121,63,238,131,132,190,74,169,59,191,87,162,113,63,137,158,24,190,31,250,77,191,229,165,102,63,130,39,25,189,215,179,93,191,235,194,88,63,23,12,153,61,211,163,106,191,28,38,72,63,157,95,62,62,107,160,116,191,243,4,53,63,38,234,150,62,122,137,123,191,7,157,31,63,166,190,204,62,192,72,127,191,65,51,8,63,0,0,0,63,44,210,127,191,2,38,222,62,154,4,24,63,4,36,125,191,86,26,169,62,205,31,46,63,234,70,119,191,135,220,99,62,111,10,66,63,190,77,110,191,162,77,229,61,98,132,83,63,99,85,98,191,243,4,53,63,65,51,8,191,2,38,222,190,236,99,126,63,7,157,31,191,86,26,169,190,224,148,121,63,243,4,53,191,135,220,99,190,87,162,113,63,28,38,72,191,162,77,229,189,229,165,102,63,235,194,88,191,53,213,83,167,235,194,88,63,229,165,102,191,162,77,229,61,28,38,72,63,87,162,113,191,135,220,99,62,243,4,53,63,224,148,121,191,86,26,169,62,7,157,31,63,236,99,126,191,2,38,222,62,65,51,8,63,0,0,128,191,65,51,8,63,2,38,222,62,236,99,126,191,7,157,31,63,86,26,169,62,224,148,121,191,243,4,53,63,135,220,99,62,87,162,113,191,28,38,72,63,162,77,229,61,229,165,102,191,235,194,88,63,243,4,53,63,154,4,24,191,38,234,150,190,87,162,113,63,98,132,83,191,130,39,25,61,28,38,72,63,234,70,119,191,251,13,187,62,65,51,8,63,192,72,127,191,79,252,38,63,135,220,99,62,211,163,106,191,215,179,93,63,162,77,229,189,74,169,59,191,122,137,123,63,2,38,222,190,213,61,239,190,4,36,125,63,243,4,53,191,137,158,24,190,99,85,98,63,229,165,102,191,157,95,62,62,205,31,46,63,236,99,126,191,0,0,0,63,166,190,204,62,224,148,121,191,111,10,66,63,23,12,153,61,235,194,88,191,190,77,110,63,238,131,132,190,7,157,31,191,44,210,127,63,190,53,16,191,86,26,169,190,107,160,116,63,31,250,77,191,243,4,53,63,79,252,38,191,137,158,24,190,235,194,88,63,107,160,116,191,166,190,204,62,2,38,222,62,234,70,119,191,98,132,83,63,162,77,229,189,205,31,46,191,44,210,127,63,7,157,31,191,157,95,62,190,215,179,93,63,87,162,113,191,251,13,187,62,213,61,239,62,224,148,121,191,31,250,77,63,23,12,153,189,243,4,53,191,192,72,127,63,154,4,24,191,135,220,99,190,99,85,98,63,190,77,110,191,86,26,169,62,0,0,0,63,122,137,123,191,28,38,72,63,130,39,25,189,74,169,59,191,236,99,126,63,190,53,16,191,238,131,132,190,229,165,102,63,211,163,106,191,38,234,150,62,65,51,8,63,4,36,125,191,111,10,66,63,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,250,9,150,167,243,4,53,63,0,0,128,191,243,4,53,63,91,26,141,38,243,4,53,191,0,0,128,63,243,4,53,191,52,131,176,167,243,4,53,63,0,0,128,191,243,4,53,63,232,223,30,40,243,4,53,191,0,0,128,63,243,4,53,191,243,4,53,63,111,10,66,191,137,158,24,62,65,51,8,63,107,160,116,191,211,163,106,63,2,38,222,190,238,131,132,190,98,132,83,63,236,99,126,191,205,31,46,63,130,39,25,189,7,157,31,191,122,137,123,63,215,179,93,191,86,26,169,62,251,13,187,62,99,85,98,191,224,148,121,63,154,4,24,191,23,12,153,189,243,4,53,63,192,72,127,191,31,250,77,63,135,220,99,190,213,61,239,190,190,77,110,63,87,162,113,191,0,0,0,63,157,95,62,62,28,38,72,191,44,210,127,63,74,169,59,191,162,77,229,61,190,53,16,63,234,70,119,191,229,165,102,63,166,190,204,190,38,234,150,190,235,194,88,63,4,36,125,191,79,252,38,63,243,4,53,63,31,250,77,191,38,234,150,62,86,26,169,62,98,132,83,191,44,210,127,63,28,38,72,191,238,131,132,62,251,13,187,62,235,194,88,191,192,72,127,63,111,10,66,191,135,220,99,62,166,190,204,62,215,179,93,191,236,99,126,63,74,169,59,191,157,95,62,62,2,38,222,62,99,85,98,191,4,36,125,63,243,4,53,191,137,158,24,62,213,61,239,62,229,165,102,191,122,137,123,63,205,31,46,191,162,77,229,61,0,0,0,63,211,163,106,191,224,148,121,63,79,252,38,191,23,12,153,61,65,51,8,63,190,77,110,191,234,70,119,63,7,157,31,191,130,39,25,61,190,53,16,63,87,162,113,191,107,160,116,63,154,4,24,191,243,4,53,63,235,194,88,191,2,38,222,62,162,77,229,61,7,157,31,191,87,162,113,63,224,148,121,191,243,4,53,63,135,220,99,190,86,26,169,190,28,38,72,63,236,99,126,191,229,165,102,63,65,51,8,191,92,123,101,167,65,51,8,63,229,165,102,191,236,99,126,63,28,38,72,191,86,26,169,62,135,220,99,62,243,4,53,191,224,148,121,63,87,162,113,191,7,157,31,63,162,77,229,189,2,38,222,190,235,194,88,63,0,0,128,191,235,194,88,63,2,38,222,190,162,77,229,189,7,157,31,63,87,162,113,191,224,148,121,63,243,4,53,191,135,220,99,62,86,26,169,62,28,38,72,191,236,99,126,63,229,165,102,191,65,51,8,63,243,4,53,63,99,85,98,191,190,53,16,63,162,77,229,189,251,13,187,190,111,10,66,63,224,148,121,191,234,70,119,63,74,169,59,191,86,26,169,62,137,158,24,62,154,4,24,191,229,165,102,63,44,210,127,191,215,179,93,63,65,51,8,191,23,12,153,61,166,190,204,62,28,38,72,191,122,137,123,63,107,160,116,191,243,4,53,63,38,234,150,190,157,95,62,190,7,157,31,63,211,163,106,191,192,72,127,63,235,194,88,191,0,0,0,63,130,39,25,189,2,38,222,190,31,250,77,63,4,36,125,191,87,162,113,63,205,31,46,191,238,131,132,62,135,220,99,62,79,252,38,191,190,77,110,63,236,99,126,191,98,132,83,63,213,61,239,190,243,4,53,63,211,163,106,191,205,31,46,63,86,26,169,190,23,12,153,189,213,61,239,62,28,38,72,191,234,70,119,63,4,36,125,191,235,194,88,63,190,53,16,191,157,95,62,62,135,220,99,62,154,4,24,191,215,179,93,63,236,99,126,191,107,160,116,63,111,10,66,191,2,38,222,62,130,39,25,189,251,13,187,190,243,4,53,63,190,77,110,191,44,210,127,63,229,165,102,191,79,252,38,63,38,234,150,190,162,77,229,189,0,0,0,63,31,250,77,191,224,148,121,63,122,137,123,191,98,132,83,63,65,51,8,191,137,158,24,62,238,131,132,62,7,157,31,191,99,85,98,63,192,72,127,191,87,162,113,63,74,169,59,191,166,190,204,62,243,4,53,63,87,162,113,191,28,38,72,63,65,51,8,191,135,220,99,62,162,77,229,61,2,38,222,190,243,4,53,63,229,165,102,191,236,99,126,63,224,148,121,191,235,194,88,63,7,157,31,191,86,26,169,62,138,140,141,165,86,26,169,190,7,157,31,63,235,194,88,191,224,148,121,63,236,99,126,191,229,165,102,63,243,4,53,191,2,38,222,62,162,77,229,189,135,220,99,190,65,51,8,63,28,38,72,191,87,162,113,63,0,0,128,191,87,162,113,63,28,38,72,191,65,51,8,63,135,220,99,190,162,77,229,189,2,38,222,62,243,4,53,191,229,165,102,63,236,99,126,191,224,148,121,63,235,194,88,191,7,157,31,63,86,26,169,190,243,4,53,63,234,70,119,191,215,179,93,63,243,4,53,191,0,0,0,63,238,131,132,190,233,136,48,167,238,131,132,62,0,0,0,191,243,4,53,63,215,179,93,191,234,70,119,63,0,0,128,191,234,70,119,63,215,179,93,191,243,4,53,63,0,0,0,191,238,131,132,62,175,102,4,40,238,131,132,190,0,0,0,63,243,4,53,191,215,179,93,63,234,70,119,191,0,0,128,63,234,70,119,191,215,179,93,63,243,4,53,191,0,0,0,63,238,131,132,190,35,171,92,168,238,131,132,62,0,0,0,191,243,4,53,63,215,179,93,191,234,70,119,63,0,0,128,191,234,70,119,63,215,179,93,191,243,4,53,63,0,0,0,191,238,131,132,62,243,4,53,63,122,137,123,191,190,77,110,63,235,194,88,191,74,169,59,63,154,4,24,191,2,38,222,62,238,131,132,190,23,12,153,61,162,77,229,61,38,234,150,190,213,61,239,62,7,157,31,191,111,10,66,63,215,179,93,191,87,162,113,63,4,36,125,191,44,210,127,63,224,148,121,191,211,163,106,63,98,132,83,191,243,4,53,63,190,53,16,191,166,190,204,62,135,220,99,190,130,39,25,61,137,158,24,62,86,26,169,190,0,0,0,63,79,252,38,191,28,38,72,63,99,85,98,191,107,160,116,63,236,99,126,191,192,72,127,63,234,70,119,191,229,165,102,63,31,250,77,191,205,31,46,63,65,51,8,191,251,13,187,62,157,95,62,190,243,4,53,63,236,99,126,191,224,148,121,63,87,162,113,191,229,165,102,63,235,194,88,191,28,38,72,63,243,4,53,191,7,157,31,63,65,51,8,191,2,38,222,62,86,26,169,190,135,220,99,62,162,77,229,189,130,33,119,167,162,77,229,61,135,220,99,190,86,26,169,62,2,38,222,190,65,51,8,63,7,157,31,191,243,4,53,63,28,38,72,191,235,194,88,63,229,165,102,191,87,162,113,63,224,148,121,191,236,99,126,63,0,0,128,191,236,99,126,63,224,148,121,191,87,162,113,63,229,165,102,191,235,194,88,63,28,38,72,191,243,4,53,63,7,157,31,191,65,51,8,63,2,38,222,190,86,26,169,62,135,220,99,190,162,77,229,61,243,4,53,63,44,210,127,191,192,72,127,63,236,99,126,191,4,36,125,63,122,137,123,191,224,148,121,63,234,70,119,191,107,160,116,63,87,162,113,191,190,77,110,63,211,163,106,191,229,165,102,63,99,85,98,191,215,179,93,63,235,194,88,191,98,132,83,63,31,250,77,191,28,38,72,63,111,10,66,191,74,169,59,63,243,4,53,191,205,31,46,63,79,252,38,191,7,157,31,63,154,4,24,191,190,53,16,63,65,51,8,191,0,0,0,63,213,61,239,190,2,38,222,62,166,190,204,190,251,13,187,62,86,26,169,190,38,234,150,62,238,131,132,190,135,220,99,62,157,95,62,190,137,158,24,62,162,77,229,189,23,12,153,61,130,39,25,189,243,4,53,63,71,212,127,63,43,81,127,63,217,118,126,63,155,69,125,63,218,189,123,63,28,224,121,63,3,173,119,63,80,37,117,63,225,73,114,63,174,27,111,63,207,155,107,63,117,203,103,63,237,171,99,63,161,62,95,63,20,133,90,63,226,128,85,63,194,51,80,63,132,159,74,63,15,198,68,63,100,169,62,63,152,75,56,63,217,174,49,63,104,213,42,63,156,193,35,63,225,117,28,63,181,244,20,63,167,64,13,63,89,92,5,63,250,148,250,62,170,27,234,62,99,82,217,62,225,62,200,62,248,230,182,62,149,80,165,62,186,129,147,62,124,128,129,62,4,166,94,62,3,255,57,62,121,24,21,62,3,254,223,61,145,126,149,61,30,152,21,61,243,4,53,63,217,118,126,63,28,224,121,63,225,73,114,63,117,203,103,63,20,133,90,63,132,159,74,63,152,75,56,63,156,193,35,63,167,64,13,63,170,27,234,62,248,230,182,62,124,128,129,62,121,24,21,62,30,152,21,61,145,126,149,189,3,255,57,190,186,129,147,190,225,62,200,190,250,148,250,190,181,244,20,191,104,213,42,191,100,169,62,191,194,51,80,191,161,62,95,191,207,155,107,191,80,37,117,191,218,189,123,191,43,81,127,191,71,212,127,191,155,69,125,191,3,173,119,191,174,27,111,191,237,171,99,191,226,128,85,191,15,198,68,191,217,174,49,191,225,117,28,191,89,92,5,191,99,82,217,190,149,80,165,190,4,166,94,190,3,254,223,189,243,4,53,63,218,189,123,63,174,27,111,63,20,133,90,63,100,169,62,63,225,117,28,63,170,27,234,62,186,129,147,62,3,254,223,61,145,126,149,189,124,128,129,190,99,82,217,190,181,244,20,191,152,75,56,191,226,128,85,191,207,155,107,191,28,224,121,191,71,212,127,191,155,69,125,191,225,73,114,191,161,62,95,191,15,198,68,191,156,193,35,191,250,148,250,190,149,80,165,190,121,24,21,190,30,152,21,61,4,166,94,62,225,62,200,62,167,64,13,63,217,174,49,63,194,51,80,63,117,203,103,63,3,173,119,63,43,81,127,63,217,118,126,63,80,37,117,63,237,171,99,63,132,159,74,63,104,213,42,63,89,92,5,63,248,230,182,62,3,255,57,62,243,4,53,63,3,173,119,63,161,62,95,63,152,75,56,63,89,92,5,63,186,129,147,62,30,152,21,61,4,166,94,190,170,27,234,190,104,213,42,191,226,128,85,191,225,73,114,191,43,81,127,191,218,189,123,191,117,203,103,191,15,198,68,191,181,244,20,191,248,230,182,190,3,254,223,189,121,24,21,62,225,62,200,62,225,117,28,63,132,159,74,63,207,155,107,63,155,69,125,63,217,118,126,63,174,27,111,63,194,51,80,63,156,193,35,63,99,82,217,62,3,255,57,62,145,126,149,189,149,80,165,190,167,64,13,191,100,169,62,191,237,171,99,191,28,224,121,191,71,212,127,191,80,37,117,191,20,133,90,191,217,174,49,191,250,148,250,190,124,128,129,190,243,4,53,63,225,73,114,63,132,159,74,63,167,64,13,63,124,128,129,62,145,126,149,189,225,62,200,190,104,213,42,191,161,62,95,191,218,189,123,191,155,69,125,191,237,171,99,191,217,174,49,191,99,82,217,190,3,254,223,189,4,166,94,62,89,92,5,63,15,198,68,63,174,27,111,63,71,212,127,63,80,37,117,63,194,51,80,63,181,244,20,63,186,129,147,62,30,152,21,189,248,230,182,190,156,193,35,191,20,133,90,191,28,224,121,191,217,118,126,191,117,203,103,191,152,75,56,191,170,27,234,190,121,24,21,190,3,255,57,62,250,148,250,62,100,169,62,63,207,155,107,63,43,81,127,63,3,173,119,63,226,128,85,63,225,117,28,63,149,80,165,62,243,4,53,63,207,155,107,63,217,174,49,63,248,230,182,62,30,152,21,189,99,82,217,190,100,169,62,191,225,73,114,191,43,81,127,191,237,171,99,191,156,193,35,191,186,129,147,190,3,254,223,61,250,148,250,62,132,159,74,63,3,173,119,63,155,69,125,63,20,133,90,63,181,244,20,63,4,166,94,62,3,255,57,190,167,64,13,191,226,128,85,191,218,189,123,191,28,224,121,191,194,51,80,191,89,92,5,191,121,24,21,190,124,128,129,62,225,117,28,63,161,62,95,63,217,118,126,63,80,37,117,63,15,198,68,63,170,27,234,62,145,126,149,61,149,80,165,190,104,213,42,191,117,203,103,191,71,212,127,191,174,27,111,191,152,75,56,191,225,62,200,190,243,4,53,63,237,171,99,63,181,244,20,63,121,24,21,62,149,80,165,190,152,75,56,191,80,37,117,191,218,189,123,191,132,159,74,191,99,82,217,190,30,152,21,61,250,148,250,62,226,128,85,63,217,118,126,63,174,27,111,63,104,213,42,63,124,128,129,62,4,166,94,190,156,193,35,191,207,155,107,191,43,81,127,191,20,133,90,191,89,92,5,191,145,126,149,189,225,62,200,62,15,198,68,63,28,224,121,63,3,173,119,63,100,169,62,63,248,230,182,62,3,254,223,189,167,64,13,191,161,62,95,191,71,212,127,191,117,203,103,191,225,117,28,191,3,255,57,190,186,129,147,62,217,174,49,63,225,73,114,63,155,69,125,63,194,51,80,63,170,27,234,62,243,4,53,63,20,133,90,63,170,27,234,62,145,126,149,189,181,244,20,191,207,155,107,191,155,69,125,191,15,198,68,191,149,80,165,190,4,166,94,62,217,174,49,63,3,173,119,63,80,37,117,63,104,213,42,63,3,255,57,62,248,230,182,190,132,159,74,191,217,118,126,191,117,203,103,191,167,64,13,191,30,152,21,189,250,148,250,62,161,62,95,63,71,212,127,63,226,128,85,63,99,82,217,62,3,254,223,189,225,117,28,191,174,27,111,191,218,189,123,191,100,169,62,191,186,129,147,190,124,128,129,62,152,75,56,63,28,224,121,63,225,73,114,63,156,193,35,63,121,24,21,62,225,62,200,190,194,51,80,191,43,81,127,191,237,171,99,191,89,92,5,191,243,4,53,63,194,51,80,63,149,80,165,62,186,129,147,190,132,159,74,191,71,212,127,191,226,128,85,191,248,230,182,190,124,128,129,62,15,198,68,63,43,81,127,63,20,133,90,63,225,62,200,62,4,166,94,190,100,169,62,191,217,118,126,191,161,62,95,191,99,82,217,190,3,255,57,62,152,75,56,63,155,69,125,63,237,171,99,63,170,27,234,62,121,24,21,190,217,174,49,191,218,189,123,191,117,203,103,191,250,148,250,190,3,254,223,61,104,213,42,63,28,224,121,63,207,155,107,63,89,92,5,63,145,126,149,189,156,193,35,191,3,173,119,191,174,27,111,191,167,64,13,191,30,152,21,61,225,117,28,63,80,37,117,63,225,73,114,63,181,244,20,63,243,4,53,63,15,198,68,63,3,255,57,62,250,148,250,190,174,27,111,191,225,73,114,191,89,92,5,191,121,24,21,62,100,169,62,63,71,212,127,63,132,159,74,63,4,166,94,62,170,27,234,190,207,155,107,191,80,37,117,191,167,64,13,191,3,254,223,61,152,75,56,63,43,81,127,63,194,51,80,63,124,128,129,62,99,82,217,190,117,203,103,191,3,173,119,191,181,244,20,191,145,126,149,61,217,174,49,63,217,118,126,63,226,128,85,63,186,129,147,62,225,62,200,190,237,171,99,191,28,224,121,191,225,117,28,191,30,152,21,61,104,213,42,63,155,69,125,63,20,133,90,63,149,80,165,62,248,230,182,190,161,62,95,191,218,189,123,191,156,193,35,191,243,4,53,63,152,75,56,63,30,152,21,61,104,213,42,191,43,81,127,191,15,198,68,191,3,254,223,189,225,117,28,63,155,69,125,63,194,51,80,63,3,255,57,62,167,64,13,191,28,224,121,191,20,133,90,191,124,128,129,190,250,148,250,62,80,37,117,63,237,171,99,63,149,80,165,62,99,82,217,190,174,27,111,191,207,155,107,191,225,62,200,190,248,230,182,62,117,203,103,63,225,73,114,63,170,27,234,62,186,129,147,190,161,62,95,191,3,173,119,191,89,92,5,191,4,166,94,62,226,128,85,63,218,189,123,63,181,244,20,63,121,24,21,190,132,159,74,191,217,118,126,191,156,193,35,191,145,126,149,61,100,169,62,63,71,212,127,63,217,174,49,63,243,4,53,63,104,213,42,63,3,254,223,189,194,51,80,191,28,224,121,191,250,148,250,190,149,80,165,62,207,155,107,63,117,203,103,63,186,129,147,62,89,92,5,191,218,189,123,191,132,159,74,191,145,126,149,189,217,174,49,63,71,212,127,63,156,193,35,63,121,24,21,190,226,128,85,191,3,173,119,191,170,27,234,190,248,230,182,62,174,27,111,63,237,171,99,63,124,128,129,62,167,64,13,191,155,69,125,191,15,198,68,191,30,152,21,189,152,75,56,63,43,81,127,63,225,117,28,63,3,255,57,190,20,133,90,191,80,37,117,191,99,82,217,190,225,62,200,62,225,73,114,63,161,62,95,63,4,166,94,62,181,244,20,191,217,118,126,191,100,169,62,191,243,4,53,63,225,117,28,63,124,128,129,190,207,155,107,191,161,62,95,191,121,24,21,190,217,174,49,63,217,118,126,63,89,92,5,63,248,230,182,190,80,37,117,191,194,51,80,191,30,152,21,189,15,198,68,63,28,224,121,63,99,82,217,62,170,27,234,190,218,189,123,191,100,169,62,191,145,126,149,61,226,128,85,63,225,73,114,63,149,80,165,62,167,64,13,191,43,81,127,191,104,213,42,191,3,255,57,62,237,171,99,63,117,203,103,63,4,166,94,62,156,193,35,191,71,212,127,191,181,244,20,191,186,129,147,62,174,27,111,63,20,133,90,63,3,254,223,61,152,75,56,191,155,69,125,191,250,148,250,190,225,62,200,62,3,173,119,63,132,159,74,63,243,4,53,63,167,64,13,63,225,62,200,190,218,189,123,191,217,174,49,191,4,166,94,62,174,27,111,63,194,51,80,63,30,152,21,189,20,133,90,191,117,203,103,191,121,24,21,190,100,169,62,63,3,173,119,63,149,80,165,62,225,117,28,191,43,81,127,191,250,148,250,190,170,27,234,62,217,118,126,63,156,193,35,63,186,129,147,190,80,37,117,191,15,198,68,191,3,254,223,61,237,171,99,63,161,62,95,63,145,126,149,61,132,159,74,191,225,73,114,191,124,128,129,190,104,213,42,63,155,69,125,63,99,82,217,62,89,92,5,191,71,212,127,191,181,244,20,191,248,230,182,62,28,224,121,63,152,75,56,63,3,255,57,190,207,155,107,191,226,128,85,191,243,4,53,63,250,148,250,62,89,92,5,191,71,212,127,191,170,27,234,190,167,64,13,63,43,81,127,63,99,82,217,62,181,244,20,191,217,118,126,191,225,62,200,190,225,117,28,63,155,69,125,63,248,230,182,62,156,193,35,191,218,189,123,191,149,80,165,190,104,213,42,63,28,224,121,63,186,129,147,62,217,174,49,191,3,173,119,191,124,128,129,190,152,75,56,63,80,37,117,63,4,166,94,62,100,169,62,191,225,73,114,191,3,255,57,190,15,198,68,63,174,27,111,63,121,24,21,62,132,159,74,191,207,155,107,191,3,254,223,189,194,51,80,63,117,203,103,63,145,126,149,61,226,128,85,191,237,171,99,191,30,152,21,189,20,133,90,63,161,62,95,63,243,4,53,63,99,82,217,62,156,193,35,191,3,173,119,191,3,255,57,190,194,51,80,63,161,62,95,63,145,126,149,189,174,27,111,191,152,75,56,191,149,80,165,62,217,118,126,63,89,92,5,63,167,64,13,191,155,69,125,191,186,129,147,190,100,169,62,63,207,155,107,63,30,152,21,61,237,171,99,191,132,159,74,191,4,166,94,62,28,224,121,63,225,117,28,63,170,27,234,190,71,212,127,191,225,62,200,190,104,213,42,63,80,37,117,63,121,24,21,62,226,128,85,191,20,133,90,191,3,254,223,61,225,73,114,63,217,174,49,63,248,230,182,190,43,81,127,191,250,148,250,190,181,244,20,63,218,189,123,63,124,128,129,62,15,198,68,191,117,203,103,191,243,4,53,63,248,230,182,62,100,169,62,191,237,171,99,191,3,254,223,61,3,173,119,63,181,244,20,63,167,64,13,191,28,224,121,191,121,24,21,190,161,62,95,63,15,198,68,63,149,80,165,190,71,212,127,191,225,62,200,190,152,75,56,63,117,203,103,63,145,126,149,189,80,37,117,191,225,117,28,191,89,92,5,63,218,189,123,63,3,255,57,62,20,133,90,191,132,159,74,191,186,129,147,62,43,81,127,63,99,82,217,62,217,174,49,191,207,155,107,191,30,152,21,61,225,73,114,63,156,193,35,63,250,148,250,190,155,69,125,191,4,166,94,190,226,128,85,63,194,51,80,63,124,128,129,190,217,118,126,191,170,27,234,190,104,213,42,63,174,27,111,63,243,4,53,63,186,129,147,62,226,128,85,191,15,198,68,191,225,62,200,62,217,118,126,63,3,255,57,62,237,171,99,191,217,174,49,191,250,148,250,62,28,224,121,63,145,126,149,61,174,27,111,191,225,117,28,191,181,244,20,63,225,73,114,63,30,152,21,189,3,173,119,191,89,92,5,191,104,213,42,63,117,203,103,63,121,24,21,190,155,69,125,191,99,82,217,190,100,169,62,63,20,133,90,63,124,128,129,190,71,212,127,191,149,80,165,190,194,51,80,63,132,159,74,63,248,230,182,190,43,81,127,191,4,166,94,190,161,62,95,63,152,75,56,63,170,27,234,190,218,189,123,191,3,254,223,189,207,155,107,63,156,193,35,63,167,64,13,191,80,37,117,191,243,4,53,63,4,166,94,62,117,203,103,191,225,117,28,191,156,193,35,63,237,171,99,63,124,128,129,190,71,212,127,191,3,255,57,190,207,155,107,63,181,244,20,63,104,213,42,191,161,62,95,191,186,129,147,62,43,81,127,63,121,24,21,62,174,27,111,191,167,64,13,191,217,174,49,63,20,133,90,63,149,80,165,190,217,118,126,191,3,254,223,189,225,73,114,63,89,92,5,63,152,75,56,191,226,128,85,191,248,230,182,62,155,69,125,63,145,126,149,61,80,37,117,191,250,148,250,190,100,169,62,63,194,51,80,63,225,62,200,190,218,189,123,191,30,152,21,189,3,173,119,63,170,27,234,62,15,198,68,191,132,159,74,191,99,82,217,62,28,224,121,63,243,4,53,63,121,24,21,62,80,37,117,191,99,82,217,190,226,128,85,63,104,213,42,63,156,193,35,191,20,133,90,191,225,62,200,62,3,173,119,63,3,254,223,189,71,212,127,191,3,255,57,190,225,73,114,63,170,27,234,62,194,51,80,191,217,174,49,191,225,117,28,63,161,62,95,63,248,230,182,190,28,224,121,191,145,126,149,61,43,81,127,63,4,166,94,62,174,27,111,191,250,148,250,190,132,159,74,63,152,75,56,63,181,244,20,191,237,171,99,191,149,80,165,62,218,189,123,63,30,152,21,189,217,118,126,191,124,128,129,190,207,155,107,63,89,92,5,63,15,198,68,191,100,169,62,191,167,64,13,63,117,203,103,63,186,129,147,190,155,69,125,191,243,4,53,63,145,126,149,61,155,69,125,191,4,166,94,190,80,37,117,63,248,230,182,62,117,203,103,191,250,148,250,190,226,128,85,63,225,117,28,63,100,169,62,191,152,75,56,191,156,193,35,63,194,51,80,63,89,92,5,191,237,171,99,191,225,62,200,62,225,73,114,63,124,128,129,190,218,189,123,191,3,254,223,61,71,212,127,63,30,152,21,61,217,118,126,191,3,255,57,190,3,173,119,63,149,80,165,62,207,155,107,191,170,27,234,190,20,133,90,63,181,244,20,63,15,198,68,191,217,174,49,191,104,213,42,63,132,159,74,63,167,64,13,191,161,62,95,191,99,82,217,62,174,27,111,63,186,129,147,190,28,224,121,191,121,24,21,62,43,81,127,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,243,4,53,63,145,126,149,189,155,69,125,191,4,166,94,62,80,37,117,63,248,230,182,190,117,203,103,191,250,148,250,62,226,128,85,63,225,117,28,191,100,169,62,191,152,75,56,63,156,193,35,63,194,51,80,191,89,92,5,191,237,171,99,63,225,62,200,62,225,73,114,191,124,128,129,190,218,189,123,63,3,254,223,61,71,212,127,191,30,152,21,61,217,118,126,63,3,255,57,190,3,173,119,191,149,80,165,62,207,155,107,63,170,27,234,190,20,133,90,191,181,244,20,63,15,198,68,63,217,174,49,191,104,213,42,191,132,159,74,63,167,64,13,63,161,62,95,191,99,82,217,190,174,27,111,63,186,129,147,62,28,224,121,191,121,24,21,190,43,81,127,63,243,4,53,63,121,24,21,190,80,37,117,191,99,82,217,62,226,128,85,63,104,213,42,191,156,193,35,191,20,133,90,63,225,62,200,62,3,173,119,191,3,254,223,189,71,212,127,63,3,255,57,190,225,73,114,191,170,27,234,62,194,51,80,63,217,174,49,191,225,117,28,191,161,62,95,63,248,230,182,62,28,224,121,191,145,126,149,189,43,81,127,63,4,166,94,190,174,27,111,191,250,148,250,62,132,159,74,63,152,75,56,191,181,244,20,191,237,171,99,63,149,80,165,62,218,189,123,191,30,152,21,189,217,118,126,63,124,128,129,190,207,155,107,191,89,92,5,63,15,198,68,63,100,169,62,191,167,64,13,191,117,203,103,63,186,129,147,62,155,69,125,191,243,4,53,63,4,166,94,190,117,203,103,191,225,117,28,63,156,193,35,63,237,171,99,191,124,128,129,190,71,212,127,63,3,255,57,190,207,155,107,191,181,244,20,63,104,213,42,63,161,62,95,191,186,129,147,190,43,81,127,63,121,24,21,190,174,27,111,191,167,64,13,63,217,174,49,63,20,133,90,191,149,80,165,190,217,118,126,63,3,254,223,189,225,73,114,191,89,92,5,63,152,75,56,63,226,128,85,191,248,230,182,190,155,69,125,63,145,126,149,189,80,37,117,191,250,148,250,62,100,169,62,63,194,51,80,191,225,62,200,190,218,189,123,63,30,152,21,189,3,173,119,191,170,27,234,62,15,198,68,63,132,159,74,191,99,82,217,190,28,224,121,63,243,4,53,63,186,129,147,190,226,128,85,191,15,198,68,63,225,62,200,62,217,118,126,191,3,255,57,62,237,171,99,63,217,174,49,191,250,148,250,190,28,224,121,63,145,126,149,189,174,27,111,191,225,117,28,63,181,244,20,63,225,73,114,191,30,152,21,189,3,173,119,63,89,92,5,191,104,213,42,191,117,203,103,63,121,24,21,62,155,69,125,191,99,82,217,62,100,169,62,63,20,133,90,191,124,128,129,190,71,212,127,63,149,80,165,190,194,51,80,191,132,159,74,63,248,230,182,62,43,81,127,191,4,166,94,62,161,62,95,63,152,75,56,191,170,27,234,190,218,189,123,63,3,254,223,189,207,155,107,191,156,193,35,63,167,64,13,63,80,37,117,191,243,4,53,63,248,230,182,190,100,169,62,191,237,171,99,63,3,254,223,61,3,173,119,191,181,244,20,63,167,64,13,63,28,224,121,191,121,24,21,62,161,62,95,63,15,198,68,191,149,80,165,190,71,212,127,63,225,62,200,190,152,75,56,191,117,203,103,63,145,126,149,61,80,37,117,191,225,117,28,63,89,92,5,63,218,189,123,191,3,255,57,62,20,133,90,63,132,159,74,191,186,129,147,190,43,81,127,63,99,82,217,190,217,174,49,191,207,155,107,63,30,152,21,61,225,73,114,191,156,193,35,63,250,148,250,62,155,69,125,191,4,166,94,62,226,128,85,63,194,51,80,191,124,128,129,190,217,118,126,63,170,27,234,190,104,213,42,191,174,27,111,63,243,4,53,63,99,82,217,190,156,193,35,191,3,173,119,63,3,255,57,190,194,51,80,191,161,62,95,63,145,126,149,61,174,27,111,191,152,75,56,63,149,80,165,62,217,118,126,191,89,92,5,63,167,64,13,63,155,69,125,191,186,129,147,62,100,169,62,63,207,155,107,191,30,152,21,61,237,171,99,63,132,159,74,191,4,166,94,190,28,224,121,63,225,117,28,191,170,27,234,190,71,212,127,63,225,62,200,190,104,213,42,191,80,37,117,63,121,24,21,190,226,128,85,191,20,133,90,63,3,254,223,61,225,73,114,191,217,174,49,63,248,230,182,62,43,81,127,191,250,148,250,62,181,244,20,63,218,189,123,191,124,128,129,62,15,198,68,63,117,203,103,191,243,4,53,63,250,148,250,190,89,92,5,191,71,212,127,63,170,27,234,190,167,64,13,191,43,81,127,63,99,82,217,190,181,244,20,191,217,118,126,63,225,62,200,190,225,117,28,191,155,69,125,63,248,230,182,190,156,193,35,191,218,189,123,63,149,80,165,190,104,213,42,191,28,224,121,63,186,129,147,190,217,174,49,191,3,173,119,63,124,128,129,190,152,75,56,191,80,37,117,63,4,166,94,190,100,169,62,191,225,73,114,63,3,255,57,190,15,198,68,191,174,27,111,63,121,24,21,190,132,159,74,191,207,155,107,63,3,254,223,189,194,51,80,191,117,203,103,63,145,126,149,189,226,128,85,191,237,171,99,63,30,152,21,189,20,133,90,191,161,62,95,63,243,4,53,63,167,64,13,191,225,62,200,190,218,189,123,63,217,174,49,191,4,166,94,190,174,27,111,63,194,51,80,191,30,152,21,189,20,133,90,63,117,203,103,191,121,24,21,62,100,169,62,63,3,173,119,191,149,80,165,62,225,117,28,63,43,81,127,191,250,148,250,62,170,27,234,62,217,118,126,191,156,193,35,63,186,129,147,62,80,37,117,191,15,198,68,63,3,254,223,61,237,171,99,191,161,62,95,63,145,126,149,189,132,159,74,191,225,73,114,63,124,128,129,190,104,213,42,191,155,69,125,63,99,82,217,190,89,92,5,191,71,212,127,63,181,244,20,191,248,230,182,190,28,224,121,63,152,75,56,191,3,255,57,190,207,155,107,63,226,128,85,191,243,4,53,63,225,117,28,191,124,128,129,190,207,155,107,63,161,62,95,191,121,24,21,62,217,174,49,63,217,118,126,191,89,92,5,63,248,230,182,62,80,37,117,191,194,51,80,63,30,152,21,189,15,198,68,191,28,224,121,63,99,82,217,190,170,27,234,190,218,189,123,63,100,169,62,191,145,126,149,189,226,128,85,63,225,73,114,191,149,80,165,62,167,64,13,63,43,81,127,191,104,213,42,63,3,255,57,62,237,171,99,191,117,203,103,63,4,166,94,190,156,193,35,191,71,212,127,63,181,244,20,191,186,129,147,190,174,27,111,63,20,133,90,191,3,254,223,61,152,75,56,63,155,69,125,191,250,148,250,62,225,62,200,62,3,173,119,191,132,159,74,63,243,4,53,63,104,213,42,191,3,254,223,189,194,51,80,63,28,224,121,191,250,148,250,62,149,80,165,62,207,155,107,191,117,203,103,63,186,129,147,190,89,92,5,191,218,189,123,63,132,159,74,191,145,126,149,61,217,174,49,63,71,212,127,191,156,193,35,63,121,24,21,62,226,128,85,191,3,173,119,63,170,27,234,190,248,230,182,190,174,27,111,63,237,171,99,191,124,128,129,62,167,64,13,63,155,69,125,191,15,198,68,63,30,152,21,189,152,75,56,191,43,81,127,63,225,117,28,191,3,255,57,190,20,133,90,63,80,37,117,191,99,82,217,62,225,62,200,62,225,73,114,191,161,62,95,63,4,166,94,190,181,244,20,191,217,118,126,63,100,169,62,191,243,4,53,63,152,75,56,191,30,152,21,61,104,213,42,63,43,81,127,191,15,198,68,63,3,254,223,189,225,117,28,191,155,69,125,63,194,51,80,191,3,255,57,62,167,64,13,63,28,224,121,191,20,133,90,63,124,128,129,190,250,148,250,190,80,37,117,63,237,171,99,191,149,80,165,62,99,82,217,62,174,27,111,191,207,155,107,63,225,62,200,190,248,230,182,190,117,203,103,63,225,73,114,191,170,27,234,62,186,129,147,62,161,62,95,191,3,173,119,63,89,92,5,191,4,166,94,190,226,128,85,63,218,189,123,191,181,244,20,63,121,24,21,62,132,159,74,191,217,118,126,63,156,193,35,191,145,126,149,189,100,169,62,63,71,212,127,191,217,174,49,63,243,4,53,63,15,198,68,191,3,255,57,62,250,148,250,62,174,27,111,191,225,73,114,63,89,92,5,191,121,24,21,190,100,169,62,63,71,212,127,191,132,159,74,63,4,166,94,190,170,27,234,190,207,155,107,63,80,37,117,191,167,64,13,63,3,254,223,61,152,75,56,191,43,81,127,63,194,51,80,191,124,128,129,62,99,82,217,62,117,203,103,191,3,173,119,63,181,244,20,191,145,126,149,189,217,174,49,63,217,118,126,191,226,128,85,63,186,129,147,190,225,62,200,190,237,171,99,63,28,224,121,191,225,117,28,63,30,152,21,61,104,213,42,191,155,69,125,63,20,133,90,191,149,80,165,62,248,230,182,62,161,62,95,191,218,189,123,63,156,193,35,191,243,4,53,63,194,51,80,191,149,80,165,62,186,129,147,62,132,159,74,191,71,212,127,63,226,128,85,191,248,230,182,62,124,128,129,62,15,198,68,191,43,81,127,63,20,133,90,191,225,62,200,62,4,166,94,62,100,169,62,191,217,118,126,63,161,62,95,191,99,82,217,62,3,255,57,62,152,75,56,191,155,69,125,63,237,171,99,191,170,27,234,62,121,24,21,62,217,174,49,191,218,189,123,63,117,203,103,191,250,148,250,62,3,254,223,61,104,213,42,191,28,224,121,63,207,155,107,191,89,92,5,63,145,126,149,61,156,193,35,191,3,173,119,63,174,27,111,191,167,64,13,63,30,152,21,61,225,117,28,191,80,37,117,63,225,73,114,191,181,244,20,63,243,4,53,63,20,133,90,191,170,27,234,62,145,126,149,61,181,244,20,191,207,155,107,63,155,69,125,191,15,198,68,63,149,80,165,190,4,166,94,190,217,174,49,63,3,173,119,191,80,37,117,63,104,213,42,191,3,255,57,62,248,230,182,62,132,159,74,191,217,118,126,63,117,203,103,191,167,64,13,63,30,152,21,189,250,148,250,190,161,62,95,63,71,212,127,191,226,128,85,63,99,82,217,190,3,254,223,189,225,117,28,63,174,27,111,191,218,189,123,63,100,169,62,191,186,129,147,62,124,128,129,62,152,75,56,191,28,224,121,63,225,73,114,191,156,193,35,63,121,24,21,190,225,62,200,190,194,51,80,63,43,81,127,191,237,171,99,63,89,92,5,191,243,4,53,63,237,171,99,191,181,244,20,63,121,24,21,190,149,80,165,190,152,75,56,63,80,37,117,191,218,189,123,63,132,159,74,191,99,82,217,62,30,152,21,61,250,148,250,190,226,128,85,63,217,118,126,191,174,27,111,63,104,213,42,191,124,128,129,62,4,166,94,62,156,193,35,191,207,155,107,63,43,81,127,191,20,133,90,63,89,92,5,191,145,126,149,61,225,62,200,62,15,198,68,191,28,224,121,63,3,173,119,191,100,169,62,63,248,230,182,190,3,254,223,189,167,64,13,63,161,62,95,191,71,212,127,63,117,203,103,191,225,117,28,63,3,255,57,190,186,129,147,190,217,174,49,63,225,73,114,191,155,69,125,63,194,51,80,191,170,27,234,62,243,4,53,63,207,155,107,191,217,174,49,63,248,230,182,190,30,152,21,189,99,82,217,62,100,169,62,191,225,73,114,63,43,81,127,191,237,171,99,63,156,193,35,191,186,129,147,62,3,254,223,61,250,148,250,190,132,159,74,63,3,173,119,191,155,69,125,63,20,133,90,191,181,244,20,63,4,166,94,190,3,255,57,190,167,64,13,63,226,128,85,191,218,189,123,63,28,224,121,191,194,51,80,63,89,92,5,191,121,24,21,62,124,128,129,62,225,117,28,191,161,62,95,63,217,118,126,191,80,37,117,63,15,198,68,191,170,27,234,62,145,126,149,189,149,80,165,190,104,213,42,63,117,203,103,191,71,212,127,63,174,27,111,191,152,75,56,63,225,62,200,190,243,4,53,63,225,73,114,191,132,159,74,63,167,64,13,191,124,128,129,62,145,126,149,61,225,62,200,190,104,213,42,63,161,62,95,191,218,189,123,63,155,69,125,191,237,171,99,63,217,174,49,191,99,82,217,62,3,254,223,189,4,166,94,190,89,92,5,63,15,198,68,191,174,27,111,63,71,212,127,191,80,37,117,63,194,51,80,191,181,244,20,63,186,129,147,190,30,152,21,189,248,230,182,62,156,193,35,191,20,133,90,63,28,224,121,191,217,118,126,63,117,203,103,191,152,75,56,63,170,27,234,190,121,24,21,62,3,255,57,62,250,148,250,190,100,169,62,63,207,155,107,191,43,81,127,63,3,173,119,191,226,128,85,63,225,117,28,191,149,80,165,62,243,4,53,63,3,173,119,191,161,62,95,63,152,75,56,191,89,92,5,63,186,129,147,190,30,152,21,61,4,166,94,62,170,27,234,190,104,213,42,63,226,128,85,191,225,73,114,63,43,81,127,191,218,189,123,63,117,203,103,191,15,198,68,63,181,244,20,191,248,230,182,62,3,254,223,189,121,24,21,190,225,62,200,62,225,117,28,191,132,159,74,63,207,155,107,191,155,69,125,63,217,118,126,191,174,27,111,63,194,51,80,191,156,193,35,63,99,82,217,190,3,255,57,62,145,126,149,61,149,80,165,190,167,64,13,63,100,169,62,191,237,171,99,63,28,224,121,191,71,212,127,63,80,37,117,191,20,133,90,63,217,174,49,191,250,148,250,62,124,128,129,190,243,4,53,63,218,189,123,191,174,27,111,63,20,133,90,191,100,169,62,63,225,117,28,191,170,27,234,62,186,129,147,190,3,254,223,61,145,126,149,61,124,128,129,190,99,82,217,62,181,244,20,191,152,75,56,63,226,128,85,191,207,155,107,63,28,224,121,191,71,212,127,63,155,69,125,191,225,73,114,63,161,62,95,191,15,198,68,63,156,193,35,191,250,148,250,62,149,80,165,190,121,24,21,62,30,152,21,61,4,166,94,190,225,62,200,62,167,64,13,191,217,174,49,63,194,51,80,191,117,203,103,63,3,173,119,191,43,81,127,63,217,118,126,191,80,37,117,63,237,171,99,191,132,159,74,63,104,213,42,191,89,92,5,63,248,230,182,190,3,255,57,62,243,4,53,63,217,118,126,191,28,224,121,63,225,73,114,191,117,203,103,63,20,133,90,191,132,159,74,63,152,75,56,191,156,193,35,63,167,64,13,191,170,27,234,62,248,230,182,190,124,128,129,62,121,24,21,190,30,152,21,61,145,126,149,61,3,255,57,190,186,129,147,62,225,62,200,190,250,148,250,62,181,244,20,191,104,213,42,63,100,169,62,191,194,51,80,63,161,62,95,191,207,155,107,63,80,37,117,191,218,189,123,63,43,81,127,191,71,212,127,63,155,69,125,191,3,173,119,63,174,27,111,191,237,171,99,63,226,128,85,191,15,198,68,63,217,174,49,191,225,117,28,63,89,92,5,191,99,82,217,62,149,80,165,190,4,166,94,62,3,254,223,189,243,4,53,63,71,212,127,191,43,81,127,63,217,118,126,191,155,69,125,63,218,189,123,191,28,224,121,63,3,173,119,191,80,37,117,63,225,73,114,191,174,27,111,63,207,155,107,191,117,203,103,63,237,171,99,191,161,62,95,63,20,133,90,191,226,128,85,63,194,51,80,191,132,159,74,63,15,198,68,191,100,169,62,63,152,75,56,191,217,174,49,63,104,213,42,191,156,193,35,63,225,117,28,191,181,244,20,63,167,64,13,191,89,92,5,63,250,148,250,190,170,27,234,62,99,82,217,190,225,62,200,62,248,230,182,190,149,80,165,62,186,129,147,190,124,128,129,62,4,166,94,190,3,255,57,62,121,24,21,190,3,254,223,61,145,126,149,189,30,152,21,61,243,4,53,63,62,214,127,63,6,89,127,63,128,136,126,63,240,100,125,63,182,238,123,63,76,38,122,63,70,12,120,63,85,161,117,63,65,230,114,63,240,219,111,63,94,131,108,63,164,221,104,63,243,235,100,63,146,175,96,63,229,41,92,63,100,92,87,63,162,72,82,63,69,240,76,63,13,85,71,63,206,120,65,63,112,93,59,63,243,4,53,63,104,113,46,63,244,164,39,63,207,161,32,63,67,106,25,63,170,0,18,63,112,103,10,63,15,161,2,63,32,96,245,62,21,46,229,62,71,177,212,62,21,239,195,62,248,236,178,62,124,176,161,62,64,63,144,62,234,61,125,62,183,170,89,62,129,208,53,62,251,186,17,62,212,235,218,61,71,26,146,61,32,50,18,61,243,4,53,63,128,136,126,63,76,38,122,63,65,230,114,63,164,221,104,63,229,41,92,63,69,240,76,63,112,93,59,63,244,164,39,63,170,0,18,63,32,96,245,62,21,239,195,62,64,63,144,62,129,208,53,62,71,26,146,61,32,50,18,189,251,186,17,190,234,61,125,190,248,236,178,190,21,46,229,190,112,103,10,191,207,161,32,191,243,4,53,191,13,85,71,191,100,92,87,191,243,235,100,191,240,219,111,191,70,12,120,191,240,100,125,191,62,214,127,191,6,89,127,191,182,238,123,191,85,161,117,191,94,131,108,191,146,175,96,191,162,72,82,191,206,120,65,191,104,113,46,191,67,106,25,191,15,161,2,191,71,177,212,190,124,176,161,190,183,170,89,190,212,235,218,189,243,4,53,63,182,238,123,63,240,219,111,63,229,41,92,63,206,120,65,63,207,161,32,63,32,96,245,62,124,176,161,62,251,186,17,62,32,50,18,189,183,170,89,190,21,239,195,190,112,103,10,191,104,113,46,191,69,240,76,191,243,235,100,191,85,161,117,191,128,136,126,191,6,89,127,191,70,12,120,191,164,221,104,191,162,72,82,191,243,4,53,191,170,0,18,191,71,177,212,190,234,61,125,190,71,26,146,189,212,235,218,61,64,63,144,62,21,46,229,62,67,106,25,63,112,93,59,63,100,92,87,63,94,131,108,63,76,38,122,63,62,214,127,63,240,100,125,63,65,230,114,63,146,175,96,63,13,85,71,63,244,164,39,63,15,161,2,63,248,236,178,62,129,208,53,62,243,4,53,63,70,12,120,63,146,175,96,63,112,93,59,63,112,103,10,63,124,176,161,62,71,26,146,61,129,208,53,190,71,177,212,190,207,161,32,191,69,240,76,191,94,131,108,191,240,100,125,191,128,136,126,191,240,219,111,191,162,72,82,191,244,164,39,191,21,46,229,190,183,170,89,190,32,50,18,61,64,63,144,62,15,161,2,63,243,4,53,63,229,41,92,63,85,161,117,63,62,214,127,63,76,38,122,63,243,235,100,63,206,120,65,63,170,0,18,63,248,236,178,62,212,235,218,61,251,186,17,190,21,239,195,190,67,106,25,191,13,85,71,191,164,221,104,191,182,238,123,191,6,89,127,191,65,230,114,191,100,92,87,191,104,113,46,191,32,96,245,190,234,61,125,190,243,4,53,63,65,230,114,63,69,240,76,63,170,0,18,63,64,63,144,62,32,50,18,189,248,236,178,190,207,161,32,191,100,92,87,191,70,12,120,191,6,89,127,191,94,131,108,191,206,120,65,191,15,161,2,191,183,170,89,190,212,235,218,61,71,177,212,62,104,113,46,63,146,175,96,63,182,238,123,63,240,100,125,63,243,235,100,63,243,4,53,63,21,46,229,62,251,186,17,62,129,208,53,190,32,96,245,190,112,93,59,191,164,221,104,191,128,136,126,191,76,38,122,191,229,41,92,191,244,164,39,191,21,239,195,190,71,26,146,189,234,61,125,62,112,103,10,63,13,85,71,63,240,219,111,63,62,214,127,63,85,161,117,63,162,72,82,63,67,106,25,63,124,176,161,62,243,4,53,63,94,131,108,63,243,4,53,63,21,239,195,62,50,49,141,36,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,202,201,83,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,126,125,176,37,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,88,215,30,38,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,243,4,53,63,243,235,100,63,67,106,25,63,129,208,53,62,64,63,144,190,104,113,46,191,240,219,111,191,128,136,126,191,100,92,87,191,15,161,2,191,71,26,146,189,21,239,195,62,206,120,65,63,70,12,120,63,76,38,122,63,13,85,71,63,71,177,212,62,32,50,18,189,32,96,245,190,162,72,82,191,240,100,125,191,65,230,114,191,243,4,53,191,124,176,161,190,251,186,17,62,170,0,18,63,146,175,96,63,62,214,127,63,164,221,104,63,207,161,32,63,183,170,89,62,234,61,125,190,244,164,39,191,94,131,108,191,6,89,127,191,229,41,92,191,112,103,10,191,212,235,218,189,248,236,178,62,112,93,59,63,85,161,117,63,182,238,123,63,69,240,76,63,21,46,229,62,243,4,53,63,229,41,92,63,32,96,245,62,32,50,18,189,112,103,10,191,243,235,100,191,6,89,127,191,162,72,82,191,71,177,212,190,212,235,218,61,67,106,25,63,94,131,108,63,240,100,125,63,13,85,71,63,248,236,178,62,129,208,53,190,244,164,39,191,65,230,114,191,76,38,122,191,112,93,59,191,64,63,144,190,234,61,125,62,243,4,53,63,70,12,120,63,85,161,117,63,104,113,46,63,183,170,89,62,124,176,161,190,206,120,65,191,182,238,123,191,240,219,111,191,207,161,32,191,251,186,17,190,21,239,195,62,69,240,76,63,128,136,126,63,164,221,104,63,170,0,18,63,71,26,146,61,21,46,229,190,100,92,87,191,62,214,127,191,146,175,96,191,15,161,2,191,243,4,53,63,162,72,82,63,248,236,178,62,234,61,125,190,206,120,65,191,128,136,126,191,146,175,96,191,21,46,229,190,251,186,17,62,104,113,46,63,76,38,122,63,94,131,108,63,112,103,10,63,32,50,18,189,67,106,25,191,65,230,114,191,85,161,117,191,207,161,32,191,71,26,146,189,15,161,2,63,164,221,104,63,182,238,123,63,243,4,53,63,129,208,53,62,71,177,212,190,229,41,92,191,6,89,127,191,13,85,71,191,64,63,144,190,124,176,161,62,69,240,76,63,62,214,127,63,100,92,87,63,21,239,195,62,183,170,89,190,112,93,59,191,240,100,125,191,243,235,100,191,32,96,245,190,212,235,218,61,244,164,39,63,70,12,120,63,240,219,111,63,170,0,18,63,243,4,53,63,13,85,71,63,183,170,89,62,21,46,229,190,164,221,104,191,70,12,120,191,67,106,25,191,32,50,18,61,244,164,39,63,182,238,123,63,146,175,96,63,21,239,195,62,64,63,144,190,162,72,82,191,6,89,127,191,112,93,59,191,251,186,17,190,15,161,2,63,240,219,111,63,65,230,114,63,112,103,10,63,212,235,218,189,243,4,53,191,128,136,126,191,100,92,87,191,124,176,161,190,248,236,178,62,229,41,92,63,240,100,125,63,104,113,46,63,71,26,146,61,170,0,18,191,85,161,117,191,94,131,108,191,32,96,245,190,129,208,53,62,206,120,65,63,62,214,127,63,69,240,76,63,234,61,125,62,71,177,212,190,243,235,100,191,76,38,122,191,207,161,32,191,243,4,53,63,112,93,59,63,71,26,146,61,207,161,32,191,240,100,125,191,162,72,82,191,183,170,89,190,15,161,2,63,85,161,117,63,243,235,100,63,248,236,178,62,21,239,195,190,164,221,104,191,65,230,114,191,32,96,245,190,234,61,125,62,100,92,87,63,182,238,123,63,67,106,25,63,212,235,218,189,206,120,65,191,62,214,127,191,243,4,53,191,32,50,18,189,244,164,39,63,128,136,126,63,69,240,76,63,129,208,53,62,112,103,10,191,70,12,120,191,146,175,96,191,124,176,161,190,71,177,212,62,94,131,108,63,240,219,111,63,21,46,229,62,64,63,144,190,229,41,92,191,76,38,122,191,170,0,18,191,251,186,17,62,13,85,71,63,6,89,127,63,104,113,46,63,243,4,53,63,104,113,46,63,71,26,146,189,13,85,71,191,240,100,125,191,170,0,18,191,183,170,89,62,229,41,92,63,85,161,117,63,21,46,229,62,248,236,178,190,94,131,108,191,164,221,104,191,124,176,161,190,32,96,245,62,70,12,120,63,100,92,87,63,129,208,53,62,67,106,25,191,128,136,126,191,206,120,65,191,32,50,18,189,243,4,53,63,62,214,127,63,244,164,39,63,212,235,218,189,69,240,76,191,182,238,123,191,112,103,10,191,234,61,125,62,146,175,96,63,65,230,114,63,71,177,212,62,21,239,195,190,240,219,111,191,243,235,100,191,64,63,144,190,15,161,2,63,76,38,122,63,162,72,82,63,251,186,17,62,207,161,32,191,6,89,127,191,112,93,59,191,243,4,53,63,207,161,32,63,183,170,89,190,243,235,100,191,164,221,104,191,234,61,125,190,67,106,25,63,62,214,127,63,244,164,39,63,129,208,53,190,146,175,96,191,94,131,108,191,64,63,144,190,170,0,18,63,6,89,127,63,104,113,46,63,251,186,17,190,229,41,92,191,240,219,111,191,124,176,161,190,112,103,10,63,128,136,126,63,243,4,53,63,212,235,218,189,100,92,87,191,65,230,114,191,248,236,178,190,15,161,2,63,240,100,125,63,112,93,59,63,71,26,146,189,162,72,82,191,85,161,117,191,21,239,195,190,32,96,245,62,182,238,123,63,206,120,65,63,32,50,18,189,69,240,76,191,70,12,120,191,71,177,212,190,21,46,229,62,76,38,122,63,13,85,71,63,243,4,53,63,170,0,18,63,248,236,178,190,70,12,120,191,206,120,65,191,212,235,218,61,146,175,96,63,243,235,100,63,251,186,17,62,112,93,59,191,76,38,122,191,21,239,195,190,112,103,10,63,62,214,127,63,67,106,25,63,124,176,161,190,85,161,117,191,13,85,71,191,71,26,146,61,229,41,92,63,164,221,104,63,129,208,53,62,243,4,53,191,182,238,123,191,71,177,212,190,15,161,2,63,6,89,127,63,207,161,32,63,64,63,144,190,65,230,114,191,69,240,76,191,32,50,18,61,100,92,87,63,94,131,108,63,183,170,89,62,104,113,46,191,240,100,125,191,21,46,229,190,32,96,245,62,128,136,126,63,244,164,39,63,234,61,125,190,240,219,111,191,162,72,82,191,243,4,53,63,15,161,2,63,32,96,245,190,62,214,127,191,112,103,10,191,21,46,229,62,6,89,127,63,170,0,18,63,71,177,212,190,128,136,126,191,67,106,25,191,21,239,195,62,240,100,125,63,207,161,32,63,248,236,178,190,182,238,123,191,244,164,39,191,124,176,161,62,76,38,122,63,104,113,46,63,64,63,144,190,70,12,120,191,243,4,53,191,234,61,125,62,85,161,117,63,112,93,59,63,183,170,89,190,65,230,114,191,206,120,65,191,129,208,53,62,240,219,111,63,13,85,71,63,251,186,17,190,94,131,108,191,69,240,76,191,212,235,218,61,164,221,104,63,162,72,82,63,71,26,146,189,243,235,100,191,100,92,87,191,32,50,18,61,146,175,96,63,229,41,92,63,243,4,53,63,21,46,229,62,67,106,25,191,182,238,123,191,64,63,144,190,112,93,59,63,240,219,111,63,212,235,218,61,100,92,87,191,229,41,92,191,71,26,146,61,94,131,108,63,206,120,65,63,234,61,125,190,76,38,122,191,207,161,32,191,71,177,212,62,62,214,127,63,32,96,245,62,170,0,18,191,240,100,125,191,124,176,161,190,243,4,53,63,65,230,114,63,251,186,17,62,162,72,82,191,146,175,96,191,32,50,18,61,164,221,104,63,13,85,71,63,183,170,89,190,70,12,120,191,244,164,39,191,21,239,195,62,6,89,127,63,15,161,2,63,112,103,10,191,128,136,126,191,248,236,178,190,104,113,46,63,85,161,117,63,129,208,53,62,69,240,76,191,243,235,100,191,243,4,53,63,21,239,195,62,243,4,53,191,94,131,108,191,202,201,83,165,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,88,215,30,38,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,222,94,13,166,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,130,33,119,167,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,243,4,53,63,124,176,161,62,69,240,76,191,162,72,82,191,64,63,144,62,62,214,127,63,248,236,178,62,13,85,71,191,100,92,87,191,234,61,125,62,6,89,127,63,21,239,195,62,206,120,65,191,229,41,92,191,183,170,89,62,128,136,126,63,71,177,212,62,112,93,59,191,146,175,96,191,129,208,53,62,240,100,125,63,21,46,229,62,243,4,53,191,243,235,100,191,251,186,17,62,182,238,123,63,32,96,245,62,104,113,46,191,164,221,104,191,212,235,218,61,76,38,122,63,15,161,2,63,244,164,39,191,94,131,108,191,71,26,146,61,70,12,120,63,112,103,10,63,207,161,32,191,240,219,111,191,32,50,18,61,85,161,117,63,170,0,18,63,67,106,25,191,65,230,114,191,243,4,53,63,234,61,125,62,146,175,96,191,104,113,46,191,112,103,10,63,65,230,114,63,71,26,146,189,182,238,123,191,71,177,212,190,13,85,71,63,69,240,76,63,21,239,195,190,240,100,125,191,212,235,218,189,240,219,111,63,170,0,18,63,244,164,39,191,243,235,100,191,183,170,89,62,62,214,127,63,64,63,144,62,229,41,92,191,243,4,53,191,15,161,2,63,85,161,117,63,32,50,18,189,76,38,122,191,21,46,229,190,206,120,65,63,162,72,82,63,248,236,178,190,128,136,126,191,251,186,17,190,94,131,108,63,67,106,25,63,207,161,32,191,164,221,104,191,129,208,53,62,6,89,127,63,124,176,161,62,100,92,87,191,112,93,59,191,32,96,245,62,70,12,120,63,243,4,53,63,129,208,53,62,240,219,111,191,15,161,2,191,206,120,65,63,13,85,71,63,32,96,245,190,65,230,114,191,251,186,17,62,62,214,127,63,183,170,89,62,94,131,108,191,112,103,10,191,112,93,59,63,69,240,76,63,21,46,229,190,85,161,117,191,212,235,218,61,6,89,127,63,234,61,125,62,164,221,104,191,170,0,18,191,243,4,53,63,162,72,82,63,71,177,212,190,70,12,120,191,71,26,146,61,128,136,126,63,64,63,144,62,243,235,100,191,67,106,25,191,104,113,46,63,100,92,87,63,21,239,195,190,76,38,122,191,32,50,18,61,240,100,125,63,124,176,161,62,146,175,96,191,207,161,32,191,244,164,39,63,229,41,92,63,248,236,178,190,182,238,123,191,243,4,53,63,212,235,218,61,76,38,122,191,124,176,161,190,164,221,104,63,15,161,2,63,69,240,76,191,104,113,46,191,244,164,39,63,162,72,82,63,32,96,245,190,94,131,108,191,64,63,144,62,182,238,123,63,71,26,146,189,62,214,127,191,251,186,17,190,70,12,120,63,248,236,178,62,243,235,100,191,112,103,10,191,13,85,71,63,243,4,53,63,207,161,32,191,100,92,87,191,21,46,229,62,240,219,111,63,234,61,125,190,240,100,125,191,32,50,18,61,6,89,127,63,129,208,53,62,85,161,117,191,21,239,195,190,146,175,96,63,170,0,18,63,206,120,65,191,112,93,59,191,67,106,25,63,229,41,92,63,71,177,212,190,65,230,114,191,183,170,89,62,128,136,126,63,243,4,53,63,32,50,18,61,6,89,127,191,212,235,218,189,240,100,125,63,129,208,53,62,76,38,122,191,234,61,125,190,85,161,117,63,124,176,161,62,240,219,111,191,21,239,195,190,164,221,104,63,21,46,229,62,146,175,96,191,15,161,2,191,100,92,87,63,170,0,18,63,69,240,76,191,207,161,32,191,206,120,65,63,104,113,46,63,243,4,53,191,112,93,59,191,244,164,39,63,13,85,71,63,67,106,25,191,162,72,82,191,112,103,10,63,229,41,92,63,32,96,245,190,243,235,100,191,71,177,212,62,94,131,108,63,248,236,178,190,65,230,114,191,64,63,144,62,70,12,120,63,183,170,89,190,182,238,123,191,251,186,17,62,128,136,126,63,71,26,146,189,62,214,127,191,243,4,53,63,32,50,18,189,6,89,127,191,212,235,218,61,240,100,125,63,129,208,53,190,76,38,122,191,234,61,125,62,85,161,117,63,124,176,161,190,240,219,111,191,21,239,195,62,164,221,104,63,21,46,229,190,146,175,96,191,15,161,2,63,100,92,87,63,170,0,18,191,69,240,76,191,207,161,32,63,206,120,65,63,104,113,46,191,243,4,53,191,112,93,59,63,244,164,39,63,13,85,71,191,67,106,25,191,162,72,82,63,112,103,10,63,229,41,92,191,32,96,245,190,243,235,100,63,71,177,212,62,94,131,108,191,248,236,178,190,65,230,114,63,64,63,144,62,70,12,120,191,183,170,89,190,182,238,123,63,251,186,17,62,128,136,126,191,71,26,146,189,62,214,127,63,243,4,53,63,212,235,218,189,76,38,122,191,124,176,161,62,164,221,104,63,15,161,2,191,69,240,76,191,104,113,46,63,244,164,39,63,162,72,82,191,32,96,245,190,94,131,108,63,64,63,144,62,182,238,123,191,71,26,146,189,62,214,127,63,251,186,17,190,70,12,120,191,248,236,178,62,243,235,100,63,112,103,10,191,13,85,71,191,243,4,53,63,207,161,32,63,100,92,87,191,21,46,229,190,240,219,111,63,234,61,125,62,240,100,125,191,32,50,18,189,6,89,127,63,129,208,53,190,85,161,117,191,21,239,195,62,146,175,96,63,170,0,18,191,206,120,65,191,112,93,59,63,67,106,25,63,229,41,92,191,71,177,212,190,65,230,114,63,183,170,89,62,128,136,126,191,243,4,53,63,129,208,53,190,240,219,111,191,15,161,2,63,206,120,65,63,13,85,71,191,32,96,245,190,65,230,114,63,251,186,17,62,62,214,127,191,183,170,89,62,94,131,108,63,112,103,10,191,112,93,59,191,69,240,76,63,21,46,229,62,85,161,117,191,212,235,218,189,6,89,127,63,234,61,125,190,164,221,104,191,170,0,18,63,243,4,53,63,162,72,82,191,71,177,212,190,70,12,120,63,71,26,146,61,128,136,126,191,64,63,144,62,243,235,100,63,67,106,25,191,104,113,46,191,100,92,87,63,21,239,195,62,76,38,122,191,32,50,18,189,240,100,125,63,124,176,161,190,146,175,96,191,207,161,32,63,244,164,39,63,229,41,92,191,248,236,178,190,182,238,123,63,243,4,53,63,234,61,125,190,146,175,96,191,104,113,46,63,112,103,10,63,65,230,114,191,71,26,146,189,182,238,123,63,71,177,212,190,13,85,71,191,69,240,76,63,21,239,195,62,240,100,125,191,212,235,218,61,240,219,111,63,170,0,18,191,244,164,39,191,243,235,100,63,183,170,89,62,62,214,127,191,64,63,144,62,229,41,92,63,243,4,53,191,15,161,2,191,85,161,117,63,32,50,18,61,76,38,122,191,21,46,229,62,206,120,65,63,162,72,82,191,248,236,178,190,128,136,126,63,251,186,17,190,94,131,108,191,67,106,25,63,207,161,32,63,164,221,104,191,129,208,53,190,6,89,127,63,124,176,161,190,100,92,87,191,112,93,59,63,32,96,245,62,70,12,120,191,243,4,53,63,124,176,161,190,69,240,76,191,162,72,82,63,64,63,144,62,62,214,127,191,248,236,178,62,13,85,71,63,100,92,87,191,234,61,125,190,6,89,127,63,21,239,195,190,206,120,65,191,229,41,92,63,183,170,89,62,128,136,126,191,71,177,212,62,112,93,59,63,146,175,96,191,129,208,53,190,240,100,125,63,21,46,229,190,243,4,53,191,243,235,100,63,251,186,17,62,182,238,123,191,32,96,245,62,104,113,46,63,164,221,104,191,212,235,218,189,76,38,122,63,15,161,2,191,244,164,39,191,94,131,108,63,71,26,146,61,70,12,120,191,112,103,10,63,207,161,32,63,240,219,111,191,32,50,18,189,85,161,117,63,170,0,18,191,67,106,25,191,65,230,114,63,243,4,53,63,21,239,195,190,243,4,53,191,94,131,108,63,126,125,176,37,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,138,140,141,165,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,231,54,141,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,91,26,141,38,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,243,4,53,63,21,46,229,190,67,106,25,191,182,238,123,63,64,63,144,190,112,93,59,191,240,219,111,63,212,235,218,189,100,92,87,191,229,41,92,63,71,26,146,61,94,131,108,191,206,120,65,63,234,61,125,62,76,38,122,191,207,161,32,63,71,177,212,62,62,214,127,191,32,96,245,62,170,0,18,63,240,100,125,191,124,176,161,62,243,4,53,63,65,230,114,191,251,186,17,62,162,72,82,63,146,175,96,191,32,50,18,189,164,221,104,63,13,85,71,191,183,170,89,190,70,12,120,63,244,164,39,191,21,239,195,190,6,89,127,63,15,161,2,191,112,103,10,191,128,136,126,63,248,236,178,190,104,113,46,191,85,161,117,63,129,208,53,190,69,240,76,191,243,235,100,63,243,4,53,63,15,161,2,191,32,96,245,190,62,214,127,63,112,103,10,191,21,46,229,190,6,89,127,63,170,0,18,191,71,177,212,190,128,136,126,63,67,106,25,191,21,239,195,190,240,100,125,63,207,161,32,191,248,236,178,190,182,238,123,63,244,164,39,191,124,176,161,190,76,38,122,63,104,113,46,191,64,63,144,190,70,12,120,63,243,4,53,191,234,61,125,190,85,161,117,63,112,93,59,191,183,170,89,190,65,230,114,63,206,120,65,191,129,208,53,190,240,219,111,63,13,85,71,191,251,186,17,190,94,131,108,63,69,240,76,191,212,235,218,189,164,221,104,63,162,72,82,191,71,26,146,189,243,235,100,63,100,92,87,191,32,50,18,189,146,175,96,63,229,41,92,191,243,4,53,63,170,0,18,191,248,236,178,190,70,12,120,63,206,120,65,191,212,235,218,189,146,175,96,63,243,235,100,191,251,186,17,62,112,93,59,63,76,38,122,191,21,239,195,62,112,103,10,63,62,214,127,191,67,106,25,63,124,176,161,62,85,161,117,191,13,85,71,63,71,26,146,61,229,41,92,191,164,221,104,63,129,208,53,190,243,4,53,191,182,238,123,63,71,177,212,190,15,161,2,191,6,89,127,63,207,161,32,191,64,63,144,190,65,230,114,63,69,240,76,191,32,50,18,189,100,92,87,63,94,131,108,191,183,170,89,62,104,113,46,63,240,100,125,191,21,46,229,62,32,96,245,62,128,136,126,191,244,164,39,63,234,61,125,62,240,219,111,191,162,72,82,63,243,4,53,63,207,161,32,191,183,170,89,190,243,235,100,63,164,221,104,191,234,61,125,62,67,106,25,63,62,214,127,191,244,164,39,63,129,208,53,62,146,175,96,191,94,131,108,63,64,63,144,190,170,0,18,191,6,89,127,63,104,113,46,191,251,186,17,190,229,41,92,63,240,219,111,191,124,176,161,62,112,103,10,63,128,136,126,191,243,4,53,63,212,235,218,61,100,92,87,191,65,230,114,63,248,236,178,190,15,161,2,191,240,100,125,63,112,93,59,191,71,26,146,189,162,72,82,63,85,161,117,191,21,239,195,62,32,96,245,62,182,238,123,191,206,120,65,63,32,50,18,61,69,240,76,191,70,12,120,63,71,177,212,190,21,46,229,190,76,38,122,63,13,85,71,191,243,4,53,63,104,113,46,191,71,26,146,189,13,85,71,63,240,100,125,191,170,0,18,63,183,170,89,62,229,41,92,191,85,161,117,63,21,46,229,190,248,236,178,190,94,131,108,63,164,221,104,191,124,176,161,62,32,96,245,62,70,12,120,191,100,92,87,63,129,208,53,190,67,106,25,191,128,136,126,63,206,120,65,191,32,50,18,61,243,4,53,63,62,214,127,191,244,164,39,63,212,235,218,61,69,240,76,191,182,238,123,63,112,103,10,191,234,61,125,190,146,175,96,63,65,230,114,191,71,177,212,62,21,239,195,62,240,219,111,191,243,235,100,63,64,63,144,190,15,161,2,191,76,38,122,63,162,72,82,191,251,186,17,62,207,161,32,63,6,89,127,191,112,93,59,63,243,4,53,63,112,93,59,191,71,26,146,61,207,161,32,63,240,100,125,191,162,72,82,63,183,170,89,190,15,161,2,191,85,161,117,63,243,235,100,191,248,236,178,62,21,239,195,62,164,221,104,191,65,230,114,63,32,96,245,190,234,61,125,190,100,92,87,63,182,238,123,191,67,106,25,63,212,235,218,61,206,120,65,191,62,214,127,63,243,4,53,191,32,50,18,61,244,164,39,63,128,136,126,191,69,240,76,63,129,208,53,190,112,103,10,191,70,12,120,63,146,175,96,191,124,176,161,62,71,177,212,62,94,131,108,191,240,219,111,63,21,46,229,190,64,63,144,190,229,41,92,63,76,38,122,191,170,0,18,63,251,186,17,62,13,85,71,191,6,89,127,63,104,113,46,191,243,4,53,63,13,85,71,191,183,170,89,62,21,46,229,62,164,221,104,191,70,12,120,63,67,106,25,191,32,50,18,189,244,164,39,63,182,238,123,191,146,175,96,63,21,239,195,190,64,63,144,190,162,72,82,63,6,89,127,191,112,93,59,63,251,186,17,190,15,161,2,191,240,219,111,63,65,230,114,191,112,103,10,63,212,235,218,61,243,4,53,191,128,136,126,63,100,92,87,191,124,176,161,62,248,236,178,62,229,41,92,191,240,100,125,63,104,113,46,191,71,26,146,61,170,0,18,63,85,161,117,191,94,131,108,63,32,96,245,190,129,208,53,190,206,120,65,63,62,214,127,191,69,240,76,63,234,61,125,190,71,177,212,190,243,235,100,63,76,38,122,191,207,161,32,63,243,4,53,63,162,72,82,191,248,236,178,62,234,61,125,62,206,120,65,191,128,136,126,63,146,175,96,191,21,46,229,62,251,186,17,62,104,113,46,191,76,38,122,63,94,131,108,191,112,103,10,63,32,50,18,61,67,106,25,191,65,230,114,63,85,161,117,191,207,161,32,63,71,26,146,189,15,161,2,191,164,221,104,63,182,238,123,191,243,4,53,63,129,208,53,190,71,177,212,190,229,41,92,63,6,89,127,191,13,85,71,63,64,63,144,190,124,176,161,190,69,240,76,63,62,214,127,191,100,92,87,63,21,239,195,190,183,170,89,190,112,93,59,63,240,100,125,191,243,235,100,63,32,96,245,190,212,235,218,189,244,164,39,63,70,12,120,191,240,219,111,63,170,0,18,191,243,4,53,63,229,41,92,191,32,96,245,62,32,50,18,61,112,103,10,191,243,235,100,63,6,89,127,191,162,72,82,63,71,177,212,190,212,235,218,189,67,106,25,63,94,131,108,191,240,100,125,63,13,85,71,191,248,236,178,62,129,208,53,62,244,164,39,191,65,230,114,63,76,38,122,191,112,93,59,63,64,63,144,190,234,61,125,190,243,4,53,63,70,12,120,191,85,161,117,63,104,113,46,191,183,170,89,62,124,176,161,62,206,120,65,191,182,238,123,63,240,219,111,191,207,161,32,63,251,186,17,190,21,239,195,190,69,240,76,63,128,136,126,191,164,221,104,63,170,0,18,191,71,26,146,61,21,46,229,62,100,92,87,191,62,214,127,63,146,175,96,191,15,161,2,63,243,4,53,63,243,235,100,191,67,106,25,63,129,208,53,190,64,63,144,190,104,113,46,63,240,219,111,191,128,136,126,63,100,92,87,191,15,161,2,63,71,26,146,189,21,239,195,190,206,120,65,63,70,12,120,191,76,38,122,63,13,85,71,191,71,177,212,62,32,50,18,61,32,96,245,190,162,72,82,63,240,100,125,191,65,230,114,63,243,4,53,191,124,176,161,62,251,186,17,62,170,0,18,191,146,175,96,63,62,214,127,191,164,221,104,63,207,161,32,191,183,170,89,62,234,61,125,62,244,164,39,191,94,131,108,63,6,89,127,191,229,41,92,63,112,103,10,191,212,235,218,61,248,236,178,62,112,93,59,191,85,161,117,63,182,238,123,191,69,240,76,63,21,46,229,190,243,4,53,63,94,131,108,191,243,4,53,63,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,222,94,13,166,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,231,54,141,167,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,213,12,22,40,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,77,14,212,38,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,243,4,53,63,65,230,114,191,69,240,76,63,170,0,18,191,64,63,144,62,32,50,18,61,248,236,178,190,207,161,32,63,100,92,87,191,70,12,120,63,6,89,127,191,94,131,108,63,206,120,65,191,15,161,2,63,183,170,89,190,212,235,218,189,71,177,212,62,104,113,46,191,146,175,96,63,182,238,123,191,240,100,125,63,243,235,100,191,243,4,53,63,21,46,229,190,251,186,17,62,129,208,53,62,32,96,245,190,112,93,59,63,164,221,104,191,128,136,126,63,76,38,122,191,229,41,92,63,244,164,39,191,21,239,195,62,71,26,146,189,234,61,125,190,112,103,10,63,13,85,71,191,240,219,111,63,62,214,127,191,85,161,117,63,162,72,82,191,67,106,25,63,124,176,161,190,243,4,53,63,70,12,120,191,146,175,96,63,112,93,59,191,112,103,10,63,124,176,161,190,71,26,146,61,129,208,53,62,71,177,212,190,207,161,32,63,69,240,76,191,94,131,108,63,240,100,125,191,128,136,126,63,240,219,111,191,162,72,82,63,244,164,39,191,21,46,229,62,183,170,89,190,32,50,18,189,64,63,144,62,15,161,2,191,243,4,53,63,229,41,92,191,85,161,117,63,62,214,127,191,76,38,122,63,243,235,100,191,206,120,65,63,170,0,18,191,248,236,178,62,212,235,218,189,251,186,17,190,21,239,195,62,67,106,25,191,13,85,71,63,164,221,104,191,182,238,123,63,6,89,127,191,65,230,114,63,100,92,87,191,104,113,46,63,32,96,245,190,234,61,125,62,243,4,53,63,182,238,123,191,240,219,111,63,229,41,92,191,206,120,65,63,207,161,32,191,32,96,245,62,124,176,161,190,251,186,17,62,32,50,18,61,183,170,89,190,21,239,195,62,112,103,10,191,104,113,46,63,69,240,76,191,243,235,100,63,85,161,117,191,128,136,126,63,6,89,127,191,70,12,120,63,164,221,104,191,162,72,82,63,243,4,53,191,170,0,18,63,71,177,212,190,234,61,125,62,71,26,146,189,212,235,218,189,64,63,144,62,21,46,229,190,67,106,25,63,112,93,59,191,100,92,87,63,94,131,108,191,76,38,122,63,62,214,127,191,240,100,125,63,65,230,114,191,146,175,96,63,13,85,71,191,244,164,39,63,15,161,2,191,248,236,178,62,129,208,53,190,243,4,53,63,128,136,126,191,76,38,122,63,65,230,114,191,164,221,104,63,229,41,92,191,69,240,76,63,112,93,59,191,244,164,39,63,170,0,18,191,32,96,245,62,21,239,195,190,64,63,144,62,129,208,53,190,71,26,146,61,32,50,18,61,251,186,17,190,234,61,125,62,248,236,178,190,21,46,229,62,112,103,10,191,207,161,32,63,243,4,53,191,13,85,71,63,100,92,87,191,243,235,100,63,240,219,111,191,70,12,120,63,240,100,125,191,62,214,127,63,6,89,127,191,182,238,123,63,85,161,117,191,94,131,108,63,146,175,96,191,162,72,82,63,206,120,65,191,104,113,46,63,67,106,25,191,15,161,2,63,71,177,212,190,124,176,161,62,183,170,89,190,212,235,218,61,243,4,53,63,62,214,127,191,6,89,127,63,128,136,126,191,240,100,125,63,182,238,123,191,76,38,122,63,70,12,120,191,85,161,117,63,65,230,114,191,240,219,111,63,94,131,108,191,164,221,104,63,243,235,100,191,146,175,96,63,229,41,92,191,100,92,87,63,162,72,82,191,69,240,76,63,13,85,71,191,206,120,65,63,112,93,59,191,243,4,53,63,104,113,46,191,244,164,39,63,207,161,32,191,67,106,25,63,170,0,18,191,112,103,10,63,15,161,2,191,32,96,245,62,21,46,229,190,71,177,212,62,21,239,195,190,248,236,178,62,124,176,161,190,64,63,144,62,234,61,125,190,183,170,89,62,129,208,53,190,251,186,17,62,212,235,218,189,71,26,146,61,32,50,18,189,243,4,53,63,20,216,127,63,92,96,127,63,253,152,126,63,53,130,125,63,92,28,124,63,226,103,122,63,77,101,120,63,63,21,118,63,113,120,115,63,178,143,112,63,236,91,109,63,29,222,105,63,94,23,102,63,218,8,98,63,215,179,93,63,174,25,89,63,206,59,84,63,189,27,79,63,19,187,73,63,125,27,68,63,189,62,62,63,167,38,56,63,34,213,49,63,37,76,43,63,187,141,36,63,254,155,29,63,24,121,22,63,68,39,15,63,202,168,7,63,0,0,0,63,148,94,240,62,47,114,224,62,201,63,208,62,111,204,191,62,68,29,175,62,122,55,158,62,87,32,141,62,96,186,119,62,205,230,84,62,212,208,49,62,101,131,14,62,5,19,214,61,123,220,142,61,198,242,14,61,243,4,53,63,253,152,126,63,226,103,122,63,113,120,115,63,29,222,105,63,215,179,93,63,189,27,79,63,189,62,62,63,37,76,43,63,24,121,22,63,0,0,0,63,201,63,208,62,122,55,158,62,205,230,84,62,5,19,214,61,50,49,141,36,5,19,214,189,205,230,84,190,122,55,158,190,201,63,208,190,0,0,0,191,24,121,22,191,37,76,43,191,189,62,62,191,189,27,79,191,215,179,93,191,29,222,105,191,113,120,115,191,226,103,122,191,253,152,126,191,0,0,128,191,253,152,126,191,226,103,122,191,113,120,115,191,29,222,105,191,215,179,93,191,189,27,79,191,189,62,62,191,37,76,43,191,24,121,22,191,0,0,0,191,201,63,208,190,122,55,158,190,205,230,84,190,5,19,214,189,243,4,53,63,92,28,124,63,178,143,112,63,215,179,93,63,125,27,68,63,187,141,36,63,0,0,0,63,68,29,175,62,212,208,49,62,50,49,141,36,212,208,49,190,68,29,175,190,0,0,0,191,187,141,36,191,125,27,68,191,215,179,93,191,178,143,112,191,92,28,124,191,0,0,128,191,92,28,124,191,178,143,112,191,215,179,93,191,125,27,68,191,187,141,36,191,0,0,0,191,68,29,175,190,212,208,49,190,202,201,83,165,212,208,49,62,68,29,175,62,0,0,0,63,187,141,36,63,125,27,68,63,215,179,93,63,178,143,112,63,92,28,124,63,0,0,128,63,92,28,124,63,178,143,112,63,215,179,93,63,125,27,68,63,187,141,36,63,0,0,0,63,68,29,175,62,212,208,49,62,243,4,53,63,77,101,120,63,218,8,98,63,189,62,62,63,68,39,15,63,68,29,175,62,5,19,214,61,101,131,14,190,111,204,191,190,24,121,22,191,125,27,68,191,94,23,102,191,226,103,122,191,20,216,127,191,63,21,118,191,215,179,93,191,167,38,56,191,202,168,7,191,122,55,158,190,123,220,142,189,212,208,49,62,201,63,208,62,254,155,29,63,19,187,73,63,29,222,105,63,92,28,124,63,92,96,127,63,113,120,115,63,174,25,89,63,34,213,49,63,0,0,0,63,87,32,141,62,198,242,14,61,205,230,84,190,47,114,224,190,187,141,36,191,189,27,79,191,236,91,109,191,53,130,125,191,253,152,126,191,178,143,112,191,206,59,84,191,37,76,43,191,148,94,240,190,96,186,119,190,243,4,53,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,50,49,141,36,122,55,158,190,24,121,22,191,189,27,79,191,113,120,115,191,0,0,128,191,113,120,115,191,189,27,79,191,24,121,22,191,122,55,158,190,202,201,83,165,122,55,158,62,24,121,22,63,189,27,79,63,113,120,115,63,0,0,128,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,126,125,176,37,122,55,158,190,24,121,22,191,189,27,79,191,113,120,115,191,0,0,128,191,113,120,115,191,189,27,79,191,24,121,22,191,122,55,158,190,23,22,247,165,122,55,158,62,24,121,22,63,189,27,79,63,113,120,115,63,0,0,128,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,243,4,53,63,236,91,109,63,167,38,56,63,201,63,208,62,198,242,14,61,68,29,175,190,37,76,43,191,94,23,102,191,92,96,127,191,113,120,115,191,125,27,68,191,148,94,240,190,5,19,214,189,87,32,141,62,254,155,29,63,215,179,93,63,53,130,125,63,77,101,120,63,189,27,79,63,202,168,7,63,212,208,49,62,205,230,84,190,68,39,15,191,206,59,84,191,226,103,122,191,92,28,124,191,174,25,89,191,24,121,22,191,96,186,119,190,101,131,14,62,0,0,0,63,19,187,73,63,63,21,118,63,253,152,126,63,218,8,98,63,187,141,36,63,122,55,158,62,123,220,142,189,47,114,224,190,189,62,62,191,178,143,112,191,20,216,127,191,29,222,105,191,34,213,49,191,111,204,191,190,243,4,53,63,94,23,102,63,254,155,29,63,205,230,84,62,96,186,119,190,187,141,36,191,29,222,105,191,20,216,127,191,218,8,98,191,24,121,22,191,212,208,49,190,87,32,141,62,37,76,43,63,236,91,109,63,92,96,127,63,215,179,93,63,68,39,15,63,101,131,14,62,122,55,158,190,34,213,49,191,178,143,112,191,253,152,126,191,174,25,89,191,202,168,7,191,5,19,214,189,68,29,175,62,167,38,56,63,113,120,115,63,53,130,125,63,206,59,84,63,0,0,0,63,123,220,142,61,111,204,191,190,189,62,62,191,63,21,118,191,92,28,124,191,189,27,79,191,148,94,240,190,198,242,14,189,201,63,208,62,125,27,68,63,77,101,120,63,226,103,122,63,19,187,73,63,47,114,224,62,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,202,201,83,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,95,31,172,38,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,23,22,247,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,214,181,39,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,233,136,48,167,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,252,91,57,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,243,4,53,63,206,59,84,63,111,204,191,62,205,230,84,190,167,38,56,191,92,28,124,191,29,222,105,191,202,168,7,191,198,242,14,61,24,121,22,63,178,143,112,63,77,101,120,63,37,76,43,63,101,131,14,62,47,114,224,190,215,179,93,191,92,96,127,191,19,187,73,191,122,55,158,190,87,32,141,62,125,27,68,63,253,152,126,63,218,8,98,63,148,94,240,62,5,19,214,189,187,141,36,191,63,21,118,191,113,120,115,191,254,155,29,191,123,220,142,189,0,0,0,63,94,23,102,63,53,130,125,63,189,62,62,63,96,186,119,62,68,29,175,190,189,27,79,191,20,216,127,191,174,25,89,191,201,63,208,190,212,208,49,62,34,213,49,63,226,103,122,63,236,91,109,63,68,39,15,63,243,4,53,63,19,187,73,63,96,186,119,62,201,63,208,190,218,8,98,191,92,28,124,191,37,76,43,191,123,220,142,189,68,39,15,63,113,120,115,63,178,143,112,63,202,168,7,63,5,19,214,189,34,213,49,191,53,130,125,191,215,179,93,191,111,204,191,190,87,32,141,62,189,27,79,63,20,216,127,63,125,27,68,63,205,230,84,62,47,114,224,190,94,23,102,191,226,103,122,191,187,141,36,191,198,242,14,189,24,121,22,63,63,21,118,63,236,91,109,63,0,0,0,63,101,131,14,190,167,38,56,191,253,152,126,191,174,25,89,191,68,29,175,190,122,55,158,62,206,59,84,63,92,96,127,63,189,62,62,63,212,208,49,62,148,94,240,190,29,222,105,191,77,101,120,191,254,155,29,191,243,4,53,63,189,62,62,63,5,19,214,61,24,121,22,191,226,103,122,191,215,179,93,191,122,55,158,190,201,63,208,62,29,222,105,63,113,120,115,63,0,0,0,63,205,230,84,190,189,27,79,191,253,152,126,191,37,76,43,191,23,22,247,165,37,76,43,63,253,152,126,63,189,27,79,63,205,230,84,62,0,0,0,191,113,120,115,191,29,222,105,191,201,63,208,190,122,55,158,62,215,179,93,63,226,103,122,63,24,121,22,63,5,19,214,189,189,62,62,191,0,0,128,191,189,62,62,191,5,19,214,189,24,121,22,63,226,103,122,63,215,179,93,63,122,55,158,62,201,63,208,190,29,222,105,191,113,120,115,191,0,0,0,191,205,230,84,62,189,27,79,63,253,152,126,63,37,76,43,63,243,4,53,63,34,213,49,63,198,242,14,189,189,62,62,191,92,96,127,191,187,141,36,191,5,19,214,61,19,187,73,63,53,130,125,63,24,121,22,63,212,208,49,190,206,59,84,191,226,103,122,191,202,168,7,191,96,186,119,62,215,179,93,63,63,21,118,63,148,94,240,62,122,55,158,190,94,23,102,191,178,143,112,191,201,63,208,190,111,204,191,62,236,91,109,63,29,222,105,63,68,29,175,62,47,114,224,190,113,120,115,191,218,8,98,191,87,32,141,190,0,0,0,63,77,101,120,63,174,25,89,63,205,230,84,62,68,39,15,191,92,28,124,191,189,27,79,191,101,131,14,190,254,155,29,63,253,152,126,63,125,27,68,63,123,220,142,61,37,76,43,191,20,216,127,191,167,38,56,191,243,4,53,63,187,141,36,63,212,208,49,190,215,179,93,191,178,143,112,191,68,29,175,190,0,0,0,63,92,28,124,63,125,27,68,63,126,125,176,37,125,27,68,191,92,28,124,191,0,0,0,191,68,29,175,62,178,143,112,63,215,179,93,63,212,208,49,62,187,141,36,191,0,0,128,191,187,141,36,191,212,208,49,62,215,179,93,63,178,143,112,63,68,29,175,62,0,0,0,191,92,28,124,191,125,27,68,191,195,67,119,38,125,27,68,63,92,28,124,63,0,0,0,63,68,29,175,190,178,143,112,191,215,179,93,191,212,208,49,190,187,141,36,63,0,0,128,63,187,141,36,63,212,208,49,190,215,179,93,191,178,143,112,191,68,29,175,190,0,0,0,63,92,28,124,63,125,27,68,63,243,4,53,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,202,201,83,165,189,27,79,63,113,120,115,63,122,55,158,62,24,121,22,191,0,0,128,191,24,121,22,191,122,55,158,62,113,120,115,63,189,27,79,63,88,215,30,38,189,27,79,191,113,120,115,191,122,55,158,190,24,121,22,63,0,0,128,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,15,47,66,167,189,27,79,63,113,120,115,63,122,55,158,62,24,121,22,191,0,0,128,191,24,121,22,191,122,55,158,62,113,120,115,63,189,27,79,63,222,94,13,166,189,27,79,191,113,120,115,191,122,55,158,190,24,121,22,63,0,0,128,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,243,4,53,63,202,168,7,63,47,114,224,190,253,152,126,191,254,155,29,191,68,29,175,62,226,103,122,63,34,213,49,63,96,186,119,190,113,120,115,191,125,27,68,191,101,131,14,62,29,222,105,63,206,59,84,63,198,242,14,189,215,179,93,191,218,8,98,191,123,220,142,189,189,27,79,63,236,91,109,63,212,208,49,62,189,62,62,191,63,21,118,191,87,32,141,190,37,76,43,63,92,28,124,63,111,204,191,62,24,121,22,191,92,96,127,191,148,94,240,190,0,0,0,63,20,216,127,63,68,39,15,63,201,63,208,190,53,130,125,191,187,141,36,191,122,55,158,62,77,101,120,63,167,38,56,63,205,230,84,190,178,143,112,191,19,187,73,191,5,19,214,61,94,23,102,63,174,25,89,63,243,4,53,63,148,94,240,62,68,39,15,191,253,152,126,191,111,204,191,190,187,141,36,63,226,103,122,63,87,32,141,62,167,38,56,191,113,120,115,191,212,208,49,190,19,187,73,63,29,222,105,63,123,220,142,61,174,25,89,191,215,179,93,191,198,242,14,61,94,23,102,63,189,27,79,63,101,131,14,190,178,143,112,191,189,62,62,191,96,186,119,62,77,101,120,63,37,76,43,63,68,29,175,190,53,130,125,191,24,121,22,191,47,114,224,62,20,216,127,63,0,0,0,63,202,168,7,191,92,96,127,191,201,63,208,190,254,155,29,63,92,28,124,63,122,55,158,62,34,213,49,191,63,21,118,191,205,230,84,190,125,27,68,63,236,91,109,63,5,19,214,61,206,59,84,191,218,8,98,191,243,4,53,63,201,63,208,62,37,76,43,191,113,120,115,191,5,19,214,189,215,179,93,63,189,27,79,63,205,230,84,190,226,103,122,191,24,121,22,191,0,0,0,63,253,152,126,63,122,55,158,62,189,62,62,191,29,222,105,191,233,136,48,167,29,222,105,63,189,62,62,63,122,55,158,190,253,152,126,191,0,0,0,191,24,121,22,63,226,103,122,63,205,230,84,62,189,27,79,191,215,179,93,191,5,19,214,61,113,120,115,63,37,76,43,63,201,63,208,190,0,0,128,191,201,63,208,190,37,76,43,63,113,120,115,63,5,19,214,61,215,179,93,191,189,27,79,191,205,230,84,62,226,103,122,63,24,121,22,63,0,0,0,191,253,152,126,191,122,55,158,190,189,62,62,63,29,222,105,63,243,4,53,63,68,29,175,62,125,27,68,191,215,179,93,191,212,208,49,62,92,28,124,63,0,0,0,63,187,141,36,191,178,143,112,191,23,22,247,165,178,143,112,63,187,141,36,63,0,0,0,191,92,28,124,191,212,208,49,190,215,179,93,63,125,27,68,63,68,29,175,190,0,0,128,191,68,29,175,190,125,27,68,63,215,179,93,63,212,208,49,190,92,28,124,191,0,0,0,191,187,141,36,63,178,143,112,63,222,94,13,166,178,143,112,191,187,141,36,191,0,0,0,63,92,28,124,63,212,208,49,62,215,179,93,191,125,27,68,191,68,29,175,62,0,0,128,63,68,29,175,62,125,27,68,191,215,179,93,191,212,208,49,62,92,28,124,63,0,0,0,63,187,141,36,191,178,143,112,191,243,4,53,63,87,32,141,62,174,25,89,191,189,62,62,191,47,114,224,62,92,28,124,63,5,19,214,61,236,91,109,191,254,155,29,191,24,121,22,63,178,143,112,63,123,220,142,189,226,103,122,191,148,94,240,190,167,38,56,63,215,179,93,63,96,186,119,190,20,216,127,191,122,55,158,190,206,59,84,63,125,27,68,63,201,63,208,190,53,130,125,191,101,131,14,190,29,222,105,63,187,141,36,63,68,39,15,191,113,120,115,191,198,242,14,61,77,101,120,63,0,0,0,63,34,213,49,191,218,8,98,191,205,230,84,62,92,96,127,63,68,29,175,62,189,27,79,191,19,187,73,191,111,204,191,62,253,152,126,63,212,208,49,62,94,23,102,191,37,76,43,191,202,168,7,63,63,21,118,63,243,4,53,63,205,230,84,62,29,222,105,191,24,121,22,191,37,76,43,63,215,179,93,63,122,55,158,190,253,152,126,191,5,19,214,189,113,120,115,63,0,0,0,63,189,62,62,191,189,27,79,191,201,63,208,62,226,103,122,63,8,72,141,166,226,103,122,191,201,63,208,190,189,27,79,63,189,62,62,63,0,0,0,191,113,120,115,191,5,19,214,61,253,152,126,63,122,55,158,62,215,179,93,191,37,76,43,191,24,121,22,63,29,222,105,63,205,230,84,190,0,0,128,191,205,230,84,190,29,222,105,63,24,121,22,63,37,76,43,191,215,179,93,191,122,55,158,62,253,152,126,63,5,19,214,61,113,120,115,191,0,0,0,191,189,62,62,63,189,27,79,63,201,63,208,190,226,103,122,191,243,4,53,63,101,131,14,62,63,21,118,191,201,63,208,190,174,25,89,63,187,141,36,63,37,76,43,191,206,59,84,191,47,114,224,62,113,120,115,63,212,208,49,190,20,216,127,191,5,19,214,189,77,101,120,63,111,204,191,62,215,179,93,191,254,155,29,191,34,213,49,63,189,27,79,63,148,94,240,190,178,143,112,191,205,230,84,62,92,96,127,63,123,220,142,61,226,103,122,191,68,29,175,190,218,8,98,63,24,121,22,63,167,38,56,191,19,187,73,191,0,0,0,63,236,91,109,63,96,186,119,190,253,152,126,191,198,242,14,189,92,28,124,63,122,55,158,62,94,23,102,191,68,39,15,191,189,62,62,63,125,27,68,63,202,168,7,191,29,222,105,191,87,32,141,62,53,130,125,63,243,4,53,63,123,220,142,61,53,130,125,191,205,230,84,190,63,21,118,63,68,29,175,62,29,222,105,191,148,94,240,190,174,25,89,63,24,121,22,63,125,27,68,191,34,213,49,191,37,76,43,63,19,187,73,63,68,39,15,191,215,179,93,191,47,114,224,62,236,91,109,63,122,55,158,190,77,101,120,191,212,208,49,62,253,152,126,63,198,242,14,189,20,216,127,191,5,19,214,189,92,28,124,63,96,186,119,62,113,120,115,191,111,204,191,190,94,23,102,63,0,0,0,63,206,59,84,191,254,155,29,191,189,62,62,63,167,38,56,63,187,141,36,191,189,27,79,191,202,168,7,63,218,8,98,63,201,63,208,190,178,143,112,191,87,32,141,62,226,103,122,63,101,131,14,190,92,96,127,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,243,4,53,63,123,220,142,189,53,130,125,191,205,230,84,62,63,21,118,63,68,29,175,190,29,222,105,191,148,94,240,62,174,25,89,63,24,121,22,191,125,27,68,191,34,213,49,63,37,76,43,63,19,187,73,191,68,39,15,191,215,179,93,63,47,114,224,62,236,91,109,191,122,55,158,190,77,101,120,63,212,208,49,62,253,152,126,191,198,242,14,189,20,216,127,63,5,19,214,189,92,28,124,191,96,186,119,62,113,120,115,63,111,204,191,190,94,23,102,191,0,0,0,63,206,59,84,63,254,155,29,191,189,62,62,191,167,38,56,63,187,141,36,63,189,27,79,191,202,168,7,191,218,8,98,63,201,63,208,62,178,143,112,191,87,32,141,190,226,103,122,63,101,131,14,62,92,96,127,191,243,4,53,63,101,131,14,190,63,21,118,191,201,63,208,62,174,25,89,63,187,141,36,191,37,76,43,191,206,59,84,63,47,114,224,62,113,120,115,191,212,208,49,190,20,216,127,63,5,19,214,189,77,101,120,191,111,204,191,62,215,179,93,63,254,155,29,191,34,213,49,191,189,27,79,63,148,94,240,62,178,143,112,191,205,230,84,190,92,96,127,63,123,220,142,189,226,103,122,191,68,29,175,62,218,8,98,63,24,121,22,191,167,38,56,191,19,187,73,63,0,0,0,63,236,91,109,191,96,186,119,190,253,152,126,63,198,242,14,189,92,28,124,191,122,55,158,62,94,23,102,63,68,39,15,191,189,62,62,191,125,27,68,63,202,168,7,63,29,222,105,191,87,32,141,190,53,130,125,63,243,4,53,63,205,230,84,190,29,222,105,191,24,121,22,63,37,76,43,63,215,179,93,191,122,55,158,190,253,152,126,63,5,19,214,189,113,120,115,191,0,0,0,63,189,62,62,63,189,27,79,191,201,63,208,190,226,103,122,63,34,2,75,39,226,103,122,191,201,63,208,62,189,27,79,63,189,62,62,191,0,0,0,191,113,120,115,63,5,19,214,61,253,152,126,191,122,55,158,62,215,179,93,63,37,76,43,191,24,121,22,191,29,222,105,63,205,230,84,62,0,0,128,191,205,230,84,62,29,222,105,63,24,121,22,191,37,76,43,191,215,179,93,63,122,55,158,62,253,152,126,191,5,19,214,61,113,120,115,63,0,0,0,191,189,62,62,191,189,27,79,63,201,63,208,62,226,103,122,191,243,4,53,63,87,32,141,190,174,25,89,191,189,62,62,63,47,114,224,62,92,28,124,191,5,19,214,61,236,91,109,63,254,155,29,191,24,121,22,191,178,143,112,63,123,220,142,61,226,103,122,191,148,94,240,62,167,38,56,63,215,179,93,191,96,186,119,190,20,216,127,63,122,55,158,190,206,59,84,191,125,27,68,63,201,63,208,62,53,130,125,191,101,131,14,62,29,222,105,63,187,141,36,191,68,39,15,191,113,120,115,63,198,242,14,61,77,101,120,191,0,0,0,63,34,213,49,63,218,8,98,191,205,230,84,190,92,96,127,63,68,29,175,190,189,27,79,191,19,187,73,63,111,204,191,62,253,152,126,191,212,208,49,62,94,23,102,63,37,76,43,191,202,168,7,191,63,21,118,63,243,4,53,63,68,29,175,190,125,27,68,191,215,179,93,63,212,208,49,62,92,28,124,191,0,0,0,63,187,141,36,63,178,143,112,191,46,238,158,38,178,143,112,63,187,141,36,191,0,0,0,191,92,28,124,63,212,208,49,190,215,179,93,191,125,27,68,63,68,29,175,62,0,0,128,191,68,29,175,62,125,27,68,63,215,179,93,191,212,208,49,190,92,28,124,63,0,0,0,191,187,141,36,191,178,143,112,63,217,213,140,37,178,143,112,191,187,141,36,63,0,0,0,63,92,28,124,191,212,208,49,62,215,179,93,63,125,27,68,191,68,29,175,190,0,0,128,63,68,29,175,190,125,27,68,191,215,179,93,63,212,208,49,62,92,28,124,191,0,0,0,63,187,141,36,63,178,143,112,191,243,4,53,63,201,63,208,190,37,76,43,191,113,120,115,63,5,19,214,189,215,179,93,191,189,27,79,63,205,230,84,62,226,103,122,191,24,121,22,63,0,0,0,63,253,152,126,191,122,55,158,62,189,62,62,63,29,222,105,191,53,213,83,167,29,222,105,63,189,62,62,191,122,55,158,190,253,152,126,63,0,0,0,191,24,121,22,191,226,103,122,63,205,230,84,190,189,27,79,191,215,179,93,63,5,19,214,61,113,120,115,191,37,76,43,63,201,63,208,62,0,0,128,191,201,63,208,62,37,76,43,63,113,120,115,191,5,19,214,61,215,179,93,63,189,27,79,191,205,230,84,190,226,103,122,63,24,121,22,191,0,0,0,191,253,152,126,63,122,55,158,190,189,62,62,191,29,222,105,63,243,4,53,63,148,94,240,190,68,39,15,191,253,152,126,63,111,204,191,190,187,141,36,191,226,103,122,63,87,32,141,190,167,38,56,191,113,120,115,63,212,208,49,190,19,187,73,191,29,222,105,63,123,220,142,189,174,25,89,191,215,179,93,63,198,242,14,61,94,23,102,191,189,27,79,63,101,131,14,62,178,143,112,191,189,62,62,63,96,186,119,62,77,101,120,191,37,76,43,63,68,29,175,62,53,130,125,191,24,121,22,63,47,114,224,62,20,216,127,191,0,0,0,63,202,168,7,63,92,96,127,191,201,63,208,62,254,155,29,63,92,28,124,191,122,55,158,62,34,213,49,63,63,21,118,191,205,230,84,62,125,27,68,63,236,91,109,191,5,19,214,61,206,59,84,63,218,8,98,191,243,4,53,63,202,168,7,191,47,114,224,190,253,152,126,63,254,155,29,191,68,29,175,190,226,103,122,63,34,213,49,191,96,186,119,190,113,120,115,63,125,27,68,191,101,131,14,190,29,222,105,63,206,59,84,191,198,242,14,189,215,179,93,63,218,8,98,191,123,220,142,61,189,27,79,63,236,91,109,191,212,208,49,62,189,62,62,63,63,21,118,191,87,32,141,62,37,76,43,63,92,28,124,191,111,204,191,62,24,121,22,63,92,96,127,191,148,94,240,62,0,0,0,63,20,216,127,191,68,39,15,63,201,63,208,62,53,130,125,191,187,141,36,63,122,55,158,62,77,101,120,191,167,38,56,63,205,230,84,62,178,143,112,191,19,187,73,63,5,19,214,61,94,23,102,191,174,25,89,63,243,4,53,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,23,22,247,165,189,27,79,63,113,120,115,191,122,55,158,62,24,121,22,63,0,0,128,191,24,121,22,63,122,55,158,62,113,120,115,191,189,27,79,63,222,94,13,166,189,27,79,191,113,120,115,63,122,55,158,190,24,121,22,191,0,0,128,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,231,54,141,167,189,27,79,63,113,120,115,191,122,55,158,62,24,121,22,63,0,0,128,191,24,121,22,63,122,55,158,62,113,120,115,191,189,27,79,63,213,12,22,40,189,27,79,191,113,120,115,63,122,55,158,190,24,121,22,191,0,0,128,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,243,4,53,63,187,141,36,191,212,208,49,190,215,179,93,63,178,143,112,191,68,29,175,62,0,0,0,63,92,28,124,191,125,27,68,63,8,72,141,166,125,27,68,191,92,28,124,63,0,0,0,191,68,29,175,190,178,143,112,63,215,179,93,191,212,208,49,62,187,141,36,63,0,0,128,191,187,141,36,63,212,208,49,62,215,179,93,191,178,143,112,63,68,29,175,190,0,0,0,191,92,28,124,63,125,27,68,191,12,236,83,39,125,27,68,63,92,28,124,191,0,0,0,63,68,29,175,62,178,143,112,191,215,179,93,63,212,208,49,190,187,141,36,191,0,0,128,63,187,141,36,191,212,208,49,190,215,179,93,63,178,143,112,191,68,29,175,62,0,0,0,63,92,28,124,191,125,27,68,63,243,4,53,63,34,213,49,191,198,242,14,189,189,62,62,63,92,96,127,191,187,141,36,63,5,19,214,61,19,187,73,191,53,130,125,63,24,121,22,191,212,208,49,190,206,59,84,63,226,103,122,191,202,168,7,63,96,186,119,62,215,179,93,191,63,21,118,63,148,94,240,190,122,55,158,190,94,23,102,63,178,143,112,191,201,63,208,62,111,204,191,62,236,91,109,191,29,222,105,63,68,29,175,190,47,114,224,190,113,120,115,63,218,8,98,191,87,32,141,62,0,0,0,63,77,101,120,191,174,25,89,63,205,230,84,190,68,39,15,191,92,28,124,63,189,27,79,191,101,131,14,62,254,155,29,63,253,152,126,191,125,27,68,63,123,220,142,189,37,76,43,191,20,216,127,63,167,38,56,191,243,4,53,63,189,62,62,191,5,19,214,61,24,121,22,63,226,103,122,191,215,179,93,63,122,55,158,190,201,63,208,190,29,222,105,63,113,120,115,191,0,0,0,63,205,230,84,62,189,27,79,191,253,152,126,63,37,76,43,191,82,66,141,39,37,76,43,63,253,152,126,191,189,27,79,63,205,230,84,190,0,0,0,191,113,120,115,63,29,222,105,191,201,63,208,62,122,55,158,62,215,179,93,191,226,103,122,63,24,121,22,191,5,19,214,189,189,62,62,63,0,0,128,191,189,62,62,63,5,19,214,189,24,121,22,191,226,103,122,63,215,179,93,191,122,55,158,62,201,63,208,62,29,222,105,191,113,120,115,63,0,0,0,191,205,230,84,190,189,27,79,63,253,152,126,191,37,76,43,63,243,4,53,63,19,187,73,191,96,186,119,62,201,63,208,62,218,8,98,191,92,28,124,63,37,76,43,191,123,220,142,61,68,39,15,63,113,120,115,191,178,143,112,63,202,168,7,191,5,19,214,189,34,213,49,63,53,130,125,191,215,179,93,63,111,204,191,190,87,32,141,190,189,27,79,63,20,216,127,191,125,27,68,63,205,230,84,190,47,114,224,190,94,23,102,63,226,103,122,191,187,141,36,63,198,242,14,189,24,121,22,191,63,21,118,63,236,91,109,191,0,0,0,63,101,131,14,62,167,38,56,191,253,152,126,63,174,25,89,191,68,29,175,62,122,55,158,62,206,59,84,191,92,96,127,63,189,62,62,191,212,208,49,62,148,94,240,62,29,222,105,191,77,101,120,63,254,155,29,191,243,4,53,63,206,59,84,191,111,204,191,62,205,230,84,62,167,38,56,191,92,28,124,63,29,222,105,191,202,168,7,63,198,242,14,61,24,121,22,191,178,143,112,63,77,101,120,191,37,76,43,63,101,131,14,190,47,114,224,190,215,179,93,63,92,96,127,191,19,187,73,63,122,55,158,190,87,32,141,190,125,27,68,63,253,152,126,191,218,8,98,63,148,94,240,190,5,19,214,189,187,141,36,63,63,21,118,191,113,120,115,63,254,155,29,191,123,220,142,61,0,0,0,63,94,23,102,191,53,130,125,63,189,62,62,191,96,186,119,62,68,29,175,62,189,27,79,191,20,216,127,63,174,25,89,191,201,63,208,62,212,208,49,62,34,213,49,191,226,103,122,63,236,91,109,191,68,39,15,63,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,195,67,119,38,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,138,140,141,165,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,50,146,101,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,91,26,141,38,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,115,83,13,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,10,154,176,167,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,243,4,53,63,94,23,102,191,254,155,29,63,205,230,84,190,96,186,119,190,187,141,36,63,29,222,105,191,20,216,127,63,218,8,98,191,24,121,22,63,212,208,49,190,87,32,141,190,37,76,43,63,236,91,109,191,92,96,127,63,215,179,93,191,68,39,15,63,101,131,14,190,122,55,158,190,34,213,49,63,178,143,112,191,253,152,126,63,174,25,89,191,202,168,7,63,5,19,214,189,68,29,175,190,167,38,56,63,113,120,115,191,53,130,125,63,206,59,84,191,0,0,0,63,123,220,142,189,111,204,191,190,189,62,62,63,63,21,118,191,92,28,124,63,189,27,79,191,148,94,240,62,198,242,14,189,201,63,208,190,125,27,68,63,77,101,120,191,226,103,122,63,19,187,73,191,47,114,224,62,243,4,53,63,236,91,109,191,167,38,56,63,201,63,208,190,198,242,14,61,68,29,175,62,37,76,43,191,94,23,102,63,92,96,127,191,113,120,115,63,125,27,68,191,148,94,240,62,5,19,214,189,87,32,141,190,254,155,29,63,215,179,93,191,53,130,125,63,77,101,120,191,189,27,79,63,202,168,7,191,212,208,49,62,205,230,84,62,68,39,15,191,206,59,84,63,226,103,122,191,92,28,124,63,174,25,89,191,24,121,22,63,96,186,119,190,101,131,14,190,0,0,0,63,19,187,73,191,63,21,118,63,253,152,126,191,218,8,98,63,187,141,36,191,122,55,158,62,123,220,142,61,47,114,224,190,189,62,62,63,178,143,112,191,20,216,127,63,29,222,105,191,34,213,49,63,111,204,191,190,243,4,53,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,88,215,30,38,122,55,158,190,24,121,22,63,189,27,79,191,113,120,115,63,0,0,128,191,113,120,115,63,189,27,79,191,24,121,22,63,122,55,158,190,130,33,119,167,122,55,158,62,24,121,22,191,189,27,79,63,113,120,115,191,0,0,128,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,91,26,141,38,122,55,158,190,24,121,22,63,189,27,79,191,113,120,115,63,0,0,128,191,113,120,115,63,189,27,79,191,24,121,22,63,122,55,158,190,77,14,212,38,122,55,158,62,24,121,22,191,189,27,79,63,113,120,115,191,0,0,128,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,243,4,53,63,77,101,120,191,218,8,98,63,189,62,62,191,68,39,15,63,68,29,175,190,5,19,214,61,101,131,14,62,111,204,191,190,24,121,22,63,125,27,68,191,94,23,102,63,226,103,122,191,20,216,127,63,63,21,118,191,215,179,93,63,167,38,56,191,202,168,7,63,122,55,158,190,123,220,142,61,212,208,49,62,201,63,208,190,254,155,29,63,19,187,73,191,29,222,105,63,92,28,124,191,92,96,127,63,113,120,115,191,174,25,89,63,34,213,49,191,0,0,0,63,87,32,141,190,198,242,14,61,205,230,84,62,47,114,224,190,187,141,36,63,189,27,79,191,236,91,109,63,53,130,125,191,253,152,126,63,178,143,112,191,206,59,84,63,37,76,43,191,148,94,240,62,96,186,119,190,243,4,53,63,92,28,124,191,178,143,112,63,215,179,93,191,125,27,68,63,187,141,36,191,0,0,0,63,68,29,175,190,212,208,49,62,34,2,75,39,212,208,49,190,68,29,175,62,0,0,0,191,187,141,36,63,125,27,68,191,215,179,93,63,178,143,112,191,92,28,124,63,0,0,128,191,92,28,124,63,178,143,112,191,215,179,93,63,125,27,68,191,187,141,36,63,0,0,0,191,68,29,175,62,212,208,49,190,52,131,176,167,212,208,49,62,68,29,175,190,0,0,0,63,187,141,36,191,125,27,68,63,215,179,93,191,178,143,112,63,92,28,124,191,0,0,128,63,92,28,124,191,178,143,112,63,215,179,93,191,125,27,68,63,187,141,36,191,0,0,0,63,68,29,175,190,212,208,49,62,243,4,53,63,253,152,126,191,226,103,122,63,113,120,115,191,29,222,105,63,215,179,93,191,189,27,79,63,189,62,62,191,37,76,43,63,24,121,22,191,0,0,0,63,201,63,208,190,122,55,158,62,205,230,84,190,5,19,214,61,74,250,255,39,5,19,214,189,205,230,84,62,122,55,158,190,201,63,208,62,0,0,0,191,24,121,22,63,37,76,43,191,189,62,62,63,189,27,79,191,215,179,93,63,29,222,105,191,113,120,115,63,226,103,122,191,253,152,126,63,0,0,128,191,253,152,126,63,226,103,122,191,113,120,115,63,29,222,105,191,215,179,93,63,189,27,79,191,189,62,62,63,37,76,43,191,24,121,22,63,0,0,0,191,201,63,208,62,122,55,158,190,205,230,84,62,5,19,214,189,243,4,53,63,20,216,127,191,92,96,127,63,253,152,126,191,53,130,125,63,92,28,124,191,226,103,122,63,77,101,120,191,63,21,118,63,113,120,115,191,178,143,112,63,236,91,109,191,29,222,105,63,94,23,102,191,218,8,98,63,215,179,93,191,174,25,89,63,206,59,84,191,189,27,79,63,19,187,73,191,125,27,68,63,189,62,62,191,167,38,56,63,34,213,49,191,37,76,43,63,187,141,36,191,254,155,29,63,24,121,22,191,68,39,15,63,202,168,7,191,0,0,0,63,148,94,240,190,47,114,224,62,201,63,208,190,111,204,191,62,68,29,175,190,122,55,158,62,87,32,141,190,96,186,119,62,205,230,84,190,212,208,49,62,101,131,14,190,5,19,214,61,123,220,142,189,198,242,14,61,243,4,53,63,203,217,127,63,56,103,127,63,106,168,126,63,152,157,125,63,19,71,124,63,65,165,122,63,159,184,120,63,191,129,118,63,76,1,116,63,3,56,113,63,186,38,110,63,92,206,106,63,232,47,103,63,114,76,99,63,36,37,95,63,59,187,90,63,8,16,86,63,240,36,81,63,107,251,75,63,4,149,70,63,86,243,64,63,17,24,59,63,243,4,53,63,206,187,46,63,128,62,40,63,251,142,33,63,60,175,26,63,82,161,19,63,88,103,12,63,116,3,5,63,186,239,250,62,165,141,235,62,65,229,219,62,58,251,203,62,81,212,187,62,87,117,171,62,48,227,154,62,205,34,138,62,95,114,114,62,198,86,80,62,253,252,45,62,69,111,11,62,222,111,209,61,174,194,139,61,140,215,11,61,243,4,53,63,106,168,126,63,65,165,122,63,76,1,116,63,92,206,106,63,36,37,95,63,240,36,81,63,86,243,64,63,206,187,46,63,60,175,26,63,116,3,5,63,65,229,219,62,87,117,171,62,95,114,114,62,69,111,11,62,140,215,11,61,174,194,139,189,253,252,45,190,205,34,138,190,81,212,187,190,165,141,235,190,88,103,12,191,251,142,33,191,243,4,53,191,4,149,70,191,8,16,86,191,114,76,99,191,186,38,110,191,191,129,118,191,19,71,124,191,56,103,127,191,203,217,127,191,152,157,125,191,159,184,120,191,3,56,113,191,232,47,103,191,59,187,90,191,107,251,75,191,17,24,59,191,128,62,40,191,82,161,19,191,186,239,250,190,58,251,203,190,48,227,154,190,198,86,80,190,222,111,209,189,243,4,53,63,19,71,124,63,3,56,113,63,36,37,95,63,4,149,70,63,128,62,40,63,116,3,5,63,81,212,187,62,198,86,80,62,140,215,11,61,69,111,11,190,48,227,154,190,165,141,235,190,60,175,26,191,17,24,59,191,8,16,86,191,92,206,106,191,159,184,120,191,56,103,127,191,106,168,126,191,191,129,118,191,232,47,103,191,240,36,81,191,243,4,53,191,82,161,19,191,65,229,219,190,205,34,138,190,222,111,209,189,174,194,139,61,95,114,114,62,58,251,203,62,88,103,12,63,206,187,46,63,107,251,75,63,114,76,99,63,76,1,116,63,152,157,125,63,203,217,127,63,65,165,122,63,186,38,110,63,59,187,90,63,86,243,64,63,251,142,33,63,186,239,250,62,87,117,171,62,253,252,45,62,243,4,53,63,159,184,120,63,114,76,99,63,86,243,64,63,82,161,19,63,81,212,187,62,69,111,11,62,222,111,209,189,87,117,171,190,88,103,12,191,17,24,59,191,36,37,95,191,191,129,118,191,203,217,127,191,65,165,122,191,232,47,103,191,4,149,70,191,60,175,26,191,58,251,203,190,253,252,45,190,174,194,139,61,48,227,154,62,116,3,5,63,243,4,53,63,59,187,90,63,76,1,116,63,56,103,127,63,19,71,124,63,92,206,106,63,107,251,75,63,251,142,33,63,65,229,219,62,198,86,80,62,140,215,11,189,205,34,138,190,186,239,250,190,206,187,46,191,8,16,86,191,3,56,113,191,106,168,126,191,152,157,125,191,186,38,110,191,240,36,81,191,128,62,40,191,165,141,235,190,95,114,114,190,243,4,53,63,76,1,116,63,240,36,81,63,60,175,26,63,87,117,171,62,140,215,11,61,205,34,138,190,88,103,12,191,4,149,70,191,186,38,110,191,56,103,127,191,159,184,120,191,59,187,90,191,128,62,40,191,58,251,203,190,222,111,209,189,198,86,80,62,186,239,250,62,17,24,59,63,232,47,103,63,152,157,125,63,19,71,124,63,114,76,99,63,243,4,53,63,165,141,235,62,253,252,45,62,69,111,11,190,65,229,219,190,206,187,46,191,36,37,95,191,65,165,122,191,106,168,126,191,92,206,106,191,86,243,64,191,116,3,5,191,95,114,114,190,174,194,139,61,81,212,187,62,251,142,33,63,8,16,86,63,191,129,118,63,203,217,127,63,3,56,113,63,107,251,75,63,82,161,19,63,48,227,154,62,243,4,53,63,186,38,110,63,17,24,59,63,65,229,219,62,174,194,139,61,48,227,154,190,251,142,33,191,36,37,95,191,152,157,125,191,159,184,120,191,240,36,81,191,88,103,12,191,198,86,80,190,253,252,45,62,116,3,5,63,107,251,75,63,191,129,118,63,106,168,126,63,114,76,99,63,128,62,40,63,87,117,171,62,140,215,11,189,58,251,203,190,243,4,53,191,92,206,106,191,203,217,127,191,3,56,113,191,86,243,64,191,165,141,235,190,222,111,209,189,205,34,138,62,60,175,26,63,59,187,90,63,19,71,124,63,65,165,122,63,8,16,86,63,82,161,19,63,95,114,114,62,69,111,11,190,186,239,250,190,4,149,70,191,76,1,116,191,56,103,127,191,232,47,103,191,206,187,46,191,81,212,187,190,243,4,53,63,232,47,103,63,251,142,33,63,95,114,114,62,198,86,80,190,60,175,26,191,114,76,99,191,203,217,127,191,92,206,106,191,128,62,40,191,205,34,138,190,253,252,45,62,82,161,19,63,36,37,95,63,56,103,127,63,186,38,110,63,206,187,46,63,48,227,154,62,69,111,11,190,88,103,12,191,59,187,90,191,106,168,126,191,3,56,113,191,243,4,53,191,87,117,171,190,222,111,209,61,116,3,5,63,8,16,86,63,152,157,125,63,76,1,116,63,17,24,59,63,81,212,187,62,174,194,139,189,186,239,250,190,240,36,81,191,19,71,124,191,191,129,118,191,86,243,64,191,58,251,203,190,140,215,11,61,165,141,235,62,107,251,75,63,65,165,122,63,159,184,120,63,4,149,70,63,65,229,219,62,243,4,53,63,36,37,95,63,116,3,5,63,140,215,11,61,165,141,235,190,8,16,86,191,56,103,127,191,232,47,103,191,82,161,19,191,222,111,209,189,58,251,203,62,107,251,75,63,152,157,125,63,186,38,110,63,251,142,33,63,253,252,45,62,87,117,171,190,86,243,64,191,65,165,122,191,76,1,116,191,206,187,46,191,95,114,114,190,205,34,138,62,243,4,53,63,191,129,118,63,159,184,120,63,17,24,59,63,48,227,154,62,198,86,80,190,128,62,40,191,3,56,113,191,19,71,124,191,4,149,70,191,81,212,187,190,69,111,11,62,60,175,26,63,92,206,106,63,106,168,126,63,240,36,81,63,65,229,219,62,174,194,139,189,88,103,12,191,114,76,99,191,203,217,127,191,59,187,90,191,186,239,250,190,243,4,53,63,8,16,86,63,58,251,203,62,253,252,45,190,206,187,46,191,159,184,120,191,3,56,113,191,60,175,26,191,174,194,139,189,186,239,250,62,114,76,99,63,106,168,126,63,4,149,70,63,48,227,154,62,205,34,138,190,86,243,64,191,152,157,125,191,232,47,103,191,116,3,5,191,140,215,11,61,82,161,19,63,186,38,110,63,65,165,122,63,243,4,53,63,198,86,80,62,81,212,187,190,240,36,81,191,203,217,127,191,59,187,90,191,65,229,219,190,69,111,11,62,128,62,40,63,191,129,118,63,76,1,116,63,251,142,33,63,222,111,209,61,165,141,235,190,36,37,95,191,56,103,127,191,107,251,75,191,87,117,171,190,95,114,114,62,17,24,59,63,19,71,124,63,92,206,106,63,88,103,12,63,243,4,53,63,107,251,75,63,205,34,138,62,81,212,187,190,59,187,90,191,106,168,126,191,17,24,59,191,253,252,45,190,165,141,235,62,232,47,103,63,65,165,122,63,128,62,40,63,174,194,139,61,88,103,12,191,3,56,113,191,76,1,116,191,82,161,19,191,140,215,11,61,251,142,33,63,159,184,120,63,92,206,106,63,186,239,250,62,69,111,11,190,243,4,53,191,152,157,125,191,36,37,95,191,58,251,203,190,95,114,114,62,4,149,70,63,203,217,127,63,240,36,81,63,48,227,154,62,87,117,171,190,8,16,86,191,56,103,127,191,86,243,64,191,198,86,80,190,65,229,219,62,114,76,99,63,19,71,124,63,206,187,46,63,222,111,209,61,116,3,5,191,186,38,110,191,191,129,118,191,60,175,26,191,243,4,53,63,86,243,64,63,69,111,11,62,88,103,12,191,191,129,118,191,232,47,103,191,58,251,203,190,48,227,154,62,59,187,90,63,19,71,124,63,251,142,33,63,140,215,11,189,206,187,46,191,106,168,126,191,240,36,81,191,95,114,114,190,165,141,235,62,186,38,110,63,3,56,113,63,186,239,250,62,198,86,80,190,107,251,75,191,56,103,127,191,243,4,53,191,174,194,139,189,60,175,26,63,65,165,122,63,36,37,95,63,87,117,171,62,81,212,187,190,114,76,99,191,159,184,120,191,82,161,19,191,222,111,209,61,17,24,59,63,203,217,127,63,4,149,70,63,253,252,45,62,116,3,5,191,76,1,116,191,92,206,106,191,65,229,219,190,205,34,138,62,8,16,86,63,152,157,125,63,128,62,40,63,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,8,72,141,166,243,4,53,191,0,0,128,191,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,63,243,4,53,63,119,247,83,166,243,4,53,191,0,0,128,191,243,4,53,191,53,213,83,167,243,4,53,63,0,0,128,63,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,191,243,4,53,191,243,4,53,63,128,62,40,63,69,111,11,190,8,16,86,191,191,129,118,191,65,229,219,190,58,251,203,62,76,1,116,63,59,187,90,63,253,252,45,62,251,142,33,191,203,217,127,191,206,187,46,191,222,111,209,61,240,36,81,63,159,184,120,63,165,141,235,62,81,212,187,190,3,56,113,191,36,37,95,191,198,86,80,190,60,175,26,63,56,103,127,63,243,4,53,63,174,194,139,189,107,251,75,191,65,165,122,191,186,239,250,190,87,117,171,62,186,38,110,63,114,76,99,63,95,114,114,62,82,161,19,191,106,168,126,191,17,24,59,191,140,215,11,61,4,149,70,63,19,71,124,63,116,3,5,63,48,227,154,190,92,206,106,191,232,47,103,191,205,34,138,190,88,103,12,63,152,157,125,63,86,243,64,63,243,4,53,63,60,175,26,63,205,34,138,190,186,38,110,191,59,187,90,191,222,111,209,189,17,24,59,63,19,71,124,63,165,141,235,62,65,229,219,190,65,165,122,191,86,243,64,191,174,194,139,61,8,16,86,63,3,56,113,63,48,227,154,62,82,161,19,191,203,217,127,191,251,142,33,191,95,114,114,62,92,206,106,63,36,37,95,63,69,111,11,62,243,4,53,191,152,157,125,191,186,239,250,190,58,251,203,62,159,184,120,63,4,149,70,63,140,215,11,189,240,36,81,191,76,1,116,191,87,117,171,190,88,103,12,63,56,103,127,63,128,62,40,63,198,86,80,190,232,47,103,191,114,76,99,191,253,252,45,190,206,187,46,63,106,168,126,63,116,3,5,63,81,212,187,190,191,129,118,191,107,251,75,191,243,4,53,63,88,103,12,63,58,251,203,190,19,71,124,191,206,187,46,191,95,114,114,62,3,56,113,63,107,251,75,63,174,194,139,189,36,37,95,191,114,76,99,191,222,111,209,189,4,149,70,63,76,1,116,63,205,34,138,62,128,62,40,191,152,157,125,191,65,229,219,190,116,3,5,63,203,217,127,63,82,161,19,63,81,212,187,190,65,165,122,191,243,4,53,191,198,86,80,62,186,38,110,63,240,36,81,63,140,215,11,189,59,187,90,191,232,47,103,191,69,111,11,190,86,243,64,63,191,129,118,63,48,227,154,62,251,142,33,191,106,168,126,191,165,141,235,190,186,239,250,62,56,103,127,63,60,175,26,63,87,117,171,190,159,184,120,191,17,24,59,191,253,252,45,62,92,206,106,63,8,16,86,63,243,4,53,63,186,239,250,62,116,3,5,191,203,217,127,191,165,141,235,190,88,103,12,63,56,103,127,63,65,229,219,62,82,161,19,191,106,168,126,191,58,251,203,190,60,175,26,63,152,157,125,63,81,212,187,62,251,142,33,191,19,71,124,191,87,117,171,190,128,62,40,63,65,165,122,63,48,227,154,62,206,187,46,191,159,184,120,191,205,34,138,190,243,4,53,63,191,129,118,63,95,114,114,62,17,24,59,191,76,1,116,191,198,86,80,190,86,243,64,63,3,56,113,63,253,252,45,62,4,149,70,191,186,38,110,191,69,111,11,190,107,251,75,63,92,206,106,63,222,111,209,61,240,36,81,191,232,47,103,191,174,194,139,189,8,16,86,63,114,76,99,63,140,215,11,61,59,187,90,191,36,37,95,191,243,4,53,63,65,229,219,62,251,142,33,191,159,184,120,191,198,86,80,190,107,251,75,63,114,76,99,63,140,215,11,189,92,206,106,191,86,243,64,191,205,34,138,62,19,71,124,63,82,161,19,63,186,239,250,190,56,103,127,191,81,212,187,190,206,187,46,63,76,1,116,63,69,111,11,62,8,16,86,191,59,187,90,191,222,111,209,61,3,56,113,63,243,4,53,63,87,117,171,190,106,168,126,191,116,3,5,191,88,103,12,63,152,157,125,63,48,227,154,62,17,24,59,191,186,38,110,191,174,194,139,189,36,37,95,63,240,36,81,63,253,252,45,190,191,129,118,191,128,62,40,191,58,251,203,62,203,217,127,63,165,141,235,62,60,175,26,191,65,165,122,191,95,114,114,190,4,149,70,63,232,47,103,63,243,4,53,63,81,212,187,62,17,24,59,191,232,47,103,191,174,194,139,61,76,1,116,63,251,142,33,63,186,239,250,190,152,157,125,191,95,114,114,190,240,36,81,63,8,16,86,63,198,86,80,190,19,71,124,191,116,3,5,191,60,175,26,63,191,129,118,63,222,111,209,61,114,76,99,191,86,243,64,191,87,117,171,62,203,217,127,63,58,251,203,62,243,4,53,191,92,206,106,191,140,215,11,61,3,56,113,63,128,62,40,63,165,141,235,190,106,168,126,191,205,34,138,190,107,251,75,63,59,187,90,63,253,252,45,190,65,165,122,191,88,103,12,191,82,161,19,63,159,184,120,63,69,111,11,62,36,37,95,191,4,149,70,191,48,227,154,62,56,103,127,63,65,229,219,62,206,187,46,191,186,38,110,191,243,4,53,63,48,227,154,62,240,36,81,191,107,251,75,191,87,117,171,62,203,217,127,63,205,34,138,62,8,16,86,191,4,149,70,191,81,212,187,62,56,103,127,63,95,114,114,62,59,187,90,191,86,243,64,191,58,251,203,62,106,168,126,63,198,86,80,62,36,37,95,191,17,24,59,191,65,229,219,62,152,157,125,63,253,252,45,62,114,76,99,191,243,4,53,191,165,141,235,62,19,71,124,63,69,111,11,62,232,47,103,191,206,187,46,191,186,239,250,62,65,165,122,63,222,111,209,61,92,206,106,191,128,62,40,191,116,3,5,63,159,184,120,63,174,194,139,61,186,38,110,191,251,142,33,191,88,103,12,63,191,129,118,63,140,215,11,61,3,56,113,191,60,175,26,191,82,161,19,63,76,1,116,63,243,4,53,63,95,114,114,62,114,76,99,191,128,62,40,191,82,161,19,63,186,38,110,63,69,111,11,190,106,168,126,191,87,117,171,190,8,16,86,63,17,24,59,63,186,239,250,190,191,129,118,191,140,215,11,61,65,165,122,63,65,229,219,62,4,149,70,191,107,251,75,191,58,251,203,62,19,71,124,63,174,194,139,61,76,1,116,191,116,3,5,191,243,4,53,63,59,187,90,63,48,227,154,190,56,103,127,191,253,252,45,190,92,206,106,63,60,175,26,63,251,142,33,191,232,47,103,191,198,86,80,62,203,217,127,63,205,34,138,62,36,37,95,191,206,187,46,191,88,103,12,63,3,56,113,63,222,111,209,189,152,157,125,191,81,212,187,190,240,36,81,63,86,243,64,63,165,141,235,190,159,184,120,191,243,4,53,63,253,252,45,62,3,56,113,191,186,239,250,190,4,149,70,63,86,243,64,63,116,3,5,191,186,38,110,191,198,86,80,62,203,217,127,63,69,111,11,62,76,1,116,191,165,141,235,190,107,251,75,63,17,24,59,63,88,103,12,191,92,206,106,191,95,114,114,62,56,103,127,63,222,111,209,61,191,129,118,191,65,229,219,190,240,36,81,63,243,4,53,63,82,161,19,191,232,47,103,191,205,34,138,62,106,168,126,63,174,194,139,61,159,184,120,191,58,251,203,190,8,16,86,63,206,187,46,63,60,175,26,191,114,76,99,191,48,227,154,62,152,157,125,63,140,215,11,61,65,165,122,191,81,212,187,190,59,187,90,63,128,62,40,63,251,142,33,191,36,37,95,191,87,117,171,62,19,71,124,63,243,4,53,63,222,111,209,61,65,165,122,191,48,227,154,190,92,206,106,63,186,239,250,62,240,36,81,191,128,62,40,191,206,187,46,63,107,251,75,63,116,3,5,191,232,47,103,191,87,117,171,62,159,184,120,63,69,111,11,190,203,217,127,191,174,194,139,189,19,71,124,63,205,34,138,62,186,38,110,191,165,141,235,190,8,16,86,63,251,142,33,63,243,4,53,191,4,149,70,191,88,103,12,63,114,76,99,63,81,212,187,190,191,129,118,191,253,252,45,62,56,103,127,63,140,215,11,61,152,157,125,191,95,114,114,190,3,56,113,63,65,229,219,62,59,187,90,191,60,175,26,191,17,24,59,63,86,243,64,63,82,161,19,191,36,37,95,191,58,251,203,62,76,1,116,63,198,86,80,190,106,168,126,191,243,4,53,63,140,215,11,61,56,103,127,191,222,111,209,189,152,157,125,63,253,252,45,62,65,165,122,191,95,114,114,190,191,129,118,63,48,227,154,62,3,56,113,191,81,212,187,190,92,206,106,63,65,229,219,62,114,76,99,191,186,239,250,190,59,187,90,63,88,103,12,63,240,36,81,191,60,175,26,191,4,149,70,63,128,62,40,63,17,24,59,191,243,4,53,191,206,187,46,63,86,243,64,63,251,142,33,191,107,251,75,191,82,161,19,63,8,16,86,63,116,3,5,191,36,37,95,191,165,141,235,62,232,47,103,63,58,251,203,190,186,38,110,191,87,117,171,62,76,1,116,63,205,34,138,190,159,184,120,191,198,86,80,62,19,71,124,63,69,111,11,190,106,168,126,191,174,194,139,61,203,217,127,63,243,4,53,63,140,215,11,189,56,103,127,191,222,111,209,61,152,157,125,63,253,252,45,190,65,165,122,191,95,114,114,62,191,129,118,63,48,227,154,190,3,56,113,191,81,212,187,62,92,206,106,63,65,229,219,190,114,76,99,191,186,239,250,62,59,187,90,63,88,103,12,191,240,36,81,191,60,175,26,63,4,149,70,63,128,62,40,191,17,24,59,191,243,4,53,63,206,187,46,63,86,243,64,191,251,142,33,191,107,251,75,63,82,161,19,63,8,16,86,191,116,3,5,191,36,37,95,63,165,141,235,62,232,47,103,191,58,251,203,190,186,38,110,63,87,117,171,62,76,1,116,191,205,34,138,190,159,184,120,63,198,86,80,62,19,71,124,191,69,111,11,190,106,168,126,63,174,194,139,61,203,217,127,191,243,4,53,63,222,111,209,189,65,165,122,191,48,227,154,62,92,206,106,63,186,239,250,190,240,36,81,191,128,62,40,63,206,187,46,63,107,251,75,191,116,3,5,191,232,47,103,63,87,117,171,62,159,184,120,191,69,111,11,190,203,217,127,63,174,194,139,189,19,71,124,191,205,34,138,62,186,38,110,63,165,141,235,190,8,16,86,191,251,142,33,63,243,4,53,63,4,149,70,191,88,103,12,191,114,76,99,63,81,212,187,62,191,129,118,191,253,252,45,190,56,103,127,63,140,215,11,189,152,157,125,191,95,114,114,62,3,56,113,63,65,229,219,190,59,187,90,191,60,175,26,63,17,24,59,63,86,243,64,191,82,161,19,191,36,37,95,63,58,251,203,62,76,1,116,191,198,86,80,190,106,168,126,63,243,4,53,63,253,252,45,190,3,56,113,191,186,239,250,62,4,149,70,63,86,243,64,191,116,3,5,191,186,38,110,63,198,86,80,62,203,217,127,191,69,111,11,62,76,1,116,63,165,141,235,190,107,251,75,191,17,24,59,63,88,103,12,63,92,206,106,191,95,114,114,190,56,103,127,63,222,111,209,189,191,129,118,191,65,229,219,62,240,36,81,63,243,4,53,191,82,161,19,191,232,47,103,63,205,34,138,62,106,168,126,191,174,194,139,61,159,184,120,63,58,251,203,190,8,16,86,191,206,187,46,63,60,175,26,63,114,76,99,191,48,227,154,190,152,157,125,63,140,215,11,189,65,165,122,191,81,212,187,62,59,187,90,63,128,62,40,191,251,142,33,191,36,37,95,63,87,117,171,62,19,71,124,191,243,4,53,63,95,114,114,190,114,76,99,191,128,62,40,63,82,161,19,63,186,38,110,191,69,111,11,190,106,168,126,63,87,117,171,190,8,16,86,191,17,24,59,63,186,239,250,62,191,129,118,191,140,215,11,189,65,165,122,63,65,229,219,190,4,149,70,191,107,251,75,63,58,251,203,62,19,71,124,191,174,194,139,61,76,1,116,63,116,3,5,191,243,4,53,191,59,187,90,63,48,227,154,62,56,103,127,191,253,252,45,62,92,206,106,63,60,175,26,191,251,142,33,191,232,47,103,63,198,86,80,62,203,217,127,191,205,34,138,62,36,37,95,63,206,187,46,191,88,103,12,191,3,56,113,63,222,111,209,61,152,157,125,191,81,212,187,62,240,36,81,63,86,243,64,191,165,141,235,190,159,184,120,63,243,4,53,63,48,227,154,190,240,36,81,191,107,251,75,63,87,117,171,62,203,217,127,191,205,34,138,62,8,16,86,63,4,149,70,191,81,212,187,190,56,103,127,63,95,114,114,190,59,187,90,191,86,243,64,63,58,251,203,62,106,168,126,191,198,86,80,62,36,37,95,63,17,24,59,191,65,229,219,190,152,157,125,63,253,252,45,190,114,76,99,191,243,4,53,63,165,141,235,62,19,71,124,191,69,111,11,62,232,47,103,63,206,187,46,191,186,239,250,190,65,165,122,63,222,111,209,189,92,206,106,191,128,62,40,63,116,3,5,63,159,184,120,191,174,194,139,61,186,38,110,63,251,142,33,191,88,103,12,191,191,129,118,63,140,215,11,189,3,56,113,191,60,175,26,63,82,161,19,63,76,1,116,191,243,4,53,63,81,212,187,190,17,24,59,191,232,47,103,63,174,194,139,61,76,1,116,191,251,142,33,63,186,239,250,62,152,157,125,191,95,114,114,62,240,36,81,63,8,16,86,191,198,86,80,190,19,71,124,63,116,3,5,191,60,175,26,191,191,129,118,63,222,111,209,189,114,76,99,191,86,243,64,63,87,117,171,62,203,217,127,191,58,251,203,62,243,4,53,63,92,206,106,191,140,215,11,189,3,56,113,63,128,62,40,191,165,141,235,190,106,168,126,63,205,34,138,190,107,251,75,191,59,187,90,63,253,252,45,62,65,165,122,191,88,103,12,63,82,161,19,63,159,184,120,191,69,111,11,62,36,37,95,63,4,149,70,191,48,227,154,190,56,103,127,63,65,229,219,190,206,187,46,191,186,38,110,63,243,4,53,63,65,229,219,190,251,142,33,191,159,184,120,63,198,86,80,190,107,251,75,191,114,76,99,63,140,215,11,61,92,206,106,191,86,243,64,63,205,34,138,62,19,71,124,191,82,161,19,63,186,239,250,62,56,103,127,191,81,212,187,62,206,187,46,63,76,1,116,191,69,111,11,62,8,16,86,63,59,187,90,191,222,111,209,189,3,56,113,63,243,4,53,191,87,117,171,190,106,168,126,63,116,3,5,191,88,103,12,191,152,157,125,63,48,227,154,190,17,24,59,191,186,38,110,63,174,194,139,189,36,37,95,191,240,36,81,63,253,252,45,62,191,129,118,191,128,62,40,63,58,251,203,62,203,217,127,191,165,141,235,62,60,175,26,63,65,165,122,191,95,114,114,62,4,149,70,63,232,47,103,191,243,4,53,63,186,239,250,190,116,3,5,191,203,217,127,63,165,141,235,190,88,103,12,191,56,103,127,63,65,229,219,190,82,161,19,191,106,168,126,63,58,251,203,190,60,175,26,191,152,157,125,63,81,212,187,190,251,142,33,191,19,71,124,63,87,117,171,190,128,62,40,191,65,165,122,63,48,227,154,190,206,187,46,191,159,184,120,63,205,34,138,190,243,4,53,191,191,129,118,63,95,114,114,190,17,24,59,191,76,1,116,63,198,86,80,190,86,243,64,191,3,56,113,63,253,252,45,190,4,149,70,191,186,38,110,63,69,111,11,190,107,251,75,191,92,206,106,63,222,111,209,189,240,36,81,191,232,47,103,63,174,194,139,189,8,16,86,191,114,76,99,63,140,215,11,189,59,187,90,191,36,37,95,63,243,4,53,63,88,103,12,191,58,251,203,190,19,71,124,63,206,187,46,191,95,114,114,190,3,56,113,63,107,251,75,191,174,194,139,189,36,37,95,63,114,76,99,191,222,111,209,61,4,149,70,63,76,1,116,191,205,34,138,62,128,62,40,63,152,157,125,191,65,229,219,62,116,3,5,63,203,217,127,191,82,161,19,63,81,212,187,62,65,165,122,191,243,4,53,63,198,86,80,62,186,38,110,191,240,36,81,63,140,215,11,61,59,187,90,191,232,47,103,63,69,111,11,190,86,243,64,191,191,129,118,63,48,227,154,190,251,142,33,191,106,168,126,63,165,141,235,190,186,239,250,190,56,103,127,63,60,175,26,191,87,117,171,190,159,184,120,63,17,24,59,191,253,252,45,190,92,206,106,63,8,16,86,191,243,4,53,63,60,175,26,191,205,34,138,190,186,38,110,63,59,187,90,191,222,111,209,61,17,24,59,63,19,71,124,191,165,141,235,62,65,229,219,62,65,165,122,191,86,243,64,63,174,194,139,61,8,16,86,191,3,56,113,63,48,227,154,190,82,161,19,191,203,217,127,63,251,142,33,191,95,114,114,190,92,206,106,63,36,37,95,191,69,111,11,62,243,4,53,63,152,157,125,191,186,239,250,62,58,251,203,62,159,184,120,191,4,149,70,63,140,215,11,61,240,36,81,191,76,1,116,63,87,117,171,190,88,103,12,191,56,103,127,63,128,62,40,191,198,86,80,190,232,47,103,63,114,76,99,191,253,252,45,62,206,187,46,63,106,168,126,191,116,3,5,63,81,212,187,62,191,129,118,191,107,251,75,63,243,4,53,63,128,62,40,191,69,111,11,190,8,16,86,63,191,129,118,191,65,229,219,62,58,251,203,62,76,1,116,191,59,187,90,63,253,252,45,190,251,142,33,191,203,217,127,63,206,187,46,191,222,111,209,189,240,36,81,63,159,184,120,191,165,141,235,62,81,212,187,62,3,56,113,191,36,37,95,63,198,86,80,190,60,175,26,191,56,103,127,63,243,4,53,191,174,194,139,189,107,251,75,63,65,165,122,191,186,239,250,62,87,117,171,62,186,38,110,191,114,76,99,63,95,114,114,190,82,161,19,191,106,168,126,63,17,24,59,191,140,215,11,189,4,149,70,63,19,71,124,191,116,3,5,63,48,227,154,62,92,206,106,191,232,47,103,63,205,34,138,190,88,103,12,191,152,157,125,63,86,243,64,191,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,250,9,150,167,243,4,53,63,0,0,128,191,243,4,53,63,91,26,141,38,243,4,53,191,0,0,128,63,243,4,53,191,52,131,176,167,243,4,53,63,0,0,128,191,243,4,53,63,232,223,30,40,243,4,53,191,0,0,128,63,243,4,53,191,77,14,212,38,243,4,53,63,0,0,128,191,243,4,53,63,243,4,53,63,86,243,64,191,69,111,11,62,88,103,12,63,191,129,118,191,232,47,103,63,58,251,203,190,48,227,154,190,59,187,90,63,19,71,124,191,251,142,33,63,140,215,11,61,206,187,46,191,106,168,126,63,240,36,81,191,95,114,114,62,165,141,235,62,186,38,110,191,3,56,113,63,186,239,250,190,198,86,80,190,107,251,75,63,56,103,127,191,243,4,53,63,174,194,139,189,60,175,26,191,65,165,122,63,36,37,95,191,87,117,171,62,81,212,187,62,114,76,99,191,159,184,120,63,82,161,19,191,222,111,209,189,17,24,59,63,203,217,127,191,4,149,70,63,253,252,45,190,116,3,5,191,76,1,116,63,92,206,106,191,65,229,219,62,205,34,138,62,8,16,86,191,152,157,125,63,128,62,40,191,243,4,53,63,107,251,75,191,205,34,138,62,81,212,187,62,59,187,90,191,106,168,126,63,17,24,59,191,253,252,45,62,165,141,235,62,232,47,103,191,65,165,122,63,128,62,40,191,174,194,139,61,88,103,12,63,3,56,113,191,76,1,116,63,82,161,19,191,140,215,11,189,251,142,33,63,159,184,120,191,92,206,106,63,186,239,250,190,69,111,11,190,243,4,53,63,152,157,125,191,36,37,95,63,58,251,203,190,95,114,114,190,4,149,70,63,203,217,127,191,240,36,81,63,48,227,154,190,87,117,171,190,8,16,86,63,56,103,127,191,86,243,64,63,198,86,80,190,65,229,219,190,114,76,99,63,19,71,124,191,206,187,46,63,222,111,209,189,116,3,5,191,186,38,110,63,191,129,118,191,60,175,26,63,243,4,53,63,8,16,86,191,58,251,203,62,253,252,45,62,206,187,46,191,159,184,120,63,3,56,113,191,60,175,26,63,174,194,139,189,186,239,250,190,114,76,99,63,106,168,126,191,4,149,70,63,48,227,154,190,205,34,138,190,86,243,64,63,152,157,125,191,232,47,103,63,116,3,5,191,140,215,11,189,82,161,19,63,186,38,110,191,65,165,122,63,243,4,53,191,198,86,80,62,81,212,187,62,240,36,81,191,203,217,127,63,59,187,90,191,65,229,219,62,69,111,11,62,128,62,40,191,191,129,118,63,76,1,116,191,251,142,33,63,222,111,209,189,165,141,235,190,36,37,95,63,56,103,127,191,107,251,75,63,87,117,171,190,95,114,114,190,17,24,59,63,19,71,124,191,92,206,106,63,88,103,12,191,243,4,53,63,36,37,95,191,116,3,5,63,140,215,11,189,165,141,235,190,8,16,86,63,56,103,127,191,232,47,103,63,82,161,19,191,222,111,209,61,58,251,203,62,107,251,75,191,152,157,125,63,186,38,110,191,251,142,33,63,253,252,45,190,87,117,171,190,86,243,64,63,65,165,122,191,76,1,116,63,206,187,46,191,95,114,114,62,205,34,138,62,243,4,53,191,191,129,118,63,159,184,120,191,17,24,59,63,48,227,154,190,198,86,80,190,128,62,40,63,3,56,113,191,19,71,124,63,4,149,70,191,81,212,187,62,69,111,11,62,60,175,26,191,92,206,106,63,106,168,126,191,240,36,81,63,65,229,219,190,174,194,139,189,88,103,12,63,114,76,99,191,203,217,127,63,59,187,90,191,186,239,250,62,243,4,53,63,232,47,103,191,251,142,33,63,95,114,114,190,198,86,80,190,60,175,26,63,114,76,99,191,203,217,127,63,92,206,106,191,128,62,40,63,205,34,138,190,253,252,45,190,82,161,19,63,36,37,95,191,56,103,127,63,186,38,110,191,206,187,46,63,48,227,154,190,69,111,11,190,88,103,12,63,59,187,90,191,106,168,126,63,3,56,113,191,243,4,53,63,87,117,171,190,222,111,209,189,116,3,5,63,8,16,86,191,152,157,125,63,76,1,116,191,17,24,59,63,81,212,187,190,174,194,139,189,186,239,250,62,240,36,81,191,19,71,124,63,191,129,118,191,86,243,64,63,58,251,203,190,140,215,11,189,165,141,235,62,107,251,75,191,65,165,122,63,159,184,120,191,4,149,70,63,65,229,219,190,243,4,53,63,186,38,110,191,17,24,59,63,65,229,219,190,174,194,139,61,48,227,154,62,251,142,33,191,36,37,95,63,152,157,125,191,159,184,120,63,240,36,81,191,88,103,12,63,198,86,80,190,253,252,45,190,116,3,5,63,107,251,75,191,191,129,118,63,106,168,126,191,114,76,99,63,128,62,40,191,87,117,171,62,140,215,11,61,58,251,203,190,243,4,53,63,92,206,106,191,203,217,127,63,3,56,113,191,86,243,64,63,165,141,235,190,222,111,209,61,205,34,138,62,60,175,26,191,59,187,90,63,19,71,124,191,65,165,122,63,8,16,86,191,82,161,19,63,95,114,114,190,69,111,11,190,186,239,250,62,4,149,70,191,76,1,116,63,56,103,127,191,232,47,103,63,206,187,46,191,81,212,187,62,243,4,53,63,76,1,116,191,240,36,81,63,60,175,26,191,87,117,171,62,140,215,11,189,205,34,138,190,88,103,12,63,4,149,70,191,186,38,110,63,56,103,127,191,159,184,120,63,59,187,90,191,128,62,40,63,58,251,203,190,222,111,209,61,198,86,80,62,186,239,250,190,17,24,59,63,232,47,103,191,152,157,125,63,19,71,124,191,114,76,99,63,243,4,53,191,165,141,235,62,253,252,45,190,69,111,11,190,65,229,219,62,206,187,46,191,36,37,95,63,65,165,122,191,106,168,126,63,92,206,106,191,86,243,64,63,116,3,5,191,95,114,114,62,174,194,139,61,81,212,187,190,251,142,33,63,8,16,86,191,191,129,118,63,203,217,127,191,3,56,113,63,107,251,75,191,82,161,19,63,48,227,154,190,243,4,53,63,159,184,120,191,114,76,99,63,86,243,64,191,82,161,19,63,81,212,187,190,69,111,11,62,222,111,209,61,87,117,171,190,88,103,12,63,17,24,59,191,36,37,95,63,191,129,118,191,203,217,127,63,65,165,122,191,232,47,103,63,4,149,70,191,60,175,26,63,58,251,203,190,253,252,45,62,174,194,139,61,48,227,154,190,116,3,5,63,243,4,53,191,59,187,90,63,76,1,116,191,56,103,127,63,19,71,124,191,92,206,106,63,107,251,75,191,251,142,33,63,65,229,219,190,198,86,80,62,140,215,11,61,205,34,138,190,186,239,250,62,206,187,46,191,8,16,86,63,3,56,113,191,106,168,126,63,152,157,125,191,186,38,110,63,240,36,81,191,128,62,40,63,165,141,235,190,95,114,114,62,243,4,53,63,19,71,124,191,3,56,113,63,36,37,95,191,4,149,70,63,128,62,40,191,116,3,5,63,81,212,187,190,198,86,80,62,140,215,11,189,69,111,11,190,48,227,154,62,165,141,235,190,60,175,26,63,17,24,59,191,8,16,86,63,92,206,106,191,159,184,120,63,56,103,127,191,106,168,126,63,191,129,118,191,232,47,103,63,240,36,81,191,243,4,53,63,82,161,19,191,65,229,219,62,205,34,138,190,222,111,209,61,174,194,139,61,95,114,114,190,58,251,203,62,88,103,12,191,206,187,46,63,107,251,75,191,114,76,99,63,76,1,116,191,152,157,125,63,203,217,127,191,65,165,122,63,186,38,110,191,59,187,90,63,86,243,64,191,251,142,33,63,186,239,250,190,87,117,171,62,253,252,45,190,243,4,53,63,106,168,126,191,65,165,122,63,76,1,116,191,92,206,106,63,36,37,95,191,240,36,81,63,86,243,64,191,206,187,46,63,60,175,26,191,116,3,5,63,65,229,219,190,87,117,171,62,95,114,114,190,69,111,11,62,140,215,11,189,174,194,139,189,253,252,45,62,205,34,138,190,81,212,187,62,165,141,235,190,88,103,12,63,251,142,33,191,243,4,53,63,4,149,70,191,8,16,86,63,114,76,99,191,186,38,110,63,191,129,118,191,19,71,124,63,56,103,127,191,203,217,127,63,152,157,125,191,159,184,120,63,3,56,113,191,232,47,103,63,59,187,90,191,107,251,75,63,17,24,59,191,128,62,40,63,82,161,19,191,186,239,250,62,58,251,203,190,48,227,154,62,198,86,80,190,222,111,209,61,243,4,53,63,203,217,127,191,56,103,127,63,106,168,126,191,152,157,125,63,19,71,124,191,65,165,122,63,159,184,120,191,191,129,118,63,76,1,116,191,3,56,113,63,186,38,110,191,92,206,106,63,232,47,103,191,114,76,99,63,36,37,95,191,59,187,90,63,8,16,86,191,240,36,81,63,107,251,75,191,4,149,70,63,86,243,64,191,17,24,59,63,243,4,53,191,206,187,46,63,128,62,40,191,251,142,33,63,60,175,26,191,82,161,19,63,88,103,12,191,116,3,5,63,186,239,250,190,165,141,235,62,65,229,219,190,58,251,203,62,81,212,187,190,87,117,171,62,48,227,154,190,205,34,138,62,95,114,114,190,198,86,80,62,253,252,45,190,69,111,11,62,222,111,209,189,174,194,139,61,140,215,11,189,243,4,53,63,103,219,127,63,166,109,127,63,222,182,126,63,65,183,125,63,26,111,124,63,197,222,122,63,182,6,121,63,116,231,118,63,153,129,116,63,213,213,113,63,237,228,110,63,182,175,107,63,28,55,104,63,29,124,100,63,202,127,96,63,71,67,92,63,202,199,87,63,154,14,83,63,18,25,78,63,157,232,72,63,182,126,67,63,234,220,61,63,212,4,56,63,34,248,49,63,140,184,43,63,222,71,37,63,238,167,30,63,161,218,23,63,233,225,16,63,196,191,9,63,60,118,2,63,208,14,246,62,204,234,230,62,195,132,215,62,26,225,199,62,76,4,184,62,224,242,167,62,111,177,151,62,159,68,135,62,67,98,109,62,105,247,75,62,62,82,42,62,96,124,8,62,248,254,204,61,148,202,136,61,37,222,8,61,243,4,53,63,222,182,126,63,197,222,122,63,153,129,116,63,182,175,107,63,202,127,96,63,154,14,83,63,182,126,67,63,34,248,49,63,238,167,30,63,196,191,9,63,204,234,230,62,76,4,184,62,159,68,135,62,62,82,42,62,148,202,136,61,37,222,8,189,96,124,8,190,67,98,109,190,224,242,167,190,195,132,215,190,60,118,2,191,161,218,23,191,140,184,43,191,234,220,61,191,18,25,78,191,71,67,92,191,28,55,104,191,213,213,113,191,182,6,121,191,65,183,125,191,103,219,127,191,166,109,127,191,26,111,124,191,116,231,118,191,237,228,110,191,29,124,100,191,202,199,87,191,157,232,72,191,212,4,56,191,222,71,37,191,233,225,16,191,208,14,246,190,26,225,199,190,111,177,151,190,105,247,75,190,248,254,204,189,243,4,53,63,26,111,124,63,213,213,113,63,202,127,96,63,157,232,72,63,140,184,43,63,196,191,9,63,26,225,199,62,67,98,109,62,148,202,136,61,248,254,204,189,159,68,135,190,195,132,215,190,233,225,16,191,34,248,49,191,18,25,78,191,29,124,100,191,153,129,116,191,65,183,125,191,103,219,127,191,197,222,122,191,237,228,110,191,71,67,92,191,182,126,67,191,222,71,37,191,60,118,2,191,76,4,184,190,105,247,75,190,37,222,8,189,96,124,8,62,111,177,151,62,204,234,230,62,161,218,23,63,212,4,56,63,154,14,83,63,28,55,104,63,116,231,118,63,222,182,126,63,166,109,127,63,182,6,121,63,182,175,107,63,202,199,87,63,234,220,61,63,238,167,30,63,208,14,246,62,224,242,167,62,62,82,42,62,243,4,53,63,182,6,121,63,29,124,100,63,182,126,67,63,161,218,23,63,26,225,199,62,62,82,42,62,148,202,136,189,111,177,151,190,60,118,2,191,34,248,49,191,202,199,87,191,213,213,113,191,222,182,126,191,65,183,125,191,237,228,110,191,154,14,83,191,140,184,43,191,208,14,246,190,159,68,135,190,37,222,8,189,105,247,75,62,195,132,215,62,238,167,30,63,157,232,72,63,28,55,104,63,197,222,122,63,103,219,127,63,116,231,118,63,202,127,96,63,234,220,61,63,233,225,16,63,76,4,184,62,96,124,8,62,248,254,204,189,224,242,167,190,196,191,9,191,212,4,56,191,71,67,92,191,153,129,116,191,166,109,127,191,26,111,124,191,182,175,107,191,18,25,78,191,222,71,37,191,204,234,230,190,67,98,109,190,243,4,53,63,153,129,116,63,154,14,83,63,238,167,30,63,76,4,184,62,148,202,136,61,67,98,109,190,60,118,2,191,234,220,61,191,28,55,104,191,65,183,125,191,26,111,124,191,29,124,100,191,212,4,56,191,208,14,246,190,105,247,75,190,248,254,204,61,26,225,199,62,222,71,37,63,202,199,87,63,116,231,118,63,103,219,127,63,213,213,113,63,18,25,78,63,161,218,23,63,224,242,167,62,37,222,8,61,159,68,135,190,196,191,9,191,182,126,67,191,182,175,107,191,222,182,126,191,197,222,122,191,202,127,96,191,34,248,49,191,204,234,230,190,62,82,42,190,96,124,8,62,195,132,215,62,140,184,43,63,71,67,92,63,182,6,121,63,166,109,127,63,237,228,110,63,157,232,72,63,233,225,16,63,111,177,151,62,243,4,53,63,237,228,110,63,234,220,61,63,204,234,230,62,248,254,204,61,159,68,135,190,161,218,23,191,202,199,87,191,197,222,122,191,26,111,124,191,71,67,92,191,238,167,30,191,111,177,151,190,148,202,136,61,195,132,215,62,212,4,56,63,182,175,107,63,103,219,127,63,213,213,113,63,182,126,67,63,208,14,246,62,96,124,8,62,67,98,109,190,233,225,16,191,154,14,83,191,182,6,121,191,65,183,125,191,202,127,96,191,222,71,37,191,224,242,167,190,37,222,8,61,26,225,199,62,34,248,49,63,28,55,104,63,166,109,127,63,153,129,116,63,157,232,72,63,60,118,2,63,62,82,42,62,105,247,75,190,196,191,9,191,18,25,78,191,116,231,118,191,222,182,126,191,29,124,100,191,140,184,43,191,76,4,184,190,243,4,53,63,28,55,104,63,222,71,37,63,159,68,135,62,62,82,42,190,233,225,16,191,71,67,92,191,222,182,126,191,213,213,113,191,212,4,56,191,76,4,184,190,148,202,136,61,208,14,246,62,18,25,78,63,197,222,122,63,182,6,121,63,157,232,72,63,204,234,230,62,37,222,8,61,26,225,199,190,234,220,61,191,153,129,116,191,65,183,125,191,202,199,87,191,196,191,9,191,96,124,8,190,111,177,151,62,140,184,43,63,182,175,107,63,103,219,127,63,29,124,100,63,238,167,30,63,67,98,109,62,105,247,75,190,161,218,23,191,202,127,96,191,166,109,127,191,237,228,110,191,34,248,49,191,224,242,167,190,248,254,204,61,60,118,2,63,154,14,83,63,26,111,124,63,116,231,118,63,182,126,67,63,195,132,215,62,243,4,53,63,202,127,96,63,196,191,9,63,148,202,136,61,195,132,215,190,18,25,78,191,65,183,125,191,237,228,110,191,222,71,37,191,105,247,75,190,111,177,151,62,212,4,56,63,116,231,118,63,182,6,121,63,234,220,61,63,224,242,167,62,62,82,42,190,238,167,30,191,182,175,107,191,222,182,126,191,154,14,83,191,204,234,230,190,37,222,8,61,60,118,2,63,71,67,92,63,103,219,127,63,29,124,100,63,233,225,16,63,248,254,204,61,26,225,199,190,157,232,72,191,26,111,124,191,213,213,113,191,140,184,43,191,67,98,109,190,159,68,135,62,34,248,49,63,153,129,116,63,197,222,122,63,182,126,67,63,76,4,184,62,96,124,8,190,161,218,23,191,28,55,104,191,166,109,127,191,202,199,87,191,208,14,246,190,243,4,53,63,202,199,87,63,195,132,215,62,96,124,8,190,222,71,37,191,153,129,116,191,116,231,118,191,140,184,43,191,62,82,42,190,26,225,199,62,154,14,83,63,103,219,127,63,71,67,92,63,204,234,230,62,248,254,204,189,238,167,30,191,213,213,113,191,182,6,121,191,34,248,49,191,105,247,75,190,76,4,184,62,18,25,78,63,166,109,127,63,202,127,96,63,208,14,246,62,148,202,136,189,161,218,23,191,237,228,110,191,197,222,122,191,212,4,56,191,67,98,109,190,224,242,167,62,157,232,72,63,222,182,126,63,29,124,100,63,60,118,2,63,37,222,8,189,233,225,16,191,182,175,107,191,26,111,124,191,234,220,61,191,159,68,135,190,111,177,151,62,182,126,67,63,65,183,125,63,28,55,104,63,196,191,9,63,243,4,53,63,18,25,78,63,111,177,151,62,224,242,167,190,154,14,83,191,103,219,127,191,157,232,72,191,159,68,135,190,76,4,184,62,202,199,87,63,166,109,127,63,182,126,67,63,67,98,109,62,26,225,199,190,71,67,92,191,222,182,126,191,234,220,61,191,105,247,75,190,195,132,215,62,202,127,96,63,65,183,125,63,212,4,56,63,62,82,42,62,204,234,230,190,29,124,100,191,26,111,124,191,34,248,49,191,96,124,8,190,208,14,246,62,28,55,104,63,197,222,122,63,140,184,43,63,248,254,204,61,60,118,2,191,182,175,107,191,182,6,121,191,222,71,37,191,148,202,136,189,196,191,9,63,237,228,110,63,116,231,118,63,238,167,30,63,37,222,8,61,233,225,16,191,213,213,113,191,153,129,116,191,161,218,23,191,243,4,53,63,182,126,67,63,62,82,42,62,60,118,2,191,213,213,113,191,237,228,110,191,208,14,246,190,105,247,75,62,157,232,72,63,103,219,127,63,234,220,61,63,96,124,8,62,196,191,9,191,153,129,116,191,182,175,107,191,204,234,230,190,67,98,109,62,18,25,78,63,166,109,127,63,212,4,56,63,248,254,204,61,233,225,16,191,116,231,118,191,28,55,104,191,195,132,215,190,159,68,135,62,154,14,83,63,222,182,126,63,34,248,49,63,148,202,136,61,161,218,23,191,182,6,121,191,29,124,100,191,26,225,199,190,111,177,151,62,202,199,87,63,65,183,125,63,140,184,43,63,37,222,8,61,238,167,30,191,197,222,122,191,202,127,96,191,76,4,184,190,224,242,167,62,71,67,92,63,26,111,124,63,222,71,37,63,243,4,53,63,212,4,56,63,37,222,8,61,140,184,43,191,166,109,127,191,182,126,67,191,248,254,204,189,238,167,30,63,65,183,125,63,18,25,78,63,62,82,42,62,233,225,16,191,197,222,122,191,202,199,87,191,67,98,109,190,60,118,2,63,116,231,118,63,202,127,96,63,111,177,151,62,204,234,230,190,213,213,113,191,28,55,104,191,76,4,184,190,26,225,199,62,182,175,107,63,237,228,110,63,195,132,215,62,224,242,167,190,29,124,100,191,153,129,116,191,208,14,246,190,159,68,135,62,71,67,92,63,182,6,121,63,196,191,9,63,105,247,75,190,154,14,83,191,26,111,124,191,161,218,23,191,96,124,8,62,157,232,72,63,222,182,126,63,222,71,37,63,148,202,136,189,234,220,61,191,103,219,127,191,34,248,49,191,243,4,53,63,140,184,43,63,248,254,204,189,18,25,78,191,197,222,122,191,60,118,2,191,111,177,151,62,28,55,104,63,182,175,107,63,224,242,167,62,208,14,246,190,182,6,121,191,154,14,83,191,96,124,8,190,222,71,37,63,103,219,127,63,34,248,49,63,148,202,136,189,157,232,72,191,26,111,124,191,196,191,9,191,159,68,135,62,29,124,100,63,237,228,110,63,76,4,184,62,204,234,230,190,116,231,118,191,202,199,87,191,62,82,42,190,238,167,30,63,166,109,127,63,212,4,56,63,37,222,8,189,182,126,67,191,65,183,125,191,233,225,16,191,67,98,109,62,202,127,96,63,213,213,113,63,26,225,199,62,195,132,215,190,153,129,116,191,71,67,92,191,105,247,75,190,161,218,23,63,222,182,126,63,234,220,61,63,243,4,53,63,238,167,30,63,67,98,109,190,28,55,104,191,29,124,100,191,105,247,75,190,222,71,37,63,103,219,127,63,161,218,23,63,159,68,135,190,182,175,107,191,202,127,96,191,62,82,42,190,140,184,43,63,166,109,127,63,233,225,16,63,111,177,151,190,237,228,110,191,71,67,92,191,96,124,8,190,34,248,49,63,222,182,126,63,196,191,9,63,224,242,167,190,213,213,113,191,202,199,87,191,248,254,204,189,212,4,56,63,65,183,125,63,60,118,2,63,76,4,184,190,153,129,116,191,154,14,83,191,148,202,136,189,234,220,61,63,26,111,124,63,208,14,246,62,26,225,199,190,116,231,118,191,18,25,78,191,37,222,8,189,182,126,67,63,197,222,122,63,204,234,230,62,195,132,215,190,182,6,121,191,157,232,72,191,243,4,53,63,233,225,16,63,76,4,184,190,182,6,121,191,234,220,61,191,96,124,8,62,29,124,100,63,202,127,96,63,248,254,204,61,182,126,67,191,116,231,118,191,224,242,167,190,161,218,23,63,103,219,127,63,196,191,9,63,26,225,199,190,197,222,122,191,212,4,56,191,62,82,42,62,28,55,104,63,71,67,92,63,148,202,136,61,157,232,72,191,153,129,116,191,111,177,151,190,238,167,30,63,166,109,127,63,60,118,2,63,195,132,215,190,26,111,124,191,34,248,49,191,105,247,75,62,182,175,107,63,202,199,87,63,37,222,8,61,18,25,78,191,213,213,113,191,159,68,135,190,222,71,37,63,222,182,126,63,208,14,246,62,204,234,230,190,65,183,125,191,140,184,43,191,67,98,109,62,237,228,110,63,154,14,83,63,243,4,53,63,60,118,2,63,208,14,246,190,103,219,127,191,196,191,9,191,204,234,230,62,166,109,127,63,233,225,16,63,195,132,215,190,222,182,126,191,161,218,23,191,26,225,199,62,65,183,125,63,238,167,30,63,76,4,184,190,26,111,124,191,222,71,37,191,224,242,167,62,197,222,122,63,140,184,43,63,111,177,151,190,182,6,121,191,34,248,49,191,159,68,135,62,116,231,118,63,212,4,56,63,67,98,109,190,153,129,116,191,234,220,61,191,105,247,75,62,213,213,113,63,182,126,67,63,62,82,42,190,237,228,110,191,157,232,72,191,96,124,8,62,182,175,107,63,18,25,78,63,248,254,204,189,28,55,104,191,154,14,83,191,148,202,136,61,29,124,100,63,202,199,87,63,37,222,8,189,202,127,96,191,71,67,92,191,243,4,53,63,204,234,230,62,161,218,23,191,26,111,124,191,111,177,151,190,212,4,56,63,213,213,113,63,96,124,8,62,154,14,83,191,202,127,96,191,37,222,8,61,28,55,104,63,157,232,72,63,105,247,75,190,116,231,118,191,140,184,43,191,76,4,184,62,222,182,126,63,196,191,9,63,60,118,2,191,166,109,127,191,26,225,199,190,222,71,37,63,182,6,121,63,67,98,109,62,182,126,67,191,182,175,107,191,148,202,136,189,71,67,92,63,202,199,87,63,248,254,204,189,237,228,110,191,234,220,61,191,159,68,135,62,197,222,122,63,238,167,30,63,195,132,215,190,103,219,127,191,208,14,246,190,233,225,16,63,65,183,125,63,224,242,167,62,34,248,49,191,153,129,116,191,62,82,42,190,18,25,78,63,29,124,100,63,243,4,53,63,26,225,199,62,34,248,49,191,237,228,110,191,37,222,8,189,28,55,104,63,234,220,61,63,224,242,167,190,166,109,127,191,204,234,230,190,222,71,37,63,153,129,116,63,248,254,204,61,202,127,96,191,157,232,72,191,159,68,135,62,65,183,125,63,60,118,2,63,161,218,23,191,182,6,121,191,62,82,42,190,202,199,87,63,154,14,83,63,105,247,75,190,197,222,122,191,233,225,16,191,196,191,9,63,26,111,124,63,67,98,109,62,18,25,78,191,71,67,92,191,96,124,8,62,116,231,118,63,238,167,30,63,208,14,246,190,222,182,126,191,111,177,151,190,182,126,67,63,29,124,100,63,148,202,136,189,213,213,113,191,140,184,43,191,195,132,215,62,103,219,127,63,76,4,184,62,212,4,56,191,182,175,107,191,243,4,53,63,224,242,167,62,157,232,72,191,202,199,87,191,67,98,109,62,222,182,126,63,195,132,215,62,212,4,56,191,29,124,100,191,96,124,8,62,197,222,122,63,60,118,2,63,222,71,37,191,237,228,110,191,37,222,8,61,153,129,116,63,161,218,23,63,233,225,16,191,116,231,118,191,148,202,136,189,182,175,107,63,140,184,43,63,208,14,246,190,26,111,124,191,62,82,42,190,202,127,96,63,234,220,61,63,26,225,199,190,166,109,127,191,159,68,135,190,154,14,83,63,18,25,78,63,111,177,151,190,103,219,127,191,76,4,184,190,182,126,67,63,71,67,92,63,105,247,75,190,65,183,125,191,204,234,230,190,34,248,49,63,28,55,104,63,248,254,204,189,182,6,121,191,196,191,9,191,238,167,30,63,213,213,113,63,243,4,53,63,159,68,135,62,71,67,92,191,212,4,56,191,208,14,246,62,182,6,121,63,37,222,8,61,153,129,116,191,196,191,9,191,140,184,43,63,29,124,100,63,105,247,75,190,166,109,127,191,224,242,167,190,154,14,83,63,182,126,67,63,195,132,215,190,26,111,124,191,248,254,204,189,237,228,110,63,161,218,23,63,238,167,30,191,182,175,107,191,96,124,8,62,65,183,125,63,26,225,199,62,157,232,72,191,18,25,78,191,76,4,184,62,222,182,126,63,62,82,42,62,28,55,104,191,222,71,37,191,233,225,16,63,213,213,113,63,148,202,136,189,197,222,122,191,204,234,230,190,234,220,61,63,202,199,87,63,111,177,151,190,103,219,127,191,67,98,109,190,202,127,96,63,34,248,49,63,60,118,2,191,116,231,118,191,243,4,53,63,105,247,75,62,182,175,107,191,233,225,16,191,34,248,49,63,202,199,87,63,76,4,184,190,26,111,124,191,37,222,8,189,182,6,121,63,195,132,215,62,18,25,78,191,234,220,61,191,60,118,2,63,213,213,113,63,96,124,8,190,166,109,127,191,159,68,135,190,29,124,100,63,238,167,30,63,222,71,37,191,202,127,96,191,111,177,151,62,222,182,126,63,248,254,204,61,153,129,116,191,208,14,246,190,182,126,67,63,157,232,72,63,204,234,230,190,116,231,118,191,148,202,136,61,65,183,125,63,224,242,167,62,71,67,92,191,140,184,43,191,161,218,23,63,28,55,104,63,67,98,109,190,103,219,127,191,62,82,42,190,237,228,110,63,196,191,9,63,212,4,56,191,154,14,83,191,26,225,199,62,197,222,122,63,243,4,53,63,96,124,8,62,116,231,118,191,26,225,199,190,71,67,92,63,238,167,30,63,34,248,49,191,18,25,78,191,208,14,246,62,237,228,110,63,67,98,109,190,222,182,126,191,37,222,8,189,26,111,124,63,111,177,151,62,28,55,104,191,196,191,9,191,182,126,67,63,234,220,61,63,233,225,16,191,29,124,100,191,224,242,167,62,197,222,122,63,148,202,136,189,166,109,127,191,105,247,75,190,213,213,113,63,204,234,230,62,154,14,83,191,140,184,43,191,222,71,37,63,202,199,87,63,195,132,215,190,153,129,116,191,62,82,42,62,103,219,127,63,248,254,204,61,182,6,121,191,76,4,184,190,202,127,96,63,161,218,23,63,212,4,56,191,157,232,72,191,60,118,2,63,182,175,107,63,159,68,135,190,65,183,125,191,243,4,53,63,148,202,136,61,65,183,125,191,105,247,75,190,116,231,118,63,224,242,167,62,182,175,107,191,204,234,230,190,71,67,92,63,233,225,16,63,157,232,72,191,140,184,43,191,34,248,49,63,182,126,67,63,161,218,23,191,202,199,87,191,208,14,246,62,28,55,104,63,76,4,184,190,153,129,116,191,67,98,109,62,26,111,124,63,248,254,204,189,103,219,127,191,37,222,8,189,222,182,126,63,62,82,42,62,182,6,121,191,111,177,151,190,237,228,110,63,195,132,215,62,202,127,96,191,196,191,9,191,18,25,78,63,222,71,37,63,212,4,56,191,234,220,61,191,238,167,30,63,154,14,83,63,60,118,2,191,29,124,100,191,26,225,199,62,213,213,113,63,159,68,135,190,197,222,122,191,96,124,8,62,166,109,127,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,91,26,141,38,0,0,128,191,243,4,53,63,148,202,136,189,65,183,125,191,105,247,75,62,116,231,118,63,224,242,167,190,182,175,107,191,204,234,230,62,71,67,92,63,233,225,16,191,157,232,72,191,140,184,43,63,34,248,49,63,182,126,67,191,161,218,23,191,202,199,87,63,208,14,246,62,28,55,104,191,76,4,184,190,153,129,116,63,67,98,109,62,26,111,124,191,248,254,204,189,103,219,127,63,37,222,8,189,222,182,126,191,62,82,42,62,182,6,121,63,111,177,151,190,237,228,110,191,195,132,215,62,202,127,96,63,196,191,9,191,18,25,78,191,222,71,37,63,212,4,56,63,234,220,61,191,238,167,30,191,154,14,83,63,60,118,2,63,29,124,100,191,26,225,199,190,213,213,113,63,159,68,135,62,197,222,122,191,96,124,8,190,166,109,127,63,243,4,53,63,96,124,8,190,116,231,118,191,26,225,199,62,71,67,92,63,238,167,30,191,34,248,49,191,18,25,78,63,208,14,246,62,237,228,110,191,67,98,109,190,222,182,126,63,37,222,8,189,26,111,124,191,111,177,151,62,28,55,104,63,196,191,9,191,182,126,67,191,234,220,61,63,233,225,16,63,29,124,100,191,224,242,167,190,197,222,122,63,148,202,136,61,166,109,127,191,105,247,75,62,213,213,113,63,204,234,230,190,154,14,83,191,140,184,43,63,222,71,37,63,202,199,87,191,195,132,215,190,153,129,116,63,62,82,42,62,103,219,127,191,248,254,204,61,182,6,121,63,76,4,184,190,202,127,96,191,161,218,23,63,212,4,56,63,157,232,72,191,60,118,2,191,182,175,107,63,159,68,135,62,65,183,125,191,243,4,53,63,105,247,75,190,182,175,107,191,233,225,16,63,34,248,49,63,202,199,87,191,76,4,184,190,26,111,124,63,37,222,8,189,182,6,121,191,195,132,215,62,18,25,78,63,234,220,61,191,60,118,2,191,213,213,113,63,96,124,8,62,166,109,127,191,159,68,135,62,29,124,100,63,238,167,30,191,222,71,37,191,202,127,96,63,111,177,151,62,222,182,126,191,248,254,204,61,153,129,116,63,208,14,246,190,182,126,67,191,157,232,72,63,204,234,230,62,116,231,118,191,148,202,136,189,65,183,125,63,224,242,167,190,71,67,92,191,140,184,43,63,161,218,23,63,28,55,104,191,67,98,109,190,103,219,127,63,62,82,42,190,237,228,110,191,196,191,9,63,212,4,56,63,154,14,83,191,26,225,199,190,197,222,122,63,243,4,53,63,159,68,135,190,71,67,92,191,212,4,56,63,208,14,246,62,182,6,121,191,37,222,8,61,153,129,116,63,196,191,9,191,140,184,43,191,29,124,100,63,105,247,75,62,166,109,127,191,224,242,167,62,154,14,83,63,182,126,67,191,195,132,215,190,26,111,124,63,248,254,204,189,237,228,110,191,161,218,23,63,238,167,30,63,182,175,107,191,96,124,8,190,65,183,125,63,26,225,199,190,157,232,72,191,18,25,78,63,76,4,184,62,222,182,126,191,62,82,42,62,28,55,104,63,222,71,37,191,233,225,16,191,213,213,113,63,148,202,136,61,197,222,122,191,204,234,230,62,234,220,61,63,202,199,87,191,111,177,151,190,103,219,127,63,67,98,109,190,202,127,96,191,34,248,49,63,60,118,2,63,116,231,118,191,243,4,53,63,224,242,167,190,157,232,72,191,202,199,87,63,67,98,109,62,222,182,126,191,195,132,215,62,212,4,56,63,29,124,100,191,96,124,8,190,197,222,122,63,60,118,2,191,222,71,37,191,237,228,110,63,37,222,8,61,153,129,116,191,161,218,23,63,233,225,16,63,116,231,118,191,148,202,136,61,182,175,107,63,140,184,43,191,208,14,246,190,26,111,124,63,62,82,42,190,202,127,96,191,234,220,61,63,26,225,199,62,166,109,127,191,159,68,135,62,154,14,83,63,18,25,78,191,111,177,151,190,103,219,127,63,76,4,184,190,182,126,67,191,71,67,92,63,105,247,75,62,65,183,125,191,204,234,230,62,34,248,49,63,28,55,104,191,248,254,204,189,182,6,121,63,196,191,9,191,238,167,30,191,213,213,113,63,243,4,53,63,26,225,199,190,34,248,49,191,237,228,110,63,37,222,8,189,28,55,104,191,234,220,61,63,224,242,167,62,166,109,127,191,204,234,230,62,222,71,37,63,153,129,116,191,248,254,204,61,202,127,96,63,157,232,72,191,159,68,135,190,65,183,125,63,60,118,2,191,161,218,23,191,182,6,121,63,62,82,42,190,202,199,87,191,154,14,83,63,105,247,75,62,197,222,122,191,233,225,16,63,196,191,9,63,26,111,124,191,67,98,109,62,18,25,78,63,71,67,92,191,96,124,8,190,116,231,118,63,238,167,30,191,208,14,246,190,222,182,126,63,111,177,151,190,182,126,67,191,29,124,100,63,148,202,136,61,213,213,113,191,140,184,43,63,195,132,215,62,103,219,127,191,76,4,184,62,212,4,56,63,182,175,107,191,243,4,53,63,204,234,230,190,161,218,23,191,26,111,124,63,111,177,151,190,212,4,56,191,213,213,113,63,96,124,8,190,154,14,83,191,202,127,96,63,37,222,8,61,28,55,104,191,157,232,72,63,105,247,75,62,116,231,118,191,140,184,43,63,76,4,184,62,222,182,126,191,196,191,9,63,60,118,2,63,166,109,127,191,26,225,199,62,222,71,37,63,182,6,121,191,67,98,109,62,182,126,67,63,182,175,107,191,148,202,136,61,71,67,92,63,202,199,87,191,248,254,204,189,237,228,110,63,234,220,61,191,159,68,135,190,197,222,122,63,238,167,30,191,195,132,215,190,103,219,127,63,208,14,246,190,233,225,16,191,65,183,125,63,224,242,167,190,34,248,49,191,153,129,116,63,62,82,42,190,18,25,78,191,29,124,100,63,243,4,53,63,60,118,2,191,208,14,246,190,103,219,127,63,196,191,9,191,204,234,230,190,166,109,127,63,233,225,16,191,195,132,215,190,222,182,126,63,161,218,23,191,26,225,199,190,65,183,125,63,238,167,30,191,76,4,184,190,26,111,124,63,222,71,37,191,224,242,167,190,197,222,122,63,140,184,43,191,111,177,151,190,182,6,121,63,34,248,49,191,159,68,135,190,116,231,118,63,212,4,56,191,67,98,109,190,153,129,116,63,234,220,61,191,105,247,75,190,213,213,113,63,182,126,67,191,62,82,42,190,237,228,110,63,157,232,72,191,96,124,8,190,182,175,107,63,18,25,78,191,248,254,204,189,28,55,104,63,154,14,83,191,148,202,136,189,29,124,100,63,202,199,87,191,37,222,8,189,202,127,96,63,71,67,92,191,243,4,53,63,233,225,16,191,76,4,184,190,182,6,121,63,234,220,61,191,96,124,8,190,29,124,100,63,202,127,96,191,248,254,204,61,182,126,67,63,116,231,118,191,224,242,167,62,161,218,23,63,103,219,127,191,196,191,9,63,26,225,199,62,197,222,122,191,212,4,56,63,62,82,42,62,28,55,104,191,71,67,92,63,148,202,136,189,157,232,72,191,153,129,116,63,111,177,151,190,238,167,30,191,166,109,127,63,60,118,2,191,195,132,215,190,26,111,124,63,34,248,49,191,105,247,75,190,182,175,107,63,202,199,87,191,37,222,8,61,18,25,78,63,213,213,113,191,159,68,135,62,222,71,37,63,222,182,126,191,208,14,246,62,204,234,230,62,65,183,125,191,140,184,43,63,67,98,109,62,237,228,110,191,154,14,83,63,243,4,53,63,238,167,30,191,67,98,109,190,28,55,104,63,29,124,100,191,105,247,75,62,222,71,37,63,103,219,127,191,161,218,23,63,159,68,135,62,182,175,107,191,202,127,96,63,62,82,42,190,140,184,43,191,166,109,127,63,233,225,16,191,111,177,151,190,237,228,110,63,71,67,92,191,96,124,8,62,34,248,49,63,222,182,126,191,196,191,9,63,224,242,167,62,213,213,113,191,202,199,87,63,248,254,204,189,212,4,56,191,65,183,125,63,60,118,2,191,76,4,184,190,153,129,116,63,154,14,83,191,148,202,136,61,234,220,61,63,26,111,124,191,208,14,246,62,26,225,199,62,116,231,118,191,18,25,78,63,37,222,8,189,182,126,67,191,197,222,122,63,204,234,230,190,195,132,215,190,182,6,121,63,157,232,72,191,243,4,53,63,140,184,43,191,248,254,204,189,18,25,78,63,197,222,122,191,60,118,2,63,111,177,151,62,28,55,104,191,182,175,107,63,224,242,167,190,208,14,246,190,182,6,121,63,154,14,83,191,96,124,8,62,222,71,37,63,103,219,127,191,34,248,49,63,148,202,136,61,157,232,72,191,26,111,124,63,196,191,9,191,159,68,135,190,29,124,100,63,237,228,110,191,76,4,184,62,204,234,230,62,116,231,118,191,202,199,87,63,62,82,42,190,238,167,30,191,166,109,127,63,212,4,56,191,37,222,8,189,182,126,67,63,65,183,125,191,233,225,16,63,67,98,109,62,202,127,96,191,213,213,113,63,26,225,199,190,195,132,215,190,153,129,116,63,71,67,92,191,105,247,75,62,161,218,23,63,222,182,126,191,234,220,61,63,243,4,53,63,212,4,56,191,37,222,8,61,140,184,43,63,166,109,127,191,182,126,67,63,248,254,204,189,238,167,30,191,65,183,125,63,18,25,78,191,62,82,42,62,233,225,16,63,197,222,122,191,202,199,87,63,67,98,109,190,60,118,2,191,116,231,118,63,202,127,96,191,111,177,151,62,204,234,230,62,213,213,113,191,28,55,104,63,76,4,184,190,26,225,199,190,182,175,107,63,237,228,110,191,195,132,215,62,224,242,167,62,29,124,100,191,153,129,116,63,208,14,246,190,159,68,135,190,71,67,92,63,182,6,121,191,196,191,9,63,105,247,75,62,154,14,83,191,26,111,124,63,161,218,23,191,96,124,8,190,157,232,72,63,222,182,126,191,222,71,37,63,148,202,136,61,234,220,61,191,103,219,127,63,34,248,49,191,243,4,53,63,182,126,67,191,62,82,42,62,60,118,2,63,213,213,113,191,237,228,110,63,208,14,246,190,105,247,75,190,157,232,72,63,103,219,127,191,234,220,61,63,96,124,8,190,196,191,9,191,153,129,116,63,182,175,107,191,204,234,230,62,67,98,109,62,18,25,78,191,166,109,127,63,212,4,56,191,248,254,204,61,233,225,16,63,116,231,118,191,28,55,104,63,195,132,215,190,159,68,135,190,154,14,83,63,222,182,126,191,34,248,49,63,148,202,136,189,161,218,23,191,182,6,121,63,29,124,100,191,26,225,199,62,111,177,151,62,202,199,87,191,65,183,125,63,140,184,43,191,37,222,8,61,238,167,30,63,197,222,122,191,202,127,96,63,76,4,184,190,224,242,167,190,71,67,92,63,26,111,124,191,222,71,37,63,243,4,53,63,18,25,78,191,111,177,151,62,224,242,167,62,154,14,83,191,103,219,127,63,157,232,72,191,159,68,135,62,76,4,184,62,202,199,87,191,166,109,127,63,182,126,67,191,67,98,109,62,26,225,199,62,71,67,92,191,222,182,126,63,234,220,61,191,105,247,75,62,195,132,215,62,202,127,96,191,65,183,125,63,212,4,56,191,62,82,42,62,204,234,230,62,29,124,100,191,26,111,124,63,34,248,49,191,96,124,8,62,208,14,246,62,28,55,104,191,197,222,122,63,140,184,43,191,248,254,204,61,60,118,2,63,182,175,107,191,182,6,121,63,222,71,37,191,148,202,136,61,196,191,9,63,237,228,110,191,116,231,118,63,238,167,30,191,37,222,8,61,233,225,16,63,213,213,113,191,153,129,116,63,161,218,23,191,243,4,53,63,202,199,87,191,195,132,215,62,96,124,8,62,222,71,37,191,153,129,116,63,116,231,118,191,140,184,43,63,62,82,42,190,26,225,199,190,154,14,83,63,103,219,127,191,71,67,92,63,204,234,230,190,248,254,204,189,238,167,30,63,213,213,113,191,182,6,121,63,34,248,49,191,105,247,75,62,76,4,184,62,18,25,78,191,166,109,127,63,202,127,96,191,208,14,246,62,148,202,136,61,161,218,23,191,237,228,110,63,197,222,122,191,212,4,56,63,67,98,109,190,224,242,167,190,157,232,72,63,222,182,126,191,29,124,100,63,60,118,2,191,37,222,8,189,233,225,16,63,182,175,107,191,26,111,124,63,234,220,61,191,159,68,135,62,111,177,151,62,182,126,67,191,65,183,125,63,28,55,104,191,196,191,9,63,243,4,53,63,202,127,96,191,196,191,9,63,148,202,136,189,195,132,215,190,18,25,78,63,65,183,125,191,237,228,110,63,222,71,37,191,105,247,75,62,111,177,151,62,212,4,56,191,116,231,118,63,182,6,121,191,234,220,61,63,224,242,167,190,62,82,42,190,238,167,30,63,182,175,107,191,222,182,126,63,154,14,83,191,204,234,230,62,37,222,8,61,60,118,2,191,71,67,92,63,103,219,127,191,29,124,100,63,233,225,16,191,248,254,204,61,26,225,199,62,157,232,72,191,26,111,124,63,213,213,113,191,140,184,43,63,67,98,109,190,159,68,135,190,34,248,49,63,153,129,116,191,197,222,122,63,182,126,67,191,76,4,184,62,96,124,8,62,161,218,23,191,28,55,104,63,166,109,127,191,202,199,87,63,208,14,246,190,243,4,53,63,28,55,104,191,222,71,37,63,159,68,135,190,62,82,42,190,233,225,16,63,71,67,92,191,222,182,126,63,213,213,113,191,212,4,56,63,76,4,184,190,148,202,136,189,208,14,246,62,18,25,78,191,197,222,122,63,182,6,121,191,157,232,72,63,204,234,230,190,37,222,8,61,26,225,199,62,234,220,61,191,153,129,116,63,65,183,125,191,202,199,87,63,196,191,9,191,96,124,8,62,111,177,151,62,140,184,43,191,182,175,107,63,103,219,127,191,29,124,100,63,238,167,30,191,67,98,109,62,105,247,75,62,161,218,23,191,202,127,96,63,166,109,127,191,237,228,110,63,34,248,49,191,224,242,167,62,248,254,204,61,60,118,2,191,154,14,83,63,26,111,124,191,116,231,118,63,182,126,67,191,195,132,215,62,243,4,53,63,237,228,110,191,234,220,61,63,204,234,230,190,248,254,204,61,159,68,135,62,161,218,23,191,202,199,87,63,197,222,122,191,26,111,124,63,71,67,92,191,238,167,30,63,111,177,151,190,148,202,136,189,195,132,215,62,212,4,56,191,182,175,107,63,103,219,127,191,213,213,113,63,182,126,67,191,208,14,246,62,96,124,8,190,67,98,109,190,233,225,16,63,154,14,83,191,182,6,121,63,65,183,125,191,202,127,96,63,222,71,37,191,224,242,167,62,37,222,8,61,26,225,199,190,34,248,49,63,28,55,104,191,166,109,127,63,153,129,116,191,157,232,72,63,60,118,2,191,62,82,42,62,105,247,75,62,196,191,9,191,18,25,78,63,116,231,118,191,222,182,126,63,29,124,100,191,140,184,43,63,76,4,184,190,243,4,53,63,153,129,116,191,154,14,83,63,238,167,30,191,76,4,184,62,148,202,136,189,67,98,109,190,60,118,2,63,234,220,61,191,28,55,104,63,65,183,125,191,26,111,124,63,29,124,100,191,212,4,56,63,208,14,246,190,105,247,75,62,248,254,204,61,26,225,199,190,222,71,37,63,202,199,87,191,116,231,118,63,103,219,127,191,213,213,113,63,18,25,78,191,161,218,23,63,224,242,167,190,37,222,8,61,159,68,135,62,196,191,9,191,182,126,67,63,182,175,107,191,222,182,126,63,197,222,122,191,202,127,96,63,34,248,49,191,204,234,230,62,62,82,42,190,96,124,8,190,195,132,215,62,140,184,43,191,71,67,92,63,182,6,121,191,166,109,127,63,237,228,110,191,157,232,72,63,233,225,16,191,111,177,151,62,243,4,53,63,182,6,121,191,29,124,100,63,182,126,67,191,161,218,23,63,26,225,199,190,62,82,42,62,148,202,136,61,111,177,151,190,60,118,2,63,34,248,49,191,202,199,87,63,213,213,113,191,222,182,126,63,65,183,125,191,237,228,110,63,154,14,83,191,140,184,43,63,208,14,246,190,159,68,135,62,37,222,8,189,105,247,75,190,195,132,215,62,238,167,30,191,157,232,72,63,28,55,104,191,197,222,122,63,103,219,127,191,116,231,118,63,202,127,96,191,234,220,61,63,233,225,16,191,76,4,184,62,96,124,8,190,248,254,204,189,224,242,167,62,196,191,9,191,212,4,56,63,71,67,92,191,153,129,116,63,166,109,127,191,26,111,124,63,182,175,107,191,18,25,78,63,222,71,37,191,204,234,230,62,67,98,109,190,243,4,53,63,26,111,124,191,213,213,113,63,202,127,96,191,157,232,72,63,140,184,43,191,196,191,9,63,26,225,199,190,67,98,109,62,148,202,136,189,248,254,204,189,159,68,135,62,195,132,215,190,233,225,16,63,34,248,49,191,18,25,78,63,29,124,100,191,153,129,116,63,65,183,125,191,103,219,127,63,197,222,122,191,237,228,110,63,71,67,92,191,182,126,67,63,222,71,37,191,60,118,2,63,76,4,184,190,105,247,75,62,37,222,8,189,96,124,8,190,111,177,151,62,204,234,230,190,161,218,23,63,212,4,56,191,154,14,83,63,28,55,104,191,116,231,118,63,222,182,126,191,166,109,127,63,182,6,121,191,182,175,107,63,202,199,87,191,234,220,61,63,238,167,30,191,208,14,246,62,224,242,167,190,62,82,42,62,243,4,53,63,222,182,126,191,197,222,122,63,153,129,116,191,182,175,107,63,202,127,96,191,154,14,83,63,182,126,67,191,34,248,49,63,238,167,30,191,196,191,9,63,204,234,230,190,76,4,184,62,159,68,135,190,62,82,42,62,148,202,136,189,37,222,8,189,96,124,8,62,67,98,109,190,224,242,167,62,195,132,215,190,60,118,2,63,161,218,23,191,140,184,43,63,234,220,61,191,18,25,78,63,71,67,92,191,28,55,104,63,213,213,113,191,182,6,121,63,65,183,125,191,103,219,127,63,166,109,127,191,26,111,124,63,116,231,118,191,237,228,110,63,29,124,100,191,202,199,87,63,157,232,72,191,212,4,56,63,222,71,37,191,233,225,16,63,208,14,246,190,26,225,199,62,111,177,151,190,105,247,75,62,248,254,204,189,243,4,53,63,103,219,127,191,166,109,127,63,222,182,126,191,65,183,125,63,26,111,124,191,197,222,122,63,182,6,121,191,116,231,118,63,153,129,116,191,213,213,113,63,237,228,110,191,182,175,107,63,28,55,104,191,29,124,100,63,202,127,96,191,71,67,92,63,202,199,87,191,154,14,83,63,18,25,78,191,157,232,72,63,182,126,67,191,234,220,61,63,212,4,56,191,34,248,49,63,140,184,43,191,222,71,37,63,238,167,30,191,161,218,23,63,233,225,16,191,196,191,9,63,60,118,2,191,208,14,246,62,204,234,230,190,195,132,215,62,26,225,199,190,76,4,184,62,224,242,167,190,111,177,151,62,159,68,135,190,67,98,109,62,105,247,75,190,62,82,42,62,96,124,8,190,248,254,204,61,148,202,136,189,37,222,8,61,243,4,53,63,233,220,127,63,175,115,127,63,109,196,126,63,85,207,125,63,168,148,124,63,190,20,123,63,0,80,121,63,234,70,119,63,11,250,116,63,3,106,114,63,136,151,111,63,94,131,108,63,95,46,105,63,116,153,101,63,152,197,97,63,215,179,93,63,80,101,89,63,49,219,84,63,184,22,80,63,52,25,75,63,3,228,69,63,147,120,64,63,95,216,58,63,243,4,53,63,232,255,46,63,227,202,40,63,153,103,34,63,202,215,27,63,66,29,21,63,218,57,14,63,116,47,7,63,0,0,0,63,234,90,241,62,170,115,226,62,86,78,211,62,21,239,195,62,30,90,180,62,183,147,164,62,49,160,148,62,238,131,132,62,174,134,104,62,194,197,71,62,18,206,38,62,168,168,5,62,54,189,200,61,19,242,133,61,114,4,6,61,243,4,53,63,109,196,126,63,190,20,123,63,11,250,116,63,94,131,108,63,152,197,97,63,49,219,84,63,3,228,69,63,243,4,53,63,153,103,34,63,218,57,14,63,234,90,241,62,21,239,195,62,49,160,148,62,194,197,71,62,54,189,200,61,50,49,141,36,54,189,200,189,194,197,71,190,49,160,148,190,21,239,195,190,234,90,241,190,218,57,14,191,153,103,34,191,243,4,53,191,3,228,69,191,49,219,84,191,152,197,97,191,94,131,108,191,11,250,116,191,190,20,123,191,109,196,126,191,0,0,128,191,109,196,126,191,190,20,123,191,11,250,116,191,94,131,108,191,152,197,97,191,49,219,84,191,3,228,69,191,243,4,53,191,153,103,34,191,218,57,14,191,234,90,241,190,21,239,195,190,49,160,148,190,194,197,71,190,54,189,200,189,243,4,53,63,168,148,124,63,3,106,114,63,152,197,97,63,52,25,75,63,232,255,46,63,218,57,14,63,86,78,211,62,238,131,132,62,54,189,200,61,19,242,133,189,174,134,104,190,21,239,195,190,116,47,7,191,227,202,40,191,3,228,69,191,215,179,93,191,136,151,111,191,190,20,123,191,233,220,127,191,85,207,125,191,11,250,116,191,116,153,101,191,184,22,80,191,243,4,53,191,66,29,21,191,170,115,226,190,49,160,148,190,168,168,5,190,114,4,6,61,194,197,71,62,30,90,180,62,0,0,0,63,153,103,34,63,147,120,64,63,80,101,89,63,94,131,108,63,0,80,121,63,175,115,127,63,109,196,126,63,234,70,119,63,95,46,105,63,49,219,84,63,95,216,58,63,202,215,27,63,234,90,241,62,183,147,164,62,18,206,38,62,243,4,53,63,0,80,121,63,116,153,101,63,3,228,69,63,202,215,27,63,86,78,211,62,194,197,71,62,114,4,6,189,238,131,132,190,234,90,241,190,227,202,40,191,184,22,80,191,94,131,108,191,168,148,124,191,175,115,127,191,11,250,116,191,215,179,93,191,95,216,58,191,218,57,14,191,30,90,180,190,168,168,5,190,54,189,200,61,183,147,164,62,116,47,7,63,243,4,53,63,80,101,89,63,3,106,114,63,109,196,126,63,85,207,125,63,136,151,111,63,49,219,84,63,232,255,46,63,0,0,0,63,49,160,148,62,19,242,133,61,18,206,38,190,21,239,195,190,66,29,21,191,147,120,64,191,152,197,97,191,234,70,119,191,233,220,127,191,190,20,123,191,95,46,105,191,52,25,75,191,153,103,34,191,170,115,226,190,174,134,104,190,243,4,53,63,11,250,116,63,49,219,84,63,153,103,34,63,21,239,195,62,54,189,200,61,194,197,71,190,234,90,241,190,243,4,53,191,152,197,97,191,190,20,123,191,109,196,126,191,94,131,108,191,3,228,69,191,218,57,14,191,49,160,148,190,202,201,83,165,49,160,148,62,218,57,14,63,3,228,69,63,94,131,108,63,109,196,126,63,190,20,123,63,152,197,97,63,243,4,53,63,234,90,241,62,194,197,71,62,54,189,200,189,21,239,195,190,153,103,34,191,49,219,84,191,11,250,116,191,0,0,128,191,11,250,116,191,49,219,84,191,153,103,34,191,21,239,195,190,54,189,200,189,194,197,71,62,234,90,241,62,243,4,53,63,152,197,97,63,190,20,123,63,109,196,126,63,94,131,108,63,3,228,69,63,218,57,14,63,49,160,148,62,243,4,53,63,136,151,111,63,147,120,64,63,234,90,241,62,168,168,5,62,174,134,104,190,218,57,14,191,184,22,80,191,234,70,119,191,109,196,126,191,116,153,101,191,232,255,46,191,21,239,195,190,114,4,6,189,183,147,164,62,153,103,34,63,215,179,93,63,168,148,124,63,190,20,123,63,80,101,89,63,202,215,27,63,49,160,148,62,19,242,133,189,86,78,211,190,243,4,53,191,95,46,105,191,175,115,127,191,11,250,116,191,52,25,75,191,116,47,7,191,194,197,71,190,18,206,38,62,0,0,0,63,3,228,69,63,3,106,114,63,233,220,127,63,94,131,108,63,95,216,58,63,170,115,226,62,54,189,200,61,238,131,132,190,66,29,21,191,49,219,84,191,0,80,121,191,85,207,125,191,152,197,97,191,227,202,40,191,30,90,180,190,243,4,53,63,95,46,105,63,227,202,40,63,49,160,148,62,168,168,5,190,116,47,7,191,49,219,84,191,168,148,124,191,234,70,119,191,3,228,69,191,170,115,226,190,114,4,6,189,21,239,195,62,95,216,58,63,3,106,114,63,109,196,126,63,215,179,93,63,66,29,21,63,194,197,71,62,174,134,104,190,202,215,27,191,152,197,97,191,175,115,127,191,136,151,111,191,243,4,53,191,30,90,180,190,19,242,133,61,234,90,241,62,52,25,75,63,0,80,121,63,190,20,123,63,184,22,80,63,0,0,0,63,54,189,200,61,183,147,164,190,232,255,46,191,94,131,108,191,233,220,127,191,116,153,101,191,153,103,34,191,238,131,132,190,18,206,38,62,218,57,14,63,80,101,89,63,85,207,125,63,11,250,116,63,147,120,64,63,86,78,211,62,243,4,53,63,152,197,97,63,218,57,14,63,54,189,200,61,21,239,195,190,3,228,69,191,190,20,123,191,11,250,116,191,243,4,53,191,49,160,148,190,194,197,71,62,153,103,34,63,94,131,108,63,109,196,126,63,49,219,84,63,234,90,241,62,126,125,176,37,234,90,241,190,49,219,84,191,109,196,126,191,94,131,108,191,153,103,34,191,194,197,71,190,49,160,148,62,243,4,53,63,11,250,116,63,190,20,123,63,3,228,69,63,21,239,195,62,54,189,200,189,218,57,14,191,152,197,97,191,0,0,128,191,152,197,97,191,218,57,14,191,54,189,200,189,21,239,195,62,3,228,69,63,190,20,123,63,11,250,116,63,243,4,53,63,49,160,148,62,194,197,71,190,153,103,34,191,94,131,108,191,109,196,126,191,49,219,84,191,234,90,241,190,243,4,53,63,80,101,89,63,170,115,226,62,54,189,200,189,202,215,27,191,136,151,111,191,190,20,123,191,95,216,58,191,238,131,132,190,49,160,148,62,147,120,64,63,168,148,124,63,94,131,108,63,66,29,21,63,19,242,133,61,234,90,241,190,215,179,93,191,233,220,127,191,49,219,84,191,86,78,211,190,168,168,5,62,153,103,34,63,3,106,114,63,0,80,121,63,243,4,53,63,174,134,104,62,183,147,164,190,3,228,69,191,85,207,125,191,95,46,105,191,218,57,14,191,114,4,6,189,0,0,0,63,152,197,97,63,175,115,127,63,184,22,80,63,21,239,195,62,18,206,38,190,227,202,40,191,11,250,116,191,234,70,119,191,232,255,46,191,194,197,71,190,30,90,180,62,52,25,75,63,109,196,126,63,116,153,101,63,116,47,7,63,243,4,53,63,184,22,80,63,183,147,164,62,49,160,148,190,52,25,75,191,233,220,127,191,49,219,84,191,30,90,180,190,238,131,132,62,3,228,69,63,175,115,127,63,80,101,89,63,21,239,195,62,174,134,104,190,147,120,64,191,109,196,126,191,215,179,93,191,86,78,211,190,194,197,71,62,95,216,58,63,85,207,125,63,152,197,97,63,170,115,226,62,18,206,38,190,243,4,53,191,168,148,124,191,116,153,101,191,234,90,241,190,168,168,5,62,232,255,46,63,190,20,123,63,95,46,105,63,0,0,0,63,54,189,200,189,227,202,40,191,0,80,121,191,94,131,108,191,116,47,7,191,19,242,133,61,153,103,34,63,234,70,119,63,136,151,111,63,218,57,14,63,114,4,6,189,202,215,27,191,11,250,116,191,3,106,114,191,66,29,21,191,243,4,53,63,3,228,69,63,194,197,71,62,234,90,241,190,94,131,108,191,11,250,116,191,218,57,14,191,54,189,200,61,243,4,53,63,109,196,126,63,49,219,84,63,49,160,148,62,21,239,195,190,152,197,97,191,190,20,123,191,153,103,34,191,23,22,247,165,153,103,34,63,190,20,123,63,152,197,97,63,21,239,195,62,49,160,148,190,49,219,84,191,109,196,126,191,243,4,53,191,54,189,200,189,218,57,14,63,11,250,116,63,94,131,108,63,234,90,241,62,194,197,71,190,3,228,69,191,0,0,128,191,3,228,69,191,194,197,71,190,234,90,241,62,94,131,108,63,11,250,116,63,218,57,14,63,54,189,200,189,243,4,53,191,109,196,126,191,49,219,84,191,49,160,148,190,21,239,195,62,152,197,97,63,190,20,123,63,153,103,34,63,243,4,53,63,95,216,58,63,19,242,133,61,153,103,34,191,85,207,125,191,184,22,80,191,194,197,71,190,116,47,7,63,234,70,119,63,152,197,97,63,183,147,164,62,86,78,211,190,94,131,108,191,136,151,111,191,170,115,226,190,49,160,148,62,215,179,93,63,0,80,121,63,218,57,14,63,18,206,38,190,52,25,75,191,109,196,126,191,227,202,40,191,114,4,6,61,243,4,53,63,233,220,127,63,147,120,64,63,54,189,200,61,202,215,27,191,168,148,124,191,49,219,84,191,174,134,104,190,0,0,0,63,11,250,116,63,116,153,101,63,30,90,180,62,21,239,195,190,95,46,105,191,3,106,114,191,234,90,241,190,238,131,132,62,80,101,89,63,190,20,123,63,66,29,21,63,168,168,5,190,3,228,69,191,175,115,127,191,232,255,46,191,243,4,53,63,232,255,46,63,19,242,133,189,3,228,69,191,85,207,125,191,66,29,21,191,194,197,71,62,80,101,89,63,234,70,119,63,234,90,241,62,183,147,164,190,95,46,105,191,94,131,108,191,30,90,180,190,170,115,226,62,11,250,116,63,215,179,93,63,174,134,104,62,218,57,14,191,168,148,124,191,52,25,75,191,54,189,200,189,227,202,40,63,233,220,127,63,243,4,53,63,114,4,6,189,147,120,64,191,109,196,126,191,202,215,27,191,18,206,38,62,49,219,84,63,0,80,121,63,0,0,0,63,49,160,148,190,116,153,101,191,136,151,111,191,21,239,195,190,86,78,211,62,3,106,114,63,152,197,97,63,238,131,132,62,116,47,7,191,190,20,123,191,184,22,80,191,168,168,5,190,153,103,34,63,175,115,127,63,95,216,58,63,243,4,53,63,153,103,34,63,194,197,71,190,152,197,97,191,94,131,108,191,49,160,148,190,218,57,14,63,109,196,126,63,243,4,53,63,54,189,200,189,49,219,84,191,11,250,116,191,21,239,195,190,234,90,241,62,190,20,123,63,3,228,69,63,88,215,30,38,3,228,69,191,190,20,123,191,234,90,241,190,21,239,195,62,11,250,116,63,49,219,84,63,54,189,200,61,243,4,53,191,109,196,126,191,218,57,14,191,49,160,148,62,94,131,108,63,152,197,97,63,194,197,71,62,153,103,34,191,0,0,128,191,153,103,34,191,194,197,71,62,152,197,97,63,94,131,108,63,49,160,148,62,218,57,14,191,109,196,126,191,243,4,53,191,54,189,200,61,49,219,84,63,11,250,116,63,21,239,195,62,234,90,241,190,190,20,123,191,3,228,69,191,243,4,53,63,66,29,21,63,183,147,164,190,11,250,116,191,52,25,75,191,114,4,6,61,49,219,84,63,136,151,111,63,238,131,132,62,153,103,34,191,175,115,127,191,116,47,7,191,21,239,195,62,0,80,121,63,147,120,64,63,54,189,200,189,215,179,93,191,95,46,105,191,194,197,71,190,232,255,46,63,85,207,125,63,234,90,241,62,170,115,226,190,168,148,124,191,243,4,53,191,18,206,38,62,116,153,101,63,152,197,97,63,168,168,5,62,95,216,58,191,190,20,123,191,86,78,211,190,0,0,0,63,109,196,126,63,227,202,40,63,174,134,104,190,94,131,108,191,80,101,89,191,19,242,133,189,3,228,69,63,234,70,119,63,30,90,180,62,218,57,14,191,233,220,127,191,202,215,27,191,49,160,148,62,3,106,114,63,184,22,80,63,243,4,53,63,116,47,7,63,170,115,226,190,109,196,126,191,202,215,27,191,30,90,180,62,190,20,123,63,232,255,46,63,238,131,132,190,11,250,116,191,147,120,64,191,18,206,38,62,94,131,108,63,184,22,80,63,19,242,133,189,152,197,97,191,215,179,93,191,114,4,6,189,49,219,84,63,95,46,105,63,168,168,5,62,3,228,69,191,3,106,114,191,174,134,104,190,243,4,53,63,0,80,121,63,183,147,164,62,153,103,34,191,85,207,125,191,86,78,211,190,218,57,14,63,233,220,127,63,0,0,0,63,234,90,241,190,175,115,127,191,66,29,21,191,21,239,195,62,168,148,124,63,227,202,40,63,49,160,148,190,234,70,119,191,95,216,58,191,194,197,71,62,136,151,111,63,52,25,75,63,54,189,200,189,116,153,101,191,80,101,89,191,243,4,53,63,234,90,241,62,218,57,14,191,109,196,126,191,21,239,195,190,153,103,34,63,190,20,123,63,49,160,148,62,243,4,53,191,11,250,116,191,194,197,71,190,3,228,69,63,94,131,108,63,54,189,200,61,49,219,84,191,152,197,97,191,233,136,48,167,152,197,97,63,49,219,84,63,54,189,200,189,94,131,108,191,3,228,69,191,194,197,71,62,11,250,116,63,243,4,53,63,49,160,148,190,190,20,123,191,153,103,34,191,21,239,195,62,109,196,126,63,218,57,14,63,234,90,241,190,0,0,128,191,234,90,241,190,218,57,14,63,109,196,126,63,21,239,195,62,153,103,34,191,190,20,123,191,49,160,148,190,243,4,53,63,11,250,116,63,194,197,71,62,3,228,69,191,94,131,108,191,54,189,200,189,49,219,84,63,152,197,97,63,243,4,53,63,86,78,211,62,227,202,40,191,11,250,116,191,168,168,5,190,80,101,89,63,49,219,84,63,18,206,38,190,234,70,119,191,153,103,34,191,170,115,226,62,233,220,127,63,21,239,195,62,232,255,46,191,3,106,114,191,54,189,200,189,215,179,93,63,184,22,80,63,194,197,71,190,0,80,121,191,202,215,27,191,234,90,241,62,175,115,127,63,30,90,180,62,243,4,53,191,136,151,111,191,19,242,133,189,152,197,97,63,52,25,75,63,174,134,104,190,190,20,123,191,66,29,21,191,0,0,0,63,109,196,126,63,183,147,164,62,95,216,58,191,94,131,108,191,114,4,6,189,116,153,101,63,3,228,69,63,238,131,132,190,168,148,124,191,218,57,14,191,116,47,7,63,85,207,125,63,49,160,148,62,147,120,64,191,95,46,105,191,243,4,53,63,30,90,180,62,147,120,64,191,152,197,97,191,168,168,5,62,0,80,121,63,218,57,14,63,66,29,21,191,234,70,119,191,54,189,200,189,116,153,101,63,95,216,58,63,21,239,195,190,233,220,127,191,183,147,164,190,3,228,69,63,215,179,93,63,18,206,38,190,190,20,123,191,116,47,7,191,202,215,27,63,11,250,116,63,19,242,133,61,95,46,105,191,243,4,53,191,86,78,211,62,175,115,127,63,49,160,148,62,52,25,75,191,80,101,89,191,194,197,71,62,168,148,124,63,0,0,0,63,153,103,34,191,3,106,114,191,114,4,6,189,94,131,108,63,232,255,46,63,170,115,226,190,109,196,126,191,238,131,132,190,184,22,80,63,49,219,84,63,174,134,104,190,85,207,125,191,234,90,241,190,227,202,40,63,136,151,111,63,243,4,53,63,49,160,148,62,49,219,84,191,3,228,69,191,21,239,195,62,109,196,126,63,194,197,71,62,152,197,97,191,243,4,53,191,234,90,241,62,190,20,123,63,54,189,200,61,94,131,108,191,153,103,34,191,218,57,14,63,11,250,116,63,8,72,141,166,11,250,116,191,218,57,14,191,153,103,34,63,94,131,108,63,54,189,200,189,190,20,123,191,234,90,241,190,243,4,53,63,152,197,97,63,194,197,71,190,109,196,126,191,21,239,195,190,3,228,69,63,49,219,84,63,49,160,148,190,0,0,128,191,49,160,148,190,49,219,84,63,3,228,69,63,21,239,195,190,109,196,126,191,194,197,71,190,152,197,97,63,243,4,53,63,234,90,241,190,190,20,123,191,54,189,200,189,94,131,108,63,153,103,34,63,218,57,14,191,11,250,116,191,243,4,53,63,174,134,104,62,116,153,101,191,153,103,34,191,202,215,27,63,95,46,105,63,194,197,71,190,233,220,127,191,238,131,132,190,152,197,97,63,227,202,40,63,66,29,21,191,94,131,108,191,18,206,38,62,175,115,127,63,49,160,148,62,215,179,93,191,232,255,46,191,218,57,14,63,136,151,111,63,168,168,5,190,109,196,126,191,183,147,164,190,80,101,89,63,243,4,53,63,116,47,7,191,3,106,114,191,54,189,200,61,85,207,125,63,30,90,180,62,49,219,84,191,95,216,58,191,0,0,0,63,11,250,116,63,19,242,133,189,168,148,124,191,21,239,195,190,184,22,80,63,147,120,64,63,234,90,241,190,234,70,119,191,114,4,6,61,190,20,123,63,86,78,211,62,52,25,75,191,3,228,69,191,170,115,226,62,0,80,121,63,243,4,53,63,18,206,38,62,3,106,114,191,234,90,241,190,52,25,75,63,95,216,58,63,218,57,14,191,95,46,105,191,238,131,132,62,109,196,126,63,19,242,133,61,0,80,121,191,21,239,195,190,80,101,89,63,227,202,40,63,153,103,34,191,215,179,93,191,30,90,180,62,190,20,123,63,114,4,6,189,85,207,125,191,49,160,148,190,116,153,101,63,66,29,21,63,243,4,53,191,184,22,80,191,170,115,226,62,11,250,116,63,168,168,5,190,233,220,127,191,194,197,71,190,136,151,111,63,0,0,0,63,3,228,69,191,147,120,64,191,116,47,7,63,94,131,108,63,174,134,104,190,175,115,127,191,54,189,200,189,234,70,119,63,86,78,211,62,49,219,84,191,232,255,46,191,202,215,27,63,152,197,97,63,183,147,164,190,168,148,124,191,243,4,53,63,54,189,200,61,190,20,123,191,49,160,148,190,94,131,108,63,234,90,241,62,49,219,84,191,153,103,34,191,243,4,53,63,3,228,69,63,218,57,14,191,152,197,97,191,21,239,195,62,11,250,116,63,194,197,71,190,109,196,126,191,15,47,66,167,109,196,126,63,194,197,71,62,11,250,116,191,21,239,195,190,152,197,97,63,218,57,14,63,3,228,69,191,243,4,53,191,153,103,34,63,49,219,84,63,234,90,241,190,94,131,108,191,49,160,148,62,190,20,123,63,54,189,200,189,0,0,128,191,54,189,200,189,190,20,123,63,49,160,148,62,94,131,108,191,234,90,241,190,49,219,84,63,153,103,34,63,243,4,53,191,3,228,69,191,218,57,14,63,152,197,97,63,21,239,195,190,11,250,116,191,194,197,71,62,109,196,126,63,243,4,53,63,114,4,6,61,175,115,127,191,54,189,200,189,85,207,125,63,18,206,38,62,190,20,123,191,174,134,104,190,234,70,119,63,49,160,148,62,3,106,114,191,30,90,180,190,94,131,108,63,86,78,211,62,116,153,101,191,234,90,241,190,215,179,93,63,116,47,7,63,49,219,84,191,66,29,21,191,52,25,75,63,153,103,34,63,147,120,64,191,232,255,46,191,243,4,53,63,95,216,58,63,227,202,40,191,3,228,69,191,202,215,27,63,184,22,80,63,218,57,14,191,80,101,89,191,0,0,0,63,152,197,97,63,170,115,226,190,95,46,105,191,21,239,195,62,136,151,111,63,183,147,164,190,11,250,116,191,238,131,132,62,0,80,121,63,194,197,71,190,168,148,124,191,168,168,5,62,109,196,126,63,19,242,133,189,233,220,127,191,243,4,53,63,114,4,6,189,175,115,127,191,54,189,200,61,85,207,125,63,18,206,38,190,190,20,123,191,174,134,104,62,234,70,119,63,49,160,148,190,3,106,114,191,30,90,180,62,94,131,108,63,86,78,211,190,116,153,101,191,234,90,241,62,215,179,93,63,116,47,7,191,49,219,84,191,66,29,21,63,52,25,75,63,153,103,34,191,147,120,64,191,232,255,46,63,243,4,53,63,95,216,58,191,227,202,40,191,3,228,69,63,202,215,27,63,184,22,80,191,218,57,14,191,80,101,89,63,0,0,0,63,152,197,97,191,170,115,226,190,95,46,105,63,21,239,195,62,136,151,111,191,183,147,164,190,11,250,116,63,238,131,132,62,0,80,121,191,194,197,71,190,168,148,124,63,168,168,5,62,109,196,126,191,19,242,133,189,233,220,127,63,243,4,53,63,54,189,200,189,190,20,123,191,49,160,148,62,94,131,108,63,234,90,241,190,49,219,84,191,153,103,34,63,243,4,53,63,3,228,69,191,218,57,14,191,152,197,97,63,21,239,195,62,11,250,116,191,194,197,71,190,109,196,126,63,119,247,83,166,109,196,126,191,194,197,71,62,11,250,116,63,21,239,195,190,152,197,97,191,218,57,14,63,3,228,69,63,243,4,53,191,153,103,34,191,49,219,84,63,234,90,241,62,94,131,108,191,49,160,148,190,190,20,123,63,54,189,200,61,0,0,128,191,54,189,200,61,190,20,123,63,49,160,148,190,94,131,108,191,234,90,241,62,49,219,84,63,153,103,34,191,243,4,53,191,3,228,69,63,218,57,14,63,152,197,97,191,21,239,195,190,11,250,116,63,194,197,71,62,109,196,126,191,243,4,53,63,18,206,38,190,3,106,114,191,234,90,241,62,52,25,75,63,95,216,58,191,218,57,14,191,95,46,105,63,238,131,132,62,109,196,126,191,19,242,133,61,0,80,121,63,21,239,195,190,80,101,89,191,227,202,40,63,153,103,34,63,215,179,93,191,30,90,180,190,190,20,123,63,114,4,6,61,85,207,125,191,49,160,148,62,116,153,101,63,66,29,21,191,243,4,53,191,184,22,80,63,170,115,226,62,11,250,116,191,168,168,5,190,233,220,127,63,194,197,71,190,136,151,111,191,0,0,0,63,3,228,69,63,147,120,64,191,116,47,7,191,94,131,108,63,174,134,104,62,175,115,127,191,54,189,200,61,234,70,119,63,86,78,211,190,49,219,84,191,232,255,46,63,202,215,27,63,152,197,97,191,183,147,164,190,168,148,124,63,243,4,53,63,174,134,104,190,116,153,101,191,153,103,34,63,202,215,27,63,95,46,105,191,194,197,71,190,233,220,127,63,238,131,132,190,152,197,97,191,227,202,40,63,66,29,21,63,94,131,108,191,18,206,38,190,175,115,127,63,49,160,148,190,215,179,93,191,232,255,46,63,218,57,14,63,136,151,111,191,168,168,5,190,109,196,126,63,183,147,164,190,80,101,89,191,243,4,53,63,116,47,7,63,3,106,114,191,54,189,200,189,85,207,125,63,30,90,180,190,49,219,84,191,95,216,58,63,0,0,0,63,11,250,116,191,19,242,133,189,168,148,124,63,21,239,195,190,184,22,80,191,147,120,64,63,234,90,241,62,234,70,119,191,114,4,6,189,190,20,123,63,86,78,211,190,52,25,75,191,3,228,69,63,170,115,226,62,0,80,121,191,243,4,53,63,49,160,148,190,49,219,84,191,3,228,69,63,21,239,195,62,109,196,126,191,194,197,71,62,152,197,97,63,243,4,53,191,234,90,241,190,190,20,123,63,54,189,200,189,94,131,108,191,153,103,34,63,218,57,14,63,11,250,116,191,53,213,83,167,11,250,116,63,218,57,14,191,153,103,34,191,94,131,108,63,54,189,200,61,190,20,123,191,234,90,241,62,243,4,53,63,152,197,97,191,194,197,71,190,109,196,126,63,21,239,195,190,3,228,69,191,49,219,84,63,49,160,148,62,0,0,128,191,49,160,148,62,49,219,84,63,3,228,69,191,21,239,195,190,109,196,126,63,194,197,71,190,152,197,97,191,243,4,53,63,234,90,241,62,190,20,123,191,54,189,200,61,94,131,108,63,153,103,34,191,218,57,14,191,11,250,116,63,243,4,53,63,30,90,180,190,147,120,64,191,152,197,97,63,168,168,5,62,0,80,121,191,218,57,14,63,66,29,21,63,234,70,119,191,54,189,200,61,116,153,101,63,95,216,58,191,21,239,195,190,233,220,127,63,183,147,164,190,3,228,69,191,215,179,93,63,18,206,38,62,190,20,123,191,116,47,7,63,202,215,27,63,11,250,116,191,19,242,133,61,95,46,105,63,243,4,53,191,86,78,211,190,175,115,127,63,49,160,148,190,52,25,75,191,80,101,89,63,194,197,71,62,168,148,124,191,0,0,0,63,153,103,34,63,3,106,114,191,114,4,6,61,94,131,108,63,232,255,46,191,170,115,226,190,109,196,126,63,238,131,132,190,184,22,80,191,49,219,84,63,174,134,104,62,85,207,125,191,234,90,241,62,227,202,40,63,136,151,111,191,243,4,53,63,86,78,211,190,227,202,40,191,11,250,116,63,168,168,5,190,80,101,89,191,49,219,84,63,18,206,38,62,234,70,119,191,153,103,34,63,170,115,226,62,233,220,127,191,21,239,195,62,232,255,46,63,3,106,114,191,54,189,200,61,215,179,93,63,184,22,80,191,194,197,71,190,0,80,121,63,202,215,27,191,234,90,241,190,175,115,127,63,30,90,180,190,243,4,53,191,136,151,111,63,19,242,133,189,152,197,97,191,52,25,75,63,174,134,104,62,190,20,123,191,66,29,21,63,0,0,0,63,109,196,126,191,183,147,164,62,95,216,58,63,94,131,108,191,114,4,6,61,116,153,101,63,3,228,69,191,238,131,132,190,168,148,124,63,218,57,14,191,116,47,7,191,85,207,125,63,49,160,148,190,147,120,64,191,95,46,105,63,243,4,53,63,234,90,241,190,218,57,14,191,109,196,126,63,21,239,195,190,153,103,34,191,190,20,123,63,49,160,148,190,243,4,53,191,11,250,116,63,194,197,71,190,3,228,69,191,94,131,108,63,54,189,200,189,49,219,84,191,152,197,97,63,222,94,13,166,152,197,97,191,49,219,84,63,54,189,200,61,94,131,108,191,3,228,69,63,194,197,71,62,11,250,116,191,243,4,53,63,49,160,148,62,190,20,123,191,153,103,34,63,21,239,195,62,109,196,126,191,218,57,14,63,234,90,241,62,0,0,128,191,234,90,241,62,218,57,14,63,109,196,126,191,21,239,195,62,153,103,34,63,190,20,123,191,49,160,148,62,243,4,53,63,11,250,116,191,194,197,71,62,3,228,69,63,94,131,108,191,54,189,200,61,49,219,84,63,152,197,97,191,243,4,53,63,116,47,7,191,170,115,226,190,109,196,126,63,202,215,27,191,30,90,180,190,190,20,123,63,232,255,46,191,238,131,132,190,11,250,116,63,147,120,64,191,18,206,38,190,94,131,108,63,184,22,80,191,19,242,133,189,152,197,97,63,215,179,93,191,114,4,6,61,49,219,84,63,95,46,105,191,168,168,5,62,3,228,69,63,3,106,114,191,174,134,104,62,243,4,53,63,0,80,121,191,183,147,164,62,153,103,34,63,85,207,125,191,86,78,211,62,218,57,14,63,233,220,127,191,0,0,0,63,234,90,241,62,175,115,127,191,66,29,21,63,21,239,195,62,168,148,124,191,227,202,40,63,49,160,148,62,234,70,119,191,95,216,58,63,194,197,71,62,136,151,111,191,52,25,75,63,54,189,200,61,116,153,101,191,80,101,89,63,243,4,53,63,66,29,21,191,183,147,164,190,11,250,116,63,52,25,75,191,114,4,6,189,49,219,84,63,136,151,111,191,238,131,132,62,153,103,34,63,175,115,127,191,116,47,7,63,21,239,195,62,0,80,121,191,147,120,64,63,54,189,200,61,215,179,93,191,95,46,105,63,194,197,71,190,232,255,46,191,85,207,125,63,234,90,241,190,170,115,226,190,168,148,124,63,243,4,53,191,18,206,38,190,116,153,101,63,152,197,97,191,168,168,5,62,95,216,58,63,190,20,123,191,86,78,211,62,0,0,0,63,109,196,126,191,227,202,40,63,174,134,104,62,94,131,108,191,80,101,89,63,19,242,133,189,3,228,69,191,234,70,119,63,30,90,180,190,218,57,14,191,233,220,127,63,202,215,27,191,49,160,148,190,3,106,114,63,184,22,80,191,243,4,53,63,153,103,34,191,194,197,71,190,152,197,97,63,94,131,108,191,49,160,148,62,218,57,14,63,109,196,126,191,243,4,53,63,54,189,200,61,49,219,84,191,11,250,116,63,21,239,195,190,234,90,241,190,190,20,123,63,3,228,69,191,92,123,101,167,3,228,69,63,190,20,123,191,234,90,241,62,21,239,195,62,11,250,116,191,49,219,84,63,54,189,200,189,243,4,53,191,109,196,126,63,218,57,14,191,49,160,148,190,94,131,108,63,152,197,97,191,194,197,71,62,153,103,34,63,0,0,128,191,153,103,34,63,194,197,71,62,152,197,97,191,94,131,108,63,49,160,148,190,218,57,14,191,109,196,126,63,243,4,53,191,54,189,200,189,49,219,84,63,11,250,116,191,21,239,195,62,234,90,241,62,190,20,123,191,3,228,69,63,243,4,53,63,232,255,46,191,19,242,133,189,3,228,69,63,85,207,125,191,66,29,21,63,194,197,71,62,80,101,89,191,234,70,119,63,234,90,241,190,183,147,164,190,95,46,105,63,94,131,108,191,30,90,180,62,170,115,226,62,11,250,116,191,215,179,93,63,174,134,104,190,218,57,14,191,168,148,124,63,52,25,75,191,54,189,200,61,227,202,40,63,233,220,127,191,243,4,53,63,114,4,6,61,147,120,64,191,109,196,126,63,202,215,27,191,18,206,38,190,49,219,84,63,0,80,121,191,0,0,0,63,49,160,148,62,116,153,101,191,136,151,111,63,21,239,195,190,86,78,211,190,3,106,114,63,152,197,97,191,238,131,132,62,116,47,7,63,190,20,123,191,184,22,80,63,168,168,5,190,153,103,34,191,175,115,127,63,95,216,58,191,243,4,53,63,95,216,58,191,19,242,133,61,153,103,34,63,85,207,125,191,184,22,80,63,194,197,71,190,116,47,7,191,234,70,119,63,152,197,97,191,183,147,164,62,86,78,211,62,94,131,108,191,136,151,111,63,170,115,226,190,49,160,148,190,215,179,93,63,0,80,121,191,218,57,14,63,18,206,38,62,52,25,75,191,109,196,126,63,227,202,40,191,114,4,6,189,243,4,53,63,233,220,127,191,147,120,64,63,54,189,200,189,202,215,27,191,168,148,124,63,49,219,84,191,174,134,104,62,0,0,0,63,11,250,116,191,116,153,101,63,30,90,180,190,21,239,195,190,95,46,105,63,3,106,114,191,234,90,241,62,238,131,132,62,80,101,89,191,190,20,123,63,66,29,21,191,168,168,5,190,3,228,69,63,175,115,127,191,232,255,46,63,243,4,53,63,3,228,69,191,194,197,71,62,234,90,241,62,94,131,108,191,11,250,116,63,218,57,14,191,54,189,200,189,243,4,53,63,109,196,126,191,49,219,84,63,49,160,148,190,21,239,195,190,152,197,97,63,190,20,123,191,153,103,34,63,138,140,141,165,153,103,34,191,190,20,123,63,152,197,97,191,21,239,195,62,49,160,148,62,49,219,84,191,109,196,126,63,243,4,53,191,54,189,200,61,218,57,14,63,11,250,116,191,94,131,108,63,234,90,241,190,194,197,71,190,3,228,69,63,0,0,128,191,3,228,69,63,194,197,71,190,234,90,241,190,94,131,108,63,11,250,116,191,218,57,14,63,54,189,200,61,243,4,53,191,109,196,126,63,49,219,84,191,49,160,148,62,21,239,195,62,152,197,97,191,190,20,123,63,153,103,34,191,243,4,53,63,184,22,80,191,183,147,164,62,49,160,148,62,52,25,75,191,233,220,127,63,49,219,84,191,30,90,180,62,238,131,132,62,3,228,69,191,175,115,127,63,80,101,89,191,21,239,195,62,174,134,104,62,147,120,64,191,109,196,126,63,215,179,93,191,86,78,211,62,194,197,71,62,95,216,58,191,85,207,125,63,152,197,97,191,170,115,226,62,18,206,38,62,243,4,53,191,168,148,124,63,116,153,101,191,234,90,241,62,168,168,5,62,232,255,46,191,190,20,123,63,95,46,105,191,0,0,0,63,54,189,200,61,227,202,40,191,0,80,121,63,94,131,108,191,116,47,7,63,19,242,133,61,153,103,34,191,234,70,119,63,136,151,111,191,218,57,14,63,114,4,6,61,202,215,27,191,11,250,116,63,3,106,114,191,66,29,21,63,243,4,53,63,80,101,89,191,170,115,226,62,54,189,200,61,202,215,27,191,136,151,111,63,190,20,123,191,95,216,58,63,238,131,132,190,49,160,148,190,147,120,64,63,168,148,124,191,94,131,108,63,66,29,21,191,19,242,133,61,234,90,241,62,215,179,93,191,233,220,127,63,49,219,84,191,86,78,211,62,168,168,5,62,153,103,34,191,3,106,114,63,0,80,121,191,243,4,53,63,174,134,104,190,183,147,164,190,3,228,69,63,85,207,125,191,95,46,105,63,218,57,14,191,114,4,6,61,0,0,0,63,152,197,97,191,175,115,127,63,184,22,80,191,21,239,195,62,18,206,38,62,227,202,40,191,11,250,116,63,234,70,119,191,232,255,46,63,194,197,71,190,30,90,180,190,52,25,75,63,109,196,126,191,116,153,101,63,116,47,7,191,243,4,53,63,152,197,97,191,218,57,14,63,54,189,200,189,21,239,195,190,3,228,69,63,190,20,123,191,11,250,116,63,243,4,53,191,49,160,148,62,194,197,71,62,153,103,34,191,94,131,108,63,109,196,126,191,49,219,84,63,234,90,241,190,130,33,119,167,234,90,241,62,49,219,84,191,109,196,126,63,94,131,108,191,153,103,34,63,194,197,71,190,49,160,148,190,243,4,53,63,11,250,116,191,190,20,123,63,3,228,69,191,21,239,195,62,54,189,200,61,218,57,14,191,152,197,97,63,0,0,128,191,152,197,97,63,218,57,14,191,54,189,200,61,21,239,195,62,3,228,69,191,190,20,123,63,11,250,116,191,243,4,53,63,49,160,148,190,194,197,71,190,153,103,34,63,94,131,108,191,109,196,126,63,49,219,84,191,234,90,241,62,243,4,53,63,95,46,105,191,227,202,40,63,49,160,148,190,168,168,5,190,116,47,7,63,49,219,84,191,168,148,124,63,234,70,119,191,3,228,69,63,170,115,226,190,114,4,6,61,21,239,195,62,95,216,58,191,3,106,114,63,109,196,126,191,215,179,93,63,66,29,21,191,194,197,71,62,174,134,104,62,202,215,27,191,152,197,97,63,175,115,127,191,136,151,111,63,243,4,53,191,30,90,180,62,19,242,133,61,234,90,241,190,52,25,75,63,0,80,121,191,190,20,123,63,184,22,80,191,0,0,0,63,54,189,200,189,183,147,164,190,232,255,46,63,94,131,108,191,233,220,127,63,116,153,101,191,153,103,34,63,238,131,132,190,18,206,38,190,218,57,14,63,80,101,89,191,85,207,125,63,11,250,116,191,147,120,64,63,86,78,211,190,243,4,53,63,136,151,111,191,147,120,64,63,234,90,241,190,168,168,5,62,174,134,104,62,218,57,14,191,184,22,80,63,234,70,119,191,109,196,126,63,116,153,101,191,232,255,46,63,21,239,195,190,114,4,6,61,183,147,164,62,153,103,34,191,215,179,93,63,168,148,124,191,190,20,123,63,80,101,89,191,202,215,27,63,49,160,148,190,19,242,133,189,86,78,211,62,243,4,53,191,95,46,105,63,175,115,127,191,11,250,116,63,52,25,75,191,116,47,7,63,194,197,71,190,18,206,38,190,0,0,0,63,3,228,69,191,3,106,114,63,233,220,127,191,94,131,108,63,95,216,58,191,170,115,226,62,54,189,200,189,238,131,132,190,66,29,21,63,49,219,84,191,0,80,121,63,85,207,125,191,152,197,97,63,227,202,40,191,30,90,180,62,243,4,53,63,11,250,116,191,49,219,84,63,153,103,34,191,21,239,195,62,54,189,200,189,194,197,71,190,234,90,241,62,243,4,53,191,152,197,97,63,190,20,123,191,109,196,126,63,94,131,108,191,3,228,69,63,218,57,14,191,49,160,148,62,219,176,54,161,49,160,148,190,218,57,14,63,3,228,69,191,94,131,108,63,109,196,126,191,190,20,123,63,152,197,97,191,243,4,53,63,234,90,241,190,194,197,71,62,54,189,200,61,21,239,195,190,153,103,34,63,49,219,84,191,11,250,116,63,0,0,128,191,11,250,116,63,49,219,84,191,153,103,34,63,21,239,195,190,54,189,200,61,194,197,71,62,234,90,241,190,243,4,53,63,152,197,97,191,190,20,123,63,109,196,126,191,94,131,108,63,3,228,69,191,218,57,14,63,49,160,148,190,243,4,53,63,0,80,121,191,116,153,101,63,3,228,69,191,202,215,27,63,86,78,211,190,194,197,71,62,114,4,6,61,238,131,132,190,234,90,241,62,227,202,40,191,184,22,80,63,94,131,108,191,168,148,124,63,175,115,127,191,11,250,116,63,215,179,93,191,95,216,58,63,218,57,14,191,30,90,180,62,168,168,5,190,54,189,200,189,183,147,164,62,116,47,7,191,243,4,53,63,80,101,89,191,3,106,114,63,109,196,126,191,85,207,125,63,136,151,111,191,49,219,84,63,232,255,46,191,0,0,0,63,49,160,148,190,19,242,133,61,18,206,38,62,21,239,195,190,66,29,21,63,147,120,64,191,152,197,97,63,234,70,119,191,233,220,127,63,190,20,123,191,95,46,105,63,52,25,75,191,153,103,34,63,170,115,226,190,174,134,104,62,243,4,53,63,168,148,124,191,3,106,114,63,152,197,97,191,52,25,75,63,232,255,46,191,218,57,14,63,86,78,211,190,238,131,132,62,54,189,200,189,19,242,133,189,174,134,104,62,21,239,195,190,116,47,7,63,227,202,40,191,3,228,69,63,215,179,93,191,136,151,111,63,190,20,123,191,233,220,127,63,85,207,125,191,11,250,116,63,116,153,101,191,184,22,80,63,243,4,53,191,66,29,21,63,170,115,226,190,49,160,148,62,168,168,5,190,114,4,6,189,194,197,71,62,30,90,180,190,0,0,0,63,153,103,34,191,147,120,64,63,80,101,89,191,94,131,108,63,0,80,121,191,175,115,127,63,109,196,126,191,234,70,119,63,95,46,105,191,49,219,84,63,95,216,58,191,202,215,27,63,234,90,241,190,183,147,164,62,18,206,38,190,243,4,53,63,109,196,126,191,190,20,123,63,11,250,116,191,94,131,108,63,152,197,97,191,49,219,84,63,3,228,69,191,243,4,53,63,153,103,34,191,218,57,14,63,234,90,241,190,21,239,195,62,49,160,148,190,194,197,71,62,54,189,200,189,212,99,132,167,54,189,200,61,194,197,71,190,49,160,148,62,21,239,195,190,234,90,241,62,218,57,14,191,153,103,34,63,243,4,53,191,3,228,69,63,49,219,84,191,152,197,97,63,94,131,108,191,11,250,116,63,190,20,123,191,109,196,126,63,0,0,128,191,109,196,126,63,190,20,123,191,11,250,116,63,94,131,108,191,152,197,97,63,49,219,84,191,3,228,69,63,243,4,53,191,153,103,34,63,218,57,14,191,234,90,241,62,21,239,195,190,49,160,148,62,194,197,71,190,54,189,200,61,243,4,53,63,233,220,127,191,175,115,127,63,109,196,126,191,85,207,125,63,168,148,124,191,190,20,123,63,0,80,121,191,234,70,119,63,11,250,116,191,3,106,114,63,136,151,111,191,94,131,108,63,95,46,105,191,116,153,101,63,152,197,97,191,215,179,93,63,80,101,89,191,49,219,84,63,184,22,80,191,52,25,75,63,3,228,69,191,147,120,64,63,95,216,58,191,243,4,53,63,232,255,46,191,227,202,40,63,153,103,34,191,202,215,27,63,66,29,21,191,218,57,14,63,116,47,7,191,0,0,0,63,234,90,241,190,170,115,226,62,86,78,211,190,21,239,195,62,30,90,180,190,183,147,164,62,49,160,148,190,238,131,132,62,174,134,104,190,194,197,71,62,18,206,38,190,168,168,5,62,54,189,200,189,19,242,133,61,114,4,6,189,243,4,53,63,84,222,127,63,89,121,127,63,42,209,126,63,243,229,125,63,242,183,124,63,118,71,123,63,224,148,121,63,163,160,119,63,66,107,117,63,81,245,114,63,119,63,112,63,107,74,109,63,242,22,106,63,229,165,102,63,44,248,98,63,190,14,95,63,163,234,90,63,241,140,86,63,207,246,81,63,113,41,77,63,28,38,72,63,31,238,66,63,220,130,61,63,190,229,55,63,64,24,50,63,233,27,44,63,76,242,37,63,7,157,31,63,198,29,25,63,61,118,18,63,45,168,11,63,96,181,4,63,85,63,251,62,210,209,236,62,2,38,222,62,195,63,207,62,255,34,192,62,176,211,176,62,221,85,161,62,154,173,145,62,3,223,129,62,135,220,99,62,22,191,67,62,40,110,35,62,59,242,2,62,184,167,196,61,63,55,131,61,132,72,3,61,243,4,53,63,42,209,126,63,118,71,123,63,66,107,117,63,107,74,109,63,44,248,98,63,241,140,86,63,28,38,72,63,190,229,55,63,76,242,37,63,61,118,18,63,85,63,251,62,195,63,207,62,221,85,161,62,135,220,99,62,59,242,2,62,132,72,3,61,63,55,131,189,40,110,35,190,3,223,129,190,176,211,176,190,2,38,222,190,96,181,4,191,198,29,25,191,233,27,44,191,220,130,61,191,113,41,77,191,163,234,90,191,229,165,102,191,119,63,112,191,163,160,119,191,242,183,124,191,89,121,127,191,84,222,127,191,243,229,125,191,224,148,121,191,81,245,114,191,242,22,106,191,190,14,95,191,207,246,81,191,31,238,66,191,64,24,50,191,7,157,31,191,45,168,11,191,210,209,236,190,255,34,192,190,154,173,145,190,22,191,67,190,184,167,196,189,243,4,53,63,242,183,124,63,81,245,114,63,44,248,98,63,113,41,77,63,64,24,50,63,61,118,18,63,2,38,222,62,154,173,145,62,59,242,2,62,132,72,3,189,22,191,67,190,176,211,176,190,85,63,251,190,7,157,31,191,220,130,61,191,241,140,86,191,242,22,106,191,163,160,119,191,42,209,126,191,89,121,127,191,224,148,121,191,107,74,109,191,163,234,90,191,31,238,66,191,76,242,37,191,96,181,4,191,255,34,192,190,135,220,99,190,63,55,131,189,184,167,196,61,3,223,129,62,195,63,207,62,45,168,11,63,233,27,44,63,28,38,72,63,190,14,95,63,119,63,112,63,118,71,123,63,84,222,127,63,243,229,125,63,66,107,117,63,229,165,102,63,207,246,81,63,190,229,55,63,198,29,25,63,210,209,236,62,221,85,161,62,40,110,35,62,243,4,53,63,224,148,121,63,229,165,102,63,28,38,72,63,7,157,31,63,2,38,222,62,135,220,99,62,50,49,141,36,135,220,99,190,2,38,222,190,7,157,31,191,28,38,72,191,229,165,102,191,224,148,121,191,0,0,128,191,224,148,121,191,229,165,102,191,28,38,72,191,7,157,31,191,2,38,222,190,135,220,99,190,202,201,83,165,135,220,99,62,2,38,222,62,7,157,31,63,28,38,72,63,229,165,102,63,224,148,121,63,0,0,128,63,224,148,121,63,229,165,102,63,28,38,72,63,7,157,31,63,2,38,222,62,135,220,99,62,126,125,176,37,135,220,99,190,2,38,222,190,7,157,31,191,28,38,72,191,229,165,102,191,224,148,121,191,0,0,128,191,224,148,121,191,229,165,102,191,28,38,72,191,7,157,31,191,2,38,222,190,135,220,99,190,243,4,53,63,66,107,117,63,241,140,86,63,76,242,37,63,195,63,207,62,59,242,2,62,40,110,35,190,2,38,222,190,233,27,44,191,163,234,90,191,163,160,119,191,84,222,127,191,81,245,114,191,207,246,81,191,7,157,31,191,255,34,192,190,184,167,196,189,22,191,67,62,210,209,236,62,64,24,50,63,190,14,95,63,224,148,121,63,89,121,127,63,119,63,112,63,113,41,77,63,198,29,25,63,176,211,176,62,63,55,131,61,135,220,99,190,85,63,251,190,190,229,55,191,44,248,98,191,118,71,123,191,42,209,126,191,107,74,109,191,28,38,72,191,61,118,18,191,221,85,161,190,132,72,3,189,3,223,129,62,96,181,4,63,220,130,61,63,229,165,102,63,242,183,124,63,243,229,125,63,242,22,106,63,31,238,66,63,45,168,11,63,154,173,145,62,243,4,53,63,119,63,112,63,31,238,66,63,85,63,251,62,40,110,35,62,22,191,67,190,96,181,4,191,28,38,72,191,81,245,114,191,84,222,127,191,107,74,109,191,220,130,61,191,210,209,236,190,59,242,2,190,135,220,99,62,45,168,11,63,113,41,77,63,66,107,117,63,89,121,127,63,242,22,106,63,190,229,55,63,2,38,222,62,184,167,196,61,3,223,129,190,61,118,18,191,207,246,81,191,163,160,119,191,42,209,126,191,229,165,102,191,64,24,50,191,195,63,207,190,63,55,131,189,154,173,145,62,198,29,25,63,241,140,86,63,224,148,121,63,243,229,125,63,44,248,98,63,233,27,44,63,255,34,192,62,132,72,3,61,221,85,161,190,7,157,31,191,163,234,90,191,118,71,123,191,242,183,124,191,190,14,95,191,76,242,37,191,176,211,176,190,243,4,53,63,242,22,106,63,233,27,44,63,221,85,161,62,184,167,196,189,85,63,251,190,113,41,77,191,224,148,121,191,118,71,123,191,207,246,81,191,96,181,4,191,59,242,2,190,154,173,145,62,76,242,37,63,229,165,102,63,84,222,127,63,107,74,109,63,64,24,50,63,176,211,176,62,63,55,131,189,210,209,236,190,28,38,72,191,163,160,119,191,242,183,124,191,241,140,86,191,45,168,11,191,40,110,35,190,3,223,129,62,7,157,31,63,44,248,98,63,89,121,127,63,119,63,112,63,190,229,55,63,255,34,192,62,132,72,3,189,2,38,222,190,31,238,66,191,66,107,117,191,243,229,125,191,163,234,90,191,61,118,18,191,22,191,67,190,135,220,99,62,198,29,25,63,190,14,95,63,42,209,126,63,81,245,114,63,220,130,61,63,195,63,207,62,243,4,53,63,44,248,98,63,61,118,18,63,59,242,2,62,176,211,176,190,220,130,61,191,163,160,119,191,224,148,121,191,31,238,66,191,255,34,192,190,184,167,196,61,45,168,11,63,190,14,95,63,84,222,127,63,229,165,102,63,198,29,25,63,40,110,35,62,221,85,161,190,190,229,55,191,66,107,117,191,118,71,123,191,28,38,72,191,195,63,207,190,63,55,131,61,96,181,4,63,163,234,90,63,89,121,127,63,242,22,106,63,7,157,31,63,22,191,67,62,154,173,145,190,64,24,50,191,81,245,114,191,242,183,124,191,113,41,77,191,2,38,222,190,132,72,3,61,85,63,251,62,241,140,86,63,42,209,126,63,107,74,109,63,76,242,37,63,135,220,99,62,3,223,129,190,233,27,44,191,119,63,112,191,243,229,125,191,207,246,81,191,210,209,236,190,243,4,53,63,163,234,90,63,210,209,236,62,63,55,131,189,61,118,18,191,242,22,106,191,243,229,125,191,28,38,72,191,176,211,176,190,22,191,67,62,233,27,44,63,66,107,117,63,163,160,119,63,64,24,50,63,135,220,99,62,221,85,161,190,31,238,66,191,242,183,124,191,107,74,109,191,198,29,25,191,184,167,196,189,2,38,222,62,241,140,86,63,84,222,127,63,190,14,95,63,85,63,251,62,132,72,3,189,45,168,11,191,229,165,102,191,42,209,126,191,113,41,77,191,255,34,192,190,40,110,35,62,76,242,37,63,81,245,114,63,224,148,121,63,190,229,55,63,3,223,129,62,154,173,145,190,220,130,61,191,118,71,123,191,119,63,112,191,7,157,31,191,59,242,2,190,195,63,207,62,207,246,81,63,89,121,127,63,44,248,98,63,96,181,4,63,243,4,53,63,207,246,81,63,176,211,176,62,3,223,129,190,31,238,66,191,42,209,126,191,190,14,95,191,2,38,222,190,40,110,35,62,64,24,50,63,118,71,123,63,242,22,106,63,96,181,4,63,63,55,131,189,7,157,31,191,66,107,117,191,81,245,114,191,198,29,25,191,132,72,3,189,45,168,11,63,107,74,109,63,224,148,121,63,233,27,44,63,59,242,2,62,210,209,236,190,44,248,98,191,243,229,125,191,220,130,61,191,135,220,99,190,255,34,192,62,241,140,86,63,84,222,127,63,113,41,77,63,221,85,161,62,154,173,145,190,28,38,72,191,89,121,127,191,163,234,90,191,195,63,207,190,22,191,67,62,190,229,55,63,242,183,124,63,229,165,102,63,85,63,251,62,184,167,196,189,76,242,37,191,163,160,119,191,119,63,112,191,61,118,18,191,243,4,53,63,28,38,72,63,135,220,99,62,2,38,222,190,229,165,102,191,224,148,121,191,7,157,31,191,202,201,83,165,7,157,31,63,224,148,121,63,229,165,102,63,2,38,222,62,135,220,99,190,28,38,72,191,0,0,128,191,28,38,72,191,135,220,99,190,2,38,222,62,229,165,102,63,224,148,121,63,7,157,31,63,88,215,30,38,7,157,31,191,224,148,121,191,229,165,102,191,2,38,222,190,135,220,99,62,28,38,72,63,0,0,128,63,28,38,72,63,135,220,99,62,2,38,222,190,229,165,102,191,224,148,121,191,7,157,31,191,15,47,66,167,7,157,31,63,224,148,121,63,229,165,102,63,2,38,222,62,135,220,99,190,28,38,72,191,0,0,128,191,28,38,72,191,135,220,99,190,2,38,222,62,229,165,102,63,224,148,121,63,7,157,31,63,243,4,53,63,220,130,61,63,184,167,196,61,198,29,25,191,118,71,123,191,163,234,90,191,154,173,145,190,2,38,222,62,107,74,109,63,119,63,112,63,210,209,236,62,3,223,129,190,241,140,86,191,242,183,124,191,7,157,31,191,63,55,131,61,190,229,55,63,84,222,127,63,31,238,66,63,59,242,2,62,61,118,18,191,224,148,121,191,190,14,95,191,221,85,161,190,195,63,207,62,242,22,106,63,81,245,114,63,85,63,251,62,135,220,99,190,207,246,81,191,243,229,125,191,76,242,37,191,132,72,3,61,64,24,50,63,89,121,127,63,28,38,72,63,40,110,35,62,45,168,11,191,163,160,119,191,44,248,98,191,176,211,176,190,255,34,192,62,229,165,102,63,66,107,117,63,96,181,4,63,22,191,67,190,113,41,77,191,42,209,126,191,233,27,44,191,243,4,53,63,64,24,50,63,132,72,3,189,220,130,61,191,89,121,127,191,76,242,37,191,184,167,196,61,28,38,72,63,243,229,125,63,198,29,25,63,40,110,35,190,207,246,81,191,118,71,123,191,45,168,11,191,135,220,99,62,163,234,90,63,163,160,119,63,85,63,251,62,154,173,145,190,44,248,98,191,81,245,114,191,2,38,222,190,176,211,176,62,242,22,106,63,107,74,109,63,255,34,192,62,195,63,207,190,119,63,112,191,229,165,102,191,221,85,161,190,210,209,236,62,66,107,117,63,190,14,95,63,3,223,129,62,96,181,4,191,224,148,121,191,241,140,86,191,22,191,67,190,61,118,18,63,242,183,124,63,113,41,77,63,59,242,2,62,7,157,31,191,42,209,126,191,31,238,66,191,63,55,131,189,233,27,44,63,84,222,127,63,190,229,55,63,243,4,53,63,76,242,37,63,40,110,35,190,163,234,90,191,81,245,114,191,255,34,192,190,210,209,236,62,224,148,121,63,113,41,77,63,63,55,131,61,190,229,55,191,42,209,126,191,61,118,18,191,3,223,129,62,229,165,102,63,242,22,106,63,154,173,145,62,45,168,11,191,243,229,125,191,220,130,61,191,132,72,3,61,28,38,72,63,118,71,123,63,85,63,251,62,176,211,176,190,119,63,112,191,190,14,95,191,22,191,67,190,7,157,31,63,84,222,127,63,233,27,44,63,59,242,2,190,241,140,86,191,66,107,117,191,195,63,207,190,2,38,222,62,163,160,119,63,207,246,81,63,184,167,196,61,64,24,50,191,89,121,127,191,198,29,25,191,135,220,99,62,44,248,98,63,107,74,109,63,221,85,161,62,96,181,4,191,242,183,124,191,31,238,66,191,243,4,53,63,198,29,25,63,154,173,145,190,119,63,112,191,241,140,86,191,63,55,131,189,31,238,66,63,224,148,121,63,195,63,207,62,85,63,251,190,243,229,125,191,64,24,50,191,40,110,35,62,44,248,98,63,229,165,102,63,22,191,67,62,233,27,44,191,42,209,126,191,96,181,4,191,255,34,192,62,163,160,119,63,28,38,72,63,132,72,3,189,207,246,81,191,81,245,114,191,221,85,161,190,61,118,18,63,84,222,127,63,7,157,31,63,3,223,129,190,107,74,109,191,163,234,90,191,184,167,196,189,220,130,61,63,118,71,123,63,2,38,222,62,210,209,236,190,242,183,124,191,190,229,55,191,59,242,2,62,190,14,95,63,242,22,106,63,135,220,99,62,76,242,37,191,89,121,127,191,45,168,11,191,176,211,176,62,66,107,117,63,113,41,77,63,243,4,53,63,45,168,11,63,195,63,207,190,242,183,124,191,233,27,44,191,3,223,129,62,81,245,114,63,28,38,72,63,184,167,196,189,44,248,98,191,190,14,95,191,63,55,131,189,113,41,77,63,119,63,112,63,135,220,99,62,64,24,50,191,118,71,123,191,255,34,192,190,61,118,18,63,84,222,127,63,96,181,4,63,2,38,222,190,243,229,125,191,76,242,37,191,154,173,145,62,66,107,117,63,31,238,66,63,59,242,2,190,229,165,102,191,163,234,90,191,132,72,3,189,207,246,81,63,107,74,109,63,22,191,67,62,190,229,55,191,224,148,121,191,176,211,176,190,198,29,25,63,89,121,127,63,85,63,251,62,210,209,236,190,42,209,126,191,7,157,31,191,221,85,161,62,163,160,119,63,220,130,61,63,40,110,35,190,242,22,106,191,241,140,86,191,243,4,53,63,85,63,251,62,96,181,4,191,84,222,127,191,210,209,236,190,45,168,11,63,89,121,127,63,2,38,222,62,61,118,18,191,42,209,126,191,195,63,207,190,198,29,25,63,243,229,125,63,255,34,192,62,7,157,31,191,242,183,124,191,176,211,176,190,76,242,37,63,118,71,123,63,221,85,161,62,233,27,44,191,224,148,121,191,154,173,145,190,64,24,50,63,163,160,119,63,3,223,129,62,190,229,55,191,66,107,117,191,135,220,99,190,220,130,61,63,81,245,114,63,22,191,67,62,31,238,66,191,119,63,112,191,40,110,35,190,28,38,72,63,107,74,109,63,59,242,2,62,113,41,77,191,242,22,106,191,184,167,196,189,207,246,81,63,229,165,102,63,63,55,131,61,241,140,86,191,44,248,98,191,132,72,3,189,163,234,90,63,190,14,95,63,243,4,53,63,2,38,222,62,7,157,31,191,224,148,121,191,135,220,99,190,28,38,72,63,229,165,102,63,126,125,176,37,229,165,102,191,28,38,72,191,135,220,99,62,224,148,121,63,7,157,31,63,2,38,222,190,0,0,128,191,2,38,222,190,7,157,31,63,224,148,121,63,135,220,99,62,28,38,72,191,229,165,102,191,15,47,66,167,229,165,102,63,28,38,72,63,135,220,99,190,224,148,121,191,7,157,31,191,2,38,222,62,0,0,128,63,2,38,222,62,7,157,31,191,224,148,121,191,135,220,99,190,28,38,72,63,229,165,102,63,138,140,141,165,229,165,102,191,28,38,72,191,135,220,99,62,224,148,121,63,7,157,31,63,2,38,222,190,0,0,128,191,2,38,222,190,7,157,31,63,224,148,121,63,135,220,99,62,28,38,72,191,229,165,102,191,243,4,53,63,255,34,192,62,190,229,55,191,242,22,106,191,132,72,3,61,119,63,112,63,233,27,44,63,2,38,222,190,89,121,127,191,221,85,161,190,31,238,66,63,44,248,98,63,184,167,196,189,66,107,117,191,7,157,31,191,85,63,251,62,243,229,125,63,3,223,129,62,113,41,77,191,163,234,90,191,40,110,35,62,224,148,121,63,61,118,18,63,45,168,11,191,118,71,123,191,22,191,67,190,241,140,86,63,207,246,81,63,135,220,99,190,242,183,124,191,96,181,4,191,198,29,25,63,163,160,119,63,59,242,2,62,190,14,95,191,28,38,72,191,154,173,145,62,42,209,126,63,210,209,236,62,76,242,37,191,81,245,114,191,63,55,131,189,229,165,102,63,220,130,61,63,176,211,176,190,84,222,127,191,195,63,207,190,64,24,50,63,107,74,109,63,243,4,53,63,221,85,161,62,113,41,77,191,207,246,81,191,154,173,145,62,84,222,127,63,176,211,176,62,28,38,72,191,241,140,86,191,3,223,129,62,89,121,127,63,255,34,192,62,31,238,66,191,163,234,90,191,135,220,99,62,42,209,126,63,195,63,207,62,220,130,61,191,190,14,95,191,22,191,67,62,243,229,125,63,2,38,222,62,190,229,55,191,44,248,98,191,40,110,35,62,242,183,124,63,210,209,236,62,64,24,50,191,229,165,102,191,59,242,2,62,118,71,123,63,85,63,251,62,233,27,44,191,242,22,106,191,184,167,196,61,224,148,121,63,96,181,4,63,76,242,37,191,107,74,109,191,63,55,131,61,163,160,119,63,45,168,11,63,7,157,31,191,119,63,112,191,132,72,3,61,66,107,117,63,61,118,18,63,198,29,25,191,81,245,114,191,243,4,53,63,3,223,129,62,190,14,95,191,64,24,50,191,96,181,4,63,66,107,117,63,132,72,3,189,224,148,121,191,210,209,236,190,220,130,61,63,241,140,86,63,221,85,161,190,89,121,127,191,22,191,67,190,229,165,102,63,76,242,37,63,61,118,18,191,119,63,112,191,184,167,196,61,242,183,124,63,195,63,207,62,28,38,72,191,113,41,77,191,255,34,192,62,243,229,125,63,59,242,2,62,107,74,109,191,198,29,25,191,7,157,31,63,242,22,106,63,40,110,35,190,42,209,126,191,176,211,176,190,207,246,81,63,31,238,66,63,2,38,222,190,118,71,123,191,63,55,131,189,81,245,114,63,45,168,11,63,233,27,44,191,44,248,98,191,135,220,99,62,84,222,127,63,154,173,145,62,163,234,90,191,190,229,55,191,85,63,251,62,163,160,119,63,243,4,53,63,22,191,67,62,107,74,109,191,45,168,11,191,190,229,55,63,207,246,81,63,195,63,207,190,224,148,121,191,132,72,3,61,242,183,124,63,176,211,176,62,163,234,90,191,233,27,44,191,198,29,25,63,229,165,102,63,3,223,129,190,89,121,127,191,59,242,2,190,81,245,114,63,85,63,251,62,31,238,66,191,28,38,72,191,210,209,236,62,66,107,117,63,184,167,196,189,42,209,126,191,154,173,145,190,44,248,98,63,7,157,31,63,76,242,37,191,190,14,95,191,221,85,161,62,243,229,125,63,63,55,131,61,163,160,119,191,2,38,222,190,113,41,77,63,220,130,61,63,96,181,4,191,119,63,112,191,40,110,35,62,84,222,127,63,135,220,99,62,242,22,106,191,61,118,18,191,64,24,50,63,241,140,86,63,255,34,192,190,118,71,123,191,243,4,53,63,59,242,2,62,163,160,119,191,255,34,192,190,190,14,95,63,198,29,25,63,190,229,55,191,28,38,72,191,96,181,4,63,242,22,106,63,154,173,145,190,242,183,124,191,132,72,3,61,42,209,126,63,135,220,99,62,119,63,112,191,210,209,236,190,207,246,81,63,233,27,44,63,76,242,37,191,241,140,86,191,2,38,222,62,81,245,114,63,22,191,67,190,89,121,127,191,63,55,131,189,118,71,123,63,221,85,161,62,229,165,102,191,45,168,11,191,31,238,66,63,220,130,61,63,61,118,18,191,44,248,98,191,176,211,176,62,224,148,121,63,184,167,196,189,84,222,127,191,40,110,35,190,66,107,117,63,195,63,207,62,163,234,90,191,7,157,31,191,64,24,50,63,113,41,77,63,85,63,251,190,107,74,109,191,3,223,129,62,243,229,125,63,243,4,53,63,63,55,131,61,243,229,125,191,22,191,67,190,163,160,119,63,221,85,161,62,107,74,109,191,2,38,222,190,190,14,95,63,45,168,11,63,113,41,77,191,76,242,37,191,190,229,55,63,220,130,61,63,7,157,31,191,207,246,81,191,96,181,4,63,44,248,98,63,195,63,207,190,119,63,112,191,154,173,145,62,224,148,121,63,40,110,35,190,42,209,126,191,132,72,3,61,84,222,127,63,184,167,196,61,242,183,124,191,135,220,99,190,66,107,117,63,176,211,176,62,242,22,106,191,210,209,236,190,163,234,90,63,61,118,18,63,28,38,72,191,233,27,44,191,64,24,50,63,31,238,66,63,198,29,25,191,241,140,86,191,85,63,251,62,229,165,102,63,255,34,192,190,81,245,114,191,3,223,129,62,118,71,123,63,59,242,2,190,89,121,127,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,91,26,141,38,0,0,128,191,191,159,48,39,0,0,128,63,243,4,53,63,63,55,131,189,243,229,125,191,22,191,67,62,163,160,119,63,221,85,161,190,107,74,109,191,2,38,222,62,190,14,95,63,45,168,11,191,113,41,77,191,76,242,37,63,190,229,55,63,220,130,61,191,7,157,31,191,207,246,81,63,96,181,4,63,44,248,98,191,195,63,207,190,119,63,112,63,154,173,145,62,224,148,121,191,40,110,35,190,42,209,126,63,132,72,3,61,84,222,127,191,184,167,196,61,242,183,124,63,135,220,99,190,66,107,117,191,176,211,176,62,242,22,106,63,210,209,236,190,163,234,90,191,61,118,18,63,28,38,72,63,233,27,44,191,64,24,50,191,31,238,66,63,198,29,25,63,241,140,86,191,85,63,251,190,229,165,102,63,255,34,192,62,81,245,114,191,3,223,129,190,118,71,123,63,59,242,2,62,89,121,127,191,243,4,53,63,59,242,2,190,163,160,119,191,255,34,192,62,190,14,95,63,198,29,25,191,190,229,55,191,28,38,72,63,96,181,4,63,242,22,106,191,154,173,145,190,242,183,124,63,132,72,3,61,42,209,126,191,135,220,99,62,119,63,112,63,210,209,236,190,207,246,81,191,233,27,44,63,76,242,37,63,241,140,86,191,2,38,222,190,81,245,114,63,22,191,67,62,89,121,127,191,63,55,131,61,118,71,123,63,221,85,161,190,229,165,102,191,45,168,11,63,31,238,66,63,220,130,61,191,61,118,18,191,44,248,98,63,176,211,176,62,224,148,121,191,184,167,196,189,84,222,127,63,40,110,35,190,66,107,117,191,195,63,207,62,163,234,90,63,7,157,31,191,64,24,50,191,113,41,77,63,85,63,251,62,107,74,109,191,3,223,129,190,243,229,125,63,243,4,53,63,22,191,67,190,107,74,109,191,45,168,11,63,190,229,55,63,207,246,81,191,195,63,207,190,224,148,121,63,132,72,3,61,242,183,124,191,176,211,176,62,163,234,90,63,233,27,44,191,198,29,25,191,229,165,102,63,3,223,129,62,89,121,127,191,59,242,2,62,81,245,114,63,85,63,251,190,31,238,66,191,28,38,72,63,210,209,236,62,66,107,117,191,184,167,196,189,42,209,126,63,154,173,145,190,44,248,98,191,7,157,31,63,76,242,37,63,190,14,95,191,221,85,161,190,243,229,125,63,63,55,131,189,163,160,119,191,2,38,222,62,113,41,77,63,220,130,61,191,96,181,4,191,119,63,112,63,40,110,35,62,84,222,127,191,135,220,99,62,242,22,106,63,61,118,18,191,64,24,50,191,241,140,86,63,255,34,192,62,118,71,123,191,243,4,53,63,3,223,129,190,190,14,95,191,64,24,50,63,96,181,4,63,66,107,117,191,132,72,3,189,224,148,121,63,210,209,236,190,220,130,61,191,241,140,86,63,221,85,161,62,89,121,127,191,22,191,67,62,229,165,102,63,76,242,37,191,61,118,18,191,119,63,112,63,184,167,196,61,242,183,124,191,195,63,207,62,28,38,72,63,113,41,77,191,255,34,192,190,243,229,125,63,59,242,2,190,107,74,109,191,198,29,25,63,7,157,31,63,242,22,106,191,40,110,35,190,42,209,126,63,176,211,176,190,207,246,81,191,31,238,66,63,2,38,222,62,118,71,123,191,63,55,131,61,81,245,114,63,45,168,11,191,233,27,44,191,44,248,98,63,135,220,99,62,84,222,127,191,154,173,145,62,163,234,90,63,190,229,55,191,85,63,251,190,163,160,119,63,243,4,53,63,221,85,161,190,113,41,77,191,207,246,81,63,154,173,145,62,84,222,127,191,176,211,176,62,28,38,72,63,241,140,86,191,3,223,129,190,89,121,127,63,255,34,192,190,31,238,66,191,163,234,90,63,135,220,99,62,42,209,126,191,195,63,207,62,220,130,61,63,190,14,95,191,22,191,67,190,243,229,125,63,2,38,222,190,190,229,55,191,44,248,98,63,40,110,35,62,242,183,124,191,210,209,236,62,64,24,50,63,229,165,102,191,59,242,2,190,118,71,123,63,85,63,251,190,233,27,44,191,242,22,106,63,184,167,196,61,224,148,121,191,96,181,4,63,76,242,37,63,107,74,109,191,63,55,131,189,163,160,119,63,45,168,11,191,7,157,31,191,119,63,112,63,132,72,3,61,66,107,117,191,61,118,18,63,198,29,25,63,81,245,114,191,243,4,53,63,255,34,192,190,190,229,55,191,242,22,106,63,132,72,3,61,119,63,112,191,233,27,44,63,2,38,222,62,89,121,127,191,221,85,161,62,31,238,66,63,44,248,98,191,184,167,196,189,66,107,117,63,7,157,31,191,85,63,251,190,243,229,125,63,3,223,129,190,113,41,77,191,163,234,90,63,40,110,35,62,224,148,121,191,61,118,18,63,45,168,11,63,118,71,123,191,22,191,67,62,241,140,86,63,207,246,81,191,135,220,99,190,242,183,124,63,96,181,4,191,198,29,25,191,163,160,119,63,59,242,2,190,190,14,95,191,28,38,72,63,154,173,145,62,42,209,126,191,210,209,236,62,76,242,37,63,81,245,114,191,63,55,131,61,229,165,102,63,220,130,61,191,176,211,176,190,84,222,127,63,195,63,207,190,64,24,50,191,107,74,109,63,243,4,53,63,2,38,222,190,7,157,31,191,224,148,121,63,135,220,99,190,28,38,72,191,229,165,102,63,88,215,30,38,229,165,102,191,28,38,72,63,135,220,99,62,224,148,121,191,7,157,31,63,2,38,222,62,0,0,128,191,2,38,222,62,7,157,31,63,224,148,121,191,135,220,99,62,28,38,72,63,229,165,102,191,130,33,119,167,229,165,102,63,28,38,72,191,135,220,99,190,224,148,121,63,7,157,31,191,2,38,222,190,0,0,128,63,2,38,222,190,7,157,31,191,224,148,121,63,135,220,99,190,28,38,72,191,229,165,102,63,91,26,141,38,229,165,102,191,28,38,72,63,135,220,99,62,224,148,121,191,7,157,31,63,2,38,222,62,0,0,128,191,2,38,222,62,7,157,31,63,224,148,121,191,135,220,99,62,28,38,72,63,229,165,102,191,243,4,53,63,85,63,251,190,96,181,4,191,84,222,127,63,210,209,236,190,45,168,11,191,89,121,127,63,2,38,222,190,61,118,18,191,42,209,126,63,195,63,207,190,198,29,25,191,243,229,125,63,255,34,192,190,7,157,31,191,242,183,124,63,176,211,176,190,76,242,37,191,118,71,123,63,221,85,161,190,233,27,44,191,224,148,121,63,154,173,145,190,64,24,50,191,163,160,119,63,3,223,129,190,190,229,55,191,66,107,117,63,135,220,99,190,220,130,61,191,81,245,114,63,22,191,67,190,31,238,66,191,119,63,112,63,40,110,35,190,28,38,72,191,107,74,109,63,59,242,2,190,113,41,77,191,242,22,106,63,184,167,196,189,207,246,81,191,229,165,102,63,63,55,131,189,241,140,86,191,44,248,98,63,132,72,3,189,163,234,90,191,190,14,95,63,243,4,53,63,45,168,11,191,195,63,207,190,242,183,124,63,233,27,44,191,3,223,129,190,81,245,114,63,28,38,72,191,184,167,196,189,44,248,98,63,190,14,95,191,63,55,131,61,113,41,77,63,119,63,112,191,135,220,99,62,64,24,50,63,118,71,123,191,255,34,192,62,61,118,18,63,84,222,127,191,96,181,4,63,2,38,222,62,243,229,125,191,76,242,37,63,154,173,145,62,66,107,117,191,31,238,66,63,59,242,2,62,229,165,102,191,163,234,90,63,132,72,3,189,207,246,81,191,107,74,109,63,22,191,67,190,190,229,55,191,224,148,121,63,176,211,176,190,198,29,25,191,89,121,127,63,85,63,251,190,210,209,236,190,42,209,126,63,7,157,31,191,221,85,161,190,163,160,119,63,220,130,61,191,40,110,35,190,242,22,106,63,241,140,86,191,243,4,53,63,198,29,25,191,154,173,145,190,119,63,112,63,241,140,86,191,63,55,131,61,31,238,66,63,224,148,121,191,195,63,207,62,85,63,251,62,243,229,125,191,64,24,50,63,40,110,35,62,44,248,98,191,229,165,102,63,22,191,67,190,233,27,44,191,42,209,126,63,96,181,4,191,255,34,192,190,163,160,119,63,28,38,72,191,132,72,3,189,207,246,81,63,81,245,114,191,221,85,161,62,61,118,18,63,84,222,127,191,7,157,31,63,3,223,129,62,107,74,109,191,163,234,90,63,184,167,196,189,220,130,61,191,118,71,123,63,2,38,222,190,210,209,236,190,242,183,124,63,190,229,55,191,59,242,2,190,190,14,95,63,242,22,106,191,135,220,99,62,76,242,37,63,89,121,127,191,45,168,11,63,176,211,176,62,66,107,117,191,113,41,77,63,243,4,53,63,76,242,37,191,40,110,35,190,163,234,90,63,81,245,114,191,255,34,192,62,210,209,236,62,224,148,121,191,113,41,77,63,63,55,131,189,190,229,55,191,42,209,126,63,61,118,18,191,3,223,129,190,229,165,102,63,242,22,106,191,154,173,145,62,45,168,11,63,243,229,125,191,220,130,61,63,132,72,3,61,28,38,72,191,118,71,123,63,85,63,251,190,176,211,176,190,119,63,112,63,190,14,95,191,22,191,67,62,7,157,31,63,84,222,127,191,233,27,44,63,59,242,2,62,241,140,86,191,66,107,117,63,195,63,207,190,2,38,222,190,163,160,119,63,207,246,81,191,184,167,196,61,64,24,50,63,89,121,127,191,198,29,25,63,135,220,99,62,44,248,98,191,107,74,109,63,221,85,161,190,96,181,4,191,242,183,124,63,31,238,66,191,243,4,53,63,64,24,50,191,132,72,3,189,220,130,61,63,89,121,127,191,76,242,37,63,184,167,196,61,28,38,72,191,243,229,125,63,198,29,25,191,40,110,35,190,207,246,81,63,118,71,123,191,45,168,11,63,135,220,99,62,163,234,90,191,163,160,119,63,85,63,251,190,154,173,145,190,44,248,98,63,81,245,114,191,2,38,222,62,176,211,176,62,242,22,106,191,107,74,109,63,255,34,192,190,195,63,207,190,119,63,112,63,229,165,102,191,221,85,161,62,210,209,236,62,66,107,117,191,190,14,95,63,3,223,129,190,96,181,4,191,224,148,121,63,241,140,86,191,22,191,67,62,61,118,18,63,242,183,124,191,113,41,77,63,59,242,2,190,7,157,31,191,42,209,126,63,31,238,66,191,63,55,131,61,233,27,44,63,84,222,127,191,190,229,55,63,243,4,53,63,220,130,61,191,184,167,196,61,198,29,25,63,118,71,123,191,163,234,90,63,154,173,145,190,2,38,222,190,107,74,109,63,119,63,112,191,210,209,236,62,3,223,129,62,241,140,86,191,242,183,124,63,7,157,31,191,63,55,131,189,190,229,55,63,84,222,127,191,31,238,66,63,59,242,2,190,61,118,18,191,224,148,121,63,190,14,95,191,221,85,161,62,195,63,207,62,242,22,106,191,81,245,114,63,85,63,251,190,135,220,99,190,207,246,81,63,243,229,125,191,76,242,37,63,132,72,3,61,64,24,50,191,89,121,127,63,28,38,72,191,40,110,35,62,45,168,11,63,163,160,119,191,44,248,98,63,176,211,176,190,255,34,192,190,229,165,102,63,66,107,117,191,96,181,4,63,22,191,67,62,113,41,77,191,42,209,126,63,233,27,44,191,243,4,53,63,28,38,72,191,135,220,99,62,2,38,222,62,229,165,102,191,224,148,121,63,7,157,31,191,233,136,48,167,7,157,31,63,224,148,121,191,229,165,102,63,2,38,222,190,135,220,99,190,28,38,72,63,0,0,128,191,28,38,72,63,135,220,99,190,2,38,222,190,229,165,102,63,224,148,121,191,7,157,31,63,217,213,140,37,7,157,31,191,224,148,121,63,229,165,102,191,2,38,222,62,135,220,99,62,28,38,72,191,0,0,128,63,28,38,72,191,135,220,99,62,2,38,222,62,229,165,102,191,224,148,121,63,7,157,31,191,115,83,13,39,7,157,31,63,224,148,121,191,229,165,102,63,2,38,222,190,135,220,99,190,28,38,72,63,0,0,128,191,28,38,72,63,135,220,99,190,2,38,222,190,229,165,102,63,224,148,121,191,7,157,31,63,243,4,53,63,207,246,81,191,176,211,176,62,3,223,129,62,31,238,66,191,42,209,126,63,190,14,95,191,2,38,222,62,40,110,35,62,64,24,50,191,118,71,123,63,242,22,106,191,96,181,4,63,63,55,131,61,7,157,31,191,66,107,117,63,81,245,114,191,198,29,25,63,132,72,3,189,45,168,11,191,107,74,109,63,224,148,121,191,233,27,44,63,59,242,2,190,210,209,236,190,44,248,98,63,243,229,125,191,220,130,61,63,135,220,99,190,255,34,192,190,241,140,86,63,84,222,127,191,113,41,77,63,221,85,161,190,154,173,145,190,28,38,72,63,89,121,127,191,163,234,90,63,195,63,207,190,22,191,67,190,190,229,55,63,242,183,124,191,229,165,102,63,85,63,251,190,184,167,196,189,76,242,37,63,163,160,119,191,119,63,112,63,61,118,18,191,243,4,53,63,163,234,90,191,210,209,236,62,63,55,131,61,61,118,18,191,242,22,106,63,243,229,125,191,28,38,72,63,176,211,176,190,22,191,67,190,233,27,44,63,66,107,117,191,163,160,119,63,64,24,50,191,135,220,99,62,221,85,161,62,31,238,66,191,242,183,124,63,107,74,109,191,198,29,25,63,184,167,196,189,2,38,222,190,241,140,86,63,84,222,127,191,190,14,95,63,85,63,251,190,132,72,3,189,45,168,11,63,229,165,102,191,42,209,126,63,113,41,77,191,255,34,192,62,40,110,35,62,76,242,37,191,81,245,114,63,224,148,121,191,190,229,55,63,3,223,129,190,154,173,145,190,220,130,61,63,118,71,123,191,119,63,112,63,7,157,31,191,59,242,2,62,195,63,207,62,207,246,81,191,89,121,127,63,44,248,98,191,96,181,4,63,243,4,53,63,44,248,98,191,61,118,18,63,59,242,2,190,176,211,176,190,220,130,61,63,163,160,119,191,224,148,121,63,31,238,66,191,255,34,192,62,184,167,196,61,45,168,11,191,190,14,95,63,84,222,127,191,229,165,102,63,198,29,25,191,40,110,35,62,221,85,161,62,190,229,55,191,66,107,117,63,118,71,123,191,28,38,72,63,195,63,207,190,63,55,131,189,96,181,4,63,163,234,90,191,89,121,127,63,242,22,106,191,7,157,31,63,22,191,67,190,154,173,145,190,64,24,50,63,81,245,114,191,242,183,124,63,113,41,77,191,2,38,222,62,132,72,3,61,85,63,251,190,241,140,86,63,42,209,126,191,107,74,109,63,76,242,37,191,135,220,99,62,3,223,129,62,233,27,44,191,119,63,112,63,243,229,125,191,207,246,81,63,210,209,236,190,243,4,53,63,242,22,106,191,233,27,44,63,221,85,161,190,184,167,196,189,85,63,251,62,113,41,77,191,224,148,121,63,118,71,123,191,207,246,81,63,96,181,4,191,59,242,2,62,154,173,145,62,76,242,37,191,229,165,102,63,84,222,127,191,107,74,109,63,64,24,50,191,176,211,176,62,63,55,131,61,210,209,236,190,28,38,72,63,163,160,119,191,242,183,124,63,241,140,86,191,45,168,11,63,40,110,35,190,3,223,129,190,7,157,31,63,44,248,98,191,89,121,127,63,119,63,112,191,190,229,55,63,255,34,192,190,132,72,3,189,2,38,222,62,31,238,66,191,66,107,117,63,243,229,125,191,163,234,90,63,61,118,18,191,22,191,67,62,135,220,99,62,198,29,25,191,190,14,95,63,42,209,126,191,81,245,114,63,220,130,61,191,195,63,207,62,243,4,53,63,119,63,112,191,31,238,66,63,85,63,251,190,40,110,35,62,22,191,67,62,96,181,4,191,28,38,72,63,81,245,114,191,84,222,127,63,107,74,109,191,220,130,61,63,210,209,236,190,59,242,2,62,135,220,99,62,45,168,11,191,113,41,77,63,66,107,117,191,89,121,127,63,242,22,106,191,190,229,55,63,2,38,222,190,184,167,196,61,3,223,129,62,61,118,18,191,207,246,81,63,163,160,119,191,42,209,126,63,229,165,102,191,64,24,50,63,195,63,207,190,63,55,131,61,154,173,145,62,198,29,25,191,241,140,86,63,224,148,121,191,243,229,125,63,44,248,98,191,233,27,44,63,255,34,192,190,132,72,3,61,221,85,161,62,7,157,31,191,163,234,90,63,118,71,123,191,242,183,124,63,190,14,95,191,76,242,37,63,176,211,176,190,243,4,53,63,66,107,117,191,241,140,86,63,76,242,37,191,195,63,207,62,59,242,2,190,40,110,35,190,2,38,222,62,233,27,44,191,163,234,90,63,163,160,119,191,84,222,127,63,81,245,114,191,207,246,81,63,7,157,31,191,255,34,192,62,184,167,196,189,22,191,67,190,210,209,236,62,64,24,50,191,190,14,95,63,224,148,121,191,89,121,127,63,119,63,112,191,113,41,77,63,198,29,25,191,176,211,176,62,63,55,131,189,135,220,99,190,85,63,251,62,190,229,55,191,44,248,98,63,118,71,123,191,42,209,126,63,107,74,109,191,28,38,72,63,61,118,18,191,221,85,161,62,132,72,3,189,3,223,129,190,96,181,4,63,220,130,61,191,229,165,102,63,242,183,124,191,243,229,125,63,242,22,106,191,31,238,66,63,45,168,11,191,154,173,145,62,243,4,53,63,224,148,121,191,229,165,102,63,28,38,72,191,7,157,31,63,2,38,222,190,135,220,99,62,8,72,141,166,135,220,99,190,2,38,222,62,7,157,31,191,28,38,72,63,229,165,102,191,224,148,121,63,0,0,128,191,224,148,121,63,229,165,102,191,28,38,72,63,7,157,31,191,2,38,222,62,135,220,99,190,250,9,150,167,135,220,99,62,2,38,222,190,7,157,31,63,28,38,72,191,229,165,102,63,224,148,121,191,0,0,128,63,224,148,121,191,229,165,102,63,28,38,72,191,7,157,31,63,2,38,222,190,135,220,99,62,251,178,39,40,135,220,99,190,2,38,222,62,7,157,31,191,28,38,72,63,229,165,102,191,224,148,121,63,0,0,128,191,224,148,121,63,229,165,102,191,28,38,72,63,7,157,31,191,2,38,222,62,135,220,99,190,243,4,53,63,242,183,124,191,81,245,114,63,44,248,98,191,113,41,77,63,64,24,50,191,61,118,18,63,2,38,222,190,154,173,145,62,59,242,2,190,132,72,3,189,22,191,67,62,176,211,176,190,85,63,251,62,7,157,31,191,220,130,61,63,241,140,86,191,242,22,106,63,163,160,119,191,42,209,126,63,89,121,127,191,224,148,121,63,107,74,109,191,163,234,90,63,31,238,66,191,76,242,37,63,96,181,4,191,255,34,192,62,135,220,99,190,63,55,131,61,184,167,196,61,3,223,129,190,195,63,207,62,45,168,11,191,233,27,44,63,28,38,72,191,190,14,95,63,119,63,112,191,118,71,123,63,84,222,127,191,243,229,125,63,66,107,117,191,229,165,102,63,207,246,81,191,190,229,55,63,198,29,25,191,210,209,236,62,221,85,161,190,40,110,35,62,243,4,53,63,42,209,126,191,118,71,123,63,66,107,117,191,107,74,109,63,44,248,98,191,241,140,86,63,28,38,72,191,190,229,55,63,76,242,37,191,61,118,18,63,85,63,251,190,195,63,207,62,221,85,161,190,135,220,99,62,59,242,2,190,132,72,3,61,63,55,131,61,40,110,35,190,3,223,129,62,176,211,176,190,2,38,222,62,96,181,4,191,198,29,25,63,233,27,44,191,220,130,61,63,113,41,77,191,163,234,90,63,229,165,102,191,119,63,112,63,163,160,119,191,242,183,124,63,89,121,127,191,84,222,127,63,243,229,125,191,224,148,121,63,81,245,114,191,242,22,106,63,190,14,95,191,207,246,81,63,31,238,66,191,64,24,50,63,7,157,31,191,45,168,11,63,210,209,236,190,255,34,192,62,154,173,145,190,22,191,67,62,184,167,196,189,243,4,53,63,84,222,127,191,89,121,127,63,42,209,126,191,243,229,125,63,242,183,124,191,118,71,123,63,224,148,121,191,163,160,119,63,66,107,117,191,81,245,114,63,119,63,112,191,107,74,109,63,242,22,106,191,229,165,102,63,44,248,98,191,190,14,95,63,163,234,90,191,241,140,86,63,207,246,81,191,113,41,77,63,28,38,72,191,31,238,66,63,220,130,61,191,190,229,55,63,64,24,50,191,233,27,44,63,76,242,37,191,7,157,31,63,198,29,25,191,61,118,18,63,45,168,11,191,96,181,4,63,85,63,251,190,210,209,236,62,2,38,222,190,195,63,207,62,255,34,192,190,176,211,176,62,221,85,161,190,154,173,145,62,3,223,129,190,135,220,99,62,22,191,67,190,40,110,35,62,59,242,2,190,184,167,196,61,63,55,131,189,132,72,3,61,243,4,53,63,169,223,127,63,174,126,127,63,38,221,126,63,59,251,125,63,37,217,124,63,45,119,123,63,174,213,121,63,17,245,119,63,207,213,117,63,113,120,115,63,144,221,112,63,213,5,110,63,248,241,106,63,191,162,103,63,1,25,100,63,162,85,96,63,151,89,92,63,224,37,88,63,141,187,83,63,189,27,79,63,153,71,74,63,91,64,69,63,71,7,64,63,176,157,58,63,243,4,53,63,123,62,47,63,188,75,41,63,56,46,35,63,122,231,28,63,24,121,22,63,178,228,15,63,242,43,9,63,138,80,2,63,107,168,246,62,113,113,232,62,190,255,217,62,248,86,203,62,210,122,188,62,15,111,173,62,122,55,158,62,236,215,142,62,144,168,126,62,241,96,95,62,227,224,63,62,91,48,32,62,91,87,0,62,220,187,192,61,81,152,128,61,145,168,0,61,243,4,53,63,38,221,126,63,45,119,123,63,207,213,117,63,213,5,110,63,1,25,100,63,224,37,88,63,153,71,74,63,176,157,58,63,188,75,41,63,24,121,22,63,138,80,2,63,190,255,217,62,15,111,173,62,144,168,126,62,91,48,32,62,81,152,128,61,145,168,0,189,91,87,0,190,241,96,95,190,122,55,158,190,248,86,203,190,107,168,246,190,178,228,15,191,56,46,35,191,243,4,53,191,91,64,69,191,141,187,83,191,162,85,96,191,248,241,106,191,113,120,115,191,174,213,121,191,59,251,125,191,169,223,127,191,174,126,127,191,37,217,124,191,17,245,119,191,144,221,112,191,191,162,103,191,151,89,92,191,189,27,79,191,71,7,64,191,123,62,47,191,122,231,28,191,242,43,9,191,113,113,232,190,210,122,188,190,236,215,142,190,227,224,63,190,220,187,192,189,243,4,53,63,37,217,124,63,113,120,115,63,1,25,100,63,189,27,79,63,243,4,53,63,24,121,22,63,113,113,232,62,122,55,158,62,91,48,32,62,50,49,141,36,91,48,32,190,122,55,158,190,113,113,232,190,24,121,22,191,243,4,53,191,189,27,79,191,1,25,100,191,113,120,115,191,37,217,124,191,0,0,128,191,37,217,124,191,113,120,115,191,1,25,100,191,189,27,79,191,243,4,53,191,24,121,22,191,113,113,232,190,122,55,158,190,91,48,32,190,202,201,83,165,91,48,32,62,122,55,158,62,113,113,232,62,24,121,22,63,243,4,53,63,189,27,79,63,1,25,100,63,113,120,115,63,37,217,124,63,0,0,128,63,37,217,124,63,113,120,115,63,1,25,100,63,189,27,79,63,243,4,53,63,24,121,22,63,113,113,232,62,122,55,158,62,91,48,32,62,243,4,53,63,174,213,121,63,191,162,103,63,153,71,74,63,56,46,35,63,113,113,232,62,144,168,126,62,145,168,0,61,227,224,63,190,248,86,203,190,24,121,22,191,71,7,64,191,162,85,96,191,207,213,117,191,174,126,127,191,37,217,124,191,213,5,110,191,141,187,83,191,123,62,47,191,138,80,2,191,122,55,158,190,220,187,192,189,91,87,0,62,15,111,173,62,242,43,9,63,243,4,53,63,224,37,88,63,144,221,112,63,59,251,125,63,38,221,126,63,113,120,115,63,151,89,92,63,176,157,58,63,178,228,15,63,210,122,188,62,91,48,32,62,81,152,128,189,236,215,142,190,107,168,246,190,188,75,41,191,189,27,79,191,248,241,106,191,45,119,123,191,169,223,127,191,17,245,119,191,1,25,100,191,91,64,69,191,122,231,28,191,190,255,217,190,241,96,95,190,243,4,53,63,207,213,117,63,224,37,88,63,188,75,41,63,190,255,217,62,91,48,32,62,91,87,0,190,248,86,203,190,56,46,35,191,141,187,83,191,113,120,115,191,169,223,127,191,17,245,119,191,151,89,92,191,123,62,47,191,113,113,232,190,227,224,63,190,220,187,192,61,210,122,188,62,122,231,28,63,189,27,79,63,144,221,112,63,174,126,127,63,174,213,121,63,162,85,96,63,243,4,53,63,107,168,246,62,241,96,95,62,81,152,128,189,15,111,173,190,24,121,22,191,153,71,74,191,213,5,110,191,38,221,126,191,45,119,123,191,1,25,100,191,176,157,58,191,138,80,2,191,144,168,126,190,145,168,0,61,122,55,158,62,178,228,15,63,91,64,69,63,248,241,106,63,59,251,125,63,37,217,124,63,191,162,103,63,71,7,64,63,242,43,9,63,236,215,142,62,243,4,53,63,144,221,112,63,91,64,69,63,138,80,2,63,227,224,63,62,91,48,32,190,107,168,246,190,71,7,64,191,213,5,110,191,169,223,127,191,113,120,115,191,153,71,74,191,242,43,9,191,241,96,95,190,91,87,0,62,113,113,232,62,176,157,58,63,248,241,106,63,174,126,127,63,207,213,117,63,189,27,79,63,178,228,15,63,144,168,126,62,220,187,192,189,190,255,217,190,243,4,53,191,191,162,103,191,38,221,126,191,17,245,119,191,141,187,83,191,24,121,22,191,236,215,142,190,81,152,128,61,248,86,203,62,123,62,47,63,1,25,100,63,59,251,125,63,174,213,121,63,224,37,88,63,122,231,28,63,122,55,158,62,145,168,0,189,210,122,188,190,188,75,41,191,162,85,96,191,37,217,124,191,45,119,123,191,151,89,92,191,56,46,35,191,15,111,173,190,243,4,53,63,248,241,106,63,123,62,47,63,15,111,173,62,81,152,128,189,113,113,232,190,91,64,69,191,207,213,117,191,59,251,125,191,151,89,92,191,24,121,22,191,241,96,95,190,227,224,63,62,178,228,15,63,224,37,88,63,37,217,124,63,17,245,119,63,153,71,74,63,107,168,246,62,220,187,192,61,122,55,158,190,188,75,41,191,191,162,103,191,169,223,127,191,213,5,110,191,243,4,53,191,210,122,188,190,145,168,0,61,190,255,217,62,71,7,64,63,113,120,115,63,38,221,126,63,162,85,96,63,122,231,28,63,144,168,126,62,91,48,32,190,242,43,9,191,141,187,83,191,45,119,123,191,174,213,121,191,189,27,79,191,138,80,2,191,91,87,0,190,236,215,142,62,56,46,35,63,1,25,100,63,174,126,127,63,144,221,112,63,176,157,58,63,248,86,203,62,243,4,53,63,1,25,100,63,24,121,22,63,91,48,32,62,122,55,158,190,243,4,53,191,113,120,115,191,37,217,124,191,189,27,79,191,113,113,232,190,202,201,83,165,113,113,232,62,189,27,79,63,37,217,124,63,113,120,115,63,243,4,53,63,122,55,158,62,91,48,32,190,24,121,22,191,1,25,100,191,0,0,128,191,1,25,100,191,24,121,22,191,91,48,32,190,122,55,158,62,243,4,53,63,113,120,115,63,37,217,124,63,189,27,79,63,113,113,232,62,88,215,30,38,113,113,232,190,189,27,79,191,37,217,124,191,113,120,115,191,243,4,53,191,122,55,158,190,91,48,32,62,24,121,22,63,1,25,100,63,0,0,128,63,1,25,100,63,24,121,22,63,91,48,32,62,122,55,158,190,243,4,53,191,113,120,115,191,37,217,124,191,189,27,79,191,113,113,232,190,243,4,53,63,151,89,92,63,107,168,246,62,145,168,0,189,242,43,9,191,1,25,100,191,174,126,127,191,141,187,83,191,190,255,217,190,220,187,192,61,24,121,22,63,248,241,106,63,59,251,125,63,153,71,74,63,210,122,188,62,91,48,32,190,56,46,35,191,144,221,112,191,45,119,123,191,71,7,64,191,122,55,158,190,241,96,95,62,123,62,47,63,207,213,117,63,17,245,119,63,243,4,53,63,144,168,126,62,236,215,142,190,176,157,58,191,174,213,121,191,113,120,115,191,188,75,41,191,227,224,63,190,15,111,173,62,91,64,69,63,37,217,124,63,213,5,110,63,122,231,28,63,91,87,0,62,248,86,203,190,189,27,79,191,38,221,126,191,191,162,103,191,178,228,15,191,81,152,128,189,113,113,232,62,224,37,88,63,169,223,127,63,162,85,96,63,138,80,2,63,243,4,53,63,141,187,83,63,210,122,188,62,241,96,95,190,176,157,58,191,37,217,124,191,191,162,103,191,138,80,2,191,81,152,128,61,122,231,28,63,113,120,115,63,207,213,117,63,56,46,35,63,220,187,192,61,107,168,246,190,1,25,100,191,59,251,125,191,71,7,64,191,144,168,126,190,15,111,173,62,189,27,79,63,169,223,127,63,224,37,88,63,248,86,203,62,227,224,63,190,243,4,53,191,45,119,123,191,248,241,106,191,242,43,9,191,145,168,0,61,24,121,22,63,144,221,112,63,17,245,119,63,188,75,41,63,91,87,0,62,113,113,232,190,162,85,96,191,38,221,126,191,91,64,69,191,236,215,142,190,122,55,158,62,153,71,74,63,174,126,127,63,151,89,92,63,190,255,217,62,91,48,32,190,123,62,47,191,174,213,121,191,213,5,110,191,178,228,15,191,243,4,53,63,153,71,74,63,144,168,126,62,248,86,203,190,162,85,96,191,37,217,124,191,123,62,47,191,220,187,192,189,242,43,9,63,144,221,112,63,113,120,115,63,178,228,15,63,81,152,128,189,188,75,41,191,45,119,123,191,1,25,100,191,190,255,217,190,241,96,95,62,91,64,69,63,169,223,127,63,189,27,79,63,236,215,142,62,210,122,188,190,151,89,92,191,59,251,125,191,243,4,53,191,91,87,0,190,138,80,2,63,213,5,110,63,207,213,117,63,24,121,22,63,145,168,0,189,56,46,35,191,174,213,121,191,191,162,103,191,113,113,232,190,227,224,63,62,71,7,64,63,174,126,127,63,141,187,83,63,122,55,158,62,15,111,173,190,224,37,88,191,38,221,126,191,176,157,58,191,91,48,32,190,107,168,246,62,248,241,106,63,17,245,119,63,122,231,28,63,243,4,53,63,71,7,64,63,91,87,0,62,178,228,15,191,17,245,119,191,1,25,100,191,210,122,188,190,15,111,173,62,162,85,96,63,174,213,121,63,24,121,22,63,220,187,192,189,176,157,58,191,169,223,127,191,91,64,69,191,91,48,32,190,242,43,9,63,207,213,117,63,191,162,103,63,248,86,203,62,122,55,158,190,151,89,92,191,45,119,123,191,122,231,28,191,81,152,128,61,243,4,53,63,174,126,127,63,153,71,74,63,227,224,63,62,138,80,2,191,113,120,115,191,248,241,106,191,190,255,217,190,236,215,142,62,224,37,88,63,37,217,124,63,56,46,35,63,145,168,0,189,123,62,47,191,38,221,126,191,189,27,79,191,241,96,95,190,107,168,246,62,144,221,112,63,213,5,110,63,113,113,232,62,144,168,126,190,141,187,83,191,59,251,125,191,188,75,41,191,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,8,72,141,166,243,4,53,191,0,0,128,191,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,63,243,4,53,63,119,247,83,166,243,4,53,191,0,0,128,191,243,4,53,191,53,213,83,167,243,4,53,63,0,0,128,63,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,191,243,4,53,191,92,123,101,167,243,4,53,63,0,0,128,63,243,4,53,63,243,4,53,63,188,75,41,63,91,87,0,190,141,187,83,191,17,245,119,191,113,113,232,190,210,122,188,62,144,221,112,63,162,85,96,63,241,96,95,62,24,121,22,191,38,221,126,191,176,157,58,191,145,168,0,61,91,64,69,63,37,217,124,63,242,43,9,63,236,215,142,190,191,162,103,191,248,241,106,191,122,55,158,190,138,80,2,63,45,119,123,63,153,71,74,63,81,152,128,61,243,4,53,191,174,126,127,191,122,231,28,191,227,224,63,62,151,89,92,63,113,120,115,63,248,86,203,62,190,255,217,190,207,213,117,191,224,37,88,191,91,48,32,190,56,46,35,63,169,223,127,63,123,62,47,63,220,187,192,189,189,27,79,191,174,213,121,191,107,168,246,190,15,111,173,62,213,5,110,63,1,25,100,63,144,168,126,62,178,228,15,191,59,251,125,191,71,7,64,191,243,4,53,63,122,231,28,63,144,168,126,190,248,241,106,191,162,85,96,191,91,48,32,190,123,62,47,63,38,221,126,63,242,43,9,63,15,111,173,190,113,120,115,191,141,187,83,191,81,152,128,189,71,7,64,63,45,119,123,63,113,113,232,62,190,255,217,190,174,213,121,191,91,64,69,191,145,168,0,61,189,27,79,63,207,213,117,63,210,122,188,62,138,80,2,191,59,251,125,191,243,4,53,191,91,87,0,62,151,89,92,63,213,5,110,63,236,215,142,62,24,121,22,191,169,223,127,191,56,46,35,191,241,96,95,62,191,162,103,63,1,25,100,63,227,224,63,62,188,75,41,191,174,126,127,191,178,228,15,191,122,55,158,62,144,221,112,63,224,37,88,63,220,187,192,61,176,157,58,191,37,217,124,191,107,168,246,190,248,86,203,62,17,245,119,63,153,71,74,63,243,4,53,63,178,228,15,63,210,122,188,190,174,213,121,191,176,157,58,191,91,48,32,62,191,162,103,63,151,89,92,63,81,152,128,61,153,71,74,191,113,120,115,191,236,215,142,190,56,46,35,63,38,221,126,63,107,168,246,62,113,113,232,190,59,251,125,191,188,75,41,191,144,168,126,62,144,221,112,63,189,27,79,63,145,168,0,189,224,37,88,191,248,241,106,191,227,224,63,190,243,4,53,63,45,119,123,63,248,86,203,62,242,43,9,191,169,223,127,191,24,121,22,191,15,111,173,62,17,245,119,63,71,7,64,63,91,87,0,190,1,25,100,191,162,85,96,191,220,187,192,189,91,64,69,63,207,213,117,63,122,55,158,62,122,231,28,191,174,126,127,191,138,80,2,191,190,255,217,62,37,217,124,63,123,62,47,63,241,96,95,190,213,5,110,191,141,187,83,191,243,4,53,63,138,80,2,63,107,168,246,190,169,223,127,191,242,43,9,191,113,113,232,62,174,126,127,63,178,228,15,63,190,255,217,190,38,221,126,191,24,121,22,191,248,86,203,62,59,251,125,63,122,231,28,63,210,122,188,190,37,217,124,191,56,46,35,191,15,111,173,62,45,119,123,63,188,75,41,63,122,55,158,190,174,213,121,191,123,62,47,191,236,215,142,62,17,245,119,63,243,4,53,63,144,168,126,190,207,213,117,191,176,157,58,191,241,96,95,62,113,120,115,63,71,7,64,63,227,224,63,190,144,221,112,191,91,64,69,191,91,48,32,62,213,5,110,63,153,71,74,63,91,87,0,190,248,241,106,191,189,27,79,191,220,187,192,61,191,162,103,63,141,187,83,63,81,152,128,189,1,25,100,191,224,37,88,191,145,168,0,61,162,85,96,63,151,89,92,63,243,4,53,63,113,113,232,62,24,121,22,191,37,217,124,191,122,55,158,190,243,4,53,63,113,120,115,63,91,48,32,62,189,27,79,191,1,25,100,191,23,22,247,165,1,25,100,63,189,27,79,63,91,48,32,190,113,120,115,191,243,4,53,191,122,55,158,62,37,217,124,63,24,121,22,63,113,113,232,190,0,0,128,191,113,113,232,190,24,121,22,63,37,217,124,63,122,55,158,62,243,4,53,191,113,120,115,191,91,48,32,190,189,27,79,63,1,25,100,63,222,94,13,166,1,25,100,191,189,27,79,191,91,48,32,62,113,120,115,63,243,4,53,63,122,55,158,190,37,217,124,191,24,121,22,191,113,113,232,62,0,0,128,63,113,113,232,62,24,121,22,191,37,217,124,191,122,55,158,190,243,4,53,63,113,120,115,63,91,48,32,62,189,27,79,191,1,25,100,191,243,4,53,63,248,86,203,62,123,62,47,191,144,221,112,191,81,152,128,189,1,25,100,63,91,64,69,63,236,215,142,190,59,251,125,191,138,80,2,191,24,121,22,63,174,213,121,63,227,224,63,62,141,187,83,191,224,37,88,191,91,48,32,62,17,245,119,63,122,231,28,63,107,168,246,190,38,221,126,191,122,55,158,190,71,7,64,63,191,162,103,63,145,168,0,189,213,5,110,191,243,4,53,191,210,122,188,62,169,223,127,63,190,255,217,62,188,75,41,191,113,120,115,191,220,187,192,189,162,85,96,63,153,71,74,63,144,168,126,190,37,217,124,191,242,43,9,191,178,228,15,63,45,119,123,63,241,96,95,62,189,27,79,191,151,89,92,191,91,87,0,62,207,213,117,63,56,46,35,63,113,113,232,190,174,126,127,191,15,111,173,190,176,157,58,63,248,241,106,63,243,4,53,63,15,111,173,62,91,64,69,191,151,89,92,191,227,224,63,62,37,217,124,63,107,168,246,62,188,75,41,191,213,5,110,191,145,168,0,61,113,120,115,63,122,231,28,63,242,43,9,191,174,213,121,191,91,87,0,190,1,25,100,63,176,157,58,63,248,86,203,190,174,126,127,191,236,215,142,190,189,27,79,63,141,187,83,63,144,168,126,190,38,221,126,191,190,255,217,190,243,4,53,63,191,162,103,63,220,187,192,189,17,245,119,191,178,228,15,191,24,121,22,63,207,213,117,63,81,152,128,61,248,241,106,191,123,62,47,191,113,113,232,62,59,251,125,63,241,96,95,62,224,37,88,191,153,71,74,191,122,55,158,62,169,223,127,63,210,122,188,62,71,7,64,191,162,85,96,191,91,48,32,62,45,119,123,63,138,80,2,63,56,46,35,191,144,221,112,191,243,4,53,63,236,215,142,62,224,37,88,191,71,7,64,191,190,255,217,62,37,217,124,63,91,87,0,62,248,241,106,191,56,46,35,191,178,228,15,63,113,120,115,63,145,168,0,189,17,245,119,191,138,80,2,191,123,62,47,63,1,25,100,63,227,224,63,190,38,221,126,191,210,122,188,190,153,71,74,63,189,27,79,63,15,111,173,190,174,126,127,191,241,96,95,190,162,85,96,63,243,4,53,63,107,168,246,190,174,213,121,191,81,152,128,189,144,221,112,63,24,121,22,63,122,231,28,191,213,5,110,191,220,187,192,61,45,119,123,63,113,113,232,62,176,157,58,191,151,89,92,191,144,168,126,62,169,223,127,63,122,55,158,62,141,187,83,191,91,64,69,191,248,86,203,62,59,251,125,63,91,48,32,62,191,162,103,191,188,75,41,191,242,43,9,63,207,213,117,63,243,4,53,63,241,96,95,62,191,162,103,191,122,231,28,191,56,46,35,63,1,25,100,63,144,168,126,190,169,223,127,191,227,224,63,190,248,241,106,63,24,121,22,63,188,75,41,191,162,85,96,191,236,215,142,62,174,126,127,63,91,48,32,62,213,5,110,191,178,228,15,191,123,62,47,63,151,89,92,63,122,55,158,190,38,221,126,191,91,87,0,190,144,221,112,63,242,43,9,63,243,4,53,191,224,37,88,191,15,111,173,62,59,251,125,63,220,187,192,61,113,120,115,191,138,80,2,191,176,157,58,63,141,187,83,63,210,122,188,190,37,217,124,191,81,152,128,189,207,213,117,63,107,168,246,62,71,7,64,191,189,27,79,191,248,86,203,62,45,119,123,63,145,168,0,61,17,245,119,191,113,113,232,190,91,64,69,63,153,71,74,63,190,255,217,190,174,213,121,191,243,4,53,63,91,48,32,62,113,120,115,191,113,113,232,190,189,27,79,63,243,4,53,63,24,121,22,191,1,25,100,191,122,55,158,62,37,217,124,63,88,215,30,38,37,217,124,191,122,55,158,190,1,25,100,63,24,121,22,63,243,4,53,191,189,27,79,191,113,113,232,62,113,120,115,63,91,48,32,190,0,0,128,191,91,48,32,190,113,120,115,63,113,113,232,62,189,27,79,191,243,4,53,191,24,121,22,63,1,25,100,63,122,55,158,190,37,217,124,191,130,33,119,167,37,217,124,63,122,55,158,62,1,25,100,191,24,121,22,191,243,4,53,63,189,27,79,63,113,113,232,190,113,120,115,191,91,48,32,62,0,0,128,63,91,48,32,62,113,120,115,191,113,113,232,190,189,27,79,63,243,4,53,63,24,121,22,191,1,25,100,191,122,55,158,62,37,217,124,63,243,4,53,63,220,187,192,61,45,119,123,191,236,215,142,190,213,5,110,63,113,113,232,62,224,37,88,191,122,231,28,191,176,157,58,63,71,7,64,63,24,121,22,191,151,89,92,191,190,255,217,62,144,221,112,63,144,168,126,190,37,217,124,191,81,152,128,61,169,223,127,63,91,87,0,62,174,213,121,191,122,55,158,190,248,241,106,63,107,168,246,62,141,187,83,191,56,46,35,191,243,4,53,63,91,64,69,63,178,228,15,191,162,85,96,191,248,86,203,62,113,120,115,63,241,96,95,190,59,251,125,191,145,168,0,61,174,126,127,63,91,48,32,62,17,245,119,191,15,111,173,190,191,162,103,63,138,80,2,63,189,27,79,191,188,75,41,191,123,62,47,63,153,71,74,63,242,43,9,191,1,25,100,191,210,122,188,62,207,213,117,63,227,224,63,190,38,221,126,191,243,4,53,63,145,168,0,61,174,126,127,191,220,187,192,189,59,251,125,63,91,48,32,62,45,119,123,191,241,96,95,190,17,245,119,63,236,215,142,62,113,120,115,191,15,111,173,190,213,5,110,63,248,86,203,62,191,162,103,191,113,113,232,190,162,85,96,63,138,80,2,63,224,37,88,191,178,228,15,191,189,27,79,63,122,231,28,63,91,64,69,191,188,75,41,191,176,157,58,63,243,4,53,63,123,62,47,191,71,7,64,191,56,46,35,63,153,71,74,63,24,121,22,191,141,187,83,191,242,43,9,63,151,89,92,63,107,168,246,190,1,25,100,191,190,255,217,62,248,241,106,63,210,122,188,190,144,221,112,191,122,55,158,62,207,213,117,63,144,168,126,190,174,213,121,191,227,224,63,62,37,217,124,63,91,87,0,190,38,221,126,191,81,152,128,61,169,223,127,63,243,4,53,63,145,168,0,189,174,126,127,191,220,187,192,61,59,251,125,63,91,48,32,190,45,119,123,191,241,96,95,62,17,245,119,63,236,215,142,190,113,120,115,191,15,111,173,62,213,5,110,63,248,86,203,190,191,162,103,191,113,113,232,62,162,85,96,63,138,80,2,191,224,37,88,191,178,228,15,63,189,27,79,63,122,231,28,191,91,64,69,191,188,75,41,63,176,157,58,63,243,4,53,191,123,62,47,191,71,7,64,63,56,46,35,63,153,71,74,191,24,121,22,191,141,187,83,63,242,43,9,63,151,89,92,191,107,168,246,190,1,25,100,63,190,255,217,62,248,241,106,191,210,122,188,190,144,221,112,63,122,55,158,62,207,213,117,191,144,168,126,190,174,213,121,63,227,224,63,62,37,217,124,191,91,87,0,190,38,221,126,63,81,152,128,61,169,223,127,191,243,4,53,63,220,187,192,189,45,119,123,191,236,215,142,62,213,5,110,63,113,113,232,190,224,37,88,191,122,231,28,63,176,157,58,63,71,7,64,191,24,121,22,191,151,89,92,63,190,255,217,62,144,221,112,191,144,168,126,190,37,217,124,63,81,152,128,61,169,223,127,191,91,87,0,62,174,213,121,63,122,55,158,190,248,241,106,191,107,168,246,62,141,187,83,63,56,46,35,191,243,4,53,191,91,64,69,63,178,228,15,63,162,85,96,191,248,86,203,190,113,120,115,63,241,96,95,62,59,251,125,191,145,168,0,189,174,126,127,63,91,48,32,190,17,245,119,191,15,111,173,62,191,162,103,63,138,80,2,191,189,27,79,191,188,75,41,63,123,62,47,63,153,71,74,191,242,43,9,191,1,25,100,63,210,122,188,62,207,213,117,191,227,224,63,190,38,221,126,63,243,4,53,63,91,48,32,190,113,120,115,191,113,113,232,62,189,27,79,63,243,4,53,191,24,121,22,191,1,25,100,63,122,55,158,62,37,217,124,191,46,238,158,38,37,217,124,63,122,55,158,190,1,25,100,191,24,121,22,63,243,4,53,63,189,27,79,191,113,113,232,190,113,120,115,63,91,48,32,62,0,0,128,191,91,48,32,62,113,120,115,63,113,113,232,190,189,27,79,191,243,4,53,63,24,121,22,63,1,25,100,191,122,55,158,190,37,217,124,63,162,50,247,167,37,217,124,191,122,55,158,62,1,25,100,63,24,121,22,191,243,4,53,191,189,27,79,63,113,113,232,62,113,120,115,191,91,48,32,190,0,0,128,63,91,48,32,190,113,120,115,191,113,113,232,62,189,27,79,63,243,4,53,191,24,121,22,191,1,25,100,63,122,55,158,62,37,217,124,191,243,4,53,63,241,96,95,190,191,162,103,191,122,231,28,63,56,46,35,63,1,25,100,191,144,168,126,190,169,223,127,63,227,224,63,190,248,241,106,191,24,121,22,63,188,75,41,63,162,85,96,191,236,215,142,190,174,126,127,63,91,48,32,190,213,5,110,191,178,228,15,63,123,62,47,63,151,89,92,191,122,55,158,190,38,221,126,63,91,87,0,190,144,221,112,191,242,43,9,63,243,4,53,63,224,37,88,191,15,111,173,190,59,251,125,63,220,187,192,189,113,120,115,191,138,80,2,63,176,157,58,63,141,187,83,191,210,122,188,190,37,217,124,63,81,152,128,189,207,213,117,191,107,168,246,62,71,7,64,63,189,27,79,191,248,86,203,190,45,119,123,63,145,168,0,189,17,245,119,191,113,113,232,62,91,64,69,63,153,71,74,191,190,255,217,190,174,213,121,63,243,4,53,63,236,215,142,190,224,37,88,191,71,7,64,63,190,255,217,62,37,217,124,191,91,87,0,62,248,241,106,63,56,46,35,191,178,228,15,191,113,120,115,63,145,168,0,61,17,245,119,191,138,80,2,63,123,62,47,63,1,25,100,191,227,224,63,190,38,221,126,63,210,122,188,190,153,71,74,191,189,27,79,63,15,111,173,62,174,126,127,191,241,96,95,62,162,85,96,63,243,4,53,191,107,168,246,190,174,213,121,63,81,152,128,189,144,221,112,191,24,121,22,63,122,231,28,63,213,5,110,191,220,187,192,189,45,119,123,63,113,113,232,190,176,157,58,191,151,89,92,63,144,168,126,62,169,223,127,191,122,55,158,62,141,187,83,63,91,64,69,191,248,86,203,190,59,251,125,63,91,48,32,190,191,162,103,191,188,75,41,63,242,43,9,63,207,213,117,191,243,4,53,63,15,111,173,190,91,64,69,191,151,89,92,63,227,224,63,62,37,217,124,191,107,168,246,62,188,75,41,63,213,5,110,191,145,168,0,189,113,120,115,63,122,231,28,191,242,43,9,191,174,213,121,63,91,87,0,190,1,25,100,191,176,157,58,63,248,86,203,62,174,126,127,191,236,215,142,62,189,27,79,63,141,187,83,191,144,168,126,190,38,221,126,63,190,255,217,190,243,4,53,191,191,162,103,63,220,187,192,61,17,245,119,191,178,228,15,63,24,121,22,63,207,213,117,191,81,152,128,61,248,241,106,63,123,62,47,191,113,113,232,190,59,251,125,63,241,96,95,190,224,37,88,191,153,71,74,63,122,55,158,62,169,223,127,191,210,122,188,62,71,7,64,63,162,85,96,191,91,48,32,190,45,119,123,63,138,80,2,191,56,46,35,191,144,221,112,63,243,4,53,63,248,86,203,190,123,62,47,191,144,221,112,63,81,152,128,189,1,25,100,191,91,64,69,63,236,215,142,62,59,251,125,191,138,80,2,63,24,121,22,63,174,213,121,191,227,224,63,62,141,187,83,63,224,37,88,191,91,48,32,190,17,245,119,63,122,231,28,191,107,168,246,190,38,221,126,63,122,55,158,190,71,7,64,191,191,162,103,63,145,168,0,61,213,5,110,191,243,4,53,63,210,122,188,62,169,223,127,191,190,255,217,62,188,75,41,63,113,120,115,191,220,187,192,61,162,85,96,63,153,71,74,191,144,168,126,190,37,217,124,63,242,43,9,191,178,228,15,191,45,119,123,63,241,96,95,190,189,27,79,191,151,89,92,63,91,87,0,62,207,213,117,191,56,46,35,63,113,113,232,62,174,126,127,191,15,111,173,62,176,157,58,63,248,241,106,191,243,4,53,63,113,113,232,190,24,121,22,191,37,217,124,63,122,55,158,190,243,4,53,191,113,120,115,63,91,48,32,190,189,27,79,191,1,25,100,63,8,72,141,166,1,25,100,191,189,27,79,63,91,48,32,62,113,120,115,191,243,4,53,63,122,55,158,62,37,217,124,191,24,121,22,63,113,113,232,62,0,0,128,191,113,113,232,62,24,121,22,63,37,217,124,191,122,55,158,62,243,4,53,63,113,120,115,191,91,48,32,62,189,27,79,63,1,25,100,191,250,9,150,167,1,25,100,63,189,27,79,191,91,48,32,190,113,120,115,63,243,4,53,191,122,55,158,190,37,217,124,63,24,121,22,191,113,113,232,190,0,0,128,63,113,113,232,190,24,121,22,191,37,217,124,63,122,55,158,190,243,4,53,191,113,120,115,63,91,48,32,190,189,27,79,191,1,25,100,63,243,4,53,63,138,80,2,191,107,168,246,190,169,223,127,63,242,43,9,191,113,113,232,190,174,126,127,63,178,228,15,191,190,255,217,190,38,221,126,63,24,121,22,191,248,86,203,190,59,251,125,63,122,231,28,191,210,122,188,190,37,217,124,63,56,46,35,191,15,111,173,190,45,119,123,63,188,75,41,191,122,55,158,190,174,213,121,63,123,62,47,191,236,215,142,190,17,245,119,63,243,4,53,191,144,168,126,190,207,213,117,63,176,157,58,191,241,96,95,190,113,120,115,63,71,7,64,191,227,224,63,190,144,221,112,63,91,64,69,191,91,48,32,190,213,5,110,63,153,71,74,191,91,87,0,190,248,241,106,63,189,27,79,191,220,187,192,189,191,162,103,63,141,187,83,191,81,152,128,189,1,25,100,63,224,37,88,191,145,168,0,189,162,85,96,63,151,89,92,191,243,4,53,63,178,228,15,191,210,122,188,190,174,213,121,63,176,157,58,191,91,48,32,190,191,162,103,63,151,89,92,191,81,152,128,61,153,71,74,63,113,120,115,191,236,215,142,62,56,46,35,63,38,221,126,191,107,168,246,62,113,113,232,62,59,251,125,191,188,75,41,63,144,168,126,62,144,221,112,191,189,27,79,63,145,168,0,61,224,37,88,191,248,241,106,63,227,224,63,190,243,4,53,191,45,119,123,63,248,86,203,190,242,43,9,191,169,223,127,63,24,121,22,191,15,111,173,190,17,245,119,63,71,7,64,191,91,87,0,190,1,25,100,63,162,85,96,191,220,187,192,61,91,64,69,63,207,213,117,191,122,55,158,62,122,231,28,63,174,126,127,191,138,80,2,63,190,255,217,62,37,217,124,191,123,62,47,63,241,96,95,62,213,5,110,191,141,187,83,63,243,4,53,63,122,231,28,191,144,168,126,190,248,241,106,63,162,85,96,191,91,48,32,62,123,62,47,63,38,221,126,191,242,43,9,63,15,111,173,62,113,120,115,191,141,187,83,63,81,152,128,189,71,7,64,191,45,119,123,63,113,113,232,190,190,255,217,190,174,213,121,63,91,64,69,191,145,168,0,189,189,27,79,63,207,213,117,191,210,122,188,62,138,80,2,63,59,251,125,191,243,4,53,63,91,87,0,62,151,89,92,191,213,5,110,63,236,215,142,190,24,121,22,191,169,223,127,63,56,46,35,191,241,96,95,190,191,162,103,63,1,25,100,191,227,224,63,62,188,75,41,63,174,126,127,191,178,228,15,63,122,55,158,62,144,221,112,191,224,37,88,63,220,187,192,189,176,157,58,191,37,217,124,63,107,168,246,190,248,86,203,190,17,245,119,63,153,71,74,191,243,4,53,63,188,75,41,191,91,87,0,190,141,187,83,63,17,245,119,191,113,113,232,62,210,122,188,62,144,221,112,191,162,85,96,63,241,96,95,190,24,121,22,191,38,221,126,63,176,157,58,191,145,168,0,189,91,64,69,63,37,217,124,191,242,43,9,63,236,215,142,62,191,162,103,191,248,241,106,63,122,55,158,190,138,80,2,191,45,119,123,63,153,71,74,191,81,152,128,61,243,4,53,63,174,126,127,191,122,231,28,63,227,224,63,62,151,89,92,191,113,120,115,63,248,86,203,190,190,255,217,190,207,213,117,63,224,37,88,191,91,48,32,62,56,46,35,63,169,223,127,191,123,62,47,63,220,187,192,61,189,27,79,191,174,213,121,63,107,168,246,190,15,111,173,190,213,5,110,63,1,25,100,191,144,168,126,62,178,228,15,63,59,251,125,191,71,7,64,63,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,250,9,150,167,243,4,53,63,0,0,128,191,243,4,53,63,91,26,141,38,243,4,53,191,0,0,128,63,243,4,53,191,52,131,176,167,243,4,53,63,0,0,128,191,243,4,53,63,232,223,30,40,243,4,53,191,0,0,128,63,243,4,53,191,77,14,212,38,243,4,53,63,0,0,128,191,243,4,53,63,19,114,48,39,243,4,53,191,0,0,128,63,243,4,53,191,243,4,53,63,71,7,64,191,91,87,0,62,178,228,15,63,17,245,119,191,1,25,100,63,210,122,188,190,15,111,173,190,162,85,96,63,174,213,121,191,24,121,22,63,220,187,192,61,176,157,58,191,169,223,127,63,91,64,69,191,91,48,32,62,242,43,9,63,207,213,117,191,191,162,103,63,248,86,203,190,122,55,158,190,151,89,92,63,45,119,123,191,122,231,28,63,81,152,128,61,243,4,53,191,174,126,127,63,153,71,74,191,227,224,63,62,138,80,2,63,113,120,115,191,248,241,106,63,190,255,217,190,236,215,142,190,224,37,88,63,37,217,124,191,56,46,35,63,145,168,0,61,123,62,47,191,38,221,126,63,189,27,79,191,241,96,95,62,107,168,246,62,144,221,112,191,213,5,110,63,113,113,232,190,144,168,126,190,141,187,83,63,59,251,125,191,188,75,41,63,243,4,53,63,153,71,74,191,144,168,126,62,248,86,203,62,162,85,96,191,37,217,124,63,123,62,47,191,220,187,192,61,242,43,9,63,144,221,112,191,113,120,115,63,178,228,15,191,81,152,128,189,188,75,41,63,45,119,123,191,1,25,100,63,190,255,217,190,241,96,95,190,91,64,69,63,169,223,127,191,189,27,79,63,236,215,142,190,210,122,188,190,151,89,92,63,59,251,125,191,243,4,53,63,91,87,0,190,138,80,2,191,213,5,110,63,207,213,117,191,24,121,22,63,145,168,0,61,56,46,35,191,174,213,121,63,191,162,103,191,113,113,232,62,227,224,63,62,71,7,64,191,174,126,127,63,141,187,83,191,122,55,158,62,15,111,173,62,224,37,88,191,38,221,126,63,176,157,58,191,91,48,32,62,107,168,246,62,248,241,106,191,17,245,119,63,122,231,28,191,243,4,53,63,141,187,83,191,210,122,188,62,241,96,95,62,176,157,58,191,37,217,124,63,191,162,103,191,138,80,2,63,81,152,128,61,122,231,28,191,113,120,115,63,207,213,117,191,56,46,35,63,220,187,192,189,107,168,246,190,1,25,100,63,59,251,125,191,71,7,64,63,144,168,126,190,15,111,173,190,189,27,79,63,169,223,127,191,224,37,88,63,248,86,203,190,227,224,63,190,243,4,53,63,45,119,123,191,248,241,106,63,242,43,9,191,145,168,0,189,24,121,22,63,144,221,112,191,17,245,119,63,188,75,41,191,91,87,0,62,113,113,232,62,162,85,96,191,38,221,126,63,91,64,69,191,236,215,142,62,122,55,158,62,153,71,74,191,174,126,127,63,151,89,92,191,190,255,217,62,91,48,32,62,123,62,47,191,174,213,121,63,213,5,110,191,178,228,15,63,243,4,53,63,151,89,92,191,107,168,246,62,145,168,0,61,242,43,9,191,1,25,100,63,174,126,127,191,141,187,83,63,190,255,217,190,220,187,192,189,24,121,22,63,248,241,106,191,59,251,125,63,153,71,74,191,210,122,188,62,91,48,32,62,56,46,35,191,144,221,112,63,45,119,123,191,71,7,64,63,122,55,158,190,241,96,95,190,123,62,47,63,207,213,117,191,17,245,119,63,243,4,53,191,144,168,126,62,236,215,142,62,176,157,58,191,174,213,121,63,113,120,115,191,188,75,41,63,227,224,63,190,15,111,173,190,91,64,69,63,37,217,124,191,213,5,110,63,122,231,28,191,91,87,0,62,248,86,203,62,189,27,79,191,38,221,126,63,191,162,103,191,178,228,15,63,81,152,128,189,113,113,232,190,224,37,88,63,169,223,127,191,162,85,96,63,138,80,2,191,243,4,53,63,1,25,100,191,24,121,22,63,91,48,32,190,122,55,158,190,243,4,53,63,113,120,115,191,37,217,124,63,189,27,79,191,113,113,232,62,119,247,83,166,113,113,232,190,189,27,79,63,37,217,124,191,113,120,115,63,243,4,53,191,122,55,158,62,91,48,32,62,24,121,22,191,1,25,100,63,0,0,128,191,1,25,100,63,24,121,22,191,91,48,32,62,122,55,158,62,243,4,53,191,113,120,115,63,37,217,124,191,189,27,79,63,113,113,232,190,52,131,176,167,113,113,232,62,189,27,79,191,37,217,124,63,113,120,115,191,243,4,53,63,122,55,158,190,91,48,32,190,24,121,22,63,1,25,100,191,0,0,128,63,1,25,100,191,24,121,22,63,91,48,32,190,122,55,158,190,243,4,53,63,113,120,115,191,37,217,124,63,189,27,79,191,113,113,232,62,243,4,53,63,248,241,106,191,123,62,47,63,15,111,173,190,81,152,128,189,113,113,232,62,91,64,69,191,207,213,117,63,59,251,125,191,151,89,92,63,24,121,22,191,241,96,95,62,227,224,63,62,178,228,15,191,224,37,88,63,37,217,124,191,17,245,119,63,153,71,74,191,107,168,246,62,220,187,192,189,122,55,158,190,188,75,41,63,191,162,103,191,169,223,127,63,213,5,110,191,243,4,53,63,210,122,188,190,145,168,0,189,190,255,217,62,71,7,64,191,113,120,115,63,38,221,126,191,162,85,96,63,122,231,28,191,144,168,126,62,91,48,32,62,242,43,9,191,141,187,83,63,45,119,123,191,174,213,121,63,189,27,79,191,138,80,2,63,91,87,0,190,236,215,142,190,56,46,35,63,1,25,100,191,174,126,127,63,144,221,112,191,176,157,58,63,248,86,203,190,243,4,53,63,144,221,112,191,91,64,69,63,138,80,2,191,227,224,63,62,91,48,32,62,107,168,246,190,71,7,64,63,213,5,110,191,169,223,127,63,113,120,115,191,153,71,74,63,242,43,9,191,241,96,95,62,91,87,0,62,113,113,232,190,176,157,58,63,248,241,106,191,174,126,127,63,207,213,117,191,189,27,79,63,178,228,15,191,144,168,126,62,220,187,192,61,190,255,217,190,243,4,53,63,191,162,103,191,38,221,126,63,17,245,119,191,141,187,83,63,24,121,22,191,236,215,142,62,81,152,128,61,248,86,203,190,123,62,47,63,1,25,100,191,59,251,125,63,174,213,121,191,224,37,88,63,122,231,28,191,122,55,158,62,145,168,0,61,210,122,188,190,188,75,41,63,162,85,96,191,37,217,124,63,45,119,123,191,151,89,92,63,56,46,35,191,15,111,173,62,243,4,53,63,207,213,117,191,224,37,88,63,188,75,41,191,190,255,217,62,91,48,32,190,91,87,0,190,248,86,203,62,56,46,35,191,141,187,83,63,113,120,115,191,169,223,127,63,17,245,119,191,151,89,92,63,123,62,47,191,113,113,232,62,227,224,63,190,220,187,192,189,210,122,188,62,122,231,28,191,189,27,79,63,144,221,112,191,174,126,127,63,174,213,121,191,162,85,96,63,243,4,53,191,107,168,246,62,241,96,95,190,81,152,128,189,15,111,173,62,24,121,22,191,153,71,74,63,213,5,110,191,38,221,126,63,45,119,123,191,1,25,100,63,176,157,58,191,138,80,2,63,144,168,126,190,145,168,0,189,122,55,158,62,178,228,15,191,91,64,69,63,248,241,106,191,59,251,125,63,37,217,124,191,191,162,103,63,71,7,64,191,242,43,9,63,236,215,142,190,243,4,53,63,174,213,121,191,191,162,103,63,153,71,74,191,56,46,35,63,113,113,232,190,144,168,126,62,145,168,0,189,227,224,63,190,248,86,203,62,24,121,22,191,71,7,64,63,162,85,96,191,207,213,117,63,174,126,127,191,37,217,124,63,213,5,110,191,141,187,83,63,123,62,47,191,138,80,2,63,122,55,158,190,220,187,192,61,91,87,0,62,15,111,173,190,242,43,9,63,243,4,53,191,224,37,88,63,144,221,112,191,59,251,125,63,38,221,126,191,113,120,115,63,151,89,92,191,176,157,58,63,178,228,15,191,210,122,188,62,91,48,32,190,81,152,128,189,236,215,142,62,107,168,246,190,188,75,41,63,189,27,79,191,248,241,106,63,45,119,123,191,169,223,127,63,17,245,119,191,1,25,100,63,91,64,69,191,122,231,28,63,190,255,217,190,241,96,95,62,243,4,53,63,37,217,124,191,113,120,115,63,1,25,100,191,189,27,79,63,243,4,53,191,24,121,22,63,113,113,232,190,122,55,158,62,91,48,32,190,53,213,83,167,91,48,32,62,122,55,158,190,113,113,232,62,24,121,22,191,243,4,53,63,189,27,79,191,1,25,100,63,113,120,115,191,37,217,124,63,0,0,128,191,37,217,124,63,113,120,115,191,1,25,100,63,189,27,79,191,243,4,53,63,24,121,22,191,113,113,232,62,122,55,158,190,91,48,32,62,232,223,30,40,91,48,32,190,122,55,158,62,113,113,232,190,24,121,22,63,243,4,53,191,189,27,79,63,1,25,100,191,113,120,115,63,37,217,124,191,0,0,128,63,37,217,124,191,113,120,115,63,1,25,100,191,189,27,79,63,243,4,53,191,24,121,22,63,113,113,232,190,122,55,158,62,91,48,32,190,243,4,53,63,38,221,126,191,45,119,123,63,207,213,117,191,213,5,110,63,1,25,100,191,224,37,88,63,153,71,74,191,176,157,58,63,188,75,41,191,24,121,22,63,138,80,2,191,190,255,217,62,15,111,173,190,144,168,126,62,91,48,32,190,81,152,128,61,145,168,0,61,91,87,0,190,241,96,95,62,122,55,158,190,248,86,203,62,107,168,246,190,178,228,15,63,56,46,35,191,243,4,53,63,91,64,69,191,141,187,83,63,162,85,96,191,248,241,106,63,113,120,115,191,174,213,121,63,59,251,125,191,169,223,127,63,174,126,127,191,37,217,124,63,17,245,119,191,144,221,112,63,191,162,103,191,151,89,92,63,189,27,79,191,71,7,64,63,123,62,47,191,122,231,28,63,242,43,9,191,113,113,232,62,210,122,188,190,236,215,142,62,227,224,63,190,220,187,192,61,243,4,53,63,169,223,127,191,174,126,127,63,38,221,126,191,59,251,125,63,37,217,124,191,45,119,123,63,174,213,121,191,17,245,119,63,207,213,117,191,113,120,115,63,144,221,112,191,213,5,110,63,248,241,106,191,191,162,103,63,1,25,100,191,162,85,96,63,151,89,92,191,224,37,88,63,141,187,83,191,189,27,79,63,153,71,74,191,91,64,69,63,71,7,64,191,176,157,58,63,243,4,53,191,123,62,47,63,188,75,41,191,56,46,35,63,122,231,28,191,24,121,22,63,178,228,15,191,242,43,9,63,138,80,2,191,107,168,246,62,113,113,232,190,190,255,217,62,248,86,203,190,210,122,188,62,15,111,173,190,122,55,158,62,236,215,142,190,144,168,126,62,241,96,95,190,227,224,63,62,91,48,32,190,91,87,0,62,220,187,192,189,81,152,128,61,145,168,0,189,243,4,53,63,235,224,127,63,179,131,127,63,111,232,126,63,69,15,126,63,106,248,124,63,32,164,123,63,187,18,122,63,157,68,120,63,53,58,118,63,2,244,115,63,146,114,113,63,128,182,110,63,119,192,107,63,46,145,104,63,108,41,101,63,4,138,97,63,215,179,93,63,213,167,89,63,247,102,85,63,72,242,80,63,219,74,76,63,211,113,71,63,92,104,66,63,176,47,61,63,19,201,55,63,214,53,50,63,81,119,44,63,236,142,38,63,20,126,32,63,67,70,26,63,252,232,19,63,202,103,13,63,66,196,6,63,0,0,0,63,82,57,242,62,209,55,228,62,230,254,213,62,4,146,199,62,171,244,184,62,105,42,170,62,212,54,155,62,142,29,140,62,133,196,121,62,70,17,91,62,213,40,60,62,180,18,29,62,219,172,251,61,50,247,188,61,74,39,124,61,235,69,252,60,243,4,53,63,111,232,126,63,32,164,123,63,53,58,118,63,128,182,110,63,108,41,101,63,213,167,89,63,219,74,76,63,176,47,61,63,81,119,44,63,67,70,26,63,66,196,6,63,209,55,228,62,171,244,184,62,142,29,140,62,213,40,60,62,50,247,188,61,50,49,141,36,50,247,188,189,213,40,60,190,142,29,140,190,171,244,184,190,209,55,228,190,66,196,6,191,67,70,26,191,81,119,44,191,176,47,61,191,219,74,76,191,213,167,89,191,108,41,101,191,128,182,110,191,53,58,118,191,32,164,123,191,111,232,126,191,0,0,128,191,111,232,126,191,32,164,123,191,53,58,118,191,128,182,110,191,108,41,101,191,213,167,89,191,219,74,76,191,176,47,61,191,81,119,44,191,67,70,26,191,66,196,6,191,209,55,228,190,171,244,184,190,142,29,140,190,213,40,60,190,50,247,188,189,243,4,53,63,106,248,124,63,2,244,115,63,108,41,101,63,72,242,80,63,19,201,55,63,67,70,26,63,82,57,242,62,105,42,170,62,213,40,60,62,235,69,252,60,219,172,251,189,142,29,140,190,230,254,213,190,202,103,13,191,81,119,44,191,211,113,71,191,215,179,93,191,128,182,110,191,187,18,122,191,179,131,127,191,111,232,126,191,157,68,120,191,119,192,107,191,213,167,89,191,92,104,66,191,236,142,38,191,66,196,6,191,4,146,199,190,133,196,121,190,50,247,188,189,74,39,124,61,70,17,91,62,171,244,184,62,0,0,0,63,20,126,32,63,176,47,61,63,247,102,85,63,46,145,104,63,53,58,118,63,69,15,126,63,235,224,127,63,32,164,123,63,146,114,113,63,4,138,97,63,219,74,76,63,214,53,50,63,252,232,19,63,209,55,228,62,212,54,155,62,180,18,29,62,243,4,53,63,187,18,122,63,46,145,104,63,219,74,76,63,236,142,38,63,82,57,242,62,142,29,140,62,74,39,124,61,180,18,29,190,171,244,184,190,202,103,13,191,19,201,55,191,213,167,89,191,146,114,113,191,69,15,126,191,111,232,126,191,2,244,115,191,215,179,93,191,176,47,61,191,252,232,19,191,4,146,199,190,213,40,60,190,235,69,252,60,133,196,121,62,209,55,228,62,20,126,32,63,211,113,71,63,108,41,101,63,157,68,120,63,235,224,127,63,32,164,123,63,119,192,107,63,72,242,80,63,81,119,44,63,0,0,0,63,212,54,155,62,50,247,188,61,219,172,251,189,105,42,170,190,66,196,6,191,214,53,50,191,247,102,85,191,128,182,110,191,106,248,124,191,179,131,127,191,53,58,118,191,4,138,97,191,92,104,66,191,67,70,26,191,230,254,213,190,70,17,91,190,243,4,53,63,53,58,118,63,213,167,89,63,81,119,44,63,209,55,228,62,213,40,60,62,50,247,188,189,171,244,184,190,67,70,26,191,219,74,76,191,128,182,110,191,111,232,126,191,32,164,123,191,108,41,101,191,176,47,61,191,66,196,6,191,142,29,140,190,202,201,83,165,142,29,140,62,66,196,6,63,176,47,61,63,108,41,101,63,32,164,123,63,111,232,126,63,128,182,110,63,219,74,76,63,67,70,26,63,171,244,184,62,50,247,188,61,213,40,60,190,209,55,228,190,81,119,44,191,213,167,89,191,53,58,118,191,0,0,128,191,53,58,118,191,213,167,89,191,81,119,44,191,209,55,228,190,213,40,60,190,50,247,188,61,171,244,184,62,67,70,26,63,219,74,76,63,128,182,110,63,111,232,126,63,32,164,123,63,108,41,101,63,176,47,61,63,66,196,6,63,142,29,140,62,243,4,53,63,146,114,113,63,211,113,71,63,66,196,6,63,70,17,91,62,219,172,251,189,209,55,228,190,19,201,55,191,46,145,104,191,111,232,126,191,157,68,120,191,247,102,85,191,67,70,26,191,212,54,155,190,235,69,252,60,171,244,184,62,236,142,38,63,215,179,93,63,32,164,123,63,106,248,124,63,4,138,97,63,81,119,44,63,4,146,199,62,74,39,124,61,142,29,140,190,252,232,19,191,72,242,80,191,53,58,118,191,179,131,127,191,119,192,107,191,176,47,61,191,82,57,242,190,180,18,29,190,213,40,60,62,0,0,0,63,92,104,66,63,128,182,110,63,235,224,127,63,2,244,115,63,219,74,76,63,202,103,13,63,133,196,121,62,50,247,188,189,230,254,213,190,214,53,50,191,108,41,101,191,69,15,126,191,187,18,122,191,213,167,89,191,20,126,32,191,105,42,170,190,243,4,53,63,119,192,107,63,214,53,50,63,171,244,184,62,235,69,252,188,230,254,213,190,176,47,61,191,146,114,113,191,179,131,127,191,108,41,101,191,236,142,38,191,212,54,155,190,50,247,188,61,82,57,242,62,211,113,71,63,53,58,118,63,69,15,126,63,215,179,93,63,67,70,26,63,133,196,121,62,180,18,29,190,66,196,6,191,72,242,80,191,187,18,122,191,32,164,123,191,247,102,85,191,202,103,13,191,213,40,60,190,70,17,91,62,252,232,19,63,213,167,89,63,106,248,124,63,157,68,120,63,219,74,76,63,0,0,0,63,219,172,251,61,142,29,140,190,20,126,32,191,4,138,97,191,111,232,126,191,2,244,115,191,92,104,66,191,209,55,228,190,74,39,124,189,105,42,170,62,81,119,44,63,46,145,104,63,235,224,127,63,128,182,110,63,19,201,55,63,4,146,199,62,243,4,53,63,108,41,101,63,67,70,26,63,213,40,60,62,142,29,140,190,81,119,44,191,128,182,110,191,111,232,126,191,213,167,89,191,66,196,6,191,50,247,188,189,171,244,184,62,176,47,61,63,53,58,118,63,32,164,123,63,219,74,76,63,209,55,228,62,126,125,176,37,209,55,228,190,219,74,76,191,32,164,123,191,53,58,118,191,176,47,61,191,171,244,184,190,50,247,188,61,66,196,6,63,213,167,89,63,111,232,126,63,128,182,110,63,81,119,44,63,142,29,140,62,213,40,60,190,67,70,26,191,108,41,101,191,0,0,128,191,108,41,101,191,67,70,26,191,213,40,60,190,142,29,140,62,81,119,44,63,128,182,110,63,111,232,126,63,213,167,89,63,66,196,6,63,50,247,188,61,171,244,184,190,176,47,61,191,53,58,118,191,32,164,123,191,219,74,76,191,209,55,228,190,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,202,201,83,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,95,31,172,38,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,23,22,247,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,214,181,39,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,233,136,48,167,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,252,91,57,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,15,47,66,167,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,243,4,53,63,247,102,85,63,4,146,199,62,213,40,60,190,214,53,50,191,187,18,122,191,128,182,110,191,252,232,19,191,235,69,252,188,66,196,6,63,46,145,104,63,106,248,124,63,176,47,61,63,133,196,121,62,105,42,170,190,219,74,76,191,179,131,127,191,215,179,93,191,209,55,228,190,219,172,251,61,236,142,38,63,53,58,118,63,2,244,115,63,20,126,32,63,50,247,188,61,82,57,242,190,4,138,97,191,111,232,126,191,211,113,71,191,212,54,155,190,142,29,140,62,92,104,66,63,69,15,126,63,108,41,101,63,0,0,0,63,74,39,124,189,67,70,26,191,146,114,113,191,157,68,120,191,81,119,44,191,180,18,29,190,230,254,213,62,213,167,89,63,235,224,127,63,72,242,80,63,171,244,184,62,70,17,91,190,19,201,55,191,32,164,123,191,119,192,107,191,202,103,13,191,243,4,53,63,219,74,76,63,142,29,140,62,171,244,184,190,213,167,89,191,111,232,126,191,176,47,61,191,213,40,60,190,209,55,228,62,108,41,101,63,32,164,123,63,81,119,44,63,50,247,188,61,66,196,6,191,128,182,110,191,53,58,118,191,67,70,26,191,195,226,30,167,67,70,26,63,53,58,118,63,128,182,110,63,66,196,6,63,50,247,188,189,81,119,44,191,32,164,123,191,108,41,101,191,209,55,228,190,213,40,60,62,176,47,61,63,111,232,126,63,213,167,89,63,171,244,184,62,142,29,140,190,219,74,76,191,0,0,128,191,219,74,76,191,142,29,140,190,171,244,184,62,213,167,89,63,111,232,126,63,176,47,61,63,213,40,60,62,209,55,228,190,108,41,101,191,32,164,123,191,81,119,44,191,50,247,188,189,66,196,6,63,128,182,110,63,53,58,118,63,67,70,26,63,243,4,53,63,92,104,66,63,180,18,29,62,66,196,6,191,2,244,115,191,119,192,107,191,209,55,228,190,133,196,121,62,72,242,80,63,111,232,126,63,214,53,50,63,74,39,124,61,67,70,26,191,187,18,122,191,4,138,97,191,171,244,184,190,105,42,170,62,215,179,93,63,32,164,123,63,20,126,32,63,235,69,252,188,81,119,44,191,69,15,126,191,247,102,85,191,142,29,140,190,230,254,213,62,46,145,104,63,53,58,118,63,202,103,13,63,219,172,251,189,176,47,61,191,235,224,127,191,211,113,71,191,213,40,60,190,0,0,0,63,146,114,113,63,128,182,110,63,82,57,242,62,70,17,91,190,219,74,76,191,179,131,127,191,19,201,55,191,50,247,188,189,252,232,19,63,157,68,120,63,108,41,101,63,4,146,199,62,212,54,155,190,213,167,89,191,106,248,124,191,236,142,38,191,243,4,53,63,19,201,55,63,235,69,252,60,81,119,44,191,179,131,127,191,92,104,66,191,50,247,188,189,20,126,32,63,69,15,126,63,219,74,76,63,180,18,29,62,252,232,19,191,32,164,123,191,247,102,85,191,70,17,91,190,66,196,6,63,157,68,120,63,215,179,93,63,142,29,140,62,82,57,242,190,2,244,115,191,108,41,101,191,105,42,170,190,230,254,213,62,128,182,110,63,119,192,107,63,4,146,199,62,171,244,184,190,46,145,104,191,146,114,113,191,209,55,228,190,212,54,155,62,4,138,97,63,53,58,118,63,0,0,0,63,133,196,121,190,213,167,89,191,187,18,122,191,202,103,13,191,213,40,60,62,72,242,80,63,106,248,124,63,67,70,26,63,219,172,251,189,211,113,71,191,111,232,126,191,236,142,38,191,74,39,124,61,176,47,61,63,235,224,127,63,214,53,50,63,243,4,53,63,81,119,44,63,50,247,188,189,219,74,76,191,32,164,123,191,66,196,6,191,142,29,140,62,108,41,101,63,128,182,110,63,171,244,184,62,209,55,228,190,53,58,118,191,213,167,89,191,213,40,60,190,67,70,26,63,111,232,126,63,176,47,61,63,88,215,30,38,176,47,61,191,111,232,126,191,67,70,26,191,213,40,60,62,213,167,89,63,53,58,118,63,209,55,228,62,171,244,184,190,128,182,110,191,108,41,101,191,142,29,140,190,66,196,6,63,32,164,123,63,219,74,76,63,50,247,188,61,81,119,44,191,0,0,128,191,81,119,44,191,50,247,188,61,219,74,76,63,32,164,123,63,66,196,6,63,142,29,140,190,108,41,101,191,128,182,110,191,171,244,184,190,209,55,228,62,53,58,118,63,213,167,89,63,213,40,60,62,67,70,26,191,111,232,126,191,176,47,61,191,243,4,53,63,20,126,32,63,70,17,91,190,108,41,101,191,46,145,104,191,133,196,121,190,67,70,26,63,235,224,127,63,236,142,38,63,213,40,60,190,4,138,97,191,119,192,107,191,142,29,140,190,252,232,19,63,179,131,127,63,81,119,44,63,180,18,29,190,215,179,93,191,128,182,110,191,212,54,155,190,202,103,13,63,111,232,126,63,214,53,50,63,219,172,251,189,213,167,89,191,146,114,113,191,105,42,170,190,66,196,6,63,69,15,126,63,19,201,55,63,50,247,188,189,247,102,85,191,2,244,115,191,171,244,184,190,0,0,0,63,106,248,124,63,176,47,61,63,74,39,124,189,72,242,80,191,53,58,118,191,4,146,199,190,82,57,242,62,32,164,123,63,92,104,66,63,235,69,252,188,219,74,76,191,157,68,120,191,230,254,213,190,209,55,228,62,187,18,122,63,211,113,71,63,243,4,53,63,252,232,19,63,105,42,170,190,53,58,118,191,211,113,71,191,74,39,124,61,213,167,89,63,119,192,107,63,70,17,91,62,81,119,44,191,69,15,126,191,82,57,242,190,209,55,228,62,106,248,124,63,214,53,50,63,213,40,60,190,46,145,104,191,215,179,93,191,50,247,188,189,92,104,66,63,157,68,120,63,171,244,184,62,202,103,13,191,235,224,127,191,67,70,26,191,212,54,155,62,2,244,115,63,219,74,76,63,235,69,252,188,247,102,85,191,128,182,110,191,133,196,121,190,236,142,38,63,111,232,126,63,0,0,0,63,230,254,213,190,32,164,123,191,19,201,55,191,180,18,29,62,108,41,101,63,4,138,97,63,219,172,251,61,176,47,61,191,187,18,122,191,4,146,199,190,66,196,6,63,179,131,127,63,20,126,32,63,142,29,140,190,146,114,113,191,72,242,80,191,243,4,53,63,66,196,6,63,209,55,228,190,111,232,126,191,67,70,26,191,171,244,184,62,32,164,123,63,81,119,44,63,142,29,140,190,53,58,118,191,176,47,61,191,213,40,60,62,128,182,110,63,219,74,76,63,50,247,188,189,108,41,101,191,213,167,89,191,46,238,158,38,213,167,89,63,108,41,101,63,50,247,188,61,219,74,76,191,128,182,110,191,213,40,60,190,176,47,61,63,53,58,118,63,142,29,140,62,81,119,44,191,32,164,123,191,171,244,184,190,67,70,26,63,111,232,126,63,209,55,228,62,66,196,6,191,0,0,128,191,66,196,6,191,209,55,228,62,111,232,126,63,67,70,26,63,171,244,184,190,32,164,123,191,81,119,44,191,142,29,140,62,53,58,118,63,176,47,61,63,213,40,60,190,128,182,110,191,219,74,76,191,50,247,188,61,108,41,101,63,213,167,89,63,243,4,53,63,82,57,242,62,202,103,13,191,111,232,126,191,4,146,199,190,20,126,32,63,32,164,123,63,212,54,155,62,214,53,50,191,53,58,118,191,70,17,91,190,92,104,66,63,128,182,110,63,219,172,251,61,72,242,80,191,108,41,101,191,235,69,252,188,215,179,93,63,213,167,89,63,74,39,124,189,46,145,104,191,219,74,76,191,180,18,29,62,146,114,113,63,176,47,61,63,133,196,121,190,157,68,120,191,81,119,44,191,105,42,170,62,106,248,124,63,67,70,26,63,230,254,213,190,179,131,127,191,66,196,6,191,0,0,0,63,235,224,127,63,209,55,228,62,252,232,19,191,69,15,126,191,171,244,184,190,236,142,38,63,187,18,122,63,142,29,140,62,19,201,55,191,2,244,115,191,213,40,60,190,211,113,71,63,119,192,107,63,50,247,188,61,247,102,85,191,4,138,97,191,243,4,53,63,230,254,213,62,236,142,38,191,53,58,118,191,180,18,29,190,247,102,85,63,213,167,89,63,219,172,251,189,2,244,115,191,81,119,44,191,4,146,199,62,235,224,127,63,209,55,228,62,20,126,32,191,157,68,120,191,213,40,60,190,72,242,80,63,215,179,93,63,50,247,188,189,146,114,113,191,214,53,50,191,171,244,184,62,179,131,127,63,82,57,242,62,67,70,26,191,187,18,122,191,70,17,91,190,219,74,76,63,4,138,97,63,74,39,124,189,128,182,110,191,19,201,55,191,105,42,170,62,111,232,126,63,0,0,0,63,252,232,19,191,32,164,123,191,133,196,121,190,211,113,71,63,108,41,101,63,235,69,252,188,119,192,107,191,176,47,61,191,212,54,155,62,69,15,126,63,66,196,6,63,202,103,13,191,106,248,124,191,142,29,140,190,92,104,66,63,46,145,104,63,243,4,53,63,171,244,184,62,176,47,61,191,108,41,101,191,50,247,188,61,53,58,118,63,67,70,26,63,66,196,6,191,32,164,123,191,213,40,60,190,213,167,89,63,219,74,76,63,142,29,140,190,111,232,126,191,209,55,228,190,81,119,44,63,128,182,110,63,252,91,57,39,128,182,110,191,81,119,44,191,209,55,228,62,111,232,126,63,142,29,140,62,219,74,76,191,213,167,89,191,213,40,60,62,32,164,123,63,66,196,6,63,67,70,26,191,53,58,118,191,50,247,188,189,108,41,101,63,176,47,61,63,171,244,184,190,0,0,128,191,171,244,184,190,176,47,61,63,108,41,101,63,50,247,188,189,53,58,118,191,67,70,26,191,66,196,6,63,32,164,123,63,213,40,60,62,213,167,89,191,219,74,76,191,142,29,140,62,111,232,126,63,209,55,228,62,81,119,44,191,128,182,110,191,243,4,53,63,212,54,155,62,72,242,80,191,219,74,76,191,105,42,170,62,235,224,127,63,142,29,140,62,247,102,85,191,211,113,71,191,171,244,184,62,179,131,127,63,133,196,121,62,213,167,89,191,92,104,66,191,4,146,199,62,111,232,126,63,70,17,91,62,215,179,93,191,176,47,61,191,230,254,213,62,69,15,126,63,213,40,60,62,4,138,97,191,19,201,55,191,209,55,228,62,106,248,124,63,180,18,29,62,108,41,101,191,214,53,50,191,82,57,242,62,32,164,123,63,219,172,251,61,46,145,104,191,81,119,44,191,0,0,0,63,187,18,122,63,50,247,188,61,119,192,107,191,236,142,38,191,66,196,6,63,157,68,120,63,74,39,124,61,128,182,110,191,20,126,32,191,202,103,13,63,53,58,118,63,235,69,252,60,146,114,113,191,67,70,26,191,252,232,19,63,2,244,115,63,243,4,53,63,133,196,121,62,4,138,97,191,81,119,44,191,202,103,13,63,146,114,113,63,50,247,188,189,106,248,124,191,4,146,199,190,219,74,76,63,211,113,71,63,230,254,213,190,32,164,123,191,74,39,124,189,2,244,115,63,66,196,6,63,214,53,50,191,215,179,93,191,142,29,140,62,235,224,127,63,70,17,91,62,108,41,101,191,236,142,38,191,252,232,19,63,128,182,110,63,219,172,251,189,69,15,126,191,171,244,184,190,72,242,80,63,92,104,66,63,209,55,228,190,187,18,122,191,235,69,252,188,53,58,118,63,0,0,0,63,19,201,55,191,213,167,89,191,212,54,155,62,179,131,127,63,213,40,60,62,46,145,104,191,20,126,32,191,67,70,26,63,119,192,107,63,180,18,29,190,111,232,126,191,105,42,170,190,247,102,85,63,176,47,61,63,82,57,242,190,157,68,120,191,243,4,53,63,213,40,60,62,128,182,110,191,66,196,6,191,176,47,61,63,219,74,76,63,209,55,228,190,53,58,118,191,50,247,188,61,111,232,126,63,142,29,140,62,108,41,101,191,67,70,26,191,81,119,44,63,213,167,89,63,171,244,184,190,32,164,123,191,15,47,66,167,32,164,123,63,171,244,184,62,213,167,89,191,81,119,44,191,67,70,26,63,108,41,101,63,142,29,140,190,111,232,126,191,50,247,188,189,53,58,118,63,209,55,228,62,219,74,76,191,176,47,61,191,66,196,6,63,128,182,110,63,213,40,60,190,0,0,128,191,213,40,60,190,128,182,110,63,66,196,6,63,176,47,61,191,219,74,76,191,209,55,228,62,53,58,118,63,50,247,188,189,111,232,126,191,142,29,140,190,108,41,101,63,67,70,26,63,81,119,44,191,213,167,89,191,171,244,184,62,32,164,123,63,243,4,53,63,219,172,251,61,157,68,120,191,171,244,184,190,4,138,97,63,252,232,19,63,176,47,61,191,92,104,66,191,202,103,13,63,108,41,101,63,105,42,170,190,187,18,122,191,50,247,188,61,235,224,127,63,180,18,29,62,53,58,118,191,4,146,199,190,215,179,93,63,67,70,26,63,19,201,55,191,211,113,71,191,66,196,6,63,46,145,104,63,212,54,155,190,32,164,123,191,74,39,124,61,179,131,127,63,213,40,60,62,2,244,115,191,230,254,213,190,213,167,89,63,20,126,32,63,214,53,50,191,219,74,76,191,0,0,0,63,119,192,107,63,142,29,140,190,106,248,124,191,235,69,252,60,111,232,126,63,70,17,91,62,146,114,113,191,209,55,228,190,247,102,85,63,236,142,38,63,81,119,44,191,72,242,80,191,82,57,242,62,128,182,110,63,133,196,121,190,69,15,126,191,243,4,53,63,74,39,124,61,69,15,126,191,213,40,60,190,157,68,120,63,212,54,155,62,128,182,110,191,230,254,213,190,4,138,97,63,66,196,6,63,72,242,80,191,20,126,32,191,176,47,61,63,19,201,55,63,236,142,38,191,219,74,76,191,202,103,13,63,215,179,93,63,209,55,228,190,119,192,107,191,105,42,170,62,53,58,118,63,70,17,91,190,106,248,124,191,50,247,188,61,235,224,127,63,235,69,252,60,111,232,126,191,180,18,29,190,187,18,122,63,142,29,140,62,146,114,113,191,4,146,199,190,108,41,101,63,0,0,0,63,247,102,85,191,67,70,26,191,92,104,66,63,214,53,50,63,81,119,44,191,211,113,71,191,252,232,19,63,213,167,89,63,82,57,242,190,46,145,104,191,171,244,184,62,2,244,115,63,133,196,121,190,32,164,123,191,219,172,251,61,179,131,127,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,91,26,141,38,0,0,128,191,191,159,48,39,0,0,128,63,213,12,22,40,0,0,128,191,243,4,53,63,74,39,124,189,69,15,126,191,213,40,60,62,157,68,120,63,212,54,155,190,128,182,110,191,230,254,213,62,4,138,97,63,66,196,6,191,72,242,80,191,20,126,32,63,176,47,61,63,19,201,55,191,236,142,38,191,219,74,76,63,202,103,13,63,215,179,93,191,209,55,228,190,119,192,107,63,105,42,170,62,53,58,118,191,70,17,91,190,106,248,124,63,50,247,188,61,235,224,127,191,235,69,252,60,111,232,126,63,180,18,29,190,187,18,122,191,142,29,140,62,146,114,113,63,4,146,199,190,108,41,101,191,0,0,0,63,247,102,85,63,67,70,26,191,92,104,66,191,214,53,50,63,81,119,44,63,211,113,71,191,252,232,19,191,213,167,89,63,82,57,242,62,46,145,104,191,171,244,184,190,2,244,115,63,133,196,121,62,32,164,123,191,219,172,251,189,179,131,127,63,243,4,53,63,219,172,251,189,157,68,120,191,171,244,184,62,4,138,97,63,252,232,19,191,176,47,61,191,92,104,66,63,202,103,13,63,108,41,101,191,105,42,170,190,187,18,122,63,50,247,188,61,235,224,127,191,180,18,29,62,53,58,118,63,4,146,199,190,215,179,93,191,67,70,26,63,19,201,55,63,211,113,71,191,66,196,6,191,46,145,104,63,212,54,155,62,32,164,123,191,74,39,124,189,179,131,127,63,213,40,60,190,2,244,115,191,230,254,213,62,213,167,89,63,20,126,32,191,214,53,50,191,219,74,76,63,0,0,0,63,119,192,107,191,142,29,140,190,106,248,124,63,235,69,252,60,111,232,126,191,70,17,91,62,146,114,113,63,209,55,228,190,247,102,85,191,236,142,38,63,81,119,44,63,72,242,80,191,82,57,242,190,128,182,110,63,133,196,121,62,69,15,126,191,243,4,53,63,213,40,60,190,128,182,110,191,66,196,6,63,176,47,61,63,219,74,76,191,209,55,228,190,53,58,118,63,50,247,188,61,111,232,126,191,142,29,140,62,108,41,101,63,67,70,26,191,81,119,44,191,213,167,89,63,171,244,184,62,32,164,123,191,42,171,48,38,32,164,123,63,171,244,184,190,213,167,89,191,81,119,44,63,67,70,26,63,108,41,101,191,142,29,140,190,111,232,126,63,50,247,188,189,53,58,118,191,209,55,228,62,219,74,76,63,176,47,61,191,66,196,6,191,128,182,110,63,213,40,60,62,0,0,128,191,213,40,60,62,128,182,110,63,66,196,6,191,176,47,61,191,219,74,76,63,209,55,228,62,53,58,118,191,50,247,188,189,111,232,126,63,142,29,140,190,108,41,101,191,67,70,26,63,81,119,44,63,213,167,89,191,171,244,184,190,32,164,123,63,243,4,53,63,133,196,121,190,4,138,97,191,81,119,44,63,202,103,13,63,146,114,113,191,50,247,188,189,106,248,124,63,4,146,199,190,219,74,76,191,211,113,71,63,230,254,213,62,32,164,123,191,74,39,124,61,2,244,115,63,66,196,6,191,214,53,50,191,215,179,93,63,142,29,140,62,235,224,127,191,70,17,91,62,108,41,101,63,236,142,38,191,252,232,19,191,128,182,110,63,219,172,251,61,69,15,126,191,171,244,184,62,72,242,80,63,92,104,66,191,209,55,228,190,187,18,122,63,235,69,252,188,53,58,118,191,0,0,0,63,19,201,55,63,213,167,89,191,212,54,155,190,179,131,127,63,213,40,60,190,46,145,104,191,20,126,32,63,67,70,26,63,119,192,107,191,180,18,29,190,111,232,126,63,105,42,170,190,247,102,85,191,176,47,61,63,82,57,242,62,157,68,120,191,243,4,53,63,212,54,155,190,72,242,80,191,219,74,76,63,105,42,170,62,235,224,127,191,142,29,140,62,247,102,85,63,211,113,71,191,171,244,184,190,179,131,127,63,133,196,121,190,213,167,89,191,92,104,66,63,4,146,199,62,111,232,126,191,70,17,91,62,215,179,93,63,176,47,61,191,230,254,213,190,69,15,126,63,213,40,60,190,4,138,97,191,19,201,55,63,209,55,228,62,106,248,124,191,180,18,29,62,108,41,101,63,214,53,50,191,82,57,242,190,32,164,123,63,219,172,251,189,46,145,104,191,81,119,44,63,0,0,0,63,187,18,122,191,50,247,188,61,119,192,107,63,236,142,38,191,66,196,6,191,157,68,120,63,74,39,124,189,128,182,110,191,20,126,32,63,202,103,13,63,53,58,118,191,235,69,252,60,146,114,113,63,67,70,26,191,252,232,19,191,2,244,115,63,243,4,53,63,171,244,184,190,176,47,61,191,108,41,101,63,50,247,188,61,53,58,118,191,67,70,26,63,66,196,6,63,32,164,123,191,213,40,60,62,213,167,89,63,219,74,76,191,142,29,140,190,111,232,126,63,209,55,228,190,81,119,44,191,128,182,110,63,222,94,13,166,128,182,110,191,81,119,44,63,209,55,228,62,111,232,126,191,142,29,140,62,219,74,76,63,213,167,89,191,213,40,60,190,32,164,123,63,66,196,6,191,67,70,26,191,53,58,118,63,50,247,188,189,108,41,101,191,176,47,61,63,171,244,184,62,0,0,128,191,171,244,184,62,176,47,61,63,108,41,101,191,50,247,188,189,53,58,118,63,67,70,26,191,66,196,6,191,32,164,123,63,213,40,60,190,213,167,89,191,219,74,76,63,142,29,140,62,111,232,126,191,209,55,228,62,81,119,44,63,128,182,110,191,243,4,53,63,230,254,213,190,236,142,38,191,53,58,118,63,180,18,29,190,247,102,85,191,213,167,89,63,219,172,251,61,2,244,115,191,81,119,44,63,4,146,199,62,235,224,127,191,209,55,228,62,20,126,32,63,157,68,120,191,213,40,60,62,72,242,80,63,215,179,93,191,50,247,188,189,146,114,113,63,214,53,50,191,171,244,184,190,179,131,127,63,82,57,242,190,67,70,26,191,187,18,122,63,70,17,91,190,219,74,76,191,4,138,97,63,74,39,124,61,128,182,110,191,19,201,55,63,105,42,170,62,111,232,126,191,0,0,0,63,252,232,19,63,32,164,123,191,133,196,121,62,211,113,71,63,108,41,101,191,235,69,252,188,119,192,107,63,176,47,61,191,212,54,155,190,69,15,126,63,66,196,6,191,202,103,13,191,106,248,124,63,142,29,140,190,92,104,66,191,46,145,104,63,243,4,53,63,82,57,242,190,202,103,13,191,111,232,126,63,4,146,199,190,20,126,32,191,32,164,123,63,212,54,155,190,214,53,50,191,53,58,118,63,70,17,91,190,92,104,66,191,128,182,110,63,219,172,251,189,72,242,80,191,108,41,101,63,235,69,252,188,215,179,93,191,213,167,89,63,74,39,124,61,46,145,104,191,219,74,76,63,180,18,29,62,146,114,113,191,176,47,61,63,133,196,121,62,157,68,120,191,81,119,44,63,105,42,170,62,106,248,124,191,67,70,26,63,230,254,213,62,179,131,127,191,66,196,6,63,0,0,0,63,235,224,127,191,209,55,228,62,252,232,19,63,69,15,126,191,171,244,184,62,236,142,38,63,187,18,122,191,142,29,140,62,19,201,55,63,2,244,115,191,213,40,60,62,211,113,71,63,119,192,107,191,50,247,188,61,247,102,85,63,4,138,97,191,243,4,53,63,66,196,6,191,209,55,228,190,111,232,126,63,67,70,26,191,171,244,184,190,32,164,123,63,81,119,44,191,142,29,140,190,53,58,118,63,176,47,61,191,213,40,60,190,128,182,110,63,219,74,76,191,50,247,188,189,108,41,101,63,213,167,89,191,82,66,141,39,213,167,89,63,108,41,101,191,50,247,188,61,219,74,76,63,128,182,110,191,213,40,60,62,176,47,61,63,53,58,118,191,142,29,140,62,81,119,44,63,32,164,123,191,171,244,184,62,67,70,26,63,111,232,126,191,209,55,228,62,66,196,6,63,0,0,128,191,66,196,6,63,209,55,228,62,111,232,126,191,67,70,26,63,171,244,184,62,32,164,123,191,81,119,44,63,142,29,140,62,53,58,118,191,176,47,61,63,213,40,60,62,128,182,110,191,219,74,76,63,50,247,188,61,108,41,101,191,213,167,89,63,243,4,53,63,252,232,19,191,105,42,170,190,53,58,118,63,211,113,71,191,74,39,124,189,213,167,89,63,119,192,107,191,70,17,91,62,81,119,44,63,69,15,126,191,82,57,242,62,209,55,228,62,106,248,124,191,214,53,50,63,213,40,60,62,46,145,104,191,215,179,93,63,50,247,188,189,92,104,66,191,157,68,120,63,171,244,184,190,202,103,13,191,235,224,127,63,67,70,26,191,212,54,155,190,2,244,115,63,219,74,76,191,235,69,252,188,247,102,85,63,128,182,110,191,133,196,121,62,236,142,38,63,111,232,126,191,0,0,0,63,230,254,213,62,32,164,123,191,19,201,55,63,180,18,29,62,108,41,101,191,4,138,97,63,219,172,251,189,176,47,61,191,187,18,122,63,4,146,199,190,66,196,6,191,179,131,127,63,20,126,32,191,142,29,140,190,146,114,113,63,72,242,80,191,243,4,53,63,20,126,32,191,70,17,91,190,108,41,101,63,46,145,104,191,133,196,121,62,67,70,26,63,235,224,127,191,236,142,38,63,213,40,60,62,4,138,97,191,119,192,107,63,142,29,140,190,252,232,19,191,179,131,127,63,81,119,44,191,180,18,29,190,215,179,93,63,128,182,110,191,212,54,155,62,202,103,13,63,111,232,126,191,214,53,50,63,219,172,251,61,213,167,89,191,146,114,113,63,105,42,170,190,66,196,6,191,69,15,126,63,19,201,55,191,50,247,188,189,247,102,85,63,2,244,115,191,171,244,184,62,0,0,0,63,106,248,124,191,176,47,61,63,74,39,124,61,72,242,80,191,53,58,118,63,4,146,199,190,82,57,242,190,32,164,123,63,92,104,66,191,235,69,252,188,219,74,76,63,157,68,120,191,230,254,213,62,209,55,228,62,187,18,122,191,211,113,71,63,243,4,53,63,81,119,44,191,50,247,188,189,219,74,76,63,32,164,123,191,66,196,6,63,142,29,140,62,108,41,101,191,128,182,110,63,171,244,184,190,209,55,228,190,53,58,118,63,213,167,89,191,213,40,60,62,67,70,26,63,111,232,126,191,176,47,61,63,138,140,141,165,176,47,61,191,111,232,126,63,67,70,26,191,213,40,60,190,213,167,89,63,53,58,118,191,209,55,228,62,171,244,184,62,128,182,110,191,108,41,101,63,142,29,140,190,66,196,6,191,32,164,123,63,219,74,76,191,50,247,188,61,81,119,44,63,0,0,128,191,81,119,44,63,50,247,188,61,219,74,76,191,32,164,123,63,66,196,6,191,142,29,140,190,108,41,101,63,128,182,110,191,171,244,184,62,209,55,228,62,53,58,118,191,213,167,89,63,213,40,60,190,67,70,26,191,111,232,126,63,176,47,61,191,243,4,53,63,19,201,55,191,235,69,252,60,81,119,44,63,179,131,127,191,92,104,66,63,50,247,188,189,20,126,32,191,69,15,126,63,219,74,76,191,180,18,29,62,252,232,19,63,32,164,123,191,247,102,85,63,70,17,91,190,66,196,6,191,157,68,120,63,215,179,93,191,142,29,140,62,82,57,242,62,2,244,115,191,108,41,101,63,105,42,170,190,230,254,213,190,128,182,110,63,119,192,107,191,4,146,199,62,171,244,184,62,46,145,104,191,146,114,113,63,209,55,228,190,212,54,155,190,4,138,97,63,53,58,118,191,0,0,0,63,133,196,121,62,213,167,89,191,187,18,122,63,202,103,13,191,213,40,60,190,72,242,80,63,106,248,124,191,67,70,26,63,219,172,251,61,211,113,71,191,111,232,126,63,236,142,38,191,74,39,124,189,176,47,61,63,235,224,127,191,214,53,50,63,243,4,53,63,92,104,66,191,180,18,29,62,66,196,6,63,2,244,115,191,119,192,107,63,209,55,228,190,133,196,121,190,72,242,80,63,111,232,126,191,214,53,50,63,74,39,124,189,67,70,26,191,187,18,122,63,4,138,97,191,171,244,184,62,105,42,170,62,215,179,93,191,32,164,123,63,20,126,32,191,235,69,252,188,81,119,44,63,69,15,126,191,247,102,85,63,142,29,140,190,230,254,213,190,46,145,104,63,53,58,118,191,202,103,13,63,219,172,251,61,176,47,61,191,235,224,127,63,211,113,71,191,213,40,60,62,0,0,0,63,146,114,113,191,128,182,110,63,82,57,242,190,70,17,91,190,219,74,76,63,179,131,127,191,19,201,55,63,50,247,188,189,252,232,19,191,157,68,120,63,108,41,101,191,4,146,199,62,212,54,155,62,213,167,89,191,106,248,124,63,236,142,38,191,243,4,53,63,219,74,76,191,142,29,140,62,171,244,184,62,213,167,89,191,111,232,126,63,176,47,61,191,213,40,60,62,209,55,228,62,108,41,101,191,32,164,123,63,81,119,44,191,50,247,188,61,66,196,6,63,128,182,110,191,53,58,118,63,67,70,26,191,130,33,119,167,67,70,26,63,53,58,118,191,128,182,110,63,66,196,6,191,50,247,188,189,81,119,44,63,32,164,123,191,108,41,101,63,209,55,228,190,213,40,60,190,176,47,61,63,111,232,126,191,213,167,89,63,171,244,184,190,142,29,140,190,219,74,76,63,0,0,128,191,219,74,76,63,142,29,140,190,171,244,184,190,213,167,89,63,111,232,126,191,176,47,61,63,213,40,60,190,209,55,228,190,108,41,101,63,32,164,123,191,81,119,44,63,50,247,188,189,66,196,6,191,128,182,110,63,53,58,118,191,67,70,26,63,243,4,53,63,247,102,85,191,4,146,199,62,213,40,60,62,214,53,50,191,187,18,122,63,128,182,110,191,252,232,19,63,235,69,252,188,66,196,6,191,46,145,104,63,106,248,124,191,176,47,61,63,133,196,121,190,105,42,170,190,219,74,76,63,179,131,127,191,215,179,93,63,209,55,228,190,219,172,251,189,236,142,38,63,53,58,118,191,2,244,115,63,20,126,32,191,50,247,188,61,82,57,242,62,4,138,97,191,111,232,126,63,211,113,71,191,212,54,155,62,142,29,140,62,92,104,66,191,69,15,126,63,108,41,101,191,0,0,0,63,74,39,124,61,67,70,26,191,146,114,113,63,157,68,120,191,81,119,44,63,180,18,29,190,230,254,213,190,213,167,89,63,235,224,127,191,72,242,80,63,171,244,184,190,70,17,91,190,19,201,55,63,32,164,123,191,119,192,107,63,202,103,13,191,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,195,67,119,38,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,138,140,141,165,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,50,146,101,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,91,26,141,38,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,115,83,13,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,10,154,176,167,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,45,69,13,40,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,243,4,53,63,108,41,101,191,67,70,26,63,213,40,60,190,142,29,140,190,81,119,44,63,128,182,110,191,111,232,126,63,213,167,89,191,66,196,6,63,50,247,188,189,171,244,184,190,176,47,61,63,53,58,118,191,32,164,123,63,219,74,76,191,209,55,228,62,219,176,54,161,209,55,228,190,219,74,76,63,32,164,123,191,53,58,118,63,176,47,61,191,171,244,184,62,50,247,188,61,66,196,6,191,213,167,89,63,111,232,126,191,128,182,110,63,81,119,44,191,142,29,140,62,213,40,60,62,67,70,26,191,108,41,101,63,0,0,128,191,108,41,101,63,67,70,26,191,213,40,60,62,142,29,140,62,81,119,44,191,128,182,110,63,111,232,126,191,213,167,89,63,66,196,6,191,50,247,188,61,171,244,184,62,176,47,61,191,53,58,118,63,32,164,123,191,219,74,76,63,209,55,228,190,243,4,53,63,119,192,107,191,214,53,50,63,171,244,184,190,235,69,252,188,230,254,213,62,176,47,61,191,146,114,113,63,179,131,127,191,108,41,101,63,236,142,38,191,212,54,155,62,50,247,188,61,82,57,242,190,211,113,71,63,53,58,118,191,69,15,126,63,215,179,93,191,67,70,26,63,133,196,121,190,180,18,29,190,66,196,6,63,72,242,80,191,187,18,122,63,32,164,123,191,247,102,85,63,202,103,13,191,213,40,60,62,70,17,91,62,252,232,19,191,213,167,89,63,106,248,124,191,157,68,120,63,219,74,76,191,0,0,0,63,219,172,251,189,142,29,140,190,20,126,32,63,4,138,97,191,111,232,126,63,2,244,115,191,92,104,66,63,209,55,228,190,74,39,124,61,105,42,170,62,81,119,44,191,46,145,104,63,235,224,127,191,128,182,110,63,19,201,55,191,4,146,199,62,243,4,53,63,146,114,113,191,211,113,71,63,66,196,6,191,70,17,91,62,219,172,251,61,209,55,228,190,19,201,55,63,46,145,104,191,111,232,126,63,157,68,120,191,247,102,85,63,67,70,26,191,212,54,155,62,235,69,252,60,171,244,184,190,236,142,38,63,215,179,93,191,32,164,123,63,106,248,124,191,4,138,97,63,81,119,44,191,4,146,199,62,74,39,124,189,142,29,140,190,252,232,19,63,72,242,80,191,53,58,118,63,179,131,127,191,119,192,107,63,176,47,61,191,82,57,242,62,180,18,29,190,213,40,60,190,0,0,0,63,92,104,66,191,128,182,110,63,235,224,127,191,2,244,115,63,219,74,76,191,202,103,13,63,133,196,121,190,50,247,188,189,230,254,213,62,214,53,50,191,108,41,101,63,69,15,126,191,187,18,122,63,213,167,89,191,20,126,32,63,105,42,170,190,243,4,53,63,53,58,118,191,213,167,89,63,81,119,44,191,209,55,228,62,213,40,60,190,50,247,188,189,171,244,184,62,67,70,26,191,219,74,76,63,128,182,110,191,111,232,126,63,32,164,123,191,108,41,101,63,176,47,61,191,66,196,6,63,142,29,140,190,212,99,132,167,142,29,140,62,66,196,6,191,176,47,61,63,108,41,101,191,32,164,123,63,111,232,126,191,128,182,110,63,219,74,76,191,67,70,26,63,171,244,184,190,50,247,188,61,213,40,60,62,209,55,228,190,81,119,44,63,213,167,89,191,53,58,118,63,0,0,128,191,53,58,118,63,213,167,89,191,81,119,44,63,209,55,228,190,213,40,60,62,50,247,188,61,171,244,184,190,67,70,26,63,219,74,76,191,128,182,110,63,111,232,126,191,32,164,123,63,108,41,101,191,176,47,61,63,66,196,6,191,142,29,140,62,243,4,53,63,187,18,122,191,46,145,104,63,219,74,76,191,236,142,38,63,82,57,242,190,142,29,140,62,74,39,124,189,180,18,29,190,171,244,184,62,202,103,13,191,19,201,55,63,213,167,89,191,146,114,113,63,69,15,126,191,111,232,126,63,2,244,115,191,215,179,93,63,176,47,61,191,252,232,19,63,4,146,199,190,213,40,60,62,235,69,252,60,133,196,121,190,209,55,228,62,20,126,32,191,211,113,71,63,108,41,101,191,157,68,120,63,235,224,127,191,32,164,123,63,119,192,107,191,72,242,80,63,81,119,44,191,0,0,0,63,212,54,155,190,50,247,188,61,219,172,251,61,105,42,170,190,66,196,6,63,214,53,50,191,247,102,85,63,128,182,110,191,106,248,124,63,179,131,127,191,53,58,118,63,4,138,97,191,92,104,66,63,67,70,26,191,230,254,213,62,70,17,91,190,243,4,53,63,106,248,124,191,2,244,115,63,108,41,101,191,72,242,80,63,19,201,55,191,67,70,26,63,82,57,242,190,105,42,170,62,213,40,60,190,235,69,252,60,219,172,251,61,142,29,140,190,230,254,213,62,202,103,13,191,81,119,44,63,211,113,71,191,215,179,93,63,128,182,110,191,187,18,122,63,179,131,127,191,111,232,126,63,157,68,120,191,119,192,107,63,213,167,89,191,92,104,66,63,236,142,38,191,66,196,6,63,4,146,199,190,133,196,121,62,50,247,188,189,74,39,124,189,70,17,91,62,171,244,184,190,0,0,0,63,20,126,32,191,176,47,61,63,247,102,85,191,46,145,104,63,53,58,118,191,69,15,126,63,235,224,127,191,32,164,123,63,146,114,113,191,4,138,97,63,219,74,76,191,214,53,50,63,252,232,19,191,209,55,228,62,212,54,155,190,180,18,29,62,243,4,53,63,111,232,126,191,32,164,123,63,53,58,118,191,128,182,110,63,108,41,101,191,213,167,89,63,219,74,76,191,176,47,61,63,81,119,44,191,67,70,26,63,66,196,6,191,209,55,228,62,171,244,184,190,142,29,140,62,213,40,60,190,50,247,188,61,175,102,4,40,50,247,188,189,213,40,60,62,142,29,140,190,171,244,184,62,209,55,228,190,66,196,6,63,67,70,26,191,81,119,44,63,176,47,61,191,219,74,76,63,213,167,89,191,108,41,101,63,128,182,110,191,53,58,118,63,32,164,123,191,111,232,126,63,0,0,128,191,111,232,126,63,32,164,123,191,53,58,118,63,128,182,110,191,108,41,101,63,213,167,89,191,219,74,76,63,176,47,61,191,81,119,44,63,67,70,26,191,66,196,6,63,209,55,228,190,171,244,184,62,142,29,140,190,213,40,60,62,50,247,188,189,243,4,53,63,235,224,127,191,179,131,127,63,111,232,126,191,69,15,126,63,106,248,124,191,32,164,123,63,187,18,122,191,157,68,120,63,53,58,118,191,2,244,115,63,146,114,113,191,128,182,110,63,119,192,107,191,46,145,104,63,108,41,101,191,4,138,97,63,215,179,93,191,213,167,89,63,247,102,85,191,72,242,80,63,219,74,76,191,211,113,71,63,92,104,66,191,176,47,61,63,19,201,55,191,214,53,50,63,81,119,44,191,236,142,38,63,20,126,32,191,67,70,26,63,252,232,19,191,202,103,13,63,66,196,6,191,0,0,0,63,82,57,242,190,209,55,228,62,230,254,213,190,4,146,199,62,171,244,184,190,105,42,170,62,212,54,155,190,142,29,140,62,133,196,121,190,70,17,91,62,213,40,60,190,180,18,29,62,219,172,251,189,50,247,188,61,74,39,124,189,235,69,252,60,243,4,53,63,26,226,127,63,111,136,127,63,20,243,126,63,43,34,126,63,230,21,125,63,132,206,123,63,80,76,122,63,165,143,120,63,234,152,118,63,150,104,116,63,43,255,113,63,57,93,111,63,94,131,108,63,69,114,105,63,163,42,102,63,63,173,98,63,232,250,94,63,123,20,91,63,226,250,86,63,18,175,82,63,12,50,78,63,219,132,73,63,153,168,68,63,103,158,63,63,114,103,58,63,243,4,53,63,44,120,47,63,104,194,41,63,253,228,35,63,74,225,29,63,182,184,23,63,177,108,17,63,180,254,10,63,64,112,4,63,185,133,251,62,50,240,237,62,23,35,224,62,161,33,210,62,21,239,195,62,198,142,181,62,13,4,167,62,82,82,152,62,2,125,137,62,42,15,117,62,18,235,86,62,199,148,56,62,94,19,26,62,239,219,246,61,122,87,185,61,113,79,119,61,87,108,247,60,243,4,53,63,20,243,126,63,132,206,123,63,234,152,118,63,57,93,111,63,163,42,102,63,123,20,91,63,12,50,78,63,103,158,63,63,44,120,47,63,74,225,29,63,180,254,10,63,50,240,237,62,21,239,195,62,82,82,152,62,18,235,86,62,239,219,246,61,87,108,247,60,113,79,119,189,94,19,26,190,42,15,117,190,13,4,167,190,161,33,210,190,185,133,251,190,177,108,17,191,253,228,35,191,243,4,53,191,153,168,68,191,18,175,82,191,232,250,94,191,69,114,105,191,43,255,113,191,165,143,120,191,230,21,125,191,111,136,127,191,26,226,127,191,43,34,126,191,80,76,122,191,150,104,116,191,94,131,108,191,63,173,98,191,226,250,86,191,219,132,73,191,114,103,58,191,104,194,41,191,182,184,23,191,64,112,4,191,23,35,224,190,198,142,181,190,2,125,137,190,199,148,56,190,122,87,185,189,243,4,53,63,230,21,125,63,150,104,116,63,163,42,102,63,18,175,82,63,114,103,58,63,74,225,29,63,185,133,251,62,198,142,181,62,18,235,86,62,113,79,119,61,122,87,185,189,42,15,117,190,21,239,195,190,64,112,4,191,253,228,35,191,103,158,63,191,226,250,86,191,69,114,105,191,234,152,118,191,43,34,126,191,26,226,127,191,132,206,123,191,43,255,113,191,63,173,98,191,12,50,78,191,243,4,53,191,182,184,23,191,50,240,237,190,13,4,167,190,199,148,56,190,87,108,247,188,239,219,246,61,2,125,137,62,161,33,210,62,180,254,10,63,104,194,41,63,153,168,68,63,123,20,91,63,94,131,108,63,165,143,120,63,20,243,126,63,111,136,127,63,80,76,122,63,57,93,111,63,232,250,94,63,219,132,73,63,44,120,47,63,177,108,17,63,23,35,224,62,82,82,152,62,94,19,26,62,243,4,53,63,80,76,122,63,69,114,105,63,12,50,78,63,104,194,41,63,185,133,251,62,82,82,152,62,122,87,185,61,239,219,246,189,13,4,167,190,64,112,4,191,44,120,47,191,18,175,82,191,94,131,108,191,132,206,123,191,26,226,127,191,165,143,120,191,163,42,102,191,219,132,73,191,253,228,35,191,50,240,237,190,2,125,137,190,113,79,119,189,94,19,26,62,198,142,181,62,180,254,10,63,243,4,53,63,226,250,86,63,57,93,111,63,230,21,125,63,111,136,127,63,234,152,118,63,63,173,98,63,153,168,68,63,74,225,29,63,23,35,224,62,42,15,117,62,87,108,247,60,199,148,56,190,21,239,195,190,177,108,17,191,114,103,58,191,123,20,91,191,43,255,113,191,43,34,126,191,20,243,126,191,150,104,116,191,232,250,94,191,103,158,63,191,182,184,23,191,161,33,210,190,18,235,86,190,243,4,53,63,234,152,118,63,123,20,91,63,44,120,47,63,50,240,237,62,18,235,86,62,113,79,119,189,13,4,167,190,177,108,17,191,153,168,68,191,69,114,105,191,230,21,125,191,43,34,126,191,94,131,108,191,219,132,73,191,182,184,23,191,198,142,181,190,122,87,185,189,199,148,56,62,23,35,224,62,104,194,41,63,226,250,86,63,150,104,116,63,26,226,127,63,165,143,120,63,232,250,94,63,243,4,53,63,185,133,251,62,42,15,117,62,87,108,247,188,82,82,152,190,180,254,10,191,103,158,63,191,163,42,102,191,132,206,123,191,20,243,126,191,57,93,111,191,12,50,78,191,74,225,29,191,21,239,195,190,239,219,246,189,94,19,26,62,161,33,210,62,253,228,35,63,18,175,82,63,43,255,113,63,111,136,127,63,80,76,122,63,63,173,98,63,114,103,58,63,64,112,4,63,2,125,137,62,243,4,53,63,43,255,113,63,219,132,73,63,180,254,10,63,42,15,117,62,122,87,185,189,161,33,210,190,44,120,47,191,63,173,98,191,230,21,125,191,132,206,123,191,232,250,94,191,104,194,41,191,21,239,195,190,113,79,119,189,2,125,137,62,177,108,17,63,12,50,78,63,150,104,116,63,26,226,127,63,57,93,111,63,153,168,68,63,64,112,4,63,18,235,86,62,239,219,246,189,23,35,224,190,243,4,53,191,163,42,102,191,43,34,126,191,80,76,122,191,123,20,91,191,253,228,35,191,198,142,181,190,87,108,247,188,82,82,152,62,182,184,23,63,18,175,82,63,234,152,118,63,111,136,127,63,94,131,108,63,103,158,63,63,185,133,251,62,199,148,56,62,94,19,26,190,50,240,237,190,114,103,58,191,69,114,105,191,20,243,126,191,165,143,120,191,226,250,86,191,74,225,29,191,13,4,167,190,243,4,53,63,94,131,108,63,243,4,53,63,21,239,195,62,50,49,141,36,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,202,201,83,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,126,125,176,37,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,88,215,30,38,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,233,136,48,167,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,243,4,53,63,163,42,102,63,74,225,29,63,18,235,86,62,42,15,117,190,253,228,35,191,69,114,105,191,26,226,127,191,63,173,98,191,182,184,23,191,199,148,56,190,2,125,137,62,104,194,41,63,94,131,108,63,111,136,127,63,232,250,94,63,177,108,17,63,94,19,26,62,82,82,152,190,44,120,47,191,57,93,111,191,20,243,126,191,123,20,91,191,180,254,10,191,239,219,246,189,13,4,167,62,243,4,53,63,43,255,113,63,43,34,126,63,226,250,86,63,64,112,4,63,122,87,185,61,198,142,181,190,114,103,58,191,150,104,116,191,230,21,125,191,18,175,82,191,185,133,251,190,113,79,119,189,21,239,195,62,103,158,63,63,234,152,118,63,132,206,123,63,12,50,78,63,50,240,237,62,87,108,247,60,161,33,210,190,153,168,68,191,165,143,120,191,80,76,122,191,219,132,73,191,23,35,224,190,243,4,53,63,232,250,94,63,64,112,4,63,87,108,247,60,50,240,237,190,226,250,86,191,111,136,127,191,163,42,102,191,177,108,17,191,122,87,185,189,161,33,210,62,12,50,78,63,43,34,126,63,94,131,108,63,74,225,29,63,94,19,26,62,198,142,181,190,153,168,68,191,132,206,123,191,43,255,113,191,104,194,41,191,18,235,86,190,82,82,152,62,114,103,58,63,165,143,120,63,234,152,118,63,243,4,53,63,2,125,137,62,42,15,117,190,44,120,47,191,150,104,116,191,80,76,122,191,103,158,63,191,13,4,167,190,199,148,56,62,253,228,35,63,57,93,111,63,230,21,125,63,219,132,73,63,21,239,195,62,239,219,246,189,182,184,23,191,69,114,105,191,20,243,126,191,18,175,82,191,23,35,224,190,113,79,119,61,180,254,10,63,63,173,98,63,26,226,127,63,123,20,91,63,185,133,251,62,243,4,53,63,226,250,86,63,161,33,210,62,94,19,26,190,104,194,41,191,234,152,118,191,150,104,116,191,253,228,35,191,239,219,246,189,23,35,224,62,123,20,91,63,26,226,127,63,18,175,82,63,21,239,195,62,199,148,56,190,44,120,47,191,165,143,120,191,43,255,113,191,74,225,29,191,122,87,185,189,50,240,237,62,232,250,94,63,111,136,127,63,12,50,78,63,198,142,181,62,18,235,86,190,243,4,53,191,80,76,122,191,57,93,111,191,182,184,23,191,113,79,119,189,185,133,251,62,63,173,98,63,20,243,126,63,219,132,73,63,13,4,167,62,42,15,117,190,114,103,58,191,132,206,123,191,94,131,108,191,177,108,17,191,87,108,247,188,64,112,4,63,163,42,102,63,43,34,126,63,153,168,68,63,82,82,152,62,2,125,137,190,103,158,63,191,230,21,125,191,69,114,105,191,180,254,10,191,243,4,53,63,12,50,78,63,82,82,152,62,13,4,167,190,18,175,82,191,26,226,127,191,219,132,73,191,2,125,137,190,198,142,181,62,226,250,86,63,111,136,127,63,153,168,68,63,42,15,117,62,21,239,195,190,123,20,91,191,20,243,126,191,103,158,63,191,18,235,86,190,161,33,210,62,232,250,94,63,43,34,126,63,114,103,58,63,199,148,56,62,23,35,224,190,63,173,98,191,230,21,125,191,243,4,53,191,94,19,26,190,50,240,237,62,163,42,102,63,132,206,123,63,44,120,47,63,239,219,246,61,185,133,251,190,69,114,105,191,80,76,122,191,104,194,41,191,122,87,185,189,64,112,4,63,94,131,108,63,165,143,120,63,253,228,35,63,113,79,119,61,180,254,10,191,57,93,111,191,234,152,118,191,74,225,29,191,87,108,247,188,177,108,17,63,43,255,113,63,150,104,116,63,182,184,23,63,243,4,53,63,153,168,68,63,199,148,56,62,185,133,251,190,57,93,111,191,43,255,113,191,64,112,4,191,94,19,26,62,103,158,63,63,26,226,127,63,219,132,73,63,18,235,86,62,50,240,237,190,94,131,108,191,150,104,116,191,180,254,10,191,239,219,246,61,114,103,58,63,111,136,127,63,12,50,78,63,42,15,117,62,23,35,224,190,69,114,105,191,234,152,118,191,177,108,17,191,122,87,185,61,243,4,53,63,20,243,126,63,18,175,82,63,2,125,137,62,161,33,210,190,163,42,102,191,165,143,120,191,182,184,23,191,113,79,119,61,44,120,47,63,43,34,126,63,226,250,86,63,82,82,152,62,21,239,195,190,63,173,98,191,80,76,122,191,74,225,29,191,87,108,247,60,104,194,41,63,230,21,125,63,123,20,91,63,13,4,167,62,198,142,181,190,232,250,94,191,132,206,123,191,253,228,35,191,243,4,53,63,114,103,58,63,113,79,119,61,253,228,35,191,43,34,126,191,12,50,78,191,199,148,56,190,180,254,10,63,165,143,120,63,232,250,94,63,82,82,152,62,23,35,224,190,57,93,111,191,94,131,108,191,161,33,210,190,13,4,167,62,63,173,98,63,234,152,118,63,64,112,4,63,18,235,86,190,18,175,82,191,230,21,125,191,74,225,29,191,122,87,185,61,103,158,63,63,26,226,127,63,243,4,53,63,87,108,247,60,104,194,41,191,20,243,126,191,219,132,73,191,94,19,26,190,177,108,17,63,80,76,122,63,123,20,91,63,2,125,137,62,50,240,237,190,43,255,113,191,69,114,105,191,21,239,195,190,198,142,181,62,163,42,102,63,150,104,116,63,185,133,251,62,42,15,117,190,226,250,86,191,132,206,123,191,182,184,23,191,239,219,246,61,153,168,68,63,111,136,127,63,44,120,47,63,243,4,53,63,44,120,47,63,113,79,119,189,153,168,68,191,43,34,126,191,182,184,23,191,199,148,56,62,226,250,86,63,165,143,120,63,185,133,251,62,82,82,152,190,163,42,102,191,57,93,111,191,21,239,195,190,161,33,210,62,43,255,113,63,63,173,98,63,2,125,137,62,64,112,4,191,80,76,122,191,18,175,82,191,94,19,26,190,74,225,29,63,20,243,126,63,103,158,63,63,87,108,247,60,243,4,53,191,26,226,127,191,104,194,41,191,122,87,185,61,219,132,73,63,230,21,125,63,177,108,17,63,18,235,86,190,123,20,91,191,234,152,118,191,50,240,237,190,13,4,167,62,69,114,105,63,94,131,108,63,198,142,181,62,23,35,224,190,150,104,116,191,232,250,94,191,42,15,117,190,180,254,10,63,132,206,123,63,12,50,78,63,239,219,246,61,253,228,35,191,111,136,127,191,114,103,58,191,243,4,53,63,253,228,35,63,199,148,56,190,232,250,94,191,57,93,111,191,13,4,167,190,64,112,4,63,230,21,125,63,103,158,63,63,87,108,247,188,219,132,73,191,80,76,122,191,50,240,237,190,21,239,195,62,150,104,116,63,226,250,86,63,239,219,246,61,44,120,47,191,111,136,127,191,182,184,23,191,42,15,117,62,163,42,102,63,69,114,105,63,2,125,137,62,177,108,17,191,20,243,126,191,243,4,53,191,122,87,185,61,18,175,82,63,234,152,118,63,161,33,210,62,23,35,224,190,165,143,120,191,12,50,78,191,113,79,119,189,114,103,58,63,43,34,126,63,180,254,10,63,82,82,152,190,94,131,108,191,63,173,98,191,18,235,86,190,74,225,29,63,26,226,127,63,104,194,41,63,94,19,26,190,123,20,91,191,43,255,113,191,198,142,181,190,185,133,251,62,132,206,123,63,153,168,68,63,243,4,53,63,182,184,23,63,82,82,152,190,43,255,113,191,18,175,82,191,87,108,247,188,219,132,73,63,234,152,118,63,198,142,181,62,180,254,10,191,111,136,127,191,253,228,35,191,42,15,117,62,94,131,108,63,123,20,91,63,122,87,185,61,103,158,63,191,80,76,122,191,161,33,210,190,185,133,251,62,43,34,126,63,44,120,47,63,199,148,56,190,163,42,102,191,63,173,98,191,94,19,26,190,243,4,53,63,230,21,125,63,50,240,237,62,23,35,224,190,132,206,123,191,114,103,58,191,239,219,246,61,232,250,94,63,69,114,105,63,18,235,86,62,104,194,41,191,20,243,126,191,64,112,4,191,21,239,195,62,165,143,120,63,153,168,68,63,113,79,119,189,226,250,86,191,57,93,111,191,2,125,137,190,74,225,29,63,26,226,127,63,177,108,17,63,13,4,167,190,150,104,116,191,12,50,78,191,243,4,53,63,180,254,10,63,161,33,210,190,230,21,125,191,104,194,41,191,2,125,137,62,150,104,116,63,153,168,68,63,239,219,246,189,163,42,102,191,123,20,91,191,87,108,247,188,18,175,82,63,94,131,108,63,199,148,56,62,114,103,58,191,165,143,120,191,13,4,167,190,74,225,29,63,20,243,126,63,50,240,237,62,185,133,251,190,111,136,127,191,182,184,23,191,198,142,181,62,80,76,122,63,243,4,53,63,18,235,86,190,57,93,111,191,12,50,78,191,113,79,119,61,232,250,94,63,63,173,98,63,122,87,185,61,219,132,73,191,43,255,113,191,42,15,117,190,44,120,47,63,132,206,123,63,21,239,195,62,177,108,17,191,26,226,127,191,64,112,4,191,23,35,224,62,43,34,126,63,253,228,35,63,82,82,152,190,234,152,118,191,103,158,63,191,94,19,26,62,69,114,105,63,226,250,86,63,243,4,53,63,185,133,251,62,64,112,4,191,26,226,127,191,50,240,237,190,180,254,10,63,111,136,127,63,23,35,224,62,177,108,17,191,20,243,126,191,161,33,210,190,182,184,23,63,43,34,126,63,21,239,195,62,74,225,29,191,230,21,125,191,198,142,181,190,253,228,35,63,132,206,123,63,13,4,167,62,104,194,41,191,80,76,122,191,82,82,152,190,44,120,47,63,165,143,120,63,2,125,137,62,243,4,53,191,234,152,118,191,42,15,117,190,114,103,58,63,150,104,116,63,18,235,86,62,103,158,63,191,43,255,113,191,199,148,56,190,153,168,68,63,57,93,111,63,94,19,26,62,219,132,73,191,94,131,108,191,239,219,246,189,12,50,78,63,69,114,105,63,122,87,185,61,18,175,82,191,163,42,102,191,113,79,119,189,226,250,86,63,63,173,98,63,87,108,247,60,123,20,91,191,232,250,94,191,243,4,53,63,23,35,224,62,74,225,29,191,80,76,122,191,42,15,117,190,153,168,68,63,69,114,105,63,87,108,247,60,63,173,98,191,12,50,78,191,199,148,56,62,234,152,118,63,104,194,41,63,21,239,195,190,111,136,127,191,185,133,251,190,177,108,17,63,230,21,125,63,82,82,152,62,114,103,58,191,57,93,111,191,122,87,185,189,123,20,91,63,226,250,86,63,239,219,246,189,43,255,113,191,243,4,53,191,13,4,167,62,43,34,126,63,180,254,10,63,64,112,4,191,20,243,126,191,198,142,181,190,44,120,47,63,150,104,116,63,94,19,26,62,18,175,82,191,232,250,94,191,113,79,119,61,94,131,108,63,103,158,63,63,2,125,137,190,132,206,123,191,182,184,23,191,50,240,237,62,26,226,127,63,161,33,210,62,253,228,35,191,165,143,120,191,18,235,86,190,219,132,73,63,163,42,102,63,243,4,53,63,21,239,195,62,243,4,53,191,94,131,108,191,202,201,83,165,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,88,215,30,38,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,222,94,13,166,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,130,33,119,167,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,217,213,140,37,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,243,4,53,63,13,4,167,62,219,132,73,191,226,250,86,191,42,15,117,62,20,243,126,63,161,33,210,62,114,103,58,191,63,173,98,191,94,19,26,62,132,206,123,63,185,133,251,62,104,194,41,191,94,131,108,191,113,79,119,61,234,152,118,63,177,108,17,63,182,184,23,191,150,104,116,191,87,108,247,188,57,93,111,63,253,228,35,63,64,112,4,191,80,76,122,191,239,219,246,189,163,42,102,63,243,4,53,63,23,35,224,190,43,34,126,191,18,235,86,190,123,20,91,63,153,168,68,63,198,142,181,190,26,226,127,191,82,82,152,190,12,50,78,63,18,175,82,63,2,125,137,190,111,136,127,191,21,239,195,190,103,158,63,63,232,250,94,63,199,148,56,190,230,21,125,191,50,240,237,190,44,120,47,63,69,114,105,63,122,87,185,189,165,143,120,191,180,254,10,191,74,225,29,63,43,255,113,63,243,4,53,63,2,125,137,62,123,20,91,191,114,103,58,191,50,240,237,62,80,76,122,63,113,79,119,61,43,255,113,191,177,108,17,191,253,228,35,63,69,114,105,63,94,19,26,190,43,34,126,191,21,239,195,190,219,132,73,63,12,50,78,63,198,142,181,190,20,243,126,191,199,148,56,190,163,42,102,63,104,194,41,63,180,254,10,191,150,104,116,191,87,108,247,60,165,143,120,63,185,133,251,62,243,4,53,191,232,250,94,191,42,15,117,62,26,226,127,63,82,82,152,62,226,250,86,191,103,158,63,191,23,35,224,62,132,206,123,63,122,87,185,61,57,93,111,191,182,184,23,191,74,225,29,63,94,131,108,63,239,219,246,189,230,21,125,191,161,33,210,190,153,168,68,63,18,175,82,63,13,4,167,190,111,136,127,191,18,235,86,190,63,173,98,63,44,120,47,63,64,112,4,191,234,152,118,191,243,4,53,63,18,235,86,62,69,114,105,191,182,184,23,191,104,194,41,63,232,250,94,63,82,82,152,190,20,243,126,191,239,219,246,189,43,255,113,63,64,112,4,63,114,103,58,191,18,175,82,191,21,239,195,62,132,206,123,63,87,108,247,60,165,143,120,191,23,35,224,190,219,132,73,63,153,168,68,63,50,240,237,190,234,152,118,191,113,79,119,61,230,21,125,63,198,142,181,62,226,250,86,191,243,4,53,191,180,254,10,63,57,93,111,63,94,19,26,190,111,136,127,191,2,125,137,190,63,173,98,63,253,228,35,63,74,225,29,191,163,42,102,191,42,15,117,62,26,226,127,63,199,148,56,62,94,131,108,191,177,108,17,191,44,120,47,63,123,20,91,63,13,4,167,190,43,34,126,191,122,87,185,189,150,104,116,63,185,133,251,62,103,158,63,191,12,50,78,191,161,33,210,62,80,76,122,63,243,4,53,63,94,19,26,62,150,104,116,191,23,35,224,190,18,175,82,63,44,120,47,63,74,225,29,191,232,250,94,191,198,142,181,62,80,76,122,63,113,79,119,189,20,243,126,191,42,15,117,190,94,131,108,63,64,112,4,63,153,168,68,191,103,158,63,191,180,254,10,63,69,114,105,63,2,125,137,190,43,34,126,191,87,108,247,188,132,206,123,63,13,4,167,62,63,173,98,191,182,184,23,191,243,4,53,63,12,50,78,63,50,240,237,190,43,255,113,191,199,148,56,62,26,226,127,63,239,219,246,61,234,152,118,191,161,33,210,190,226,250,86,63,104,194,41,63,253,228,35,191,123,20,91,191,21,239,195,62,165,143,120,63,122,87,185,189,111,136,127,191,18,235,86,190,57,93,111,63,185,133,251,62,219,132,73,191,114,103,58,191,177,108,17,63,163,42,102,63,82,82,152,190,230,21,125,191,243,4,53,63,122,87,185,61,132,206,123,191,2,125,137,190,57,93,111,63,23,35,224,62,123,20,91,191,182,184,23,191,103,158,63,63,114,103,58,63,74,225,29,191,226,250,86,191,50,240,237,62,94,131,108,63,82,82,152,190,80,76,122,191,239,219,246,61,26,226,127,63,113,79,119,61,230,21,125,191,42,15,117,190,43,255,113,63,161,33,210,62,232,250,94,191,177,108,17,191,153,168,68,63,243,4,53,63,253,228,35,191,18,175,82,191,185,133,251,62,69,114,105,63,13,4,167,190,165,143,120,191,94,19,26,62,111,136,127,63,87,108,247,60,43,34,126,191,18,235,86,190,150,104,116,63,21,239,195,62,63,173,98,191,180,254,10,191,219,132,73,63,44,120,47,63,104,194,41,191,12,50,78,191,64,112,4,63,163,42,102,63,198,142,181,190,234,152,118,191,199,148,56,62,20,243,126,63,243,4,53,63,87,108,247,60,111,136,127,191,122,87,185,189,43,34,126,63,94,19,26,62,132,206,123,191,18,235,86,190,165,143,120,63,2,125,137,62,150,104,116,191,13,4,167,190,57,93,111,63,21,239,195,62,69,114,105,191,23,35,224,190,63,173,98,63,185,133,251,62,123,20,91,191,180,254,10,191,18,175,82,63,182,184,23,63,219,132,73,191,253,228,35,191,103,158,63,63,44,120,47,63,243,4,53,191,114,103,58,191,104,194,41,63,153,168,68,63,74,225,29,191,12,50,78,191,177,108,17,63,226,250,86,63,64,112,4,191,232,250,94,191,50,240,237,62,163,42,102,63,161,33,210,190,94,131,108,191,198,142,181,62,43,255,113,63,82,82,152,190,234,152,118,191,42,15,117,62,80,76,122,63,199,148,56,190,230,21,125,191,239,219,246,61,20,243,126,63,113,79,119,189,26,226,127,191,243,4,53,63,87,108,247,188,111,136,127,191,122,87,185,61,43,34,126,63,94,19,26,190,132,206,123,191,18,235,86,62,165,143,120,63,2,125,137,190,150,104,116,191,13,4,167,62,57,93,111,63,21,239,195,190,69,114,105,191,23,35,224,62,63,173,98,63,185,133,251,190,123,20,91,191,180,254,10,63,18,175,82,63,182,184,23,191,219,132,73,191,253,228,35,63,103,158,63,63,44,120,47,191,243,4,53,191,114,103,58,63,104,194,41,63,153,168,68,191,74,225,29,191,12,50,78,63,177,108,17,63,226,250,86,191,64,112,4,191,232,250,94,63,50,240,237,62,163,42,102,191,161,33,210,190,94,131,108,63,198,142,181,62,43,255,113,191,82,82,152,190,234,152,118,63,42,15,117,62,80,76,122,191,199,148,56,190,230,21,125,63,239,219,246,61,20,243,126,191,113,79,119,189,26,226,127,63,243,4,53,63,122,87,185,189,132,206,123,191,2,125,137,62,57,93,111,63,23,35,224,190,123,20,91,191,182,184,23,63,103,158,63,63,114,103,58,191,74,225,29,191,226,250,86,63,50,240,237,62,94,131,108,191,82,82,152,190,80,76,122,63,239,219,246,61,26,226,127,191,113,79,119,61,230,21,125,63,42,15,117,190,43,255,113,191,161,33,210,62,232,250,94,63,177,108,17,191,153,168,68,191,243,4,53,63,253,228,35,63,18,175,82,191,185,133,251,190,69,114,105,63,13,4,167,62,165,143,120,191,94,19,26,190,111,136,127,63,87,108,247,188,43,34,126,191,18,235,86,62,150,104,116,63,21,239,195,190,63,173,98,191,180,254,10,63,219,132,73,63,44,120,47,191,104,194,41,191,12,50,78,63,64,112,4,63,163,42,102,191,198,142,181,190,234,152,118,63,199,148,56,62,20,243,126,191,243,4,53,63,94,19,26,190,150,104,116,191,23,35,224,62,18,175,82,63,44,120,47,191,74,225,29,191,232,250,94,63,198,142,181,62,80,76,122,191,113,79,119,189,20,243,126,63,42,15,117,190,94,131,108,191,64,112,4,63,153,168,68,63,103,158,63,191,180,254,10,191,69,114,105,63,2,125,137,62,43,34,126,191,87,108,247,60,132,206,123,63,13,4,167,190,63,173,98,191,182,184,23,63,243,4,53,63,12,50,78,191,50,240,237,190,43,255,113,63,199,148,56,62,26,226,127,191,239,219,246,61,234,152,118,63,161,33,210,190,226,250,86,191,104,194,41,63,253,228,35,63,123,20,91,191,21,239,195,190,165,143,120,63,122,87,185,61,111,136,127,191,18,235,86,62,57,93,111,63,185,133,251,190,219,132,73,191,114,103,58,63,177,108,17,63,163,42,102,191,82,82,152,190,230,21,125,63,243,4,53,63,18,235,86,190,69,114,105,191,182,184,23,63,104,194,41,63,232,250,94,191,82,82,152,190,20,243,126,63,239,219,246,189,43,255,113,191,64,112,4,63,114,103,58,63,18,175,82,191,21,239,195,190,132,206,123,63,87,108,247,188,165,143,120,191,23,35,224,62,219,132,73,63,153,168,68,191,50,240,237,190,234,152,118,63,113,79,119,61,230,21,125,191,198,142,181,62,226,250,86,63,243,4,53,191,180,254,10,191,57,93,111,63,94,19,26,62,111,136,127,191,2,125,137,62,63,173,98,63,253,228,35,191,74,225,29,191,163,42,102,63,42,15,117,62,26,226,127,191,199,148,56,62,94,131,108,63,177,108,17,191,44,120,47,191,123,20,91,63,13,4,167,62,43,34,126,191,122,87,185,61,150,104,116,63,185,133,251,190,103,158,63,191,12,50,78,63,161,33,210,62,80,76,122,191,243,4,53,63,2,125,137,190,123,20,91,191,114,103,58,63,50,240,237,62,80,76,122,191,113,79,119,61,43,255,113,63,177,108,17,191,253,228,35,191,69,114,105,63,94,19,26,62,43,34,126,191,21,239,195,62,219,132,73,63,12,50,78,191,198,142,181,190,20,243,126,63,199,148,56,190,163,42,102,191,104,194,41,63,180,254,10,63,150,104,116,191,87,108,247,188,165,143,120,63,185,133,251,190,243,4,53,191,232,250,94,63,42,15,117,62,26,226,127,191,82,82,152,62,226,250,86,63,103,158,63,191,23,35,224,190,132,206,123,63,122,87,185,189,57,93,111,191,182,184,23,63,74,225,29,63,94,131,108,191,239,219,246,189,230,21,125,63,161,33,210,190,153,168,68,191,18,175,82,63,13,4,167,62,111,136,127,191,18,235,86,62,63,173,98,63,44,120,47,191,64,112,4,191,234,152,118,63,243,4,53,63,13,4,167,190,219,132,73,191,226,250,86,63,42,15,117,62,20,243,126,191,161,33,210,62,114,103,58,63,63,173,98,191,94,19,26,190,132,206,123,63,185,133,251,190,104,194,41,191,94,131,108,63,113,79,119,61,234,152,118,191,177,108,17,63,182,184,23,63,150,104,116,191,87,108,247,60,57,93,111,63,253,228,35,191,64,112,4,191,80,76,122,63,239,219,246,189,163,42,102,191,243,4,53,63,23,35,224,62,43,34,126,191,18,235,86,62,123,20,91,63,153,168,68,191,198,142,181,190,26,226,127,63,82,82,152,190,12,50,78,191,18,175,82,63,2,125,137,62,111,136,127,191,21,239,195,62,103,158,63,63,232,250,94,191,199,148,56,190,230,21,125,63,50,240,237,190,44,120,47,191,69,114,105,63,122,87,185,61,165,143,120,191,180,254,10,63,74,225,29,63,43,255,113,191,243,4,53,63,21,239,195,190,243,4,53,191,94,131,108,63,126,125,176,37,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,138,140,141,165,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,231,54,141,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,91,26,141,38,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,115,83,13,39,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,243,4,53,63,23,35,224,190,74,225,29,191,80,76,122,63,42,15,117,190,153,168,68,191,69,114,105,63,87,108,247,188,63,173,98,191,12,50,78,63,199,148,56,62,234,152,118,191,104,194,41,63,21,239,195,62,111,136,127,191,185,133,251,62,177,108,17,63,230,21,125,191,82,82,152,62,114,103,58,63,57,93,111,191,122,87,185,61,123,20,91,63,226,250,86,191,239,219,246,189,43,255,113,63,243,4,53,191,13,4,167,190,43,34,126,63,180,254,10,191,64,112,4,191,20,243,126,63,198,142,181,190,44,120,47,191,150,104,116,63,94,19,26,190,18,175,82,191,232,250,94,63,113,79,119,61,94,131,108,191,103,158,63,63,2,125,137,62,132,206,123,191,182,184,23,63,50,240,237,62,26,226,127,191,161,33,210,62,253,228,35,63,165,143,120,191,18,235,86,62,219,132,73,63,163,42,102,191,243,4,53,63,185,133,251,190,64,112,4,191,26,226,127,63,50,240,237,190,180,254,10,191,111,136,127,63,23,35,224,190,177,108,17,191,20,243,126,63,161,33,210,190,182,184,23,191,43,34,126,63,21,239,195,190,74,225,29,191,230,21,125,63,198,142,181,190,253,228,35,191,132,206,123,63,13,4,167,190,104,194,41,191,80,76,122,63,82,82,152,190,44,120,47,191,165,143,120,63,2,125,137,190,243,4,53,191,234,152,118,63,42,15,117,190,114,103,58,191,150,104,116,63,18,235,86,190,103,158,63,191,43,255,113,63,199,148,56,190,153,168,68,191,57,93,111,63,94,19,26,190,219,132,73,191,94,131,108,63,239,219,246,189,12,50,78,191,69,114,105,63,122,87,185,189,18,175,82,191,163,42,102,63,113,79,119,189,226,250,86,191,63,173,98,63,87,108,247,188,123,20,91,191,232,250,94,63,243,4,53,63,180,254,10,191,161,33,210,190,230,21,125,63,104,194,41,191,2,125,137,190,150,104,116,63,153,168,68,191,239,219,246,189,163,42,102,63,123,20,91,191,87,108,247,60,18,175,82,63,94,131,108,191,199,148,56,62,114,103,58,63,165,143,120,191,13,4,167,62,74,225,29,63,20,243,126,191,50,240,237,62,185,133,251,62,111,136,127,191,182,184,23,63,198,142,181,62,80,76,122,191,243,4,53,63,18,235,86,62,57,93,111,191,12,50,78,63,113,79,119,61,232,250,94,191,63,173,98,63,122,87,185,189,219,132,73,191,43,255,113,63,42,15,117,190,44,120,47,191,132,206,123,63,21,239,195,190,177,108,17,191,26,226,127,63,64,112,4,191,23,35,224,190,43,34,126,63,253,228,35,191,82,82,152,190,234,152,118,63,103,158,63,191,94,19,26,190,69,114,105,63,226,250,86,191,243,4,53,63,182,184,23,191,82,82,152,190,43,255,113,63,18,175,82,191,87,108,247,60,219,132,73,63,234,152,118,191,198,142,181,62,180,254,10,63,111,136,127,191,253,228,35,63,42,15,117,62,94,131,108,191,123,20,91,63,122,87,185,189,103,158,63,191,80,76,122,63,161,33,210,190,185,133,251,190,43,34,126,63,44,120,47,191,199,148,56,190,163,42,102,63,63,173,98,191,94,19,26,62,243,4,53,63,230,21,125,191,50,240,237,62,23,35,224,62,132,206,123,191,114,103,58,63,239,219,246,61,232,250,94,191,69,114,105,63,18,235,86,190,104,194,41,191,20,243,126,63,64,112,4,191,21,239,195,190,165,143,120,63,153,168,68,191,113,79,119,189,226,250,86,63,57,93,111,191,2,125,137,62,74,225,29,63,26,226,127,191,177,108,17,63,13,4,167,62,150,104,116,191,12,50,78,63,243,4,53,63,253,228,35,191,199,148,56,190,232,250,94,63,57,93,111,191,13,4,167,62,64,112,4,63,230,21,125,191,103,158,63,63,87,108,247,60,219,132,73,191,80,76,122,63,50,240,237,190,21,239,195,190,150,104,116,63,226,250,86,191,239,219,246,61,44,120,47,63,111,136,127,191,182,184,23,63,42,15,117,62,163,42,102,191,69,114,105,63,2,125,137,190,177,108,17,191,20,243,126,63,243,4,53,191,122,87,185,189,18,175,82,63,234,152,118,191,161,33,210,62,23,35,224,62,165,143,120,191,12,50,78,63,113,79,119,189,114,103,58,191,43,34,126,63,180,254,10,191,82,82,152,190,94,131,108,63,63,173,98,191,18,235,86,62,74,225,29,63,26,226,127,191,104,194,41,63,94,19,26,62,123,20,91,191,43,255,113,63,198,142,181,190,185,133,251,190,132,206,123,63,153,168,68,191,243,4,53,63,44,120,47,191,113,79,119,189,153,168,68,63,43,34,126,191,182,184,23,63,199,148,56,62,226,250,86,191,165,143,120,63,185,133,251,190,82,82,152,190,163,42,102,63,57,93,111,191,21,239,195,62,161,33,210,62,43,255,113,191,63,173,98,63,2,125,137,190,64,112,4,191,80,76,122,63,18,175,82,191,94,19,26,62,74,225,29,63,20,243,126,191,103,158,63,63,87,108,247,188,243,4,53,191,26,226,127,63,104,194,41,191,122,87,185,189,219,132,73,63,230,21,125,191,177,108,17,63,18,235,86,62,123,20,91,191,234,152,118,63,50,240,237,190,13,4,167,190,69,114,105,63,94,131,108,191,198,142,181,62,23,35,224,62,150,104,116,191,232,250,94,63,42,15,117,190,180,254,10,191,132,206,123,63,12,50,78,191,239,219,246,61,253,228,35,63,111,136,127,191,114,103,58,63,243,4,53,63,114,103,58,191,113,79,119,61,253,228,35,63,43,34,126,191,12,50,78,63,199,148,56,190,180,254,10,191,165,143,120,63,232,250,94,191,82,82,152,62,23,35,224,62,57,93,111,191,94,131,108,63,161,33,210,190,13,4,167,190,63,173,98,63,234,152,118,191,64,112,4,63,18,235,86,62,18,175,82,191,230,21,125,63,74,225,29,191,122,87,185,189,103,158,63,63,26,226,127,191,243,4,53,63,87,108,247,188,104,194,41,191,20,243,126,63,219,132,73,191,94,19,26,62,177,108,17,63,80,76,122,191,123,20,91,63,2,125,137,190,50,240,237,190,43,255,113,63,69,114,105,191,21,239,195,62,198,142,181,62,163,42,102,191,150,104,116,63,185,133,251,190,42,15,117,190,226,250,86,63,132,206,123,191,182,184,23,63,239,219,246,61,153,168,68,191,111,136,127,63,44,120,47,191,243,4,53,63,153,168,68,191,199,148,56,62,185,133,251,62,57,93,111,191,43,255,113,63,64,112,4,191,94,19,26,190,103,158,63,63,26,226,127,191,219,132,73,63,18,235,86,190,50,240,237,190,94,131,108,63,150,104,116,191,180,254,10,63,239,219,246,61,114,103,58,191,111,136,127,63,12,50,78,191,42,15,117,62,23,35,224,62,69,114,105,191,234,152,118,63,177,108,17,191,122,87,185,189,243,4,53,63,20,243,126,191,18,175,82,63,2,125,137,190,161,33,210,190,163,42,102,63,165,143,120,191,182,184,23,63,113,79,119,61,44,120,47,191,43,34,126,63,226,250,86,191,82,82,152,62,21,239,195,62,63,173,98,191,80,76,122,63,74,225,29,191,87,108,247,188,104,194,41,63,230,21,125,191,123,20,91,63,13,4,167,190,198,142,181,190,232,250,94,63,132,206,123,191,253,228,35,63,243,4,53,63,12,50,78,191,82,82,152,62,13,4,167,62,18,175,82,191,26,226,127,63,219,132,73,191,2,125,137,62,198,142,181,62,226,250,86,191,111,136,127,63,153,168,68,191,42,15,117,62,21,239,195,62,123,20,91,191,20,243,126,63,103,158,63,191,18,235,86,62,161,33,210,62,232,250,94,191,43,34,126,63,114,103,58,191,199,148,56,62,23,35,224,62,63,173,98,191,230,21,125,63,243,4,53,191,94,19,26,62,50,240,237,62,163,42,102,191,132,206,123,63,44,120,47,191,239,219,246,61,185,133,251,62,69,114,105,191,80,76,122,63,104,194,41,191,122,87,185,61,64,112,4,63,94,131,108,191,165,143,120,63,253,228,35,191,113,79,119,61,180,254,10,63,57,93,111,191,234,152,118,63,74,225,29,191,87,108,247,60,177,108,17,63,43,255,113,191,150,104,116,63,182,184,23,191,243,4,53,63,226,250,86,191,161,33,210,62,94,19,26,62,104,194,41,191,234,152,118,63,150,104,116,191,253,228,35,63,239,219,246,189,23,35,224,190,123,20,91,63,26,226,127,191,18,175,82,63,21,239,195,190,199,148,56,190,44,120,47,63,165,143,120,191,43,255,113,63,74,225,29,191,122,87,185,61,50,240,237,62,232,250,94,191,111,136,127,63,12,50,78,191,198,142,181,62,18,235,86,62,243,4,53,191,80,76,122,63,57,93,111,191,182,184,23,63,113,79,119,189,185,133,251,190,63,173,98,63,20,243,126,191,219,132,73,63,13,4,167,190,42,15,117,190,114,103,58,63,132,206,123,191,94,131,108,63,177,108,17,191,87,108,247,60,64,112,4,63,163,42,102,191,43,34,126,63,153,168,68,191,82,82,152,62,2,125,137,62,103,158,63,191,230,21,125,63,69,114,105,191,180,254,10,63,243,4,53,63,232,250,94,191,64,112,4,63,87,108,247,188,50,240,237,190,226,250,86,63,111,136,127,191,163,42,102,63,177,108,17,191,122,87,185,61,161,33,210,62,12,50,78,191,43,34,126,63,94,131,108,191,74,225,29,63,94,19,26,190,198,142,181,190,153,168,68,63,132,206,123,191,43,255,113,63,104,194,41,191,18,235,86,62,82,82,152,62,114,103,58,191,165,143,120,63,234,152,118,191,243,4,53,63,2,125,137,190,42,15,117,190,44,120,47,63,150,104,116,191,80,76,122,63,103,158,63,191,13,4,167,62,199,148,56,62,253,228,35,191,57,93,111,63,230,21,125,191,219,132,73,63,21,239,195,190,239,219,246,189,182,184,23,63,69,114,105,191,20,243,126,63,18,175,82,191,23,35,224,62,113,79,119,61,180,254,10,191,63,173,98,63,26,226,127,191,123,20,91,63,185,133,251,190,243,4,53,63,163,42,102,191,74,225,29,63,18,235,86,190,42,15,117,190,253,228,35,63,69,114,105,191,26,226,127,63,63,173,98,191,182,184,23,63,199,148,56,190,2,125,137,190,104,194,41,63,94,131,108,191,111,136,127,63,232,250,94,191,177,108,17,63,94,19,26,190,82,82,152,190,44,120,47,63,57,93,111,191,20,243,126,63,123,20,91,191,180,254,10,63,239,219,246,189,13,4,167,190,243,4,53,63,43,255,113,191,43,34,126,63,226,250,86,191,64,112,4,63,122,87,185,189,198,142,181,190,114,103,58,63,150,104,116,191,230,21,125,63,18,175,82,191,185,133,251,62,113,79,119,189,21,239,195,190,103,158,63,63,234,152,118,191,132,206,123,63,12,50,78,191,50,240,237,62,87,108,247,188,161,33,210,190,153,168,68,63,165,143,120,191,80,76,122,63,219,132,73,191,23,35,224,62,243,4,53,63,94,131,108,191,243,4,53,63,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,222,94,13,166,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,231,54,141,167,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,213,12,22,40,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,77,14,212,38,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,95,190,83,39,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,243,4,53,63,43,255,113,191,219,132,73,63,180,254,10,191,42,15,117,62,122,87,185,61,161,33,210,190,44,120,47,63,63,173,98,191,230,21,125,63,132,206,123,191,232,250,94,63,104,194,41,191,21,239,195,62,113,79,119,189,2,125,137,190,177,108,17,63,12,50,78,191,150,104,116,63,26,226,127,191,57,93,111,63,153,168,68,191,64,112,4,63,18,235,86,190,239,219,246,189,23,35,224,62,243,4,53,191,163,42,102,63,43,34,126,191,80,76,122,63,123,20,91,191,253,228,35,63,198,142,181,190,87,108,247,60,82,82,152,62,182,184,23,191,18,175,82,63,234,152,118,191,111,136,127,63,94,131,108,191,103,158,63,63,185,133,251,190,199,148,56,62,94,19,26,62,50,240,237,190,114,103,58,63,69,114,105,191,20,243,126,63,165,143,120,191,226,250,86,63,74,225,29,191,13,4,167,62,243,4,53,63,234,152,118,191,123,20,91,63,44,120,47,191,50,240,237,62,18,235,86,190,113,79,119,189,13,4,167,62,177,108,17,191,153,168,68,63,69,114,105,191,230,21,125,63,43,34,126,191,94,131,108,63,219,132,73,191,182,184,23,63,198,142,181,190,122,87,185,61,199,148,56,62,23,35,224,190,104,194,41,63,226,250,86,191,150,104,116,63,26,226,127,191,165,143,120,63,232,250,94,191,243,4,53,63,185,133,251,190,42,15,117,62,87,108,247,60,82,82,152,190,180,254,10,63,103,158,63,191,163,42,102,63,132,206,123,191,20,243,126,63,57,93,111,191,12,50,78,63,74,225,29,191,21,239,195,62,239,219,246,189,94,19,26,190,161,33,210,62,253,228,35,191,18,175,82,63,43,255,113,191,111,136,127,63,80,76,122,191,63,173,98,63,114,103,58,191,64,112,4,63,2,125,137,190,243,4,53,63,80,76,122,191,69,114,105,63,12,50,78,191,104,194,41,63,185,133,251,190,82,82,152,62,122,87,185,189,239,219,246,189,13,4,167,62,64,112,4,191,44,120,47,63,18,175,82,191,94,131,108,63,132,206,123,191,26,226,127,63,165,143,120,191,163,42,102,63,219,132,73,191,253,228,35,63,50,240,237,190,2,125,137,62,113,79,119,189,94,19,26,190,198,142,181,62,180,254,10,191,243,4,53,63,226,250,86,191,57,93,111,63,230,21,125,191,111,136,127,63,234,152,118,191,63,173,98,63,153,168,68,191,74,225,29,63,23,35,224,190,42,15,117,62,87,108,247,188,199,148,56,190,21,239,195,62,177,108,17,191,114,103,58,63,123,20,91,191,43,255,113,63,43,34,126,191,20,243,126,63,150,104,116,191,232,250,94,63,103,158,63,191,182,184,23,63,161,33,210,190,18,235,86,62,243,4,53,63,230,21,125,191,150,104,116,63,163,42,102,191,18,175,82,63,114,103,58,191,74,225,29,63,185,133,251,190,198,142,181,62,18,235,86,190,113,79,119,61,122,87,185,61,42,15,117,190,21,239,195,62,64,112,4,191,253,228,35,63,103,158,63,191,226,250,86,63,69,114,105,191,234,152,118,63,43,34,126,191,26,226,127,63,132,206,123,191,43,255,113,63,63,173,98,191,12,50,78,63,243,4,53,191,182,184,23,63,50,240,237,190,13,4,167,62,199,148,56,190,87,108,247,60,239,219,246,61,2,125,137,190,161,33,210,62,180,254,10,191,104,194,41,63,153,168,68,191,123,20,91,63,94,131,108,191,165,143,120,63,20,243,126,191,111,136,127,63,80,76,122,191,57,93,111,63,232,250,94,191,219,132,73,63,44,120,47,191,177,108,17,63,23,35,224,190,82,82,152,62,94,19,26,190,243,4,53,63,20,243,126,191,132,206,123,63,234,152,118,191,57,93,111,63,163,42,102,191,123,20,91,63,12,50,78,191,103,158,63,63,44,120,47,191,74,225,29,63,180,254,10,191,50,240,237,62,21,239,195,190,82,82,152,62,18,235,86,190,239,219,246,61,87,108,247,188,113,79,119,189,94,19,26,62,42,15,117,190,13,4,167,62,161,33,210,190,185,133,251,62,177,108,17,191,253,228,35,63,243,4,53,191,153,168,68,63,18,175,82,191,232,250,94,63,69,114,105,191,43,255,113,63,165,143,120,191,230,21,125,63,111,136,127,191,26,226,127,63,43,34,126,191,80,76,122,63,150,104,116,191,94,131,108,63,63,173,98,191,226,250,86,63,219,132,73,191,114,103,58,63,104,194,41,191,182,184,23,63,64,112,4,191,23,35,224,62,198,142,181,190,2,125,137,62,199,148,56,190,122,87,185,61,243,4,53,63,26,226,127,191,111,136,127,63,20,243,126,191,43,34,126,63,230,21,125,191,132,206,123,63,80,76,122,191,165,143,120,63,234,152,118,191,150,104,116,63,43,255,113,191,57,93,111,63,94,131,108,191,69,114,105,63,163,42,102,191,63,173,98,63,232,250,94,191,123,20,91,63,226,250,86,191,18,175,82,63,12,50,78,191,219,132,73,63,153,168,68,191,103,158,63,63,114,103,58,191,243,4,53,63,44,120,47,191,104,194,41,63,253,228,35,191,74,225,29,63,182,184,23,191,177,108,17,63,180,254,10,191,64,112,4,63,185,133,251,190,50,240,237,62,23,35,224,190,161,33,210,62,21,239,195,190,198,142,181,62,13,4,167,190,82,82,152,62,2,125,137,190,42,15,117,62,18,235,86,190,199,148,56,62,94,19,26,190,239,219,246,61,122,87,185,189,113,79,119,61,87,108,247,188,243,4,53,63,56,227,127,63,231,140,127,63,31,253,126,63,2,52,126,63,189,49,125,63,137,246,123,63,174,130,122,63,126,214,120,63,92,242,118,63,178,214,116,63,251,131,114,63,188,250,111,63,136,59,109,63,252,70,106,63,194,29,103,63,145,192,99,63,42,48,96,63,91,109,92,63,251,120,88,63,238,83,84,63,36,255,79,63,149,123,75,63,69,202,70,63,66,236,65,63,164,226,60,63,142,174,55,63,43,81,50,63,176,203,44,63,90,31,39,63,112,77,33,63,65,87,27,63,37,62,21,63,121,3,15,63,166,168,8,63,24,47,2,63,138,48,247,62,79,203,233,62,130,49,220,62,50,102,206,62,121,108,192,62,124,71,178,62,105,250,163,62,119,136,149,62,230,244,134,62,248,133,112,62,15,236,82,62,185,34,53,62,169,48,23,62,52,57,242,61,159,218,181,61,77,166,114,61,152,193,242,60,243,4,53,63,31,253,126,63,137,246,123,63,92,242,118,63,188,250,111,63,194,29,103,63,91,109,92,63,36,255,79,63,66,236,65,63,43,81,50,63,112,77,33,63,121,3,15,63,138,48,247,62,50,102,206,62,105,250,163,62,248,133,112,62,169,48,23,62,77,166,114,61,152,193,242,188,52,57,242,189,15,236,82,190,119,136,149,190,121,108,192,190,79,203,233,190,166,168,8,191,65,87,27,191,176,203,44,191,164,226,60,191,149,123,75,191,251,120,88,191,145,192,99,191,136,59,109,191,178,214,116,191,174,130,122,191,2,52,126,191,56,227,127,191,231,140,127,191,189,49,125,191,126,214,120,191,251,131,114,191,252,70,106,191,42,48,96,191,238,83,84,191,69,202,70,191,142,174,55,191,90,31,39,191,37,62,21,191,24,47,2,191,130,49,220,190,124,71,178,190,230,244,134,190,185,34,53,190,159,218,181,189,243,4,53,63,189,49,125,63,178,214,116,63,194,29,103,63,238,83,84,63,164,226,60,63,112,77,33,63,24,47,2,63,121,108,192,62,248,133,112,62,159,218,181,61,77,166,114,189,15,236,82,190,124,71,178,190,138,48,247,190,65,87,27,191,142,174,55,191,36,255,79,191,145,192,99,191,251,131,114,191,137,246,123,191,56,227,127,191,2,52,126,191,92,242,118,191,252,70,106,191,251,120,88,191,66,236,65,191,90,31,39,191,166,168,8,191,50,102,206,190,230,244,134,190,52,57,242,189,152,193,242,60,185,34,53,62,105,250,163,62,79,203,233,62,37,62,21,63,43,81,50,63,149,123,75,63,42,48,96,63,188,250,111,63,174,130,122,63,231,140,127,63,31,253,126,63,126,214,120,63,136,59,109,63,91,109,92,63,69,202,70,63,176,203,44,63,121,3,15,63,130,49,220,62,119,136,149,62,169,48,23,62,243,4,53,63,174,130,122,63,252,70,106,63,36,255,79,63,176,203,44,63,24,47,2,63,105,250,163,62,52,57,242,61,159,218,181,189,119,136,149,190,138,48,247,190,90,31,39,191,149,123,75,191,194,29,103,191,126,214,120,191,56,227,127,191,137,246,123,191,136,59,109,191,238,83,84,191,43,81,50,191,166,168,8,191,124,71,178,190,169,48,23,190,77,166,114,61,230,244,134,62,79,203,233,62,112,77,33,63,69,202,70,63,145,192,99,63,92,242,118,63,231,140,127,63,189,49,125,63,188,250,111,63,251,120,88,63,142,174,55,63,121,3,15,63,121,108,192,62,185,34,53,62,152,193,242,188,248,133,112,190,130,49,220,190,65,87,27,191,66,236,65,191,42,48,96,191,178,214,116,191,31,253,126,191,2,52,126,191,251,131,114,191,91,109,92,191,164,226,60,191,37,62,21,191,50,102,206,190,15,236,82,190,243,4,53,63,92,242,118,63,91,109,92,63,43,81,50,63,138,48,247,62,248,133,112,62,152,193,242,188,119,136,149,190,166,168,8,191,164,226,60,191,145,192,99,191,174,130,122,191,231,140,127,191,251,131,114,191,238,83,84,191,90,31,39,191,130,49,220,190,185,34,53,190,159,218,181,61,124,71,178,62,37,62,21,63,69,202,70,63,252,70,106,63,189,49,125,63,2,52,126,63,136,59,109,63,149,123,75,63,65,87,27,63,121,108,192,62,52,57,242,61,169,48,23,190,50,102,206,190,112,77,33,191,36,255,79,191,188,250,111,191,31,253,126,191,137,246,123,191,194,29,103,191,66,236,65,191,121,3,15,191,105,250,163,190,77,166,114,189,15,236,82,62,79,203,233,62,176,203,44,63,251,120,88,63,178,214,116,63,56,227,127,63,126,214,120,63,42,48,96,63,142,174,55,63,24,47,2,63,230,244,134,62,243,4,53,63,251,131,114,63,149,123,75,63,121,3,15,63,230,244,134,62,77,166,114,189,121,108,192,190,90,31,39,191,91,109,92,191,174,130,122,191,2,52,126,191,194,29,103,191,142,174,55,191,79,203,233,190,169,48,23,190,185,34,53,62,138,48,247,62,164,226,60,63,252,70,106,63,31,253,126,63,126,214,120,63,251,120,88,63,112,77,33,63,124,71,178,62,152,193,242,60,119,136,149,190,37,62,21,191,36,255,79,191,178,214,116,191,56,227,127,191,188,250,111,191,69,202,70,191,166,168,8,191,248,133,112,190,159,218,181,61,50,102,206,62,176,203,44,63,42,48,96,63,137,246,123,63,189,49,125,63,145,192,99,63,43,81,50,63,130,49,220,62,52,57,242,61,15,236,82,190,24,47,2,191,66,236,65,191,136,59,109,191,231,140,127,191,92,242,118,191,238,83,84,191,65,87,27,191,105,250,163,190,243,4,53,63,136,59,109,63,142,174,55,63,50,102,206,62,152,193,242,60,124,71,178,190,176,203,44,191,194,29,103,191,231,140,127,191,251,131,114,191,66,236,65,191,79,203,233,190,159,218,181,189,119,136,149,62,112,77,33,63,42,48,96,63,2,52,126,63,92,242,118,63,149,123,75,63,24,47,2,63,169,48,23,62,248,133,112,190,37,62,21,191,251,120,88,191,137,246,123,191,174,130,122,191,238,83,84,191,121,3,15,191,15,236,82,190,185,34,53,62,166,168,8,63,36,255,79,63,126,214,120,63,189,49,125,63,91,109,92,63,65,87,27,63,230,244,134,62,52,57,242,189,138,48,247,190,69,202,70,191,178,214,116,191,31,253,126,191,145,192,99,191,90,31,39,191,105,250,163,190,77,166,114,61,130,49,220,62,164,226,60,63,188,250,111,63,56,227,127,63,252,70,106,63,43,81,50,63,121,108,192,62,243,4,53,63,194,29,103,63,112,77,33,63,248,133,112,62,15,236,82,190,65,87,27,191,145,192,99,191,56,227,127,191,252,70,106,191,90,31,39,191,230,244,134,190,185,34,53,62,37,62,21,63,42,48,96,63,231,140,127,63,136,59,109,63,176,203,44,63,119,136,149,62,169,48,23,190,121,3,15,191,91,109,92,191,31,253,126,191,188,250,111,191,43,81,50,191,105,250,163,190,52,57,242,61,166,168,8,63,251,120,88,63,2,52,126,63,251,131,114,63,142,174,55,63,124,71,178,62,159,218,181,189,24,47,2,191,238,83,84,191,189,49,125,191,178,214,116,191,164,226,60,191,121,108,192,190,77,166,114,61,138,48,247,62,36,255,79,63,137,246,123,63,92,242,118,63,66,236,65,63,50,102,206,62,152,193,242,188,79,203,233,190,149,123,75,191,174,130,122,191,126,214,120,191,69,202,70,191,130,49,220,190,243,4,53,63,42,48,96,63,166,168,8,63,77,166,114,61,130,49,220,190,36,255,79,191,2,52,126,191,136,59,109,191,112,77,33,191,185,34,53,190,105,250,163,62,164,226,60,63,126,214,120,63,92,242,118,63,142,174,55,63,119,136,149,62,15,236,82,190,90,31,39,191,188,250,111,191,189,49,125,191,149,123,75,191,50,102,206,190,159,218,181,61,121,3,15,63,145,192,99,63,56,227,127,63,91,109,92,63,24,47,2,63,152,193,242,60,79,203,233,190,238,83,84,191,31,253,126,191,252,70,106,191,65,87,27,191,169,48,23,190,124,71,178,62,66,236,65,63,174,130,122,63,178,214,116,63,43,81,50,63,230,244,134,62,248,133,112,190,176,203,44,191,251,131,114,191,137,246,123,191,69,202,70,191,121,108,192,190,52,57,242,61,37,62,21,63,194,29,103,63,231,140,127,63,251,120,88,63,138,48,247,62,243,4,53,63,251,120,88,63,130,49,220,62,52,57,242,189,112,77,33,191,251,131,114,191,126,214,120,191,43,81,50,191,15,236,82,190,124,71,178,62,149,123,75,63,31,253,126,63,145,192,99,63,24,47,2,63,152,193,242,188,121,3,15,191,252,70,106,191,189,49,125,191,66,236,65,191,119,136,149,190,230,244,134,62,164,226,60,63,137,246,123,63,136,59,109,63,37,62,21,63,77,166,114,61,138,48,247,190,42,48,96,191,231,140,127,191,36,255,79,191,121,108,192,190,185,34,53,62,176,203,44,63,92,242,118,63,178,214,116,63,90,31,39,63,169,48,23,62,50,102,206,190,238,83,84,191,56,227,127,191,91,109,92,191,79,203,233,190,159,218,181,61,65,87,27,63,188,250,111,63,174,130,122,63,142,174,55,63,248,133,112,62,105,250,163,190,69,202,70,191,2,52,126,191,194,29,103,191,166,168,8,191,243,4,53,63,36,255,79,63,105,250,163,62,119,136,149,190,149,123,75,191,56,227,127,191,238,83,84,191,124,71,178,190,230,244,134,62,69,202,70,63,231,140,127,63,251,120,88,63,121,108,192,62,248,133,112,190,66,236,65,191,31,253,126,191,91,109,92,191,50,102,206,190,15,236,82,62,164,226,60,63,2,52,126,63,42,48,96,63,130,49,220,62,185,34,53,190,142,174,55,191,189,49,125,191,145,192,99,191,79,203,233,190,169,48,23,62,43,81,50,63,137,246,123,63,194,29,103,63,138,48,247,62,52,57,242,189,176,203,44,191,174,130,122,191,252,70,106,191,24,47,2,191,159,218,181,61,90,31,39,63,126,214,120,63,136,59,109,63,166,168,8,63,77,166,114,189,112,77,33,191,92,242,118,191,188,250,111,191,121,3,15,191,152,193,242,60,65,87,27,63,178,214,116,63,251,131,114,63,37,62,21,63,243,4,53,63,69,202,70,63,15,236,82,62,79,203,233,190,252,70,106,191,92,242,118,191,37,62,21,191,77,166,114,61,176,203,44,63,189,49,125,63,91,109,92,63,124,71,178,62,105,250,163,190,251,120,88,191,2,52,126,191,43,81,50,191,159,218,181,189,121,3,15,63,178,214,116,63,136,59,109,63,138,48,247,62,185,34,53,190,66,236,65,191,56,227,127,191,149,123,75,191,248,133,112,190,130,49,220,62,194,29,103,63,126,214,120,63,65,87,27,63,152,193,242,188,90,31,39,191,137,246,123,191,42,48,96,191,121,108,192,190,119,136,149,62,238,83,84,63,31,253,126,63,142,174,55,63,52,57,242,61,166,168,8,191,251,131,114,191,188,250,111,191,24,47,2,191,169,48,23,62,164,226,60,63,231,140,127,63,36,255,79,63,230,244,134,62,50,102,206,190,145,192,99,191,174,130,122,191,112,77,33,191,243,4,53,63,164,226,60,63,159,218,181,61,65,87,27,191,137,246,123,191,251,120,88,191,230,244,134,190,79,203,233,62,188,250,111,63,136,59,109,63,130,49,220,62,119,136,149,190,91,109,92,191,174,130,122,191,37,62,21,191,52,57,242,61,66,236,65,63,56,227,127,63,142,174,55,63,77,166,114,61,112,77,33,191,189,49,125,191,238,83,84,191,248,133,112,190,138,48,247,62,251,131,114,63,252,70,106,63,50,102,206,62,105,250,163,190,42,48,96,191,126,214,120,191,121,3,15,191,169,48,23,62,69,202,70,63,231,140,127,63,43,81,50,63,152,193,242,60,90,31,39,191,2,52,126,191,36,255,79,191,15,236,82,190,24,47,2,63,178,214,116,63,194,29,103,63,121,108,192,62,124,71,178,190,145,192,99,191,92,242,118,191,166,168,8,191,185,34,53,62,149,123,75,63,31,253,126,63,176,203,44,63,243,4,53,63,43,81,50,63,152,193,242,188,164,226,60,191,231,140,127,191,90,31,39,191,159,218,181,61,69,202,70,63,2,52,126,63,65,87,27,63,169,48,23,190,36,255,79,191,137,246,123,191,121,3,15,191,15,236,82,62,251,120,88,63,126,214,120,63,24,47,2,63,230,244,134,190,42,48,96,191,178,214,116,191,79,203,233,190,105,250,163,62,194,29,103,63,188,250,111,63,50,102,206,62,121,108,192,190,136,59,109,191,252,70,106,191,124,71,178,190,130,49,220,62,251,131,114,63,145,192,99,63,119,136,149,62,138,48,247,190,92,242,118,191,91,109,92,191,248,133,112,190,166,168,8,63,174,130,122,63,238,83,84,63,185,34,53,62,37,62,21,191,189,49,125,191,149,123,75,191,52,57,242,189,112,77,33,63,31,253,126,63,66,236,65,63,77,166,114,61,176,203,44,191,56,227,127,191,142,174,55,191,243,4,53,63,90,31,39,63,169,48,23,190,251,120,88,191,178,214,116,191,50,102,206,190,130,49,220,62,92,242,118,63,238,83,84,63,52,57,242,61,176,203,44,191,56,227,127,191,112,77,33,191,185,34,53,62,91,109,92,63,251,131,114,63,121,108,192,62,79,203,233,190,126,214,120,191,36,255,79,191,159,218,181,189,43,81,50,63,231,140,127,63,65,87,27,63,15,236,82,190,42,48,96,191,188,250,111,191,124,71,178,190,138,48,247,62,174,130,122,63,149,123,75,63,77,166,114,61,142,174,55,191,31,253,126,191,37,62,21,191,248,133,112,62,145,192,99,63,136,59,109,63,105,250,163,62,24,47,2,191,137,246,123,191,69,202,70,191,152,193,242,188,164,226,60,63,2,52,126,63,121,3,15,63,230,244,134,190,194,29,103,191,252,70,106,191,119,136,149,190,166,168,8,63,189,49,125,63,66,236,65,63,243,4,53,63,65,87,27,63,230,244,134,190,136,59,109,191,91,109,92,191,52,57,242,189,142,174,55,63,189,49,125,63,138,48,247,62,50,102,206,190,126,214,120,191,69,202,70,191,152,193,242,60,36,255,79,63,178,214,116,63,124,71,178,62,166,168,8,191,31,253,126,191,176,203,44,191,185,34,53,62,145,192,99,63,194,29,103,63,15,236,82,62,90,31,39,191,231,140,127,191,121,3,15,191,105,250,163,62,251,131,114,63,238,83,84,63,77,166,114,61,66,236,65,191,174,130,122,191,130,49,220,190,79,203,233,62,137,246,123,63,164,226,60,63,159,218,181,189,251,120,88,191,188,250,111,191,119,136,149,190,37,62,21,63,56,227,127,63,112,77,33,63,248,133,112,190,252,70,106,191,42,48,96,191,169,48,23,190,43,81,50,63,2,52,126,63,24,47,2,63,121,108,192,190,92,242,118,191,149,123,75,191,243,4,53,63,121,3,15,63,121,108,192,190,174,130,122,191,142,174,55,191,185,34,53,62,252,70,106,63,251,120,88,63,152,193,242,60,36,255,79,191,188,250,111,191,248,133,112,190,176,203,44,63,189,49,125,63,130,49,220,62,24,47,2,191,231,140,127,191,65,87,27,191,105,250,163,62,92,242,118,63,66,236,65,63,52,57,242,189,145,192,99,191,42,48,96,191,159,218,181,189,69,202,70,63,178,214,116,63,119,136,149,62,112,77,33,191,31,253,126,191,138,48,247,190,79,203,233,62,2,52,126,63,90,31,39,63,230,244,134,190,251,131,114,191,149,123,75,191,77,166,114,61,91,109,92,63,194,29,103,63,169,48,23,62,164,226,60,191,126,214,120,191,124,71,178,190,37,62,21,63,56,227,127,63,166,168,8,63,50,102,206,190,137,246,123,191,43,81,50,191,15,236,82,62,136,59,109,63,238,83,84,63,243,4,53,63,24,47,2,63,138,48,247,190,56,227,127,191,166,168,8,191,79,203,233,62,231,140,127,63,121,3,15,63,130,49,220,190,31,253,126,191,37,62,21,191,50,102,206,62,2,52,126,63,65,87,27,63,121,108,192,190,189,49,125,191,112,77,33,191,124,71,178,62,137,246,123,63,90,31,39,63,105,250,163,190,174,130,122,191,176,203,44,191,119,136,149,62,126,214,120,63,43,81,50,63,230,244,134,190,92,242,118,191,142,174,55,191,248,133,112,62,178,214,116,63,164,226,60,63,15,236,82,190,251,131,114,191,66,236,65,191,185,34,53,62,188,250,111,63,69,202,70,63,169,48,23,190,136,59,109,191,149,123,75,191,52,57,242,61,252,70,106,63,36,255,79,63,159,218,181,189,194,29,103,191,238,83,84,191,77,166,114,61,145,192,99,63,251,120,88,63,152,193,242,188,42,48,96,191,91,109,92,191,243,4,53,63,79,203,233,62,37,62,21,191,189,49,125,191,105,250,163,190,43,81,50,63,178,214,116,63,185,34,53,62,149,123,75,191,194,29,103,191,152,193,242,188,42,48,96,63,238,83,84,63,52,57,242,189,188,250,111,191,164,226,60,191,230,244,134,62,174,130,122,63,112,77,33,63,50,102,206,190,231,140,127,191,24,47,2,191,166,168,8,63,31,253,126,63,121,108,192,62,90,31,39,191,126,214,120,191,248,133,112,190,66,236,65,63,136,59,109,63,159,218,181,61,251,120,88,191,91,109,92,191,77,166,114,61,252,70,106,63,69,202,70,63,15,236,82,190,92,242,118,191,176,203,44,191,124,71,178,62,2,52,126,63,121,3,15,63,138,48,247,190,56,227,127,191,130,49,220,190,65,87,27,63,137,246,123,63,119,136,149,62,142,174,55,191,251,131,114,191,169,48,23,190,36,255,79,63,145,192,99,63,243,4,53,63,50,102,206,62,176,203,44,191,251,131,114,191,159,218,181,189,42,48,96,63,149,123,75,63,248,133,112,190,137,246,123,191,121,3,15,191,166,168,8,63,189,49,125,63,230,244,134,62,69,202,70,191,145,192,99,191,77,166,114,61,188,250,111,63,43,81,50,63,121,108,192,190,56,227,127,191,130,49,220,190,90,31,39,63,178,214,116,63,52,57,242,61,91,109,92,191,36,255,79,191,15,236,82,62,174,130,122,63,37,62,21,63,24,47,2,191,2,52,126,191,119,136,149,190,66,236,65,63,194,29,103,63,152,193,242,188,136,59,109,191,142,174,55,191,124,71,178,62,231,140,127,63,79,203,233,62,112,77,33,191,92,242,118,191,169,48,23,190,251,120,88,63,238,83,84,63,185,34,53,190,126,214,120,191,65,87,27,191,138,48,247,62,31,253,126,63,105,250,163,62,164,226,60,191,252,70,106,191,243,4,53,63,124,71,178,62,66,236,65,191,42,48,96,191,169,48,23,62,174,130,122,63,166,168,8,63,65,87,27,191,178,214,116,191,77,166,114,189,252,70,106,63,43,81,50,63,130,49,220,190,31,253,126,191,230,244,134,190,36,255,79,63,238,83,84,63,248,133,112,190,2,52,126,191,79,203,233,190,176,203,44,63,136,59,109,63,152,193,242,188,251,131,114,191,112,77,33,191,24,47,2,63,137,246,123,63,185,34,53,62,91,109,92,191,69,202,70,191,105,250,163,62,56,227,127,63,121,108,192,62,164,226,60,191,145,192,99,191,52,57,242,61,126,214,120,63,121,3,15,63,37,62,21,191,92,242,118,191,159,218,181,189,194,29,103,63,142,174,55,63,50,102,206,190,231,140,127,191,119,136,149,190,149,123,75,63,251,120,88,63,15,236,82,190,189,49,125,191,138,48,247,190,90,31,39,63,188,250,111,63,243,4,53,63,119,136,149,62,238,83,84,191,69,202,70,191,121,108,192,62,31,253,126,63,15,236,82,62,42,48,96,191,142,174,55,191,79,203,233,62,137,246,123,63,52,57,242,61,252,70,106,191,90,31,39,191,166,168,8,63,92,242,118,63,152,193,242,60,251,131,114,191,37,62,21,191,65,87,27,63,188,250,111,63,77,166,114,189,126,214,120,191,24,47,2,191,176,203,44,63,194,29,103,63,169,48,23,190,189,49,125,191,130,49,220,190,164,226,60,63,91,109,92,63,248,133,112,190,231,140,127,191,124,71,178,190,149,123,75,63,36,255,79,63,105,250,163,190,56,227,127,191,230,244,134,190,251,120,88,63,66,236,65,63,50,102,206,190,2,52,126,191,185,34,53,190,145,192,99,63,43,81,50,63,138,48,247,190,174,130,122,191,159,218,181,189,136,59,109,63,112,77,33,63,121,3,15,191,178,214,116,191,243,4,53,63,248,133,112,62,145,192,99,191,90,31,39,191,37,62,21,63,136,59,109,63,169,48,23,190,31,253,126,191,105,250,163,190,251,120,88,63,142,174,55,63,24,47,2,191,178,214,116,191,77,166,114,61,137,246,123,63,50,102,206,62,149,123,75,191,69,202,70,191,130,49,220,62,174,130,122,63,152,193,242,60,92,242,118,191,138,48,247,190,164,226,60,63,238,83,84,63,124,71,178,190,2,52,126,191,52,57,242,189,188,250,111,63,121,3,15,63,176,203,44,191,42,48,96,191,230,244,134,62,56,227,127,63,15,236,82,62,194,29,103,191,112,77,33,191,65,87,27,63,252,70,106,63,185,34,53,190,231,140,127,191,119,136,149,190,91,109,92,63,43,81,50,63,166,168,8,191,251,131,114,191,159,218,181,61,189,49,125,63,121,108,192,62,36,255,79,191,66,236,65,191,79,203,233,62,126,214,120,63,243,4,53,63,185,34,53,62,188,250,111,191,24,47,2,191,66,236,65,63,69,202,70,63,138,48,247,190,251,131,114,191,169,48,23,62,56,227,127,63,15,236,82,62,136,59,109,191,166,168,8,191,164,226,60,63,149,123,75,63,79,203,233,190,178,214,116,191,52,57,242,61,231,140,127,63,248,133,112,62,252,70,106,191,121,3,15,191,142,174,55,63,36,255,79,63,130,49,220,190,92,242,118,191,159,218,181,61,31,253,126,63,230,244,134,62,194,29,103,191,37,62,21,191,43,81,50,63,238,83,84,63,50,102,206,190,126,214,120,191,77,166,114,61,2,52,126,63,119,136,149,62,145,192,99,191,65,87,27,191,176,203,44,63,251,120,88,63,121,108,192,190,174,130,122,191,152,193,242,60,189,49,125,63,105,250,163,62,42,48,96,191,112,77,33,191,90,31,39,63,91,109,92,63,124,71,178,190,137,246,123,191,243,4,53,63,52,57,242,61,126,214,120,191,124,71,178,190,145,192,99,63,121,3,15,63,66,236,65,191,164,226,60,191,37,62,21,63,42,48,96,63,121,108,192,190,92,242,118,191,169,48,23,62,56,227,127,63,159,218,181,61,174,130,122,191,105,250,163,190,194,29,103,63,166,168,8,63,69,202,70,191,142,174,55,191,65,87,27,63,91,109,92,63,50,102,206,190,178,214,116,191,185,34,53,62,231,140,127,63,77,166,114,61,137,246,123,191,119,136,149,190,252,70,106,63,24,47,2,63,149,123,75,191,43,81,50,191,112,77,33,63,251,120,88,63,130,49,220,190,251,131,114,191,15,236,82,62,31,253,126,63,152,193,242,60,189,49,125,191,230,244,134,190,136,59,109,63,138,48,247,62,36,255,79,191,176,203,44,191,90,31,39,63,238,83,84,63,79,203,233,190,188,250,111,191,248,133,112,62,2,52,126,63,243,4,53,63,77,166,114,61,2,52,126,191,185,34,53,190,126,214,120,63,119,136,149,62,188,250,111,191,50,102,206,190,145,192,99,63,24,47,2,63,238,83,84,191,65,87,27,191,66,236,65,63,43,81,50,63,176,203,44,191,69,202,70,191,37,62,21,63,251,120,88,63,138,48,247,190,194,29,103,191,121,108,192,62,251,131,114,63,230,244,134,190,174,130,122,191,169,48,23,62,31,253,126,63,152,193,242,188,56,227,127,191,159,218,181,189,189,49,125,63,15,236,82,62,92,242,118,191,105,250,163,190,136,59,109,63,130,49,220,62,42,48,96,191,166,168,8,191,36,255,79,63,112,77,33,63,164,226,60,191,142,174,55,191,90,31,39,63,149,123,75,63,121,3,15,191,91,109,92,191,79,203,233,62,252,70,106,63,124,71,178,190,178,214,116,191,248,133,112,62,137,246,123,63,52,57,242,189,231,140,127,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,91,26,141,38,0,0,128,191,191,159,48,39,0,0,128,63,213,12,22,40,0,0,128,191,52,131,176,167,0,0,128,63,243,4,53,63,77,166,114,189,2,52,126,191,185,34,53,62,126,214,120,63,119,136,149,190,188,250,111,191,50,102,206,62,145,192,99,63,24,47,2,191,238,83,84,191,65,87,27,63,66,236,65,63,43,81,50,191,176,203,44,191,69,202,70,63,37,62,21,63,251,120,88,191,138,48,247,190,194,29,103,63,121,108,192,62,251,131,114,191,230,244,134,190,174,130,122,63,169,48,23,62,31,253,126,191,152,193,242,188,56,227,127,63,159,218,181,189,189,49,125,191,15,236,82,62,92,242,118,63,105,250,163,190,136,59,109,191,130,49,220,62,42,48,96,63,166,168,8,191,36,255,79,191,112,77,33,63,164,226,60,63,142,174,55,191,90,31,39,191,149,123,75,63,121,3,15,63,91,109,92,191,79,203,233,190,252,70,106,63,124,71,178,62,178,214,116,191,248,133,112,190,137,246,123,63,52,57,242,61,231,140,127,191,243,4,53,63,52,57,242,189,126,214,120,191,124,71,178,62,145,192,99,63,121,3,15,191,66,236,65,191,164,226,60,63,37,62,21,63,42,48,96,191,121,108,192,190,92,242,118,63,169,48,23,62,56,227,127,191,159,218,181,61,174,130,122,63,105,250,163,190,194,29,103,191,166,168,8,63,69,202,70,63,142,174,55,191,65,87,27,191,91,109,92,63,50,102,206,62,178,214,116,191,185,34,53,190,231,140,127,63,77,166,114,189,137,246,123,191,119,136,149,62,252,70,106,63,24,47,2,191,149,123,75,191,43,81,50,63,112,77,33,63,251,120,88,191,130,49,220,190,251,131,114,63,15,236,82,62,31,253,126,191,152,193,242,60,189,49,125,63,230,244,134,190,136,59,109,191,138,48,247,62,36,255,79,63,176,203,44,191,90,31,39,191,238,83,84,63,79,203,233,62,188,250,111,191,248,133,112,190,2,52,126,63,243,4,53,63,185,34,53,190,188,250,111,191,24,47,2,63,66,236,65,63,69,202,70,191,138,48,247,190,251,131,114,63,169,48,23,62,56,227,127,191,15,236,82,62,136,59,109,63,166,168,8,191,164,226,60,191,149,123,75,63,79,203,233,62,178,214,116,191,52,57,242,189,231,140,127,63,248,133,112,190,252,70,106,191,121,3,15,63,142,174,55,63,36,255,79,191,130,49,220,190,92,242,118,63,159,218,181,61,31,253,126,191,230,244,134,62,194,29,103,63,37,62,21,191,43,81,50,191,238,83,84,63,50,102,206,62,126,214,120,191,77,166,114,189,2,52,126,63,119,136,149,190,145,192,99,191,65,87,27,63,176,203,44,63,251,120,88,191,121,108,192,190,174,130,122,63,152,193,242,60,189,49,125,191,105,250,163,62,42,48,96,63,112,77,33,191,90,31,39,191,91,109,92,63,124,71,178,62,137,246,123,191,243,4,53,63,248,133,112,190,145,192,99,191,90,31,39,63,37,62,21,63,136,59,109,191,169,48,23,190,31,253,126,63,105,250,163,190,251,120,88,191,142,174,55,63,24,47,2,63,178,214,116,191,77,166,114,189,137,246,123,63,50,102,206,190,149,123,75,191,69,202,70,63,130,49,220,62,174,130,122,191,152,193,242,60,92,242,118,63,138,48,247,190,164,226,60,191,238,83,84,63,124,71,178,62,2,52,126,191,52,57,242,61,188,250,111,63,121,3,15,191,176,203,44,191,42,48,96,63,230,244,134,62,56,227,127,191,15,236,82,62,194,29,103,63,112,77,33,191,65,87,27,191,252,70,106,63,185,34,53,62,231,140,127,191,119,136,149,62,91,109,92,63,43,81,50,191,166,168,8,191,251,131,114,63,159,218,181,61,189,49,125,191,121,108,192,62,36,255,79,63,66,236,65,191,79,203,233,190,126,214,120,63,243,4,53,63,119,136,149,190,238,83,84,191,69,202,70,63,121,108,192,62,31,253,126,191,15,236,82,62,42,48,96,63,142,174,55,191,79,203,233,190,137,246,123,63,52,57,242,189,252,70,106,191,90,31,39,63,166,168,8,63,92,242,118,191,152,193,242,60,251,131,114,63,37,62,21,191,65,87,27,191,188,250,111,63,77,166,114,61,126,214,120,191,24,47,2,63,176,203,44,63,194,29,103,191,169,48,23,190,189,49,125,63,130,49,220,190,164,226,60,191,91,109,92,63,248,133,112,62,231,140,127,191,124,71,178,62,149,123,75,63,36,255,79,191,105,250,163,190,56,227,127,63,230,244,134,190,251,120,88,191,66,236,65,63,50,102,206,62,2,52,126,191,185,34,53,62,145,192,99,63,43,81,50,191,138,48,247,190,174,130,122,63,159,218,181,189,136,59,109,191,112,77,33,63,121,3,15,63,178,214,116,191,243,4,53,63,124,71,178,190,66,236,65,191,42,48,96,63,169,48,23,62,174,130,122,191,166,168,8,63,65,87,27,63,178,214,116,191,77,166,114,61,252,70,106,63,43,81,50,191,130,49,220,190,31,253,126,63,230,244,134,190,36,255,79,191,238,83,84,63,248,133,112,62,2,52,126,191,79,203,233,62,176,203,44,63,136,59,109,191,152,193,242,188,251,131,114,63,112,77,33,191,24,47,2,191,137,246,123,63,185,34,53,190,91,109,92,191,69,202,70,63,105,250,163,62,56,227,127,191,121,108,192,62,164,226,60,63,145,192,99,191,52,57,242,189,126,214,120,63,121,3,15,191,37,62,21,191,92,242,118,63,159,218,181,189,194,29,103,191,142,174,55,63,50,102,206,62,231,140,127,191,119,136,149,62,149,123,75,63,251,120,88,191,15,236,82,190,189,49,125,63,138,48,247,190,90,31,39,191,188,250,111,63,243,4,53,63,50,102,206,190,176,203,44,191,251,131,114,63,159,218,181,189,42,48,96,191,149,123,75,63,248,133,112,62,137,246,123,191,121,3,15,63,166,168,8,63,189,49,125,191,230,244,134,62,69,202,70,63,145,192,99,191,77,166,114,189,188,250,111,63,43,81,50,191,121,108,192,190,56,227,127,63,130,49,220,190,90,31,39,191,178,214,116,63,52,57,242,189,91,109,92,191,36,255,79,63,15,236,82,62,174,130,122,191,37,62,21,63,24,47,2,63,2,52,126,191,119,136,149,62,66,236,65,63,194,29,103,191,152,193,242,188,136,59,109,63,142,174,55,191,124,71,178,190,231,140,127,63,79,203,233,190,112,77,33,191,92,242,118,63,169,48,23,190,251,120,88,191,238,83,84,63,185,34,53,62,126,214,120,191,65,87,27,63,138,48,247,62,31,253,126,191,105,250,163,62,164,226,60,63,252,70,106,191,243,4,53,63,79,203,233,190,37,62,21,191,189,49,125,63,105,250,163,190,43,81,50,191,178,214,116,63,185,34,53,190,149,123,75,191,194,29,103,63,152,193,242,188,42,48,96,191,238,83,84,63,52,57,242,61,188,250,111,191,164,226,60,63,230,244,134,62,174,130,122,191,112,77,33,63,50,102,206,62,231,140,127,191,24,47,2,63,166,168,8,63,31,253,126,191,121,108,192,62,90,31,39,63,126,214,120,191,248,133,112,62,66,236,65,63,136,59,109,191,159,218,181,61,251,120,88,63,91,109,92,191,77,166,114,189,252,70,106,63,69,202,70,191,15,236,82,190,92,242,118,63,176,203,44,191,124,71,178,190,2,52,126,63,121,3,15,191,138,48,247,190,56,227,127,63,130,49,220,190,65,87,27,191,137,246,123,63,119,136,149,190,142,174,55,191,251,131,114,63,169,48,23,190,36,255,79,191,145,192,99,63,243,4,53,63,24,47,2,191,138,48,247,190,56,227,127,63,166,168,8,191,79,203,233,190,231,140,127,63,121,3,15,191,130,49,220,190,31,253,126,63,37,62,21,191,50,102,206,190,2,52,126,63,65,87,27,191,121,108,192,190,189,49,125,63,112,77,33,191,124,71,178,190,137,246,123,63,90,31,39,191,105,250,163,190,174,130,122,63,176,203,44,191,119,136,149,190,126,214,120,63,43,81,50,191,230,244,134,190,92,242,118,63,142,174,55,191,248,133,112,190,178,214,116,63,164,226,60,191,15,236,82,190,251,131,114,63,66,236,65,191,185,34,53,190,188,250,111,63,69,202,70,191,169,48,23,190,136,59,109,63,149,123,75,191,52,57,242,189,252,70,106,63,36,255,79,191,159,218,181,189,194,29,103,63,238,83,84,191,77,166,114,189,145,192,99,63,251,120,88,191,152,193,242,188,42,48,96,63,91,109,92,191,243,4,53,63,121,3,15,191,121,108,192,190,174,130,122,63,142,174,55,191,185,34,53,190,252,70,106,63,251,120,88,191,152,193,242,60,36,255,79,63,188,250,111,191,248,133,112,62,176,203,44,63,189,49,125,191,130,49,220,62,24,47,2,63,231,140,127,191,65,87,27,63,105,250,163,62,92,242,118,191,66,236,65,63,52,57,242,61,145,192,99,191,42,48,96,63,159,218,181,189,69,202,70,191,178,214,116,63,119,136,149,190,112,77,33,191,31,253,126,63,138,48,247,190,79,203,233,190,2,52,126,63,90,31,39,191,230,244,134,190,251,131,114,63,149,123,75,191,77,166,114,189,91,109,92,63,194,29,103,191,169,48,23,62,164,226,60,63,126,214,120,191,124,71,178,62,37,62,21,63,56,227,127,191,166,168,8,63,50,102,206,62,137,246,123,191,43,81,50,63,15,236,82,62,136,59,109,191,238,83,84,63,243,4,53,63,65,87,27,191,230,244,134,190,136,59,109,63,91,109,92,191,52,57,242,61,142,174,55,63,189,49,125,191,138,48,247,62,50,102,206,62,126,214,120,191,69,202,70,63,152,193,242,60,36,255,79,191,178,214,116,63,124,71,178,190,166,168,8,191,31,253,126,63,176,203,44,191,185,34,53,190,145,192,99,63,194,29,103,191,15,236,82,62,90,31,39,63,231,140,127,191,121,3,15,63,105,250,163,62,251,131,114,191,238,83,84,63,77,166,114,189,66,236,65,191,174,130,122,63,130,49,220,190,79,203,233,190,137,246,123,63,164,226,60,191,159,218,181,189,251,120,88,63,188,250,111,191,119,136,149,62,37,62,21,63,56,227,127,191,112,77,33,63,248,133,112,62,252,70,106,191,42,48,96,63,169,48,23,190,43,81,50,191,2,52,126,63,24,47,2,191,121,108,192,190,92,242,118,63,149,123,75,191,243,4,53,63,90,31,39,191,169,48,23,190,251,120,88,63,178,214,116,191,50,102,206,62,130,49,220,62,92,242,118,191,238,83,84,63,52,57,242,189,176,203,44,191,56,227,127,63,112,77,33,191,185,34,53,190,91,109,92,63,251,131,114,191,121,108,192,62,79,203,233,62,126,214,120,191,36,255,79,63,159,218,181,189,43,81,50,191,231,140,127,63,65,87,27,191,15,236,82,190,42,48,96,63,188,250,111,191,124,71,178,62,138,48,247,62,174,130,122,191,149,123,75,63,77,166,114,189,142,174,55,191,31,253,126,63,37,62,21,191,248,133,112,190,145,192,99,63,136,59,109,191,105,250,163,62,24,47,2,63,137,246,123,191,69,202,70,63,152,193,242,188,164,226,60,191,2,52,126,63,121,3,15,191,230,244,134,190,194,29,103,63,252,70,106,191,119,136,149,62,166,168,8,63,189,49,125,191,66,236,65,63,243,4,53,63,43,81,50,191,152,193,242,188,164,226,60,63,231,140,127,191,90,31,39,63,159,218,181,61,69,202,70,191,2,52,126,63,65,87,27,191,169,48,23,190,36,255,79,63,137,246,123,191,121,3,15,63,15,236,82,62,251,120,88,191,126,214,120,63,24,47,2,191,230,244,134,190,42,48,96,63,178,214,116,191,79,203,233,62,105,250,163,62,194,29,103,191,188,250,111,63,50,102,206,190,121,108,192,190,136,59,109,63,252,70,106,191,124,71,178,62,130,49,220,62,251,131,114,191,145,192,99,63,119,136,149,190,138,48,247,190,92,242,118,63,91,109,92,191,248,133,112,62,166,168,8,63,174,130,122,191,238,83,84,63,185,34,53,190,37,62,21,191,189,49,125,63,149,123,75,191,52,57,242,61,112,77,33,63,31,253,126,191,66,236,65,63,77,166,114,189,176,203,44,191,56,227,127,63,142,174,55,191,243,4,53,63,164,226,60,191,159,218,181,61,65,87,27,63,137,246,123,191,251,120,88,63,230,244,134,190,79,203,233,190,188,250,111,63,136,59,109,191,130,49,220,62,119,136,149,62,91,109,92,191,174,130,122,63,37,62,21,191,52,57,242,189,66,236,65,63,56,227,127,191,142,174,55,63,77,166,114,189,112,77,33,191,189,49,125,63,238,83,84,191,248,133,112,62,138,48,247,62,251,131,114,191,252,70,106,63,50,102,206,190,105,250,163,190,42,48,96,63,126,214,120,191,121,3,15,63,169,48,23,62,69,202,70,191,231,140,127,63,43,81,50,191,152,193,242,60,90,31,39,63,2,52,126,191,36,255,79,63,15,236,82,190,24,47,2,191,178,214,116,63,194,29,103,191,121,108,192,62,124,71,178,62,145,192,99,191,92,242,118,63,166,168,8,191,185,34,53,190,149,123,75,63,31,253,126,191,176,203,44,63,243,4,53,63,69,202,70,191,15,236,82,62,79,203,233,62,252,70,106,191,92,242,118,63,37,62,21,191,77,166,114,189,176,203,44,63,189,49,125,191,91,109,92,63,124,71,178,190,105,250,163,190,251,120,88,63,2,52,126,191,43,81,50,63,159,218,181,189,121,3,15,191,178,214,116,63,136,59,109,191,138,48,247,62,185,34,53,62,66,236,65,191,56,227,127,63,149,123,75,191,248,133,112,62,130,49,220,62,194,29,103,191,126,214,120,63,65,87,27,191,152,193,242,188,90,31,39,63,137,246,123,191,42,48,96,63,121,108,192,190,119,136,149,190,238,83,84,63,31,253,126,191,142,174,55,63,52,57,242,189,166,168,8,191,251,131,114,63,188,250,111,191,24,47,2,63,169,48,23,62,164,226,60,191,231,140,127,63,36,255,79,191,230,244,134,62,50,102,206,62,145,192,99,191,174,130,122,63,112,77,33,191,243,4,53,63,36,255,79,191,105,250,163,62,119,136,149,62,149,123,75,191,56,227,127,63,238,83,84,191,124,71,178,62,230,244,134,62,69,202,70,191,231,140,127,63,251,120,88,191,121,108,192,62,248,133,112,62,66,236,65,191,31,253,126,63,91,109,92,191,50,102,206,62,15,236,82,62,164,226,60,191,2,52,126,63,42,48,96,191,130,49,220,62,185,34,53,62,142,174,55,191,189,49,125,63,145,192,99,191,79,203,233,62,169,48,23,62,43,81,50,191,137,246,123,63,194,29,103,191,138,48,247,62,52,57,242,61,176,203,44,191,174,130,122,63,252,70,106,191,24,47,2,63,159,218,181,61,90,31,39,191,126,214,120,63,136,59,109,191,166,168,8,63,77,166,114,61,112,77,33,191,92,242,118,63,188,250,111,191,121,3,15,63,152,193,242,60,65,87,27,191,178,214,116,63,251,131,114,191,37,62,21,63,243,4,53,63,251,120,88,191,130,49,220,62,52,57,242,61,112,77,33,191,251,131,114,63,126,214,120,191,43,81,50,63,15,236,82,190,124,71,178,190,149,123,75,63,31,253,126,191,145,192,99,63,24,47,2,191,152,193,242,188,121,3,15,63,252,70,106,191,189,49,125,63,66,236,65,191,119,136,149,62,230,244,134,62,164,226,60,191,137,246,123,63,136,59,109,191,37,62,21,63,77,166,114,189,138,48,247,190,42,48,96,63,231,140,127,191,36,255,79,63,121,108,192,190,185,34,53,190,176,203,44,63,92,242,118,191,178,214,116,63,90,31,39,191,169,48,23,62,50,102,206,62,238,83,84,191,56,227,127,63,91,109,92,191,79,203,233,62,159,218,181,61,65,87,27,191,188,250,111,63,174,130,122,191,142,174,55,63,248,133,112,190,105,250,163,190,69,202,70,63,2,52,126,191,194,29,103,63,166,168,8,191,243,4,53,63,42,48,96,191,166,168,8,63,77,166,114,189,130,49,220,190,36,255,79,63,2,52,126,191,136,59,109,63,112,77,33,191,185,34,53,62,105,250,163,62,164,226,60,191,126,214,120,63,92,242,118,191,142,174,55,63,119,136,149,190,15,236,82,190,90,31,39,63,188,250,111,191,189,49,125,63,149,123,75,191,50,102,206,62,159,218,181,61,121,3,15,191,145,192,99,63,56,227,127,191,91,109,92,63,24,47,2,191,152,193,242,60,79,203,233,62,238,83,84,191,31,253,126,63,252,70,106,191,65,87,27,63,169,48,23,190,124,71,178,190,66,236,65,63,174,130,122,191,178,214,116,63,43,81,50,191,230,244,134,62,248,133,112,62,176,203,44,191,251,131,114,63,137,246,123,191,69,202,70,63,121,108,192,190,52,57,242,189,37,62,21,63,194,29,103,191,231,140,127,63,251,120,88,191,138,48,247,62,243,4,53,63,194,29,103,191,112,77,33,63,248,133,112,190,15,236,82,190,65,87,27,63,145,192,99,191,56,227,127,63,252,70,106,191,90,31,39,63,230,244,134,190,185,34,53,190,37,62,21,63,42,48,96,191,231,140,127,63,136,59,109,191,176,203,44,63,119,136,149,190,169,48,23,190,121,3,15,63,91,109,92,191,31,253,126,63,188,250,111,191,43,81,50,63,105,250,163,190,52,57,242,189,166,168,8,63,251,120,88,191,2,52,126,63,251,131,114,191,142,174,55,63,124,71,178,190,159,218,181,189,24,47,2,63,238,83,84,191,189,49,125,63,178,214,116,191,164,226,60,63,121,108,192,190,77,166,114,189,138,48,247,62,36,255,79,191,137,246,123,63,92,242,118,191,66,236,65,63,50,102,206,190,152,193,242,188,79,203,233,62,149,123,75,191,174,130,122,63,126,214,120,191,69,202,70,63,130,49,220,190,243,4,53,63,136,59,109,191,142,174,55,63,50,102,206,190,152,193,242,60,124,71,178,62,176,203,44,191,194,29,103,63,231,140,127,191,251,131,114,63,66,236,65,191,79,203,233,62,159,218,181,189,119,136,149,190,112,77,33,63,42,48,96,191,2,52,126,63,92,242,118,191,149,123,75,63,24,47,2,191,169,48,23,62,248,133,112,62,37,62,21,191,251,120,88,63,137,246,123,191,174,130,122,63,238,83,84,191,121,3,15,63,15,236,82,190,185,34,53,190,166,168,8,63,36,255,79,191,126,214,120,63,189,49,125,191,91,109,92,63,65,87,27,191,230,244,134,62,52,57,242,61,138,48,247,190,69,202,70,63,178,214,116,191,31,253,126,63,145,192,99,191,90,31,39,63,105,250,163,190,77,166,114,189,130,49,220,62,164,226,60,191,188,250,111,63,56,227,127,191,252,70,106,63,43,81,50,191,121,108,192,62,243,4,53,63,251,131,114,191,149,123,75,63,121,3,15,191,230,244,134,62,77,166,114,61,121,108,192,190,90,31,39,63,91,109,92,191,174,130,122,63,2,52,126,191,194,29,103,63,142,174,55,191,79,203,233,62,169,48,23,190,185,34,53,190,138,48,247,62,164,226,60,191,252,70,106,63,31,253,126,191,126,214,120,63,251,120,88,191,112,77,33,63,124,71,178,190,152,193,242,60,119,136,149,62,37,62,21,191,36,255,79,63,178,214,116,191,56,227,127,63,188,250,111,191,69,202,70,63,166,168,8,191,248,133,112,62,159,218,181,61,50,102,206,190,176,203,44,63,42,48,96,191,137,246,123,63,189,49,125,191,145,192,99,63,43,81,50,191,130,49,220,62,52,57,242,189,15,236,82,190,24,47,2,63,66,236,65,191,136,59,109,63,231,140,127,191,92,242,118,63,238,83,84,191,65,87,27,63,105,250,163,190,243,4,53,63,92,242,118,191,91,109,92,63,43,81,50,191,138,48,247,62,248,133,112,190,152,193,242,188,119,136,149,62,166,168,8,191,164,226,60,63,145,192,99,191,174,130,122,63,231,140,127,191,251,131,114,63,238,83,84,191,90,31,39,63,130,49,220,190,185,34,53,62,159,218,181,61,124,71,178,190,37,62,21,63,69,202,70,191,252,70,106,63,189,49,125,191,2,52,126,63,136,59,109,191,149,123,75,63,65,87,27,191,121,108,192,62,52,57,242,189,169,48,23,190,50,102,206,62,112,77,33,191,36,255,79,63,188,250,111,191,31,253,126,63,137,246,123,191,194,29,103,63,66,236,65,191,121,3,15,63,105,250,163,190,77,166,114,61,15,236,82,62,79,203,233,190,176,203,44,63,251,120,88,191,178,214,116,63,56,227,127,191,126,214,120,63,42,48,96,191,142,174,55,63,24,47,2,191,230,244,134,62,243,4,53,63,174,130,122,191,252,70,106,63,36,255,79,191,176,203,44,63,24,47,2,191,105,250,163,62,52,57,242,189,159,218,181,189,119,136,149,62,138,48,247,190,90,31,39,63,149,123,75,191,194,29,103,63,126,214,120,191,56,227,127,63,137,246,123,191,136,59,109,63,238,83,84,191,43,81,50,63,166,168,8,191,124,71,178,62,169,48,23,190,77,166,114,189,230,244,134,62,79,203,233,190,112,77,33,63,69,202,70,191,145,192,99,63,92,242,118,191,231,140,127,63,189,49,125,191,188,250,111,63,251,120,88,191,142,174,55,63,121,3,15,191,121,108,192,62,185,34,53,190,152,193,242,188,248,133,112,62,130,49,220,190,65,87,27,63,66,236,65,191,42,48,96,63,178,214,116,191,31,253,126,63,2,52,126,191,251,131,114,63,91,109,92,191,164,226,60,63,37,62,21,191,50,102,206,62,15,236,82,190,243,4,53,63,189,49,125,191,178,214,116,63,194,29,103,191,238,83,84,63,164,226,60,191,112,77,33,63,24,47,2,191,121,108,192,62,248,133,112,190,159,218,181,61,77,166,114,61,15,236,82,190,124,71,178,62,138,48,247,190,65,87,27,63,142,174,55,191,36,255,79,63,145,192,99,191,251,131,114,63,137,246,123,191,56,227,127,63,2,52,126,191,92,242,118,63,252,70,106,191,251,120,88,63,66,236,65,191,90,31,39,63,166,168,8,191,50,102,206,62,230,244,134,190,52,57,242,61,152,193,242,60,185,34,53,190,105,250,163,62,79,203,233,190,37,62,21,63,43,81,50,191,149,123,75,63,42,48,96,191,188,250,111,63,174,130,122,191,231,140,127,63,31,253,126,191,126,214,120,63,136,59,109,191,91,109,92,63,69,202,70,191,176,203,44,63,121,3,15,191,130,49,220,62,119,136,149,190,169,48,23,62,243,4,53,63,31,253,126,191,137,246,123,63,92,242,118,191,188,250,111,63,194,29,103,191,91,109,92,63,36,255,79,191,66,236,65,63,43,81,50,191,112,77,33,63,121,3,15,191,138,48,247,62,50,102,206,190,105,250,163,62,248,133,112,190,169,48,23,62,77,166,114,189,152,193,242,188,52,57,242,61,15,236,82,190,119,136,149,62,121,108,192,190,79,203,233,62,166,168,8,191,65,87,27,63,176,203,44,191,164,226,60,63,149,123,75,191,251,120,88,63,145,192,99,191,136,59,109,63,178,214,116,191,174,130,122,63,2,52,126,191,56,227,127,63,231,140,127,191,189,49,125,63,126,214,120,191,251,131,114,63,252,70,106,191,42,48,96,63,238,83,84,191,69,202,70,63,142,174,55,191,90,31,39,63,37,62,21,191,24,47,2,63,130,49,220,190,124,71,178,62,230,244,134,190,185,34,53,62,159,218,181,189,243,4,53,63,56,227,127,191,231,140,127,63,31,253,126,191,2,52,126,63,189,49,125,191,137,246,123,63,174,130,122,191,126,214,120,63,92,242,118,191,178,214,116,63,251,131,114,191,188,250,111,63,136,59,109,191,252,70,106,63,194,29,103,191,145,192,99,63,42,48,96,191,91,109,92,63,251,120,88,191,238,83,84,63,36,255,79,191,149,123,75,63,69,202,70,191,66,236,65,63,164,226,60,191,142,174,55,63,43,81,50,191,176,203,44,63,90,31,39,191,112,77,33,63,65,87,27,191,37,62,21,63,121,3,15,191,166,168,8,63,24,47,2,191,138,48,247,62,79,203,233,190,130,49,220,62,50,102,206,190,121,108,192,62,124,71,178,190,105,250,163,62,119,136,149,190,230,244,134,62,248,133,112,190,15,236,82,62,185,34,53,190,169,48,23,62,52,57,242,189,159,218,181,61,77,166,114,189,152,193,242,60,243,4,53,63,70,228,127,63,32,145,127,63,158,6,127,63,222,68,126,63,12,76,125,63,92,28,124,63,17,182,122,63,120,25,121,63,234,70,119,63,205,62,117,63,145,1,115,63,178,143,112,63,184,233,109,63,54,16,107,63,202,3,104,63,28,197,100,63,225,84,97,63,215,179,93,63,200,226,89,63,135,226,85,63,243,179,81,63,242,87,77,63,119,207,72,63,125,27,68,63,9,61,63,63,41,53,58,63,243,4,53,63,136,173,47,63,16,48,42,63,187,141,36,63,193,199,30,63,99,223,24,63,232,213,18,63,159,172,12,63,221,100,6,63,0,0,0,63,210,254,242,62,2,201,229,62,108,97,216,62,248,202,202,62,151,8,189,62,68,29,175,62,3,12,161,62,224,215,146,62,238,131,132,62,145,38,108,62,32,18,79,62,212,208,49,62,4,105,20,62,31,194,237,61,182,126,178,61,70,41,110,61,19,67,238,60,243,4,53,63,158,6,127,63,92,28,124,63,234,70,119,63,178,143,112,63,202,3,104,63,215,179,93,63,243,179,81,63,125,27,68,63,243,4,53,63,187,141,36,63,232,213,18,63,0,0,0,63,108,97,216,62,68,29,175,62,238,131,132,62,212,208,49,62,182,126,178,61,50,49,141,36,182,126,178,189,212,208,49,190,238,131,132,190,68,29,175,190,108,97,216,190,0,0,0,191,232,213,18,191,187,141,36,191,243,4,53,191,125,27,68,191,243,179,81,191,215,179,93,191,202,3,104,191,178,143,112,191,234,70,119,191,92,28,124,191,158,6,127,191,0,0,128,191,158,6,127,191,92,28,124,191,234,70,119,191,178,143,112,191,202,3,104,191,215,179,93,191,243,179,81,191,125,27,68,191,243,4,53,191,187,141,36,191,232,213,18,191,0,0,0,191,108,97,216,190,68,29,175,190,238,131,132,190,212,208,49,190,182,126,178,189,243,4,53,63,12,76,125,63,205,62,117,63,202,3,104,63,135,226,85,63,9,61,63,63,187,141,36,63,221,100,6,63,248,202,202,62,238,131,132,62,31,194,237,61,19,67,238,188,212,208,49,190,3,12,161,190,2,201,229,190,232,213,18,191,136,173,47,191,119,207,72,191,215,179,93,191,184,233,109,191,120,25,121,191,158,6,127,191,32,145,127,191,17,182,122,191,178,143,112,191,225,84,97,191,242,87,77,191,243,4,53,191,99,223,24,191,210,254,242,190,68,29,175,190,32,18,79,190,70,41,110,189,182,126,178,61,145,38,108,62,151,8,189,62,0,0,0,63,193,199,30,63,41,53,58,63,243,179,81,63,28,197,100,63,145,1,115,63,92,28,124,63,70,228,127,63,222,68,126,63,234,70,119,63,54,16,107,63,200,226,89,63,125,27,68,63,16,48,42,63,159,172,12,63,108,97,216,62,224,215,146,62,4,105,20,62,243,4,53,63,17,182,122,63,54,16,107,63,243,179,81,63,136,173,47,63,221,100,6,63,68,29,175,62,4,105,20,62,70,41,110,189,238,131,132,190,2,201,229,190,193,199,30,191,125,27,68,191,225,84,97,191,205,62,117,191,158,6,127,191,222,68,126,191,145,1,115,191,215,179,93,191,9,61,63,191,99,223,24,191,108,97,216,190,145,38,108,190,19,67,238,188,212,208,49,62,151,8,189,62,159,172,12,63,243,4,53,63,135,226,85,63,184,233,109,63,92,28,124,63,70,228,127,63,120,25,121,63,202,3,104,63,242,87,77,63,16,48,42,63,0,0,0,63,3,12,161,62,31,194,237,61,182,126,178,189,224,215,146,190,210,254,242,190,187,141,36,191,119,207,72,191,28,197,100,191,234,70,119,191,32,145,127,191,12,76,125,191,178,143,112,191,200,226,89,191,41,53,58,191,232,213,18,191,248,202,202,190,32,18,79,190,243,4,53,63,234,70,119,63,215,179,93,63,243,4,53,63,0,0,0,63,238,131,132,62,50,49,141,36,238,131,132,190,0,0,0,191,243,4,53,191,215,179,93,191,234,70,119,191,0,0,128,191,234,70,119,191,215,179,93,191,243,4,53,191,0,0,0,191,238,131,132,190,202,201,83,165,238,131,132,62,0,0,0,63,243,4,53,63,215,179,93,63,234,70,119,63,0,0,128,63,234,70,119,63,215,179,93,63,243,4,53,63,0,0,0,63,238,131,132,62,95,31,172,38,238,131,132,190,0,0,0,191,243,4,53,191,215,179,93,191,234,70,119,191,0,0,128,191,234,70,119,191,215,179,93,191,243,4,53,191,0,0,0,191,238,131,132,190,23,22,247,165,238,131,132,62,0,0,0,63,243,4,53,63,215,179,93,63,234,70,119,63,0,0,128,63,234,70,119,63,215,179,93,63,243,4,53,63,0,0,0,63,238,131,132,62,243,4,53,63,145,1,115,63,242,87,77,63,232,213,18,63,224,215,146,62,19,67,238,188,68,29,175,190,193,199,30,191,135,226,85,191,234,70,119,191,32,145,127,191,184,233,109,191,125,27,68,191,221,100,6,191,145,38,108,190,182,126,178,61,248,202,202,62,16,48,42,63,215,179,93,63,17,182,122,63,222,68,126,63,202,3,104,63,41,53,58,63,210,254,242,62,212,208,49,62,4,105,20,190,2,201,229,190,243,4,53,191,28,197,100,191,12,76,125,191,92,28,124,191,225,84,97,191,136,173,47,191,108,97,216,190,31,194,237,189,32,18,79,62,0,0,0,63,9,61,63,63,54,16,107,63,158,6,127,63,120,25,121,63,200,226,89,63,187,141,36,63,151,8,189,62,70,41,110,61,238,131,132,190,159,172,12,191,119,207,72,191,178,143,112,191,70,228,127,191,205,62,117,191,243,179,81,191,99,223,24,191,3,12,161,190,243,4,53,63,184,233,109,63,41,53,58,63,108,97,216,62,70,41,110,61,3,12,161,190,187,141,36,191,225,84,97,191,222,68,126,191,234,70,119,191,242,87,77,191,221,100,6,191,212,208,49,190,32,18,79,62,159,172,12,63,243,179,81,63,120,25,121,63,12,76,125,63,215,179,93,63,193,199,30,63,224,215,146,62,182,126,178,189,2,201,229,190,9,61,63,191,178,143,112,191,70,228,127,191,54,16,107,191,243,4,53,191,248,202,202,190,19,67,238,188,68,29,175,62,16,48,42,63,28,197,100,63,158,6,127,63,205,62,117,63,119,207,72,63,0,0,0,63,4,105,20,62,145,38,108,190,232,213,18,191,135,226,85,191,17,182,122,191,92,28,124,191,200,226,89,191,99,223,24,191,238,131,132,190,31,194,237,61,210,254,242,62,125,27,68,63,145,1,115,63,32,145,127,63,202,3,104,63,136,173,47,63,151,8,189,62,243,4,53,63,202,3,104,63,187,141,36,63,238,131,132,62,212,208,49,190,232,213,18,191,215,179,93,191,158,6,127,191,178,143,112,191,243,4,53,191,68,29,175,190,182,126,178,61,0,0,0,63,243,179,81,63,92,28,124,63,234,70,119,63,125,27,68,63,108,97,216,62,126,125,176,37,108,97,216,190,125,27,68,191,234,70,119,191,92,28,124,191,243,179,81,191,0,0,0,191,182,126,178,189,68,29,175,62,243,4,53,63,178,143,112,63,158,6,127,63,215,179,93,63,232,213,18,63,212,208,49,62,238,131,132,190,187,141,36,191,202,3,104,191,0,0,128,191,202,3,104,191,187,141,36,191,238,131,132,190,212,208,49,62,232,213,18,63,215,179,93,63,158,6,127,63,178,143,112,63,243,4,53,63,68,29,175,62,182,126,178,189,0,0,0,191,243,179,81,191,92,28,124,191,234,70,119,191,125,27,68,191,108,97,216,190,243,4,53,63,225,84,97,63,159,172,12,63,182,126,178,61,248,202,202,190,119,207,72,191,92,28,124,191,145,1,115,191,136,173,47,191,238,131,132,190,145,38,108,62,16,48,42,63,178,143,112,63,12,76,125,63,242,87,77,63,108,97,216,62,70,41,110,189,221,100,6,191,215,179,93,191,70,228,127,191,28,197,100,191,232,213,18,191,31,194,237,189,151,8,189,62,125,27,68,63,17,182,122,63,205,62,117,63,243,4,53,63,224,215,146,62,32,18,79,190,187,141,36,191,184,233,109,191,222,68,126,191,243,179,81,191,2,201,229,190,19,67,238,60,0,0,0,63,200,226,89,63,32,145,127,63,202,3,104,63,99,223,24,63,4,105,20,62,68,29,175,190,9,61,63,191,120,25,121,191,234,70,119,191,41,53,58,191,3,12,161,190,212,208,49,62,193,199,30,63,54,16,107,63,158,6,127,63,135,226,85,63,210,254,242,62,243,4,53,63,200,226,89,63,2,201,229,62,182,126,178,189,99,223,24,191,184,233,109,191,92,28,124,191,9,61,63,191,224,215,146,190,238,131,132,62,41,53,58,63,17,182,122,63,178,143,112,63,193,199,30,63,31,194,237,61,108,97,216,190,135,226,85,191,70,228,127,191,215,179,93,191,210,254,242,190,70,41,110,61,232,213,18,63,54,16,107,63,12,76,125,63,125,27,68,63,3,12,161,62,145,38,108,190,243,4,53,191,120,25,121,191,145,1,115,191,187,141,36,191,4,105,20,190,248,202,202,62,243,179,81,63,32,145,127,63,225,84,97,63,0,0,0,63,19,67,238,188,159,172,12,191,202,3,104,191,222,68,126,191,119,207,72,191,68,29,175,190,32,18,79,62,136,173,47,63,234,70,119,63,205,62,117,63,16,48,42,63,212,208,49,62,151,8,189,190,242,87,77,191,158,6,127,191,28,197,100,191,221,100,6,191,243,4,53,63,243,179,81,63,68,29,175,62,238,131,132,190,125,27,68,191,158,6,127,191,215,179,93,191,108,97,216,190,212,208,49,62,243,4,53,63,92,28,124,63,202,3,104,63,0,0,0,63,182,126,178,189,187,141,36,191,234,70,119,191,178,143,112,191,232,213,18,191,23,22,247,165,232,213,18,63,178,143,112,63,234,70,119,63,187,141,36,63,182,126,178,61,0,0,0,191,202,3,104,191,92,28,124,191,243,4,53,191,212,208,49,190,108,97,216,62,215,179,93,63,158,6,127,63,125,27,68,63,238,131,132,62,68,29,175,190,243,179,81,191,0,0,128,191,243,179,81,191,68,29,175,190,238,131,132,62,125,27,68,63,158,6,127,63,215,179,93,63,108,97,216,62,212,208,49,190,243,4,53,191,92,28,124,191,202,3,104,191,0,0,0,191,182,126,178,61,187,141,36,63,234,70,119,63,178,143,112,63,232,213,18,63,243,4,53,63,119,207,72,63,145,38,108,62,108,97,216,190,28,197,100,191,17,182,122,191,187,141,36,191,19,67,238,188,99,223,24,63,234,70,119,63,54,16,107,63,210,254,242,62,212,208,49,190,9,61,63,191,32,145,127,191,243,179,81,191,224,215,146,190,151,8,189,62,215,179,93,63,12,76,125,63,136,173,47,63,182,126,178,61,159,172,12,191,145,1,115,191,178,143,112,191,221,100,6,191,31,194,237,61,243,4,53,63,222,68,126,63,200,226,89,63,68,29,175,62,3,12,161,190,135,226,85,191,158,6,127,191,41,53,58,191,4,105,20,190,0,0,0,63,184,233,109,63,205,62,117,63,232,213,18,63,70,41,110,189,16,48,42,191,92,28,124,191,225,84,97,191,248,202,202,190,238,131,132,62,242,87,77,63,70,228,127,63,125,27,68,63,32,18,79,62,2,201,229,190,202,3,104,191,120,25,121,191,193,199,30,191,243,4,53,63,9,61,63,63,31,194,237,61,232,213,18,191,120,25,121,191,225,84,97,191,68,29,175,190,151,8,189,62,28,197,100,63,234,70,119,63,159,172,12,63,4,105,20,190,125,27,68,191,70,228,127,191,41,53,58,191,182,126,178,189,99,223,24,63,17,182,122,63,215,179,93,63,3,12,161,62,248,202,202,190,202,3,104,191,205,62,117,191,221,100,6,191,212,208,49,62,119,207,72,63,32,145,127,63,243,4,53,63,70,41,110,61,193,199,30,191,92,28,124,191,200,226,89,191,224,215,146,190,108,97,216,62,54,16,107,63,145,1,115,63,0,0,0,63,32,18,79,190,242,87,77,191,158,6,127,191,136,173,47,191,19,67,238,188,187,141,36,63,12,76,125,63,135,226,85,63,238,131,132,62,2,201,229,190,184,233,109,191,178,143,112,191,210,254,242,190,145,38,108,62,243,179,81,63,222,68,126,63,16,48,42,63,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,8,72,141,166,243,4,53,191,0,0,128,191,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,63,243,4,53,63,119,247,83,166,243,4,53,191,0,0,128,191,243,4,53,191,53,213,83,167,243,4,53,63,0,0,128,63,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,191,243,4,53,191,92,123,101,167,243,4,53,63,0,0,128,63,243,4,53,63,138,140,141,165,243,4,53,191,0,0,128,191,243,4,53,191,243,4,53,63,16,48,42,63,31,194,237,189,243,179,81,191,120,25,121,191,210,254,242,190,68,29,175,62,184,233,109,63,28,197,100,63,238,131,132,62,159,172,12,191,12,76,125,191,125,27,68,191,19,67,238,188,41,53,58,63,158,6,127,63,99,223,24,63,32,18,79,190,215,179,93,191,145,1,115,191,248,202,202,190,108,97,216,62,205,62,117,63,200,226,89,63,212,208,49,62,193,199,30,191,32,145,127,191,243,4,53,191,70,41,110,61,119,207,72,63,92,28,124,63,221,100,6,63,224,215,146,190,202,3,104,191,54,16,107,191,3,12,161,190,0,0,0,63,17,182,122,63,242,87,77,63,182,126,178,61,136,173,47,191,70,228,127,191,187,141,36,191,4,105,20,62,135,226,85,63,234,70,119,63,2,201,229,62,151,8,189,190,178,143,112,191,225,84,97,191,145,38,108,190,232,213,18,63,222,68,126,63,9,61,63,63,243,4,53,63,193,199,30,63,145,38,108,190,202,3,104,191,28,197,100,191,32,18,79,190,187,141,36,63,70,228,127,63,99,223,24,63,238,131,132,190,54,16,107,191,225,84,97,191,212,208,49,190,16,48,42,63,32,145,127,63,232,213,18,63,224,215,146,190,184,233,109,191,215,179,93,191,4,105,20,190,136,173,47,63,158,6,127,63,159,172,12,63,3,12,161,190,178,143,112,191,200,226,89,191,31,194,237,189,243,4,53,63,222,68,126,63,221,100,6,63,68,29,175,190,145,1,115,191,135,226,85,191,182,126,178,189,41,53,58,63,12,76,125,63,0,0,0,63,151,8,189,190,205,62,117,191,243,179,81,191,70,41,110,189,9,61,63,63,92,28,124,63,210,254,242,62,248,202,202,190,234,70,119,191,242,87,77,191,19,67,238,188,125,27,68,63,17,182,122,63,2,201,229,62,108,97,216,190,120,25,121,191,119,207,72,191,243,4,53,63,232,213,18,63,68,29,175,190,234,70,119,191,125,27,68,191,182,126,178,61,215,179,93,63,202,3,104,63,212,208,49,62,243,4,53,191,92,28,124,191,108,97,216,190,0,0,0,63,158,6,127,63,187,141,36,63,238,131,132,190,178,143,112,191,243,179,81,191,46,238,158,38,243,179,81,63,178,143,112,63,238,131,132,62,187,141,36,191,158,6,127,191,0,0,0,191,108,97,216,62,92,28,124,63,243,4,53,63,212,208,49,190,202,3,104,191,215,179,93,191,182,126,178,189,125,27,68,63,234,70,119,63,68,29,175,62,232,213,18,191,0,0,128,191,232,213,18,191,68,29,175,62,234,70,119,63,125,27,68,63,182,126,178,189,215,179,93,191,202,3,104,191,212,208,49,190,243,4,53,63,92,28,124,63,108,97,216,62,0,0,0,191,158,6,127,191,187,141,36,191,238,131,132,62,178,143,112,63,243,179,81,63,243,4,53,63,221,100,6,63,2,201,229,190,158,6,127,191,99,223,24,191,151,8,189,62,92,28,124,63,16,48,42,63,224,215,146,190,234,70,119,191,41,53,58,191,32,18,79,62,178,143,112,63,119,207,72,63,31,194,237,189,202,3,104,191,135,226,85,191,19,67,238,60,215,179,93,63,225,84,97,63,70,41,110,61,243,179,81,191,54,16,107,191,4,105,20,190,125,27,68,63,145,1,115,63,145,38,108,62,243,4,53,191,120,25,121,191,3,12,161,190,187,141,36,63,12,76,125,63,248,202,202,62,232,213,18,191,32,145,127,191,210,254,242,190,0,0,0,63,70,228,127,63,159,172,12,63,108,97,216,190,222,68,126,191,193,199,30,191,68,29,175,62,17,182,122,63,136,173,47,63,238,131,132,190,205,62,117,191,9,61,63,191,212,208,49,62,184,233,109,63,242,87,77,63,182,126,178,189,28,197,100,191,200,226,89,191,243,4,53,63,210,254,242,62,159,172,12,191,158,6,127,191,248,202,202,190,193,199,30,63,92,28,124,63,3,12,161,62,136,173,47,191,234,70,119,191,145,38,108,190,9,61,63,63,178,143,112,63,4,105,20,62,242,87,77,191,202,3,104,191,70,41,110,189,200,226,89,63,215,179,93,63,19,67,238,188,28,197,100,191,243,179,81,191,31,194,237,61,184,233,109,63,125,27,68,63,32,18,79,190,205,62,117,191,243,4,53,191,224,215,146,62,17,182,122,63,187,141,36,63,151,8,189,190,222,68,126,191,232,213,18,191,2,201,229,62,70,228,127,63,0,0,0,63,221,100,6,191,32,145,127,191,108,97,216,190,99,223,24,63,12,76,125,63,68,29,175,62,16,48,42,191,120,25,121,191,238,131,132,190,41,53,58,63,145,1,115,63,212,208,49,62,119,207,72,191,54,16,107,191,182,126,178,189,135,226,85,63,225,84,97,63,243,4,53,63,108,97,216,62,187,141,36,191,234,70,119,191,212,208,49,190,243,179,81,63,215,179,93,63,182,126,178,189,178,143,112,191,243,4,53,191,68,29,175,62,158,6,127,63,0,0,0,63,232,213,18,191,92,28,124,191,238,131,132,190,125,27,68,63,202,3,104,63,8,72,141,166,202,3,104,191,125,27,68,191,238,131,132,62,92,28,124,63,232,213,18,63,0,0,0,191,158,6,127,191,68,29,175,190,243,4,53,63,178,143,112,63,182,126,178,61,215,179,93,191,243,179,81,191,212,208,49,62,234,70,119,63,187,141,36,63,108,97,216,190,0,0,128,191,108,97,216,190,187,141,36,63,234,70,119,63,212,208,49,62,243,179,81,191,215,179,93,191,182,126,178,61,178,143,112,63,243,4,53,63,68,29,175,190,158,6,127,191,0,0,0,191,232,213,18,63,92,28,124,63,238,131,132,62,125,27,68,191,202,3,104,191,243,4,53,63,151,8,189,62,41,53,58,191,202,3,104,191,70,41,110,61,145,1,115,63,187,141,36,63,210,254,242,190,222,68,126,191,238,131,132,190,242,87,77,63,200,226,89,63,212,208,49,190,17,182,122,191,159,172,12,191,232,213,18,63,120,25,121,63,4,105,20,62,215,179,93,191,119,207,72,191,224,215,146,62,158,6,127,63,2,201,229,62,16,48,42,191,178,143,112,191,19,67,238,188,54,16,107,63,243,4,53,63,248,202,202,190,70,228,127,191,68,29,175,190,9,61,63,63,28,197,100,63,182,126,178,189,205,62,117,191,193,199,30,191,0,0,0,63,12,76,125,63,145,38,108,62,243,179,81,191,135,226,85,191,32,18,79,62,92,28,124,63,221,100,6,63,99,223,24,191,234,70,119,191,31,194,237,189,225,84,97,63,125,27,68,63,3,12,161,190,32,145,127,191,108,97,216,190,136,173,47,63,184,233,109,63,243,4,53,63,3,12,161,62,242,87,77,191,243,179,81,191,224,215,146,62,70,228,127,63,68,29,175,62,119,207,72,191,135,226,85,191,238,131,132,62,32,145,127,63,151,8,189,62,125,27,68,191,200,226,89,191,145,38,108,62,158,6,127,63,248,202,202,62,9,61,63,191,215,179,93,191,32,18,79,62,222,68,126,63,108,97,216,62,41,53,58,191,225,84,97,191,212,208,49,62,12,76,125,63,2,201,229,62,243,4,53,191,28,197,100,191,4,105,20,62,92,28,124,63,210,254,242,62,136,173,47,191,202,3,104,191,31,194,237,61,17,182,122,63,0,0,0,63,16,48,42,191,54,16,107,191,182,126,178,61,120,25,121,63,221,100,6,63,187,141,36,191,184,233,109,191,70,41,110,61,234,70,119,63,159,172,12,63,193,199,30,191,178,143,112,191,19,67,238,60,205,62,117,63,232,213,18,63,99,223,24,191,145,1,115,191,243,4,53,63,238,131,132,62,215,179,93,191,243,4,53,191,0,0,0,63,234,70,119,63,126,125,176,37,234,70,119,191,0,0,0,191,243,4,53,63,215,179,93,63,238,131,132,190,0,0,128,191,238,131,132,190,215,179,93,63,243,4,53,63,0,0,0,191,234,70,119,191,195,67,119,38,234,70,119,63,0,0,0,63,243,4,53,191,215,179,93,191,238,131,132,62,0,0,128,63,238,131,132,62,215,179,93,191,243,4,53,191,0,0,0,63,234,70,119,63,138,140,141,165,234,70,119,191,0,0,0,191,243,4,53,63,215,179,93,63,238,131,132,190,0,0,128,191,238,131,132,190,215,179,93,63,243,4,53,63,0,0,0,191,234,70,119,191,50,146,101,39,234,70,119,63,0,0,0,63,243,4,53,191,215,179,93,191,238,131,132,62,0,0,128,63,238,131,132,62,215,179,93,191,243,4,53,191,0,0,0,63,234,70,119,63,243,4,53,63,32,18,79,62,54,16,107,191,232,213,18,191,136,173,47,63,200,226,89,63,68,29,175,190,12,76,125,191,70,41,110,189,234,70,119,63,2,201,229,62,119,207,72,191,125,27,68,191,210,254,242,62,205,62,117,63,182,126,178,189,222,68,126,191,3,12,161,190,215,179,93,63,16,48,42,63,99,223,24,191,202,3,104,191,145,38,108,62,70,228,127,63,212,208,49,62,184,233,109,191,159,172,12,191,243,4,53,63,135,226,85,63,151,8,189,190,92,28,124,191,19,67,238,188,120,25,121,63,108,97,216,62,242,87,77,191,9,61,63,191,0,0,0,63,145,1,115,63,31,194,237,189,158,6,127,191,224,215,146,190,225,84,97,63,187,141,36,63,193,199,30,191,28,197,100,191,238,131,132,62,32,145,127,63,4,105,20,62,178,143,112,191,221,100,6,191,41,53,58,63,243,179,81,63,248,202,202,190,17,182,122,191,243,4,53,63,4,105,20,62,205,62,117,191,108,97,216,190,135,226,85,63,16,48,42,63,187,141,36,191,200,226,89,191,248,202,202,62,234,70,119,63,31,194,237,189,70,228,127,191,212,208,49,190,145,1,115,63,2,201,229,62,243,179,81,191,136,173,47,191,193,199,30,63,215,179,93,63,151,8,189,190,120,25,121,191,182,126,178,61,32,145,127,63,32,18,79,62,178,143,112,191,210,254,242,190,242,87,77,63,243,4,53,63,99,223,24,191,225,84,97,191,68,29,175,62,17,182,122,63,70,41,110,189,158,6,127,191,145,38,108,190,184,233,109,63,0,0,0,63,119,207,72,191,41,53,58,191,232,213,18,63,28,197,100,63,3,12,161,190,92,28,124,191,19,67,238,60,222,68,126,63,238,131,132,62,54,16,107,191,221,100,6,191,125,27,68,63,9,61,63,63,159,172,12,191,202,3,104,191,224,215,146,62,12,76,125,63,243,4,53,63,182,126,178,61,92,28,124,191,238,131,132,190,178,143,112,63,108,97,216,62,215,179,93,191,232,213,18,191,125,27,68,63,243,4,53,63,187,141,36,191,243,179,81,191,0,0,0,63,202,3,104,63,68,29,175,190,234,70,119,191,212,208,49,62,158,6,127,63,34,2,75,39,158,6,127,191,212,208,49,190,234,70,119,63,68,29,175,62,202,3,104,191,0,0,0,191,243,179,81,63,187,141,36,63,243,4,53,191,125,27,68,191,232,213,18,63,215,179,93,63,108,97,216,190,178,143,112,191,238,131,132,62,92,28,124,63,182,126,178,189,0,0,128,191,182,126,178,189,92,28,124,63,238,131,132,62,178,143,112,191,108,97,216,190,215,179,93,63,232,213,18,63,125,27,68,191,243,4,53,191,187,141,36,63,243,179,81,63,0,0,0,191,202,3,104,191,68,29,175,62,234,70,119,63,212,208,49,190,158,6,127,191,243,4,53,63,19,67,238,60,32,145,127,191,182,126,178,189,222,68,126,63,4,105,20,62,92,28,124,191,32,18,79,190,120,25,121,63,238,131,132,62,205,62,117,191,3,12,161,190,178,143,112,63,151,8,189,62,54,16,107,191,108,97,216,190,28,197,100,63,210,254,242,62,215,179,93,191,221,100,6,191,135,226,85,63,232,213,18,63,242,87,77,191,193,199,30,191,125,27,68,63,16,48,42,63,41,53,58,191,243,4,53,191,136,173,47,63,9,61,63,63,187,141,36,191,119,207,72,191,99,223,24,63,243,179,81,63,159,172,12,191,200,226,89,191,0,0,0,63,225,84,97,63,2,201,229,190,202,3,104,191,248,202,202,62,184,233,109,63,68,29,175,190,145,1,115,191,224,215,146,62,234,70,119,63,145,38,108,190,17,182,122,191,212,208,49,62,12,76,125,63,31,194,237,189,158,6,127,191,70,41,110,61,70,228,127,63,243,4,53,63,19,67,238,188,32,145,127,191,182,126,178,61,222,68,126,63,4,105,20,190,92,28,124,191,32,18,79,62,120,25,121,63,238,131,132,190,205,62,117,191,3,12,161,62,178,143,112,63,151,8,189,190,54,16,107,191,108,97,216,62,28,197,100,63,210,254,242,190,215,179,93,191,221,100,6,63,135,226,85,63,232,213,18,191,242,87,77,191,193,199,30,63,125,27,68,63,16,48,42,191,41,53,58,191,243,4,53,63,136,173,47,63,9,61,63,191,187,141,36,191,119,207,72,63,99,223,24,63,243,179,81,191,159,172,12,191,200,226,89,63,0,0,0,63,225,84,97,191,2,201,229,190,202,3,104,63,248,202,202,62,184,233,109,191,68,29,175,190,145,1,115,63,224,215,146,62,234,70,119,191,145,38,108,190,17,182,122,63,212,208,49,62,12,76,125,191,31,194,237,189,158,6,127,63,70,41,110,61,70,228,127,191,243,4,53,63,182,126,178,189,92,28,124,191,238,131,132,62,178,143,112,63,108,97,216,190,215,179,93,191,232,213,18,63,125,27,68,63,243,4,53,191,187,141,36,191,243,179,81,63,0,0,0,63,202,3,104,191,68,29,175,190,234,70,119,63,212,208,49,62,158,6,127,191,42,171,48,38,158,6,127,63,212,208,49,190,234,70,119,191,68,29,175,62,202,3,104,63,0,0,0,191,243,179,81,191,187,141,36,63,243,4,53,63,125,27,68,191,232,213,18,191,215,179,93,63,108,97,216,62,178,143,112,191,238,131,132,190,92,28,124,63,182,126,178,61,0,0,128,191,182,126,178,61,92,28,124,63,238,131,132,190,178,143,112,191,108,97,216,62,215,179,93,63,232,213,18,191,125,27,68,191,243,4,53,63,187,141,36,63,243,179,81,191,0,0,0,191,202,3,104,63,68,29,175,62,234,70,119,191,212,208,49,190,158,6,127,63,243,4,53,63,4,105,20,190,205,62,117,191,108,97,216,62,135,226,85,63,16,48,42,191,187,141,36,191,200,226,89,63,248,202,202,62,234,70,119,191,31,194,237,189,70,228,127,63,212,208,49,190,145,1,115,191,2,201,229,62,243,179,81,63,136,173,47,191,193,199,30,191,215,179,93,63,151,8,189,62,120,25,121,191,182,126,178,189,32,145,127,63,32,18,79,190,178,143,112,191,210,254,242,62,242,87,77,63,243,4,53,191,99,223,24,191,225,84,97,63,68,29,175,62,17,182,122,191,70,41,110,189,158,6,127,63,145,38,108,190,184,233,109,191,0,0,0,63,119,207,72,63,41,53,58,191,232,213,18,191,28,197,100,63,3,12,161,62,92,28,124,191,19,67,238,188,222,68,126,63,238,131,132,190,54,16,107,191,221,100,6,63,125,27,68,63,9,61,63,191,159,172,12,191,202,3,104,63,224,215,146,62,12,76,125,191,243,4,53,63,32,18,79,190,54,16,107,191,232,213,18,63,136,173,47,63,200,226,89,191,68,29,175,190,12,76,125,63,70,41,110,189,234,70,119,191,2,201,229,62,119,207,72,63,125,27,68,191,210,254,242,190,205,62,117,63,182,126,178,61,222,68,126,191,3,12,161,62,215,179,93,63,16,48,42,191,99,223,24,191,202,3,104,63,145,38,108,62,70,228,127,191,212,208,49,62,184,233,109,63,159,172,12,191,243,4,53,191,135,226,85,63,151,8,189,62,92,28,124,191,19,67,238,60,120,25,121,63,108,97,216,190,242,87,77,191,9,61,63,63,0,0,0,63,145,1,115,191,31,194,237,189,158,6,127,63,224,215,146,190,225,84,97,191,187,141,36,63,193,199,30,63,28,197,100,191,238,131,132,190,32,145,127,63,4,105,20,190,178,143,112,191,221,100,6,63,41,53,58,63,243,179,81,191,248,202,202,190,17,182,122,63,243,4,53,63,238,131,132,190,215,179,93,191,243,4,53,63,0,0,0,63,234,70,119,191,122,58,194,38,234,70,119,63,0,0,0,191,243,4,53,191,215,179,93,63,238,131,132,62,0,0,128,191,238,131,132,62,215,179,93,63,243,4,53,191,0,0,0,191,234,70,119,63,222,94,13,166,234,70,119,191,0,0,0,63,243,4,53,63,215,179,93,191,238,131,132,190,0,0,128,63,238,131,132,190,215,179,93,191,243,4,53,63,0,0,0,63,234,70,119,191,50,146,101,39,234,70,119,63,0,0,0,191,243,4,53,191,215,179,93,63,238,131,132,62,0,0,128,191,238,131,132,62,215,179,93,63,243,4,53,191,0,0,0,191,234,70,119,63,86,230,211,167,234,70,119,191,0,0,0,63,243,4,53,63,215,179,93,191,238,131,132,190,0,0,128,63,238,131,132,190,215,179,93,191,243,4,53,63,0,0,0,63,234,70,119,191,243,4,53,63,3,12,161,190,242,87,77,191,243,179,81,63,224,215,146,62,70,228,127,191,68,29,175,62,119,207,72,63,135,226,85,191,238,131,132,190,32,145,127,63,151,8,189,190,125,27,68,191,200,226,89,63,145,38,108,62,158,6,127,191,248,202,202,62,9,61,63,63,215,179,93,191,32,18,79,190,222,68,126,63,108,97,216,190,41,53,58,191,225,84,97,63,212,208,49,62,12,76,125,191,2,201,229,62,243,4,53,63,28,197,100,191,4,105,20,190,92,28,124,63,210,254,242,190,136,173,47,191,202,3,104,63,31,194,237,61,17,182,122,191,0,0,0,63,16,48,42,63,54,16,107,191,182,126,178,189,120,25,121,63,221,100,6,191,187,141,36,191,184,233,109,63,70,41,110,61,234,70,119,191,159,172,12,63,193,199,30,63,178,143,112,191,19,67,238,188,205,62,117,63,232,213,18,191,99,223,24,191,145,1,115,63,243,4,53,63,151,8,189,190,41,53,58,191,202,3,104,63,70,41,110,61,145,1,115,191,187,141,36,63,210,254,242,62,222,68,126,191,238,131,132,62,242,87,77,63,200,226,89,191,212,208,49,190,17,182,122,63,159,172,12,191,232,213,18,191,120,25,121,63,4,105,20,190,215,179,93,191,119,207,72,63,224,215,146,62,158,6,127,191,2,201,229,62,16,48,42,63,178,143,112,191,19,67,238,60,54,16,107,63,243,4,53,191,248,202,202,190,70,228,127,63,68,29,175,190,9,61,63,191,28,197,100,63,182,126,178,61,205,62,117,191,193,199,30,63,0,0,0,63,12,76,125,191,145,38,108,62,243,179,81,63,135,226,85,191,32,18,79,190,92,28,124,63,221,100,6,191,99,223,24,191,234,70,119,63,31,194,237,189,225,84,97,191,125,27,68,63,3,12,161,62,32,145,127,191,108,97,216,62,136,173,47,63,184,233,109,191,243,4,53,63,108,97,216,190,187,141,36,191,234,70,119,63,212,208,49,190,243,179,81,191,215,179,93,63,182,126,178,61,178,143,112,191,243,4,53,63,68,29,175,62,158,6,127,191,0,0,0,63,232,213,18,63,92,28,124,191,238,131,132,62,125,27,68,63,202,3,104,191,92,123,101,167,202,3,104,63,125,27,68,191,238,131,132,190,92,28,124,63,232,213,18,191,0,0,0,191,158,6,127,63,68,29,175,190,243,4,53,191,178,143,112,63,182,126,178,189,215,179,93,191,243,179,81,63,212,208,49,62,234,70,119,191,187,141,36,63,108,97,216,62,0,0,128,191,108,97,216,62,187,141,36,63,234,70,119,191,212,208,49,62,243,179,81,63,215,179,93,191,182,126,178,189,178,143,112,63,243,4,53,191,68,29,175,190,158,6,127,63,0,0,0,191,232,213,18,191,92,28,124,63,238,131,132,190,125,27,68,191,202,3,104,63,243,4,53,63,210,254,242,190,159,172,12,191,158,6,127,63,248,202,202,190,193,199,30,191,92,28,124,63,3,12,161,190,136,173,47,191,234,70,119,63,145,38,108,190,9,61,63,191,178,143,112,63,4,105,20,190,242,87,77,191,202,3,104,63,70,41,110,189,200,226,89,191,215,179,93,63,19,67,238,60,28,197,100,191,243,179,81,63,31,194,237,61,184,233,109,191,125,27,68,63,32,18,79,62,205,62,117,191,243,4,53,63,224,215,146,62,17,182,122,191,187,141,36,63,151,8,189,62,222,68,126,191,232,213,18,63,2,201,229,62,70,228,127,191,0,0,0,63,221,100,6,63,32,145,127,191,108,97,216,62,99,223,24,63,12,76,125,191,68,29,175,62,16,48,42,63,120,25,121,191,238,131,132,62,41,53,58,63,145,1,115,191,212,208,49,62,119,207,72,63,54,16,107,191,182,126,178,61,135,226,85,63,225,84,97,191,243,4,53,63,221,100,6,191,2,201,229,190,158,6,127,63,99,223,24,191,151,8,189,190,92,28,124,63,16,48,42,191,224,215,146,190,234,70,119,63,41,53,58,191,32,18,79,190,178,143,112,63,119,207,72,191,31,194,237,189,202,3,104,63,135,226,85,191,19,67,238,188,215,179,93,63,225,84,97,191,70,41,110,61,243,179,81,63,54,16,107,191,4,105,20,62,125,27,68,63,145,1,115,191,145,38,108,62,243,4,53,63,120,25,121,191,3,12,161,62,187,141,36,63,12,76,125,191,248,202,202,62,232,213,18,63,32,145,127,191,210,254,242,62,0,0,0,63,70,228,127,191,159,172,12,63,108,97,216,62,222,68,126,191,193,199,30,63,68,29,175,62,17,182,122,191,136,173,47,63,238,131,132,62,205,62,117,191,9,61,63,63,212,208,49,62,184,233,109,191,242,87,77,63,182,126,178,61,28,197,100,191,200,226,89,63,243,4,53,63,232,213,18,191,68,29,175,190,234,70,119,63,125,27,68,191,182,126,178,189,215,179,93,63,202,3,104,191,212,208,49,62,243,4,53,63,92,28,124,191,108,97,216,62,0,0,0,63,158,6,127,191,187,141,36,63,238,131,132,62,178,143,112,191,243,179,81,63,55,39,247,39,243,179,81,191,178,143,112,63,238,131,132,190,187,141,36,191,158,6,127,63,0,0,0,191,108,97,216,190,92,28,124,63,243,4,53,191,212,208,49,190,202,3,104,63,215,179,93,191,182,126,178,61,125,27,68,63,234,70,119,191,68,29,175,62,232,213,18,63,0,0,128,191,232,213,18,63,68,29,175,62,234,70,119,191,125,27,68,63,182,126,178,61,215,179,93,191,202,3,104,63,212,208,49,190,243,4,53,191,92,28,124,63,108,97,216,190,0,0,0,191,158,6,127,63,187,141,36,191,238,131,132,190,178,143,112,63,243,179,81,191,243,4,53,63,193,199,30,191,145,38,108,190,202,3,104,63,28,197,100,191,32,18,79,62,187,141,36,63,70,228,127,191,99,223,24,63,238,131,132,62,54,16,107,191,225,84,97,63,212,208,49,190,16,48,42,191,32,145,127,63,232,213,18,191,224,215,146,190,184,233,109,63,215,179,93,191,4,105,20,62,136,173,47,63,158,6,127,191,159,172,12,63,3,12,161,62,178,143,112,191,200,226,89,63,31,194,237,189,243,4,53,191,222,68,126,63,221,100,6,191,68,29,175,190,145,1,115,63,135,226,85,191,182,126,178,61,41,53,58,63,12,76,125,191,0,0,0,63,151,8,189,62,205,62,117,191,243,179,81,63,70,41,110,189,9,61,63,191,92,28,124,63,210,254,242,190,248,202,202,190,234,70,119,63,242,87,77,191,19,67,238,60,125,27,68,63,17,182,122,191,2,201,229,62,108,97,216,62,120,25,121,191,119,207,72,63,243,4,53,63,16,48,42,191,31,194,237,189,243,179,81,63,120,25,121,191,210,254,242,62,68,29,175,62,184,233,109,191,28,197,100,63,238,131,132,190,159,172,12,191,12,76,125,63,125,27,68,191,19,67,238,60,41,53,58,63,158,6,127,191,99,223,24,63,32,18,79,62,215,179,93,191,145,1,115,63,248,202,202,190,108,97,216,190,205,62,117,63,200,226,89,191,212,208,49,62,193,199,30,63,32,145,127,191,243,4,53,63,70,41,110,61,119,207,72,191,92,28,124,63,221,100,6,191,224,215,146,190,202,3,104,63,54,16,107,191,3,12,161,62,0,0,0,63,17,182,122,191,242,87,77,63,182,126,178,189,136,173,47,191,70,228,127,63,187,141,36,191,4,105,20,190,135,226,85,63,234,70,119,191,2,201,229,62,151,8,189,62,178,143,112,191,225,84,97,63,145,38,108,190,232,213,18,191,222,68,126,63,9,61,63,191,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,250,9,150,167,243,4,53,63,0,0,128,191,243,4,53,63,91,26,141,38,243,4,53,191,0,0,128,63,243,4,53,191,52,131,176,167,243,4,53,63,0,0,128,191,243,4,53,63,232,223,30,40,243,4,53,191,0,0,128,63,243,4,53,191,77,14,212,38,243,4,53,63,0,0,128,191,243,4,53,63,19,114,48,39,243,4,53,191,0,0,128,63,243,4,53,191,166,117,229,167,243,4,53,63,0,0,128,191,243,4,53,63,243,4,53,63,9,61,63,191,31,194,237,61,232,213,18,63,120,25,121,191,225,84,97,63,68,29,175,190,151,8,189,190,28,197,100,63,234,70,119,191,159,172,12,63,4,105,20,62,125,27,68,191,70,228,127,63,41,53,58,191,182,126,178,61,99,223,24,63,17,182,122,191,215,179,93,63,3,12,161,190,248,202,202,190,202,3,104,63,205,62,117,191,221,100,6,63,212,208,49,62,119,207,72,191,32,145,127,63,243,4,53,191,70,41,110,61,193,199,30,63,92,28,124,191,200,226,89,63,224,215,146,190,108,97,216,190,54,16,107,63,145,1,115,191,0,0,0,63,32,18,79,62,242,87,77,191,158,6,127,63,136,173,47,191,19,67,238,60,187,141,36,63,12,76,125,191,135,226,85,63,238,131,132,190,2,201,229,190,184,233,109,63,178,143,112,191,210,254,242,62,145,38,108,62,243,179,81,191,222,68,126,63,16,48,42,191,243,4,53,63,119,207,72,191,145,38,108,62,108,97,216,62,28,197,100,191,17,182,122,63,187,141,36,191,19,67,238,60,99,223,24,63,234,70,119,191,54,16,107,63,210,254,242,190,212,208,49,190,9,61,63,63,32,145,127,191,243,179,81,63,224,215,146,190,151,8,189,190,215,179,93,63,12,76,125,191,136,173,47,63,182,126,178,189,159,172,12,191,145,1,115,63,178,143,112,191,221,100,6,63,31,194,237,61,243,4,53,191,222,68,126,63,200,226,89,191,68,29,175,62,3,12,161,62,135,226,85,191,158,6,127,63,41,53,58,191,4,105,20,62,0,0,0,63,184,233,109,191,205,62,117,63,232,213,18,191,70,41,110,189,16,48,42,63,92,28,124,191,225,84,97,63,248,202,202,190,238,131,132,190,242,87,77,63,70,228,127,191,125,27,68,63,32,18,79,190,2,201,229,190,202,3,104,63,120,25,121,191,193,199,30,63,243,4,53,63,243,179,81,191,68,29,175,62,238,131,132,62,125,27,68,191,158,6,127,63,215,179,93,191,108,97,216,62,212,208,49,62,243,4,53,191,92,28,124,63,202,3,104,191,0,0,0,63,182,126,178,61,187,141,36,191,234,70,119,63,178,143,112,191,232,213,18,63,219,176,54,161,232,213,18,191,178,143,112,63,234,70,119,191,187,141,36,63,182,126,178,189,0,0,0,191,202,3,104,63,92,28,124,191,243,4,53,63,212,208,49,190,108,97,216,190,215,179,93,63,158,6,127,191,125,27,68,63,238,131,132,190,68,29,175,190,243,179,81,63,0,0,128,191,243,179,81,63,68,29,175,190,238,131,132,190,125,27,68,63,158,6,127,191,215,179,93,63,108,97,216,190,212,208,49,190,243,4,53,63,92,28,124,191,202,3,104,63,0,0,0,191,182,126,178,189,187,141,36,63,234,70,119,191,178,143,112,63,232,213,18,191,243,4,53,63,200,226,89,191,2,201,229,62,182,126,178,61,99,223,24,191,184,233,109,63,92,28,124,191,9,61,63,63,224,215,146,190,238,131,132,190,41,53,58,63,17,182,122,191,178,143,112,63,193,199,30,191,31,194,237,61,108,97,216,62,135,226,85,191,70,228,127,63,215,179,93,191,210,254,242,62,70,41,110,61,232,213,18,191,54,16,107,63,12,76,125,191,125,27,68,63,3,12,161,190,145,38,108,190,243,4,53,63,120,25,121,191,145,1,115,63,187,141,36,191,4,105,20,62,248,202,202,62,243,179,81,191,32,145,127,63,225,84,97,191,0,0,0,63,19,67,238,60,159,172,12,191,202,3,104,63,222,68,126,191,119,207,72,63,68,29,175,190,32,18,79,190,136,173,47,63,234,70,119,191,205,62,117,63,16,48,42,191,212,208,49,62,151,8,189,62,242,87,77,191,158,6,127,63,28,197,100,191,221,100,6,63,243,4,53,63,225,84,97,191,159,172,12,63,182,126,178,189,248,202,202,190,119,207,72,63,92,28,124,191,145,1,115,63,136,173,47,191,238,131,132,62,145,38,108,62,16,48,42,191,178,143,112,63,12,76,125,191,242,87,77,63,108,97,216,190,70,41,110,189,221,100,6,63,215,179,93,191,70,228,127,63,28,197,100,191,232,213,18,63,31,194,237,189,151,8,189,190,125,27,68,63,17,182,122,191,205,62,117,63,243,4,53,191,224,215,146,62,32,18,79,62,187,141,36,191,184,233,109,63,222,68,126,191,243,179,81,63,2,201,229,190,19,67,238,188,0,0,0,63,200,226,89,191,32,145,127,63,202,3,104,191,99,223,24,63,4,105,20,190,68,29,175,190,9,61,63,63,120,25,121,191,234,70,119,63,41,53,58,191,3,12,161,62,212,208,49,62,193,199,30,191,54,16,107,63,158,6,127,191,135,226,85,63,210,254,242,190,243,4,53,63,202,3,104,191,187,141,36,63,238,131,132,190,212,208,49,190,232,213,18,63,215,179,93,191,158,6,127,63,178,143,112,191,243,4,53,63,68,29,175,190,182,126,178,189,0,0,0,63,243,179,81,191,92,28,124,63,234,70,119,191,125,27,68,63,108,97,216,190,212,99,132,167,108,97,216,62,125,27,68,191,234,70,119,63,92,28,124,191,243,179,81,63,0,0,0,191,182,126,178,61,68,29,175,62,243,4,53,191,178,143,112,63,158,6,127,191,215,179,93,63,232,213,18,191,212,208,49,62,238,131,132,62,187,141,36,191,202,3,104,63,0,0,128,191,202,3,104,63,187,141,36,191,238,131,132,62,212,208,49,62,232,213,18,191,215,179,93,63,158,6,127,191,178,143,112,63,243,4,53,191,68,29,175,62,182,126,178,61,0,0,0,191,243,179,81,63,92,28,124,191,234,70,119,63,125,27,68,191,108,97,216,62,243,4,53,63,184,233,109,191,41,53,58,63,108,97,216,190,70,41,110,61,3,12,161,62,187,141,36,191,225,84,97,63,222,68,126,191,234,70,119,63,242,87,77,191,221,100,6,63,212,208,49,190,32,18,79,190,159,172,12,63,243,179,81,191,120,25,121,63,12,76,125,191,215,179,93,63,193,199,30,191,224,215,146,62,182,126,178,61,2,201,229,190,9,61,63,63,178,143,112,191,70,228,127,63,54,16,107,191,243,4,53,63,248,202,202,190,19,67,238,60,68,29,175,62,16,48,42,191,28,197,100,63,158,6,127,191,205,62,117,63,119,207,72,191,0,0,0,63,4,105,20,190,145,38,108,190,232,213,18,63,135,226,85,191,17,182,122,63,92,28,124,191,200,226,89,63,99,223,24,191,238,131,132,62,31,194,237,61,210,254,242,190,125,27,68,63,145,1,115,191,32,145,127,63,202,3,104,191,136,173,47,63,151,8,189,190,243,4,53,63,145,1,115,191,242,87,77,63,232,213,18,191,224,215,146,62,19,67,238,60,68,29,175,190,193,199,30,63,135,226,85,191,234,70,119,63,32,145,127,191,184,233,109,63,125,27,68,191,221,100,6,63,145,38,108,190,182,126,178,189,248,202,202,62,16,48,42,191,215,179,93,63,17,182,122,191,222,68,126,63,202,3,104,191,41,53,58,63,210,254,242,190,212,208,49,62,4,105,20,62,2,201,229,190,243,4,53,63,28,197,100,191,12,76,125,63,92,28,124,191,225,84,97,63,136,173,47,191,108,97,216,62,31,194,237,189,32,18,79,190,0,0,0,63,9,61,63,191,54,16,107,63,158,6,127,191,120,25,121,63,200,226,89,191,187,141,36,63,151,8,189,190,70,41,110,61,238,131,132,62,159,172,12,191,119,207,72,63,178,143,112,191,70,228,127,63,205,62,117,191,243,179,81,63,99,223,24,191,3,12,161,62,243,4,53,63,234,70,119,191,215,179,93,63,243,4,53,191,0,0,0,63,238,131,132,190,233,136,48,167,238,131,132,62,0,0,0,191,243,4,53,63,215,179,93,191,234,70,119,63,0,0,128,191,234,70,119,63,215,179,93,191,243,4,53,63,0,0,0,191,238,131,132,62,175,102,4,40,238,131,132,190,0,0,0,63,243,4,53,191,215,179,93,63,234,70,119,191,0,0,128,63,234,70,119,191,215,179,93,63,243,4,53,191,0,0,0,63,238,131,132,190,35,171,92,168,238,131,132,62,0,0,0,191,243,4,53,63,215,179,93,191,234,70,119,63,0,0,128,191,234,70,119,63,215,179,93,191,243,4,53,63,0,0,0,191,238,131,132,62,204,119,154,40,238,131,132,190,0,0,0,63,243,4,53,191,215,179,93,63,234,70,119,191,0,0,128,63,234,70,119,191,215,179,93,63,243,4,53,191,0,0,0,63,238,131,132,190,243,4,53,63,17,182,122,191,54,16,107,63,243,179,81,191,136,173,47,63,221,100,6,191,68,29,175,62,4,105,20,190,70,41,110,189,238,131,132,62,2,201,229,190,193,199,30,63,125,27,68,191,225,84,97,63,205,62,117,191,158,6,127,63,222,68,126,191,145,1,115,63,215,179,93,191,9,61,63,63,99,223,24,191,108,97,216,62,145,38,108,190,19,67,238,60,212,208,49,62,151,8,189,190,159,172,12,63,243,4,53,191,135,226,85,63,184,233,109,191,92,28,124,63,70,228,127,191,120,25,121,63,202,3,104,191,242,87,77,63,16,48,42,191,0,0,0,63,3,12,161,190,31,194,237,61,182,126,178,61,224,215,146,190,210,254,242,62,187,141,36,191,119,207,72,63,28,197,100,191,234,70,119,63,32,145,127,191,12,76,125,63,178,143,112,191,200,226,89,63,41,53,58,191,232,213,18,63,248,202,202,190,32,18,79,62,243,4,53,63,12,76,125,191,205,62,117,63,202,3,104,191,135,226,85,63,9,61,63,191,187,141,36,63,221,100,6,191,248,202,202,62,238,131,132,190,31,194,237,61,19,67,238,60,212,208,49,190,3,12,161,62,2,201,229,190,232,213,18,63,136,173,47,191,119,207,72,63,215,179,93,191,184,233,109,63,120,25,121,191,158,6,127,63,32,145,127,191,17,182,122,63,178,143,112,191,225,84,97,63,242,87,77,191,243,4,53,63,99,223,24,191,210,254,242,62,68,29,175,190,32,18,79,62,70,41,110,189,182,126,178,189,145,38,108,62,151,8,189,190,0,0,0,63,193,199,30,191,41,53,58,63,243,179,81,191,28,197,100,63,145,1,115,191,92,28,124,63,70,228,127,191,222,68,126,63,234,70,119,191,54,16,107,63,200,226,89,191,125,27,68,63,16,48,42,191,159,172,12,63,108,97,216,190,224,215,146,62,4,105,20,190,243,4,53,63,158,6,127,191,92,28,124,63,234,70,119,191,178,143,112,63,202,3,104,191,215,179,93,63,243,179,81,191,125,27,68,63,243,4,53,191,187,141,36,63,232,213,18,191,0,0,0,63,108,97,216,190,68,29,175,62,238,131,132,190,212,208,49,62,182,126,178,189,231,54,141,167,182,126,178,61,212,208,49,190,238,131,132,62,68,29,175,190,108,97,216,62,0,0,0,191,232,213,18,63,187,141,36,191,243,4,53,63,125,27,68,191,243,179,81,63,215,179,93,191,202,3,104,63,178,143,112,191,234,70,119,63,92,28,124,191,158,6,127,63,0,0,128,191,158,6,127,63,92,28,124,191,234,70,119,63,178,143,112,191,202,3,104,63,215,179,93,191,243,179,81,63,125,27,68,191,243,4,53,63,187,141,36,191,232,213,18,63,0,0,0,191,108,97,216,62,68,29,175,190,238,131,132,62,212,208,49,190,182,126,178,61,243,4,53,63,70,228,127,191,32,145,127,63,158,6,127,191,222,68,126,63,12,76,125,191,92,28,124,63,17,182,122,191,120,25,121,63,234,70,119,191,205,62,117,63,145,1,115,191,178,143,112,63,184,233,109,191,54,16,107,63,202,3,104,191,28,197,100,63,225,84,97,191,215,179,93,63,200,226,89,191,135,226,85,63,243,179,81,191,242,87,77,63,119,207,72,191,125,27,68,63,9,61,63,191,41,53,58,63,243,4,53,191,136,173,47,63,16,48,42,191,187,141,36,63,193,199,30,191,99,223,24,63,232,213,18,191,159,172,12,63,221,100,6,191,0,0,0,63,210,254,242,190,2,201,229,62,108,97,216,190,248,202,202,62,151,8,189,190,68,29,175,62,3,12,161,190,224,215,146,62,238,131,132,190,145,38,108,62,32,18,79,190,212,208,49,62,4,105,20,190,31,194,237,61,182,126,178,189,70,41,110,61,19,67,238,188,243,4,53,63,70,229,127,63,30,149,127,63,153,15,127,63,210,84,126,63,240,100,125,63,38,64,124,63,177,230,122,63,216,88,121,63,240,150,119,63,85,161,117,63,113,120,115,63,182,28,113,63,164,142,110,63,194,206,107,63,164,221,104,63,231,187,101,63,50,106,98,63,55,233,94,63,177,57,91,63,100,92,87,63,32,82,83,63,189,27,79,63,27,186,74,63,37,46,70,63,206,120,65,63,17,155,60,63,243,149,55,63,128,106,50,63,204,25,45,63,244,164,39,63,27,13,34,63,107,83,28,63,24,121,22,63,90,127,16,63,112,103,10,63,160,50,4,63,107,196,251,62,5,239,238,62,187,231,225,62,71,177,212,62,105,78,199,62,238,193,185,62,171,14,172,62,122,55,158,62,64,63,144,62,232,40,130,62,197,238,103,62,77,91,75,62,95,157,46,62,251,186,17,62,84,116,233,61,243,65,175,61,245,213,105,61,97,238,233,60,243,4,53,63,153,15,127,63,38,64,124,63,240,150,119,63,182,28,113,63,164,221,104,63,55,233,94,63,32,82,83,63,37,46,70,63,243,149,55,63,244,164,39,63,24,121,22,63,160,50,4,63,187,231,225,62,238,193,185,62,64,63,144,62,77,91,75,62,84,116,233,61,97,238,233,60,245,213,105,189,251,186,17,190,197,238,103,190,122,55,158,190,105,78,199,190,5,239,238,190,112,103,10,191,107,83,28,191,204,25,45,191,17,155,60,191,27,186,74,191,100,92,87,191,50,106,98,191,194,206,107,191,113,120,115,191,216,88,121,191,240,100,125,191,30,149,127,191,70,229,127,191,210,84,126,191,177,230,122,191,85,161,117,191,164,142,110,191,231,187,101,191,177,57,91,191,189,27,79,191,206,120,65,191,128,106,50,191,27,13,34,191,90,127,16,191,107,196,251,190,71,177,212,190,171,14,172,190,232,40,130,190,95,157,46,190,243,65,175,189,243,4,53,63,240,100,125,63,85,161,117,63,164,221,104,63,100,92,87,63,206,120,65,63,244,164,39,63,112,103,10,63,71,177,212,62,64,63,144,62,251,186,17,62,50,49,141,36,251,186,17,190,64,63,144,190,71,177,212,190,112,103,10,191,244,164,39,191,206,120,65,191,100,92,87,191,164,221,104,191,85,161,117,191,240,100,125,191,0,0,128,191,240,100,125,191,85,161,117,191,164,221,104,191,100,92,87,191,206,120,65,191,244,164,39,191,112,103,10,191,71,177,212,190,64,63,144,190,251,186,17,190,202,201,83,165,251,186,17,62,64,63,144,62,71,177,212,62,112,103,10,63,244,164,39,63,206,120,65,63,100,92,87,63,164,221,104,63,85,161,117,63,240,100,125,63,0,0,128,63,240,100,125,63,85,161,117,63,164,221,104,63,100,92,87,63,206,120,65,63,244,164,39,63,112,103,10,63,71,177,212,62,64,63,144,62,251,186,17,62,243,4,53,63,177,230,122,63,194,206,107,63,32,82,83,63,128,106,50,63,112,103,10,63,238,193,185,62,95,157,46,62,97,238,233,188,197,238,103,190,71,177,212,190,24,121,22,191,17,155,60,191,177,57,91,191,182,28,113,191,240,100,125,191,30,149,127,191,240,150,119,191,231,187,101,191,27,186,74,191,244,164,39,191,107,196,251,190,122,55,158,190,84,116,233,189,243,65,175,61,64,63,144,62,5,239,238,62,27,13,34,63,37,46,70,63,50,106,98,63,85,161,117,63,153,15,127,63,210,84,126,63,113,120,115,63,55,233,94,63,206,120,65,63,107,83,28,63,187,231,225,62,232,40,130,62,245,213,105,61,251,186,17,190,171,14,172,190,160,50,4,191,204,25,45,191,189,27,79,191,164,221,104,191,216,88,121,191,70,229,127,191,38,64,124,191,164,142,110,191,100,92,87,191,243,149,55,191,90,127,16,191,105,78,199,190,77,91,75,190,243,4,53,63,240,150,119,63,55,233,94,63,243,149,55,63,160,50,4,63,64,63,144,62,97,238,233,60,197,238,103,190,5,239,238,190,204,25,45,191,100,92,87,191,113,120,115,191,30,149,127,191,177,230,122,191,231,187,101,191,206,120,65,191,90,127,16,191,171,14,172,190,243,65,175,189,95,157,46,62,71,177,212,62,27,13,34,63,189,27,79,63,164,142,110,63,210,84,126,63,240,100,125,63,194,206,107,63,27,186,74,63,107,83,28,63,105,78,199,62,251,186,17,62,84,116,233,189,238,193,185,190,24,121,22,191,37,46,70,191,164,221,104,191,38,64,124,191,153,15,127,191,182,28,113,191,32,82,83,191,244,164,39,191,187,231,225,190,77,91,75,190,245,213,105,61,122,55,158,62,112,103,10,63,17,155,60,63,50,106,98,63,216,88,121,63,70,229,127,63,85,161,117,63,177,57,91,63,128,106,50,63,107,196,251,62,232,40,130,62,243,4,53,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,50,49,141,36,122,55,158,190,24,121,22,191,189,27,79,191,113,120,115,191,0,0,128,191,113,120,115,191,189,27,79,191,24,121,22,191,122,55,158,190,202,201,83,165,122,55,158,62,24,121,22,63,189,27,79,63,113,120,115,63,0,0,128,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,126,125,176,37,122,55,158,190,24,121,22,191,189,27,79,191,113,120,115,191,0,0,128,191,113,120,115,191,189,27,79,191,24,121,22,191,122,55,158,190,23,22,247,165,122,55,158,62,24,121,22,63,189,27,79,63,113,120,115,63,0,0,128,63,113,120,115,63,189,27,79,63,24,121,22,63,122,55,158,62,88,215,30,38,122,55,158,190,24,121,22,191,189,27,79,191,113,120,115,191,0,0,128,191,113,120,115,191,189,27,79,191,24,121,22,191,122,55,158,190,243,4,53,63,164,142,110,63,17,155,60,63,187,231,225,62,243,65,175,61,64,63,144,190,107,83,28,191,177,57,91,191,38,64,124,191,177,230,122,191,100,92,87,191,24,121,22,191,232,40,130,190,84,116,233,61,5,239,238,62,206,120,65,63,182,28,113,63,70,229,127,63,194,206,107,63,243,149,55,63,71,177,212,62,245,213,105,61,122,55,158,190,27,13,34,191,55,233,94,191,240,100,125,191,216,88,121,191,32,82,83,191,90,127,16,191,197,238,103,190,251,186,17,62,107,196,251,62,37,46,70,63,113,120,115,63,30,149,127,63,164,221,104,63,128,106,50,63,105,78,199,62,97,238,233,60,171,14,172,190,244,164,39,191,50,106,98,191,210,84,126,191,240,150,119,191,189,27,79,191,112,103,10,191,77,91,75,190,95,157,46,62,160,50,4,63,27,186,74,63,85,161,117,63,153,15,127,63,231,187,101,63,204,25,45,63,238,193,185,62,243,4,53,63,164,221,104,63,244,164,39,63,64,63,144,62,251,186,17,190,112,103,10,191,100,92,87,191,240,100,125,191,85,161,117,191,206,120,65,191,71,177,212,190,202,201,83,165,71,177,212,62,206,120,65,63,85,161,117,63,240,100,125,63,100,92,87,63,112,103,10,63,251,186,17,62,64,63,144,190,244,164,39,191,164,221,104,191,0,0,128,191,164,221,104,191,244,164,39,191,64,63,144,190,251,186,17,62,112,103,10,63,100,92,87,63,240,100,125,63,85,161,117,63,206,120,65,63,71,177,212,62,88,215,30,38,71,177,212,190,206,120,65,191,85,161,117,191,240,100,125,191,100,92,87,191,112,103,10,191,251,186,17,190,64,63,144,62,244,164,39,63,164,221,104,63,0,0,128,63,164,221,104,63,244,164,39,63,64,63,144,62,251,186,17,190,112,103,10,191,100,92,87,191,240,100,125,191,85,161,117,191,206,120,65,191,71,177,212,190,243,4,53,63,50,106,98,63,90,127,16,63,84,116,233,61,238,193,185,190,206,120,65,191,216,88,121,191,240,150,119,191,17,155,60,191,171,14,172,190,251,186,17,62,24,121,22,63,231,187,101,63,70,229,127,63,55,233,94,63,112,103,10,63,243,65,175,61,105,78,199,190,37,46,70,191,177,230,122,191,85,161,117,191,243,149,55,191,122,55,158,190,95,157,46,62,107,83,28,63,164,221,104,63,30,149,127,63,177,57,91,63,160,50,4,63,245,213,105,61,71,177,212,190,27,186,74,191,38,64,124,191,113,120,115,191,128,106,50,191,64,63,144,190,77,91,75,62,27,13,34,63,194,206,107,63,153,15,127,63,100,92,87,63,107,196,251,62,97,238,233,60,187,231,225,190,189,27,79,191,240,100,125,191,182,28,113,191,204,25,45,191,232,40,130,190,197,238,103,62,244,164,39,63,164,142,110,63,210,84,126,63,32,82,83,63,5,239,238,62,243,4,53,63,177,57,91,63,5,239,238,62,245,213,105,189,90,127,16,191,164,221,104,191,210,84,126,191,27,186,74,191,238,193,185,190,95,157,46,62,244,164,39,63,113,120,115,63,216,88,121,63,243,149,55,63,232,40,130,62,64,63,144,190,17,155,60,191,177,230,122,191,182,28,113,191,27,13,34,191,251,186,17,190,105,78,199,62,189,27,79,63,153,15,127,63,231,187,101,63,112,103,10,63,97,238,233,60,107,196,251,190,55,233,94,191,70,229,127,191,100,92,87,191,187,231,225,190,243,65,175,61,24,121,22,63,194,206,107,63,240,100,125,63,37,46,70,63,171,14,172,62,77,91,75,190,204,25,45,191,85,161,117,191,240,150,119,191,128,106,50,191,197,238,103,190,122,55,158,62,206,120,65,63,38,64,124,63,164,142,110,63,107,83,28,63,84,116,233,61,71,177,212,190,32,82,83,191,30,149,127,191,50,106,98,191,160,50,4,191,243,4,53,63,32,82,83,63,238,193,185,62,197,238,103,190,17,155,60,191,240,100,125,191,231,187,101,191,107,196,251,190,243,65,175,61,27,13,34,63,85,161,117,63,113,120,115,63,107,83,28,63,245,213,105,61,160,50,4,191,164,221,104,191,38,64,124,191,243,149,55,191,77,91,75,190,105,78,199,62,100,92,87,63,70,229,127,63,189,27,79,63,171,14,172,62,232,40,130,190,206,120,65,191,210,84,126,191,50,106,98,191,5,239,238,190,84,116,233,61,244,164,39,63,240,150,119,63,182,28,113,63,24,121,22,63,97,238,233,60,112,103,10,191,194,206,107,191,177,230,122,191,128,106,50,191,95,157,46,190,71,177,212,62,177,57,91,63,30,149,127,63,27,186,74,63,122,55,158,62,64,63,144,190,37,46,70,191,153,15,127,191,55,233,94,191,187,231,225,190,251,186,17,62,204,25,45,63,216,88,121,63,164,142,110,63,90,127,16,63,243,4,53,63,27,186,74,63,232,40,130,62,105,78,199,190,55,233,94,191,240,100,125,191,128,106,50,191,84,116,233,189,160,50,4,63,164,142,110,63,85,161,117,63,24,121,22,63,97,238,233,188,27,13,34,191,216,88,121,191,164,221,104,191,5,239,238,190,95,157,46,62,17,155,60,63,153,15,127,63,100,92,87,63,171,14,172,62,122,55,158,190,32,82,83,191,30,149,127,191,206,120,65,191,77,91,75,190,187,231,225,62,231,187,101,63,177,230,122,63,244,164,39,63,245,213,105,61,90,127,16,191,113,120,115,191,182,28,113,191,112,103,10,191,243,65,175,61,204,25,45,63,38,64,124,63,50,106,98,63,71,177,212,62,197,238,103,190,37,46,70,191,70,229,127,191,189,27,79,191,64,63,144,190,238,193,185,62,177,57,91,63,210,84,126,63,243,149,55,63,251,186,17,62,107,196,251,190,194,206,107,191,240,150,119,191,107,83,28,191,243,4,53,63,206,120,65,63,251,186,17,62,112,103,10,191,85,161,117,191,164,221,104,191,71,177,212,190,64,63,144,62,100,92,87,63,240,100,125,63,244,164,39,63,95,31,172,38,244,164,39,191,240,100,125,191,100,92,87,191,64,63,144,190,71,177,212,62,164,221,104,63,85,161,117,63,112,103,10,63,251,186,17,190,206,120,65,191,0,0,128,191,206,120,65,191,251,186,17,190,112,103,10,63,85,161,117,63,164,221,104,63,71,177,212,62,64,63,144,190,100,92,87,191,240,100,125,191,244,164,39,191,15,47,66,167,244,164,39,63,240,100,125,63,100,92,87,63,64,63,144,62,71,177,212,190,164,221,104,191,85,161,117,191,112,103,10,191,251,186,17,62,206,120,65,63,0,0,128,63,206,120,65,63,251,186,17,62,112,103,10,191,85,161,117,191,164,221,104,191,71,177,212,190,64,63,144,62,100,92,87,63,240,100,125,63,244,164,39,63,243,4,53,63,243,149,55,63,97,238,233,60,204,25,45,191,30,149,127,191,206,120,65,191,243,65,175,189,27,13,34,63,210,84,126,63,27,186,74,63,251,186,17,62,24,121,22,191,38,64,124,191,32,82,83,191,77,91,75,190,112,103,10,63,216,88,121,63,177,57,91,63,232,40,130,62,107,196,251,190,85,161,117,191,50,106,98,191,122,55,158,190,187,231,225,62,182,28,113,63,164,221,104,63,238,193,185,62,105,78,199,190,194,206,107,191,164,142,110,191,71,177,212,190,171,14,172,62,231,187,101,63,113,120,115,63,5,239,238,62,64,63,144,190,55,233,94,191,240,150,119,191,160,50,4,191,197,238,103,62,100,92,87,63,177,230,122,63,90,127,16,63,95,157,46,190,189,27,79,191,240,100,125,191,107,83,28,191,84,116,233,61,37,46,70,63,153,15,127,63,244,164,39,63,245,213,105,189,17,155,60,191,70,229,127,191,128,106,50,191,243,4,53,63,204,25,45,63,243,65,175,189,27,186,74,191,38,64,124,191,112,103,10,191,232,40,130,62,50,106,98,63,182,28,113,63,105,78,199,62,71,177,212,190,113,120,115,191,55,233,94,191,197,238,103,190,90,127,16,63,240,100,125,63,37,46,70,63,245,213,105,61,128,106,50,191,70,229,127,191,244,164,39,191,84,116,233,61,189,27,79,63,177,230,122,63,160,50,4,63,64,63,144,190,231,187,101,191,164,142,110,191,238,193,185,190,187,231,225,62,85,161,117,63,177,57,91,63,77,91,75,62,24,121,22,191,210,84,126,191,206,120,65,191,97,238,233,188,243,149,55,63,30,149,127,63,27,13,34,63,251,186,17,190,32,82,83,191,216,88,121,191,107,196,251,190,122,55,158,62,164,221,104,63,194,206,107,63,171,14,172,62,5,239,238,190,240,150,119,191,100,92,87,191,95,157,46,190,107,83,28,63,153,15,127,63,17,155,60,63,243,4,53,63,27,13,34,63,77,91,75,190,50,106,98,191,194,206,107,191,64,63,144,190,90,127,16,63,153,15,127,63,128,106,50,63,84,116,233,189,100,92,87,191,113,120,115,191,238,193,185,190,107,196,251,62,38,64,124,63,206,120,65,63,97,238,233,188,27,186,74,191,216,88,121,191,187,231,225,190,71,177,212,62,240,150,119,63,189,27,79,63,245,213,105,61,17,155,60,191,240,100,125,191,160,50,4,191,171,14,172,62,182,28,113,63,177,57,91,63,251,186,17,62,204,25,45,191,30,149,127,191,24,121,22,191,232,40,130,62,164,221,104,63,231,187,101,63,197,238,103,62,107,83,28,191,70,229,127,191,244,164,39,191,95,157,46,62,55,233,94,63,164,142,110,63,122,55,158,62,112,103,10,191,210,84,126,191,243,149,55,191,243,65,175,61,32,82,83,63,85,161,117,63,105,78,199,62,5,239,238,190,177,230,122,191,37,46,70,191,243,4,53,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,202,201,83,165,189,27,79,63,113,120,115,63,122,55,158,62,24,121,22,191,0,0,128,191,24,121,22,191,122,55,158,62,113,120,115,63,189,27,79,63,88,215,30,38,189,27,79,191,113,120,115,191,122,55,158,190,24,121,22,63,0,0,128,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,15,47,66,167,189,27,79,63,113,120,115,63,122,55,158,62,24,121,22,191,0,0,128,191,24,121,22,191,122,55,158,62,113,120,115,63,189,27,79,63,222,94,13,166,189,27,79,191,113,120,115,191,122,55,158,190,24,121,22,63,0,0,128,63,24,121,22,63,122,55,158,190,113,120,115,191,189,27,79,191,130,33,119,167,189,27,79,63,113,120,115,63,122,55,158,62,24,121,22,191,0,0,128,191,24,121,22,191,122,55,158,62,113,120,115,63,189,27,79,63,243,4,53,63,112,103,10,63,71,177,212,190,240,100,125,191,244,164,39,191,64,63,144,62,85,161,117,63,206,120,65,63,251,186,17,190,164,221,104,191,100,92,87,191,23,22,247,165,100,92,87,63,164,221,104,63,251,186,17,62,206,120,65,191,85,161,117,191,64,63,144,190,244,164,39,63,240,100,125,63,71,177,212,62,112,103,10,191,0,0,128,191,112,103,10,191,71,177,212,62,240,100,125,63,244,164,39,63,64,63,144,190,85,161,117,191,206,120,65,191,251,186,17,62,164,221,104,63,100,92,87,63,222,94,13,166,100,92,87,191,164,221,104,191,251,186,17,190,206,120,65,63,85,161,117,63,64,63,144,62,244,164,39,191,240,100,125,191,71,177,212,190,112,103,10,63,0,0,128,63,112,103,10,63,71,177,212,190,240,100,125,191,244,164,39,191,64,63,144,62,85,161,117,63,206,120,65,63,251,186,17,190,164,221,104,191,100,92,87,191,243,4,53,63,107,196,251,62,160,50,4,191,70,229,127,191,5,239,238,190,112,103,10,63,30,149,127,63,187,231,225,62,90,127,16,191,153,15,127,191,71,177,212,190,24,121,22,63,210,84,126,63,105,78,199,62,107,83,28,191,240,100,125,191,238,193,185,190,27,13,34,63,38,64,124,63,171,14,172,62,244,164,39,191,177,230,122,191,122,55,158,190,204,25,45,63,216,88,121,63,64,63,144,62,128,106,50,191,240,150,119,191,232,40,130,190,243,149,55,63,85,161,117,63,197,238,103,62,17,155,60,191,113,120,115,191,77,91,75,190,206,120,65,63,182,28,113,63,95,157,46,62,37,46,70,191,164,142,110,191,251,186,17,190,27,186,74,63,194,206,107,63,84,116,233,61,189,27,79,191,164,221,104,191,243,65,175,189,32,82,83,63,231,187,101,63,245,213,105,61,100,92,87,191,50,106,98,191,97,238,233,188,177,57,91,63,55,233,94,63,243,4,53,63,187,231,225,62,107,83,28,191,177,230,122,191,232,40,130,190,206,120,65,63,194,206,107,63,245,213,105,61,55,233,94,191,32,82,83,191,251,186,17,62,113,120,115,63,128,106,50,63,171,14,172,190,210,84,126,191,112,103,10,191,160,50,4,63,153,15,127,63,238,193,185,62,204,25,45,191,85,161,117,191,95,157,46,190,189,27,79,63,50,106,98,63,97,238,233,188,164,221,104,191,37,46,70,191,197,238,103,62,216,88,121,63,27,13,34,63,71,177,212,190,70,229,127,191,5,239,238,190,24,121,22,63,38,64,124,63,64,63,144,62,17,155,60,191,164,142,110,191,243,65,175,189,177,57,91,63,100,92,87,63,84,116,233,189,182,28,113,191,243,149,55,191,122,55,158,62,240,100,125,63,90,127,16,63,107,196,251,190,30,149,127,191,105,78,199,190,244,164,39,63,240,150,119,63,77,91,75,62,27,186,74,191,231,187,101,191,243,4,53,63,105,78,199,62,128,106,50,191,164,142,110,191,97,238,233,188,164,221,104,63,17,155,60,63,171,14,172,190,30,149,127,191,187,231,225,190,244,164,39,63,113,120,115,63,243,65,175,61,50,106,98,191,37,46,70,191,64,63,144,62,210,84,126,63,107,196,251,62,107,83,28,191,240,150,119,191,251,186,17,190,177,57,91,63,189,27,79,63,197,238,103,190,38,64,124,191,112,103,10,191,90,127,16,63,177,230,122,63,77,91,75,62,32,82,83,191,100,92,87,191,95,157,46,62,216,88,121,63,24,121,22,63,160,50,4,191,240,100,125,191,232,40,130,190,27,186,74,63,55,233,94,63,84,116,233,189,85,161,117,191,27,13,34,191,5,239,238,62,153,15,127,63,122,55,158,62,206,120,65,191,231,187,101,191,245,213,105,61,182,28,113,63,204,25,45,63,71,177,212,190,70,229,127,191,238,193,185,190,243,149,55,63,194,206,107,63,243,4,53,63,171,14,172,62,37,46,70,191,177,57,91,191,77,91,75,62,240,100,125,63,5,239,238,62,204,25,45,191,194,206,107,191,245,213,105,61,85,161,117,63,24,121,22,63,90,127,16,191,240,150,119,191,243,65,175,189,164,221,104,63,128,106,50,63,187,231,225,190,210,84,126,191,197,238,103,190,100,92,87,63,27,186,74,63,122,55,158,190,70,229,127,191,238,193,185,190,206,120,65,63,55,233,94,63,95,157,46,190,38,64,124,191,107,196,251,190,244,164,39,63,164,142,110,63,97,238,233,188,113,120,115,191,107,83,28,191,112,103,10,63,216,88,121,63,84,116,233,61,231,187,101,191,243,149,55,191,71,177,212,62,153,15,127,63,232,40,130,62,32,82,83,191,189,27,79,191,64,63,144,62,30,149,127,63,105,78,199,62,17,155,60,191,50,106,98,191,251,186,17,62,177,230,122,63,160,50,4,63,27,13,34,191,182,28,113,191,243,4,53,63,64,63,144,62,100,92,87,191,206,120,65,191,71,177,212,62,240,100,125,63,251,186,17,62,164,221,104,191,244,164,39,191,112,103,10,63,85,161,117,63,84,148,176,166,85,161,117,191,112,103,10,191,244,164,39,63,164,221,104,63,251,186,17,190,240,100,125,191,71,177,212,190,206,120,65,63,100,92,87,63,64,63,144,190,0,0,128,191,64,63,144,190,100,92,87,63,206,120,65,63,71,177,212,190,240,100,125,191,251,186,17,190,164,221,104,63,244,164,39,63,112,103,10,191,85,161,117,191,63,111,132,39,85,161,117,63,112,103,10,63,244,164,39,191,164,221,104,191,251,186,17,62,240,100,125,63,71,177,212,62,206,120,65,191,100,92,87,191,64,63,144,62,0,0,128,63,64,63,144,62,100,92,87,191,206,120,65,191,71,177,212,62,240,100,125,63,251,186,17,62,164,221,104,191,244,164,39,191,112,103,10,63,85,161,117,63,243,4,53,63,197,238,103,62,231,187,101,191,27,13,34,191,107,83,28,63,164,221,104,63,77,91,75,190,70,229,127,191,232,40,130,190,50,106,98,63,244,164,39,63,24,121,22,191,194,206,107,191,95,157,46,62,30,149,127,63,64,63,144,62,55,233,94,191,204,25,45,191,90,127,16,63,164,142,110,63,251,186,17,190,153,15,127,191,122,55,158,190,177,57,91,63,128,106,50,63,112,103,10,191,182,28,113,191,84,116,233,61,210,84,126,63,171,14,172,62,100,92,87,191,243,149,55,191,160,50,4,63,113,120,115,63,243,65,175,189,240,100,125,191,238,193,185,190,32,82,83,63,17,155,60,63,107,196,251,190,85,161,117,191,245,213,105,61,38,64,124,63,105,78,199,62,189,27,79,191,206,120,65,191,5,239,238,62,240,150,119,63,97,238,233,188,177,230,122,191,71,177,212,190,27,186,74,63,37,46,70,63,187,231,225,190,216,88,121,191,243,4,53,63,95,157,46,62,182,28,113,191,107,196,251,190,37,46,70,63,206,120,65,63,160,50,4,191,164,142,110,191,77,91,75,62,70,229,127,63,251,186,17,62,113,120,115,191,5,239,238,190,27,186,74,63,17,155,60,63,112,103,10,191,194,206,107,191,197,238,103,62,30,149,127,63,84,116,233,61,85,161,117,191,187,231,225,190,189,27,79,63,243,149,55,63,90,127,16,191,164,221,104,191,232,40,130,62,153,15,127,63,243,65,175,61,240,150,119,191,71,177,212,190,32,82,83,63,128,106,50,63,24,121,22,191,231,187,101,191,64,63,144,62,210,84,126,63,245,213,105,61,216,88,121,191,105,78,199,190,100,92,87,63,204,25,45,63,107,83,28,191,50,106,98,191,122,55,158,62,240,100,125,63,97,238,233,60,177,230,122,191,238,193,185,190,177,57,91,63,244,164,39,63,27,13,34,191,55,233,94,191,171,14,172,62,38,64,124,63,243,4,53,63,84,116,233,61,216,88,121,191,171,14,172,190,231,187,101,63,112,103,10,63,37,46,70,191,243,149,55,191,107,83,28,63,177,57,91,63,71,177,212,190,113,120,115,191,77,91,75,62,153,15,127,63,97,238,233,60,240,100,125,191,232,40,130,190,164,142,110,63,5,239,238,62,32,82,83,191,244,164,39,191,204,25,45,63,189,27,79,63,107,196,251,190,194,206,107,191,64,63,144,62,38,64,124,63,245,213,105,189,30,149,127,191,95,157,46,190,85,161,117,63,105,78,199,62,55,233,94,191,24,121,22,191,17,155,60,63,206,120,65,63,90,127,16,191,50,106,98,191,238,193,185,62,240,150,119,63,251,186,17,190,70,229,127,191,243,65,175,189,177,230,122,63,122,55,158,62,164,221,104,191,160,50,4,191,27,186,74,63,128,106,50,63,27,13,34,191,100,92,87,191,187,231,225,62,182,28,113,63,197,238,103,190,210,84,126,191,243,4,53,63,245,213,105,61,210,84,126,191,95,157,46,190,216,88,121,63,64,63,144,62,182,28,113,191,105,78,199,190,231,187,101,63,107,196,251,62,100,92,87,191,24,121,22,191,37,46,70,63,204,25,45,63,128,106,50,191,206,120,65,191,107,83,28,63,32,82,83,63,160,50,4,191,50,106,98,191,71,177,212,62,164,142,110,63,122,55,158,190,240,150,119,191,77,91,75,62,240,100,125,63,243,65,175,189,70,229,127,191,97,238,233,188,153,15,127,63,251,186,17,62,177,230,122,191,232,40,130,190,113,120,115,63,238,193,185,62,164,221,104,191,5,239,238,190,177,57,91,63,90,127,16,63,27,186,74,191,244,164,39,191,243,149,55,63,17,155,60,63,27,13,34,191,189,27,79,191,112,103,10,63,55,233,94,63,187,231,225,190,194,206,107,191,171,14,172,62,85,161,117,63,197,238,103,190,38,64,124,191,84,116,233,61,30,149,127,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,91,26,141,38,0,0,128,191,191,159,48,39,0,0,128,63,213,12,22,40,0,0,128,191,52,131,176,167,0,0,128,63,244,178,211,38,0,0,128,191,243,4,53,63,245,213,105,189,210,84,126,191,95,157,46,62,216,88,121,63,64,63,144,190,182,28,113,191,105,78,199,62,231,187,101,63,107,196,251,190,100,92,87,191,24,121,22,63,37,46,70,63,204,25,45,191,128,106,50,191,206,120,65,63,107,83,28,63,32,82,83,191,160,50,4,191,50,106,98,63,71,177,212,62,164,142,110,191,122,55,158,190,240,150,119,63,77,91,75,62,240,100,125,191,243,65,175,189,70,229,127,63,97,238,233,188,153,15,127,191,251,186,17,62,177,230,122,63,232,40,130,190,113,120,115,191,238,193,185,62,164,221,104,63,5,239,238,190,177,57,91,191,90,127,16,63,27,186,74,63,244,164,39,191,243,149,55,191,17,155,60,63,27,13,34,63,189,27,79,191,112,103,10,191,55,233,94,63,187,231,225,62,194,206,107,191,171,14,172,190,85,161,117,63,197,238,103,62,38,64,124,191,84,116,233,189,30,149,127,63,243,4,53,63,84,116,233,189,216,88,121,191,171,14,172,62,231,187,101,63,112,103,10,191,37,46,70,191,243,149,55,63,107,83,28,63,177,57,91,191,71,177,212,190,113,120,115,63,77,91,75,62,153,15,127,191,97,238,233,60,240,100,125,63,232,40,130,190,164,142,110,191,5,239,238,62,32,82,83,63,244,164,39,191,204,25,45,191,189,27,79,63,107,196,251,62,194,206,107,191,64,63,144,190,38,64,124,63,245,213,105,61,30,149,127,191,95,157,46,62,85,161,117,63,105,78,199,190,55,233,94,191,24,121,22,63,17,155,60,63,206,120,65,191,90,127,16,191,50,106,98,63,238,193,185,62,240,150,119,191,251,186,17,190,70,229,127,63,243,65,175,189,177,230,122,191,122,55,158,62,164,221,104,63,160,50,4,191,27,186,74,191,128,106,50,63,27,13,34,63,100,92,87,191,187,231,225,190,182,28,113,63,197,238,103,62,210,84,126,191,243,4,53,63,95,157,46,190,182,28,113,191,107,196,251,62,37,46,70,63,206,120,65,191,160,50,4,191,164,142,110,63,77,91,75,62,70,229,127,191,251,186,17,62,113,120,115,63,5,239,238,190,27,186,74,191,17,155,60,63,112,103,10,63,194,206,107,191,197,238,103,190,30,149,127,63,84,116,233,189,85,161,117,191,187,231,225,62,189,27,79,63,243,149,55,191,90,127,16,191,164,221,104,63,232,40,130,62,153,15,127,191,243,65,175,61,240,150,119,63,71,177,212,190,32,82,83,191,128,106,50,63,24,121,22,63,231,187,101,191,64,63,144,190,210,84,126,63,245,213,105,189,216,88,121,191,105,78,199,62,100,92,87,63,204,25,45,191,107,83,28,191,50,106,98,63,122,55,158,62,240,100,125,191,97,238,233,60,177,230,122,63,238,193,185,190,177,57,91,191,244,164,39,63,27,13,34,63,55,233,94,191,171,14,172,190,38,64,124,63,243,4,53,63,197,238,103,190,231,187,101,191,27,13,34,63,107,83,28,63,164,221,104,191,77,91,75,190,70,229,127,63,232,40,130,190,50,106,98,191,244,164,39,63,24,121,22,63,194,206,107,191,95,157,46,190,30,149,127,63,64,63,144,190,55,233,94,191,204,25,45,63,90,127,16,63,164,142,110,191,251,186,17,190,153,15,127,63,122,55,158,190,177,57,91,191,128,106,50,63,112,103,10,63,182,28,113,191,84,116,233,189,210,84,126,63,171,14,172,190,100,92,87,191,243,149,55,63,160,50,4,63,113,120,115,191,243,65,175,189,240,100,125,63,238,193,185,190,32,82,83,191,17,155,60,63,107,196,251,62,85,161,117,191,245,213,105,189,38,64,124,63,105,78,199,190,189,27,79,191,206,120,65,63,5,239,238,62,240,150,119,191,97,238,233,188,177,230,122,63,71,177,212,190,27,186,74,191,37,46,70,63,187,231,225,62,216,88,121,191,243,4,53,63,64,63,144,190,100,92,87,191,206,120,65,63,71,177,212,62,240,100,125,191,251,186,17,62,164,221,104,63,244,164,39,191,112,103,10,191,85,161,117,63,8,72,141,166,85,161,117,191,112,103,10,63,244,164,39,63,164,221,104,191,251,186,17,190,240,100,125,63,71,177,212,190,206,120,65,191,100,92,87,63,64,63,144,62,0,0,128,191,64,63,144,62,100,92,87,63,206,120,65,191,71,177,212,190,240,100,125,63,251,186,17,190,164,221,104,191,244,164,39,63,112,103,10,63,85,161,117,191,12,236,83,39,85,161,117,63,112,103,10,191,244,164,39,191,164,221,104,63,251,186,17,62,240,100,125,191,71,177,212,62,206,120,65,63,100,92,87,191,64,63,144,190,0,0,128,63,64,63,144,190,100,92,87,191,206,120,65,63,71,177,212,62,240,100,125,191,251,186,17,62,164,221,104,63,244,164,39,191,112,103,10,191,85,161,117,63,243,4,53,63,171,14,172,190,37,46,70,191,177,57,91,63,77,91,75,62,240,100,125,191,5,239,238,62,204,25,45,63,194,206,107,191,245,213,105,189,85,161,117,63,24,121,22,191,90,127,16,191,240,150,119,63,243,65,175,189,164,221,104,191,128,106,50,63,187,231,225,62,210,84,126,191,197,238,103,62,100,92,87,63,27,186,74,191,122,55,158,190,70,229,127,63,238,193,185,190,206,120,65,191,55,233,94,63,95,157,46,62,38,64,124,191,107,196,251,62,244,164,39,63,164,142,110,191,97,238,233,188,113,120,115,63,107,83,28,191,112,103,10,191,216,88,121,63,84,116,233,189,231,187,101,191,243,149,55,63,71,177,212,62,153,15,127,191,232,40,130,62,32,82,83,63,189,27,79,191,64,63,144,190,30,149,127,63,105,78,199,190,17,155,60,191,50,106,98,63,251,186,17,62,177,230,122,191,160,50,4,63,27,13,34,63,182,28,113,191,243,4,53,63,105,78,199,190,128,106,50,191,164,142,110,63,97,238,233,188,164,221,104,191,17,155,60,63,171,14,172,62,30,149,127,191,187,231,225,62,244,164,39,63,113,120,115,191,243,65,175,61,50,106,98,63,37,46,70,191,64,63,144,190,210,84,126,63,107,196,251,190,107,83,28,191,240,150,119,63,251,186,17,190,177,57,91,191,189,27,79,63,197,238,103,62,38,64,124,191,112,103,10,63,90,127,16,63,177,230,122,191,77,91,75,62,32,82,83,63,100,92,87,191,95,157,46,190,216,88,121,63,24,121,22,191,160,50,4,191,240,100,125,63,232,40,130,190,27,186,74,191,55,233,94,63,84,116,233,61,85,161,117,191,27,13,34,63,5,239,238,62,153,15,127,191,122,55,158,62,206,120,65,63,231,187,101,191,245,213,105,189,182,28,113,63,204,25,45,191,71,177,212,190,70,229,127,63,238,193,185,190,243,149,55,191,194,206,107,63,243,4,53,63,187,231,225,190,107,83,28,191,177,230,122,63,232,40,130,190,206,120,65,191,194,206,107,63,245,213,105,189,55,233,94,191,32,82,83,63,251,186,17,62,113,120,115,191,128,106,50,63,171,14,172,62,210,84,126,191,112,103,10,63,160,50,4,63,153,15,127,191,238,193,185,62,204,25,45,63,85,161,117,191,95,157,46,62,189,27,79,63,50,106,98,191,97,238,233,188,164,221,104,63,37,46,70,191,197,238,103,190,216,88,121,63,27,13,34,191,71,177,212,190,70,229,127,63,5,239,238,190,24,121,22,191,38,64,124,63,64,63,144,190,17,155,60,191,164,142,110,63,243,65,175,189,177,57,91,191,100,92,87,63,84,116,233,61,182,28,113,191,243,149,55,63,122,55,158,62,240,100,125,191,90,127,16,63,107,196,251,62,30,149,127,191,105,78,199,62,244,164,39,63,240,150,119,191,77,91,75,62,27,186,74,63,231,187,101,191,243,4,53,63,107,196,251,190,160,50,4,191,70,229,127,63,5,239,238,190,112,103,10,191,30,149,127,63,187,231,225,190,90,127,16,191,153,15,127,63,71,177,212,190,24,121,22,191,210,84,126,63,105,78,199,190,107,83,28,191,240,100,125,63,238,193,185,190,27,13,34,191,38,64,124,63,171,14,172,190,244,164,39,191,177,230,122,63,122,55,158,190,204,25,45,191,216,88,121,63,64,63,144,190,128,106,50,191,240,150,119,63,232,40,130,190,243,149,55,191,85,161,117,63,197,238,103,190,17,155,60,191,113,120,115,63,77,91,75,190,206,120,65,191,182,28,113,63,95,157,46,190,37,46,70,191,164,142,110,63,251,186,17,190,27,186,74,191,194,206,107,63,84,116,233,189,189,27,79,191,164,221,104,63,243,65,175,189,32,82,83,191,231,187,101,63,245,213,105,189,100,92,87,191,50,106,98,63,97,238,233,188,177,57,91,191,55,233,94,63,243,4,53,63,112,103,10,191,71,177,212,190,240,100,125,63,244,164,39,191,64,63,144,190,85,161,117,63,206,120,65,191,251,186,17,190,164,221,104,63,100,92,87,191,15,47,66,167,100,92,87,63,164,221,104,191,251,186,17,62,206,120,65,63,85,161,117,191,64,63,144,62,244,164,39,63,240,100,125,191,71,177,212,62,112,103,10,63,0,0,128,191,112,103,10,63,71,177,212,62,240,100,125,191,244,164,39,63,64,63,144,62,85,161,117,191,206,120,65,63,251,186,17,62,164,221,104,191,100,92,87,63,166,209,136,40,100,92,87,191,164,221,104,63,251,186,17,190,206,120,65,191,85,161,117,63,64,63,144,190,244,164,39,191,240,100,125,63,71,177,212,190,112,103,10,191,0,0,128,63,112,103,10,191,71,177,212,190,240,100,125,63,244,164,39,191,64,63,144,190,85,161,117,63,206,120,65,191,251,186,17,190,164,221,104,63,100,92,87,191,243,4,53,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,23,22,247,165,189,27,79,63,113,120,115,191,122,55,158,62,24,121,22,63,0,0,128,191,24,121,22,63,122,55,158,62,113,120,115,191,189,27,79,63,222,94,13,166,189,27,79,191,113,120,115,63,122,55,158,190,24,121,22,191,0,0,128,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,231,54,141,167,189,27,79,63,113,120,115,191,122,55,158,62,24,121,22,63,0,0,128,191,24,121,22,63,122,55,158,62,113,120,115,191,189,27,79,63,213,12,22,40,189,27,79,191,113,120,115,63,122,55,158,190,24,121,22,191,0,0,128,63,24,121,22,191,122,55,158,190,113,120,115,63,189,27,79,191,77,14,212,38,189,27,79,63,113,120,115,191,122,55,158,62,24,121,22,63,0,0,128,191,24,121,22,63,122,55,158,62,113,120,115,191,189,27,79,63,243,4,53,63,27,13,34,191,77,91,75,190,50,106,98,63,194,206,107,191,64,63,144,62,90,127,16,63,153,15,127,191,128,106,50,63,84,116,233,61,100,92,87,191,113,120,115,63,238,193,185,190,107,196,251,190,38,64,124,63,206,120,65,191,97,238,233,188,27,186,74,63,216,88,121,191,187,231,225,62,71,177,212,62,240,150,119,191,189,27,79,63,245,213,105,189,17,155,60,191,240,100,125,63,160,50,4,191,171,14,172,190,182,28,113,63,177,57,91,191,251,186,17,62,204,25,45,63,30,149,127,191,24,121,22,63,232,40,130,62,164,221,104,191,231,187,101,63,197,238,103,190,107,83,28,191,70,229,127,63,244,164,39,191,95,157,46,190,55,233,94,63,164,142,110,191,122,55,158,62,112,103,10,63,210,84,126,191,243,149,55,63,243,65,175,61,32,82,83,191,85,161,117,63,105,78,199,190,5,239,238,190,177,230,122,63,37,46,70,191,243,4,53,63,204,25,45,191,243,65,175,189,27,186,74,63,38,64,124,191,112,103,10,63,232,40,130,62,50,106,98,191,182,28,113,63,105,78,199,190,71,177,212,190,113,120,115,63,55,233,94,191,197,238,103,62,90,127,16,63,240,100,125,191,37,46,70,63,245,213,105,189,128,106,50,191,70,229,127,63,244,164,39,191,84,116,233,189,189,27,79,63,177,230,122,191,160,50,4,63,64,63,144,62,231,187,101,191,164,142,110,63,238,193,185,190,187,231,225,190,85,161,117,63,177,57,91,191,77,91,75,62,24,121,22,63,210,84,126,191,206,120,65,63,97,238,233,188,243,149,55,191,30,149,127,63,27,13,34,191,251,186,17,190,32,82,83,63,216,88,121,191,107,196,251,62,122,55,158,62,164,221,104,191,194,206,107,63,171,14,172,190,5,239,238,190,240,150,119,63,100,92,87,191,95,157,46,62,107,83,28,63,153,15,127,191,17,155,60,63,243,4,53,63,243,149,55,191,97,238,233,60,204,25,45,63,30,149,127,191,206,120,65,63,243,65,175,189,27,13,34,191,210,84,126,63,27,186,74,191,251,186,17,62,24,121,22,63,38,64,124,191,32,82,83,63,77,91,75,190,112,103,10,191,216,88,121,63,177,57,91,191,232,40,130,62,107,196,251,62,85,161,117,191,50,106,98,63,122,55,158,190,187,231,225,190,182,28,113,63,164,221,104,191,238,193,185,62,105,78,199,62,194,206,107,191,164,142,110,63,71,177,212,190,171,14,172,190,231,187,101,63,113,120,115,191,5,239,238,62,64,63,144,62,55,233,94,191,240,150,119,63,160,50,4,191,197,238,103,190,100,92,87,63,177,230,122,191,90,127,16,63,95,157,46,62,189,27,79,191,240,100,125,63,107,83,28,191,84,116,233,189,37,46,70,63,153,15,127,191,244,164,39,63,245,213,105,61,17,155,60,191,70,229,127,63,128,106,50,191,243,4,53,63,206,120,65,191,251,186,17,62,112,103,10,63,85,161,117,191,164,221,104,63,71,177,212,190,64,63,144,190,100,92,87,63,240,100,125,191,244,164,39,63,34,2,75,39,244,164,39,191,240,100,125,63,100,92,87,191,64,63,144,62,71,177,212,62,164,221,104,191,85,161,117,63,112,103,10,191,251,186,17,190,206,120,65,63,0,0,128,191,206,120,65,63,251,186,17,190,112,103,10,191,85,161,117,63,164,221,104,191,71,177,212,62,64,63,144,62,100,92,87,191,240,100,125,63,244,164,39,191,52,131,176,167,244,164,39,63,240,100,125,191,100,92,87,63,64,63,144,190,71,177,212,190,164,221,104,63,85,161,117,191,112,103,10,63,251,186,17,62,206,120,65,191,0,0,128,63,206,120,65,191,251,186,17,62,112,103,10,63,85,161,117,191,164,221,104,63,71,177,212,190,64,63,144,190,100,92,87,63,240,100,125,191,244,164,39,63,243,4,53,63,27,186,74,191,232,40,130,62,105,78,199,62,55,233,94,191,240,100,125,63,128,106,50,191,84,116,233,61,160,50,4,63,164,142,110,191,85,161,117,63,24,121,22,191,97,238,233,188,27,13,34,63,216,88,121,191,164,221,104,63,5,239,238,190,95,157,46,190,17,155,60,63,153,15,127,191,100,92,87,63,171,14,172,190,122,55,158,190,32,82,83,63,30,149,127,191,206,120,65,63,77,91,75,190,187,231,225,190,231,187,101,63,177,230,122,191,244,164,39,63,245,213,105,189,90,127,16,191,113,120,115,63,182,28,113,191,112,103,10,63,243,65,175,61,204,25,45,191,38,64,124,63,50,106,98,191,71,177,212,62,197,238,103,62,37,46,70,191,70,229,127,63,189,27,79,191,64,63,144,62,238,193,185,62,177,57,91,191,210,84,126,63,243,149,55,191,251,186,17,62,107,196,251,62,194,206,107,191,240,150,119,63,107,83,28,191,243,4,53,63,32,82,83,191,238,193,185,62,197,238,103,62,17,155,60,191,240,100,125,63,231,187,101,191,107,196,251,62,243,65,175,61,27,13,34,191,85,161,117,63,113,120,115,191,107,83,28,63,245,213,105,189,160,50,4,191,164,221,104,63,38,64,124,191,243,149,55,63,77,91,75,190,105,78,199,190,100,92,87,63,70,229,127,191,189,27,79,63,171,14,172,190,232,40,130,190,206,120,65,63,210,84,126,191,50,106,98,63,5,239,238,190,84,116,233,189,244,164,39,63,240,150,119,191,182,28,113,63,24,121,22,191,97,238,233,60,112,103,10,63,194,206,107,191,177,230,122,63,128,106,50,191,95,157,46,62,71,177,212,62,177,57,91,191,30,149,127,63,27,186,74,191,122,55,158,62,64,63,144,62,37,46,70,191,153,15,127,63,55,233,94,191,187,231,225,62,251,186,17,62,204,25,45,191,216,88,121,63,164,142,110,191,90,127,16,63,243,4,53,63,177,57,91,191,5,239,238,62,245,213,105,61,90,127,16,191,164,221,104,63,210,84,126,191,27,186,74,63,238,193,185,190,95,157,46,190,244,164,39,63,113,120,115,191,216,88,121,63,243,149,55,191,232,40,130,62,64,63,144,62,17,155,60,191,177,230,122,63,182,28,113,191,27,13,34,63,251,186,17,190,105,78,199,190,189,27,79,63,153,15,127,191,231,187,101,63,112,103,10,191,97,238,233,60,107,196,251,62,55,233,94,191,70,229,127,63,100,92,87,191,187,231,225,62,243,65,175,61,24,121,22,191,194,206,107,63,240,100,125,191,37,46,70,63,171,14,172,190,77,91,75,190,204,25,45,63,85,161,117,191,240,150,119,63,128,106,50,191,197,238,103,62,122,55,158,62,206,120,65,191,38,64,124,63,164,142,110,191,107,83,28,63,84,116,233,189,71,177,212,190,32,82,83,63,30,149,127,191,50,106,98,63,160,50,4,191,243,4,53,63,50,106,98,191,90,127,16,63,84,116,233,189,238,193,185,190,206,120,65,63,216,88,121,191,240,150,119,63,17,155,60,191,171,14,172,62,251,186,17,62,24,121,22,191,231,187,101,63,70,229,127,191,55,233,94,63,112,103,10,191,243,65,175,61,105,78,199,62,37,46,70,191,177,230,122,63,85,161,117,191,243,149,55,63,122,55,158,190,95,157,46,190,107,83,28,63,164,221,104,191,30,149,127,63,177,57,91,191,160,50,4,63,245,213,105,189,71,177,212,190,27,186,74,63,38,64,124,191,113,120,115,63,128,106,50,191,64,63,144,62,77,91,75,62,27,13,34,191,194,206,107,63,153,15,127,191,100,92,87,63,107,196,251,190,97,238,233,60,187,231,225,62,189,27,79,191,240,100,125,63,182,28,113,191,204,25,45,63,232,40,130,190,197,238,103,190,244,164,39,63,164,142,110,191,210,84,126,63,32,82,83,191,5,239,238,62,243,4,53,63,164,221,104,191,244,164,39,63,64,63,144,190,251,186,17,190,112,103,10,63,100,92,87,191,240,100,125,63,85,161,117,191,206,120,65,63,71,177,212,190,42,171,48,38,71,177,212,62,206,120,65,191,85,161,117,63,240,100,125,191,100,92,87,63,112,103,10,191,251,186,17,62,64,63,144,62,244,164,39,191,164,221,104,63,0,0,128,191,164,221,104,63,244,164,39,191,64,63,144,62,251,186,17,62,112,103,10,191,100,92,87,63,240,100,125,191,85,161,117,63,206,120,65,191,71,177,212,62,48,64,194,167,71,177,212,190,206,120,65,63,85,161,117,191,240,100,125,63,100,92,87,191,112,103,10,63,251,186,17,190,64,63,144,190,244,164,39,63,164,221,104,191,0,0,128,63,164,221,104,191,244,164,39,63,64,63,144,190,251,186,17,190,112,103,10,63,100,92,87,191,240,100,125,63,85,161,117,191,206,120,65,63,71,177,212,190,243,4,53,63,164,142,110,191,17,155,60,63,187,231,225,190,243,65,175,61,64,63,144,62,107,83,28,191,177,57,91,63,38,64,124,191,177,230,122,63,100,92,87,191,24,121,22,63,232,40,130,190,84,116,233,189,5,239,238,62,206,120,65,191,182,28,113,63,70,229,127,191,194,206,107,63,243,149,55,191,71,177,212,62,245,213,105,189,122,55,158,190,27,13,34,63,55,233,94,191,240,100,125,63,216,88,121,191,32,82,83,63,90,127,16,191,197,238,103,62,251,186,17,62,107,196,251,190,37,46,70,63,113,120,115,191,30,149,127,63,164,221,104,191,128,106,50,63,105,78,199,190,97,238,233,60,171,14,172,62,244,164,39,191,50,106,98,63,210,84,126,191,240,150,119,63,189,27,79,191,112,103,10,63,77,91,75,190,95,157,46,190,160,50,4,63,27,186,74,191,85,161,117,63,153,15,127,191,231,187,101,63,204,25,45,191,238,193,185,62,243,4,53,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,88,215,30,38,122,55,158,190,24,121,22,63,189,27,79,191,113,120,115,63,0,0,128,191,113,120,115,63,189,27,79,191,24,121,22,63,122,55,158,190,130,33,119,167,122,55,158,62,24,121,22,191,189,27,79,63,113,120,115,191,0,0,128,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,91,26,141,38,122,55,158,190,24,121,22,63,189,27,79,191,113,120,115,63,0,0,128,191,113,120,115,63,189,27,79,191,24,121,22,63,122,55,158,190,77,14,212,38,122,55,158,62,24,121,22,191,189,27,79,63,113,120,115,191,0,0,128,63,113,120,115,191,189,27,79,63,24,121,22,191,122,55,158,62,33,89,57,40,122,55,158,190,24,121,22,63,189,27,79,191,113,120,115,63,0,0,128,191,113,120,115,63,189,27,79,191,24,121,22,63,122,55,158,190,243,4,53,63,240,150,119,191,55,233,94,63,243,149,55,191,160,50,4,63,64,63,144,190,97,238,233,60,197,238,103,62,5,239,238,190,204,25,45,63,100,92,87,191,113,120,115,63,30,149,127,191,177,230,122,63,231,187,101,191,206,120,65,63,90,127,16,191,171,14,172,62,243,65,175,189,95,157,46,190,71,177,212,62,27,13,34,191,189,27,79,63,164,142,110,191,210,84,126,63,240,100,125,191,194,206,107,63,27,186,74,191,107,83,28,63,105,78,199,190,251,186,17,62,84,116,233,61,238,193,185,190,24,121,22,63,37,46,70,191,164,221,104,63,38,64,124,191,153,15,127,63,182,28,113,191,32,82,83,63,244,164,39,191,187,231,225,62,77,91,75,190,245,213,105,189,122,55,158,62,112,103,10,191,17,155,60,63,50,106,98,191,216,88,121,63,70,229,127,191,85,161,117,63,177,57,91,191,128,106,50,63,107,196,251,190,232,40,130,62,243,4,53,63,177,230,122,191,194,206,107,63,32,82,83,191,128,106,50,63,112,103,10,191,238,193,185,62,95,157,46,190,97,238,233,188,197,238,103,62,71,177,212,190,24,121,22,63,17,155,60,191,177,57,91,63,182,28,113,191,240,100,125,63,30,149,127,191,240,150,119,63,231,187,101,191,27,186,74,63,244,164,39,191,107,196,251,62,122,55,158,190,84,116,233,61,243,65,175,61,64,63,144,190,5,239,238,62,27,13,34,191,37,46,70,63,50,106,98,191,85,161,117,63,153,15,127,191,210,84,126,63,113,120,115,191,55,233,94,63,206,120,65,191,107,83,28,63,187,231,225,190,232,40,130,62,245,213,105,189,251,186,17,190,171,14,172,62,160,50,4,191,204,25,45,63,189,27,79,191,164,221,104,63,216,88,121,191,70,229,127,63,38,64,124,191,164,142,110,63,100,92,87,191,243,149,55,63,90,127,16,191,105,78,199,62,77,91,75,190,243,4,53,63,240,100,125,191,85,161,117,63,164,221,104,191,100,92,87,63,206,120,65,191,244,164,39,63,112,103,10,191,71,177,212,62,64,63,144,190,251,186,17,62,222,94,13,166,251,186,17,190,64,63,144,62,71,177,212,190,112,103,10,63,244,164,39,191,206,120,65,63,100,92,87,191,164,221,104,63,85,161,117,191,240,100,125,63,0,0,128,191,240,100,125,63,85,161,117,191,164,221,104,63,100,92,87,191,206,120,65,63,244,164,39,191,112,103,10,63,71,177,212,190,64,63,144,62,251,186,17,190,77,14,212,38,251,186,17,62,64,63,144,190,71,177,212,62,112,103,10,191,244,164,39,63,206,120,65,191,100,92,87,63,164,221,104,191,85,161,117,63,240,100,125,191,0,0,128,63,240,100,125,191,85,161,117,63,164,221,104,191,100,92,87,63,206,120,65,191,244,164,39,63,112,103,10,191,71,177,212,62,64,63,144,190,251,186,17,62,243,4,53,63,153,15,127,191,38,64,124,63,240,150,119,191,182,28,113,63,164,221,104,191,55,233,94,63,32,82,83,191,37,46,70,63,243,149,55,191,244,164,39,63,24,121,22,191,160,50,4,63,187,231,225,190,238,193,185,62,64,63,144,190,77,91,75,62,84,116,233,189,97,238,233,60,245,213,105,61,251,186,17,190,197,238,103,62,122,55,158,190,105,78,199,62,5,239,238,190,112,103,10,63,107,83,28,191,204,25,45,63,17,155,60,191,27,186,74,63,100,92,87,191,50,106,98,63,194,206,107,191,113,120,115,63,216,88,121,191,240,100,125,63,30,149,127,191,70,229,127,63,210,84,126,191,177,230,122,63,85,161,117,191,164,142,110,63,231,187,101,191,177,57,91,63,189,27,79,191,206,120,65,63,128,106,50,191,27,13,34,63,90,127,16,191,107,196,251,62,71,177,212,190,171,14,172,62,232,40,130,190,95,157,46,62,243,65,175,189,243,4,53,63,70,229,127,191,30,149,127,63,153,15,127,191,210,84,126,63,240,100,125,191,38,64,124,63,177,230,122,191,216,88,121,63,240,150,119,191,85,161,117,63,113,120,115,191,182,28,113,63,164,142,110,191,194,206,107,63,164,221,104,191,231,187,101,63,50,106,98,191,55,233,94,63,177,57,91,191,100,92,87,63,32,82,83,191,189,27,79,63,27,186,74,191,37,46,70,63,206,120,65,191,17,155,60,63,243,149,55,191,128,106,50,63,204,25,45,191,244,164,39,63,27,13,34,191,107,83,28,63,24,121,22,191,90,127,16,63,112,103,10,191,160,50,4,63,107,196,251,190,5,239,238,62,187,231,225,190,71,177,212,62,105,78,199,190,238,193,185,62,171,14,172,190,122,55,158,62,64,63,144,190,232,40,130,62,197,238,103,190,77,91,75,62,95,157,46,190,251,186,17,62,84,116,233,189,243,65,175,61,245,213,105,189,97,238,233,60,243,4,53,63,56,230,127,63,230,152,127,63,26,24,127,63,236,99,126,63,131,124,125,63,11,98,124,63,190,20,123,63,224,148,121,63,189,226,119,63,173,254,117,63,18,233,115,63,87,162,113,63,240,42,111,63,94,131,108,63,42,172,105,63,229,165,102,63,44,113,99,63,164,14,96,63,252,126,92,63,235,194,88,63,49,219,84,63,153,200,80,63,243,139,76,63,28,38,72,63,244,151,67,63,104,226,62,63,105,6,58,63,243,4,53,63,8,223,47,63,176,149,42,63,254,41,37,63,7,157,31,63,235,239,25,63,205,35,20,63,218,57,14,63,65,51,8,63,58,17,2,63,1,170,247,62,172,255,234,62,2,38,222,62,155,31,209,62,21,239,195,62,25,151,182,62,86,26,169,62,133,123,155,62,98,189,141,62,104,197,127,62,135,220,99,62,194,197,71,62,192,134,43,62,51,37,15,62,162,77,229,61,174,34,172,61,32,170,101,61,67,193,229,60,243,4,53,63,26,24,127,63,11,98,124,63,189,226,119,63,87,162,113,63,42,172,105,63,164,14,96,63,49,219,84,63,28,38,72,63,105,6,58,63,176,149,42,63,235,239,25,63,65,51,8,63,172,255,234,62,21,239,195,62,133,123,155,62,135,220,99,62,51,37,15,62,32,170,101,61,67,193,229,188,162,77,229,189,194,197,71,190,98,189,141,190,25,151,182,190,2,38,222,190,58,17,2,191,205,35,20,191,254,41,37,191,243,4,53,191,244,151,67,191,153,200,80,191,252,126,92,191,229,165,102,191,240,42,111,191,173,254,117,191,190,20,123,191,236,99,126,191,56,230,127,191,230,152,127,191,131,124,125,191,224,148,121,191,18,233,115,191,94,131,108,191,44,113,99,191,235,194,88,191,243,139,76,191,104,226,62,191,8,223,47,191,7,157,31,191,218,57,14,191,1,170,247,190,155,31,209,190,86,26,169,190,104,197,127,190,192,134,43,190,174,34,172,189,243,4,53,63,131,124,125,63,173,254,117,63,42,172,105,63,235,194,88,63,244,151,67,63,176,149,42,63,218,57,14,63,2,38,222,62,133,123,155,62,192,134,43,62,67,193,229,60,162,77,229,189,104,197,127,190,21,239,195,190,58,17,2,191,7,157,31,191,105,6,58,191,153,200,80,191,44,113,99,191,87,162,113,191,190,20,123,191,230,152,127,191,26,24,127,191,224,148,121,191,240,42,111,191,164,14,96,191,243,139,76,191,243,4,53,191,235,239,25,191,1,170,247,190,25,151,182,190,135,220,99,190,174,34,172,189,32,170,101,61,194,197,71,62,86,26,169,62,172,255,234,62,205,35,20,63,8,223,47,63,28,38,72,63,252,126,92,63,94,131,108,63,189,226,119,63,236,99,126,63,56,230,127,63,11,98,124,63,18,233,115,63,229,165,102,63,49,219,84,63,104,226,62,63,254,41,37,63,65,51,8,63,155,31,209,62,98,189,141,62,51,37,15,62,243,4,53,63,190,20,123,63,94,131,108,63,49,219,84,63,243,4,53,63,218,57,14,63,21,239,195,62,194,197,71,62,50,49,141,36,194,197,71,190,21,239,195,190,218,57,14,191,243,4,53,191,49,219,84,191,94,131,108,191,190,20,123,191,0,0,128,191,190,20,123,191,94,131,108,191,49,219,84,191,243,4,53,191,218,57,14,191,21,239,195,190,194,197,71,190,202,201,83,165,194,197,71,62,21,239,195,62,218,57,14,63,243,4,53,63,49,219,84,63,94,131,108,63,190,20,123,63,0,0,128,63,190,20,123,63,94,131,108,63,49,219,84,63,243,4,53,63,218,57,14,63,21,239,195,62,194,197,71,62,126,125,176,37,194,197,71,190,21,239,195,190,218,57,14,191,243,4,53,191,49,219,84,191,94,131,108,191,190,20,123,191,0,0,128,191,190,20,123,191,94,131,108,191,49,219,84,191,243,4,53,191,218,57,14,191,21,239,195,190,194,197,71,190,243,4,53,63,189,226,119,63,164,14,96,63,105,6,58,63,65,51,8,63,133,123,155,62,32,170,101,61,194,197,71,190,2,38,222,190,254,41,37,191,153,200,80,191,240,42,111,191,236,99,126,191,131,124,125,191,94,131,108,191,243,139,76,191,7,157,31,191,155,31,209,190,192,134,43,190,174,34,172,61,86,26,169,62,218,57,14,63,104,226,62,63,44,113,99,63,224,148,121,63,56,230,127,63,173,254,117,63,252,126,92,63,243,4,53,63,58,17,2,63,98,189,141,62,67,193,229,60,135,220,99,190,172,255,234,190,176,149,42,191,49,219,84,191,87,162,113,191,26,24,127,191,11,98,124,191,42,172,105,191,28,38,72,191,235,239,25,191,21,239,195,190,51,37,15,190,162,77,229,61,25,151,182,62,205,35,20,63,244,151,67,63,229,165,102,63,190,20,123,63,230,152,127,63,18,233,115,63,235,194,88,63,8,223,47,63,1,170,247,62,104,197,127,62,243,4,53,63,18,233,115,63,153,200,80,63,235,239,25,63,86,26,169,62,67,193,229,60,98,189,141,190,218,57,14,191,28,38,72,191,240,42,111,191,230,152,127,191,189,226,119,191,235,194,88,191,254,41,37,191,21,239,195,190,174,34,172,189,135,220,99,62,58,17,2,63,104,226,62,63,42,172,105,63,236,99,126,63,190,20,123,63,164,14,96,63,8,223,47,63,2,38,222,62,51,37,15,62,192,134,43,190,172,255,234,190,243,4,53,191,44,113,99,191,11,98,124,191,131,124,125,191,229,165,102,191,105,6,58,191,1,170,247,190,194,197,71,190,162,77,229,61,155,31,209,62,176,149,42,63,252,126,92,63,224,148,121,63,26,24,127,63,94,131,108,63,244,151,67,63,65,51,8,63,104,197,127,62,32,170,101,189,25,151,182,190,7,157,31,191,49,219,84,191,173,254,117,191,56,230,127,191,87,162,113,191,243,139,76,191,205,35,20,191,133,123,155,190,243,4,53,63,240,42,111,63,104,226,62,63,172,255,234,62,162,77,229,61,104,197,127,190,205,35,20,191,49,219,84,191,224,148,121,191,131,124,125,191,164,14,96,191,254,41,37,191,86,26,169,190,67,193,229,60,21,239,195,62,8,223,47,63,229,165,102,63,26,24,127,63,173,254,117,63,243,139,76,63,65,51,8,63,194,197,71,62,192,134,43,190,58,17,2,191,28,38,72,191,18,233,115,191,230,152,127,191,42,172,105,191,243,4,53,191,155,31,209,190,32,170,101,189,133,123,155,62,7,157,31,63,252,126,92,63,11,98,124,63,190,20,123,63,235,194,88,63,235,239,25,63,98,189,141,62,174,34,172,189,2,38,222,190,105,6,58,191,94,131,108,191,56,230,127,191,87,162,113,191,244,151,67,191,1,170,247,190,51,37,15,190,135,220,99,62,218,57,14,63,153,200,80,63,189,226,119,63,236,99,126,63,44,113,99,63,176,149,42,63,25,151,182,62,243,4,53,63,42,172,105,63,176,149,42,63,133,123,155,62,162,77,229,189,58,17,2,191,153,200,80,191,190,20,123,191,224,148,121,191,243,139,76,191,1,170,247,190,174,34,172,189,86,26,169,62,8,223,47,63,94,131,108,63,56,230,127,63,229,165,102,63,254,41,37,63,98,189,141,62,51,37,15,190,65,51,8,191,49,219,84,191,11,98,124,191,189,226,119,191,28,38,72,191,172,255,234,190,32,170,101,189,25,151,182,62,243,4,53,63,240,42,111,63,230,152,127,63,44,113,99,63,7,157,31,63,104,197,127,62,192,134,43,190,218,57,14,191,235,194,88,191,131,124,125,191,173,254,117,191,244,151,67,191,2,38,222,190,67,193,229,188,21,239,195,62,105,6,58,63,87,162,113,63,26,24,127,63,164,14,96,63,235,239,25,63,135,220,99,62,194,197,71,190,205,35,20,191,252,126,92,191,236,99,126,191,18,233,115,191,104,226,62,191,155,31,209,190,243,4,53,63,44,113,99,63,205,35,20,63,51,37,15,62,86,26,169,190,105,6,58,191,173,254,117,191,190,20,123,191,28,38,72,191,155,31,209,190,32,170,101,61,58,17,2,63,235,194,88,63,26,24,127,63,94,131,108,63,254,41,37,63,135,220,99,62,104,197,127,190,176,149,42,191,240,42,111,191,236,99,126,191,49,219,84,191,1,170,247,190,67,193,229,188,2,38,222,62,243,139,76,63,11,98,124,63,18,233,115,63,243,4,53,63,133,123,155,62,192,134,43,190,235,239,25,191,229,165,102,191,56,230,127,191,164,14,96,191,218,57,14,191,162,77,229,189,25,151,182,62,104,226,62,63,189,226,119,63,224,148,121,63,244,151,67,63,21,239,195,62,174,34,172,189,65,51,8,191,252,126,92,191,230,152,127,191,42,172,105,191,7,157,31,191,194,197,71,190,98,189,141,62,8,223,47,63,87,162,113,63,131,124,125,63,153,200,80,63,172,255,234,62,243,4,53,63,252,126,92,63,1,170,247,62,67,193,229,188,65,51,8,191,44,113,99,191,230,152,127,191,49,219,84,191,2,38,222,190,174,34,172,61,205,35,20,63,42,172,105,63,236,99,126,63,243,139,76,63,21,239,195,62,51,37,15,190,7,157,31,191,240,42,111,191,11,98,124,191,244,151,67,191,86,26,169,190,194,197,71,62,176,149,42,63,18,233,115,63,224,148,121,63,105,6,58,63,98,189,141,62,104,197,127,190,243,4,53,191,189,226,119,191,173,254,117,191,8,223,47,191,135,220,99,190,133,123,155,62,104,226,62,63,190,20,123,63,87,162,113,63,254,41,37,63,192,134,43,62,25,151,182,190,28,38,72,191,131,124,125,191,94,131,108,191,235,239,25,191,162,77,229,189,155,31,209,62,153,200,80,63,26,24,127,63,229,165,102,63,218,57,14,63,32,170,101,61,172,255,234,190,235,194,88,191,56,230,127,191,164,14,96,191,58,17,2,191,243,4,53,63,49,219,84,63,21,239,195,62,194,197,71,190,243,4,53,191,190,20,123,191,94,131,108,191,218,57,14,191,202,201,83,165,218,57,14,63,94,131,108,63,190,20,123,63,243,4,53,63,194,197,71,62,21,239,195,190,49,219,84,191,0,0,128,191,49,219,84,191,21,239,195,190,194,197,71,62,243,4,53,63,190,20,123,63,94,131,108,63,218,57,14,63,88,215,30,38,218,57,14,191,94,131,108,191,190,20,123,191,243,4,53,191,194,197,71,190,21,239,195,62,49,219,84,63,0,0,128,63,49,219,84,63,21,239,195,62,194,197,71,190,243,4,53,191,190,20,123,191,94,131,108,191,218,57,14,191,15,47,66,167,218,57,14,63,94,131,108,63,190,20,123,63,243,4,53,63,194,197,71,62,21,239,195,190,49,219,84,191,0,0,128,191,49,219,84,191,21,239,195,190,194,197,71,62,243,4,53,63,190,20,123,63,94,131,108,63,218,57,14,63,243,4,53,63,243,139,76,63,98,189,141,62,25,151,182,190,235,194,88,191,26,24,127,191,104,226,62,191,194,197,71,190,2,38,222,62,44,113,99,63,11,98,124,63,8,223,47,63,162,77,229,61,58,17,2,191,94,131,108,191,189,226,119,191,7,157,31,191,67,193,229,188,205,35,20,63,18,233,115,63,87,162,113,63,218,57,14,63,32,170,101,189,254,41,37,191,224,148,121,191,42,172,105,191,1,170,247,190,51,37,15,62,243,4,53,63,131,124,125,63,164,14,96,63,155,31,209,62,135,220,99,190,244,151,67,191,230,152,127,191,49,219,84,191,86,26,169,190,133,123,155,62,153,200,80,63,56,230,127,63,28,38,72,63,104,197,127,62,21,239,195,190,252,126,92,191,236,99,126,191,105,6,58,191,192,134,43,190,172,255,234,62,229,165,102,63,190,20,123,63,176,149,42,63,174,34,172,61,65,51,8,191,240,42,111,191,173,254,117,191,235,239,25,191,243,4,53,63,244,151,67,63,192,134,43,62,58,17,2,191,87,162,113,191,240,42,111,191,1,170,247,190,194,197,71,62,28,38,72,63,56,230,127,63,104,226,62,63,51,37,15,62,65,51,8,191,18,233,115,191,94,131,108,191,172,255,234,190,135,220,99,62,243,139,76,63,230,152,127,63,105,6,58,63,162,77,229,61,218,57,14,191,173,254,117,191,42,172,105,191,2,38,222,190,104,197,127,62,153,200,80,63,26,24,127,63,243,4,53,63,174,34,172,61,205,35,20,191,189,226,119,191,229,165,102,191,155,31,209,190,98,189,141,62,49,219,84,63,236,99,126,63,8,223,47,63,32,170,101,61,235,239,25,191,224,148,121,191,44,113,99,191,21,239,195,190,133,123,155,62,235,194,88,63,131,124,125,63,176,149,42,63,67,193,229,60,7,157,31,191,190,20,123,191,164,14,96,191,25,151,182,190,86,26,169,62,252,126,92,63,11,98,124,63,254,41,37,63,243,4,53,63,105,6,58,63,32,170,101,61,254,41,37,191,236,99,126,191,243,139,76,191,192,134,43,190,218,57,14,63,224,148,121,63,252,126,92,63,98,189,141,62,172,255,234,190,87,162,113,191,42,172,105,191,21,239,195,190,25,151,182,62,229,165,102,63,18,233,115,63,1,170,247,62,104,197,127,190,235,194,88,191,190,20,123,191,205,35,20,191,51,37,15,62,28,38,72,63,26,24,127,63,176,149,42,63,67,193,229,188,243,4,53,191,56,230,127,191,104,226,62,191,174,34,172,189,7,157,31,63,131,124,125,63,153,200,80,63,194,197,71,62,65,51,8,191,189,226,119,191,164,14,96,191,133,123,155,190,2,38,222,62,240,42,111,63,94,131,108,63,155,31,209,62,86,26,169,190,44,113,99,191,173,254,117,191,58,17,2,191,135,220,99,62,49,219,84,63,11,98,124,63,235,239,25,63,162,77,229,189,244,151,67,191,230,152,127,191,8,223,47,191,243,4,53,63,8,223,47,63,32,170,101,189,244,151,67,191,236,99,126,191,235,239,25,191,192,134,43,62,49,219,84,63,224,148,121,63,58,17,2,63,98,189,141,190,44,113,99,191,87,162,113,191,155,31,209,190,21,239,195,62,240,42,111,63,229,165,102,63,133,123,155,62,1,170,247,190,189,226,119,191,235,194,88,191,194,197,71,190,205,35,20,63,131,124,125,63,28,38,72,63,174,34,172,61,176,149,42,191,56,230,127,191,243,4,53,191,67,193,229,60,104,226,62,63,26,24,127,63,7,157,31,63,51,37,15,190,153,200,80,191,190,20,123,191,65,51,8,191,104,197,127,62,164,14,96,63,18,233,115,63,2,38,222,62,25,151,182,190,94,131,108,191,42,172,105,191,86,26,169,190,172,255,234,62,173,254,117,63,252,126,92,63,135,220,99,62,218,57,14,191,11,98,124,191,243,139,76,191,162,77,229,189,254,41,37,63,230,152,127,63,105,6,58,63,243,4,53,63,254,41,37,63,192,134,43,190,252,126,92,191,87,162,113,191,25,151,182,190,1,170,247,62,190,20,123,63,28,38,72,63,67,193,229,60,104,226,62,191,131,124,125,191,65,51,8,191,133,123,155,62,94,131,108,63,44,113,99,63,135,220,99,62,235,239,25,191,230,152,127,191,8,223,47,191,162,77,229,61,49,219,84,63,173,254,117,63,155,31,209,62,2,38,222,190,189,226,119,191,153,200,80,191,174,34,172,189,243,4,53,63,26,24,127,63,205,35,20,63,104,197,127,190,229,165,102,191,42,172,105,191,98,189,141,190,218,57,14,63,236,99,126,63,105,6,58,63,32,170,101,189,243,139,76,191,224,148,121,191,172,255,234,190,21,239,195,62,18,233,115,63,235,194,88,63,51,37,15,62,176,149,42,191,56,230,127,191,7,157,31,191,194,197,71,62,164,14,96,63,240,42,111,63,86,26,169,62,58,17,2,191,11,98,124,191,244,151,67,191,243,4,53,63,235,239,25,63,98,189,141,190,240,42,111,191,235,194,88,191,174,34,172,189,104,226,62,63,190,20,123,63,2,38,222,62,172,255,234,190,11,98,124,191,105,6,58,191,162,77,229,61,252,126,92,63,94,131,108,63,104,197,127,62,7,157,31,191,56,230,127,191,205,35,20,191,133,123,155,62,87,162,113,63,49,219,84,63,32,170,101,61,244,151,67,191,224,148,121,191,155,31,209,190,1,170,247,62,131,124,125,63,243,4,53,63,51,37,15,190,164,14,96,191,42,172,105,191,135,220,99,190,254,41,37,63,230,152,127,63,218,57,14,63,86,26,169,190,18,233,115,191,153,200,80,191,67,193,229,188,28,38,72,63,189,226,119,63,21,239,195,62,58,17,2,191,236,99,126,191,8,223,47,191,192,134,43,62,44,113,99,63,229,165,102,63,194,197,71,62,176,149,42,191,26,24,127,191,65,51,8,191,25,151,182,62,173,254,117,63,243,139,76,63,243,4,53,63,218,57,14,63,21,239,195,190,190,20,123,191,243,4,53,191,194,197,71,62,94,131,108,63,49,219,84,63,126,125,176,37,49,219,84,191,94,131,108,191,194,197,71,190,243,4,53,63,190,20,123,63,21,239,195,62,218,57,14,191,0,0,128,191,218,57,14,191,21,239,195,62,190,20,123,63,243,4,53,63,194,197,71,190,94,131,108,191,49,219,84,191,15,47,66,167,49,219,84,63,94,131,108,63,194,197,71,62,243,4,53,191,190,20,123,191,21,239,195,190,218,57,14,63,0,0,128,63,218,57,14,63,21,239,195,190,190,20,123,191,243,4,53,191,194,197,71,62,94,131,108,63,49,219,84,63,138,140,141,165,49,219,84,191,94,131,108,191,194,197,71,190,243,4,53,63,190,20,123,63,21,239,195,62,218,57,14,191,0,0,128,191,218,57,14,191,21,239,195,62,190,20,123,63,243,4,53,63,194,197,71,190,94,131,108,191,49,219,84,191,243,4,53,63,58,17,2,63,1,170,247,190,56,230,127,191,65,51,8,191,172,255,234,62,230,152,127,63,218,57,14,63,2,38,222,190,26,24,127,191,205,35,20,191,155,31,209,62,236,99,126,63,235,239,25,63,21,239,195,190,131,124,125,191,7,157,31,191,25,151,182,62,11,98,124,63,254,41,37,63,86,26,169,190,190,20,123,191,176,149,42,191,133,123,155,62,224,148,121,63,8,223,47,63,98,189,141,190,189,226,119,191,243,4,53,191,104,197,127,62,173,254,117,63,105,6,58,63,135,220,99,190,18,233,115,191,104,226,62,191,194,197,71,62,87,162,113,63,244,151,67,63,192,134,43,190,240,42,111,191,28,38,72,191,51,37,15,62,94,131,108,63,243,139,76,63,162,77,229,189,42,172,105,191,153,200,80,191,174,34,172,61,229,165,102,63,49,219,84,63,32,170,101,189,44,113,99,191,235,194,88,191,67,193,229,60,164,14,96,63,252,126,92,63,243,4,53,63,172,255,234,62,205,35,20,191,131,124,125,191,86,26,169,190,8,223,47,63,173,254,117,63,194,197,71,62,28,38,72,191,42,172,105,191,32,170,101,189,252,126,92,63,235,194,88,63,174,34,172,189,94,131,108,191,244,151,67,191,135,220,99,62,189,226,119,63,176,149,42,63,25,151,182,190,236,99,126,191,218,57,14,191,1,170,247,62,56,230,127,63,2,38,222,62,235,239,25,191,11,98,124,191,133,123,155,190,243,4,53,63,18,233,115,63,192,134,43,62,243,139,76,191,229,165,102,191,67,193,229,188,164,14,96,63,49,219,84,63,162,77,229,189,240,42,111,191,104,226,62,191,104,197,127,62,224,148,121,63,254,41,37,63,21,239,195,190,26,24,127,191,65,51,8,191,58,17,2,63,230,152,127,63,155,31,209,62,7,157,31,191,190,20,123,191,98,189,141,190,105,6,58,63,87,162,113,63,51,37,15,62,153,200,80,191,44,113,99,191,243,4,53,63,155,31,209,62,176,149,42,191,18,233,115,191,162,77,229,189,252,126,92,63,153,200,80,63,194,197,71,190,224,148,121,191,235,239,25,191,1,170,247,62,26,24,127,63,86,26,169,62,105,6,58,191,94,131,108,191,67,193,229,188,229,165,102,63,244,151,67,63,98,189,141,190,131,124,125,191,65,51,8,191,218,57,14,63,11,98,124,63,104,197,127,62,28,38,72,191,44,113,99,191,32,170,101,61,240,42,111,63,243,4,53,63,25,151,182,190,230,152,127,191,172,255,234,190,7,157,31,63,189,226,119,63,192,134,43,62,49,219,84,191,235,194,88,191,51,37,15,62,173,254,117,63,254,41,37,63,2,38,222,190,56,230,127,191,21,239,195,190,8,223,47,63,87,162,113,63,174,34,172,61,164,14,96,191,243,139,76,191,135,220,99,62,190,20,123,63,205,35,20,63,58,17,2,191,236,99,126,191,133,123,155,190,104,226,62,63,42,172,105,63,243,4,53,63,25,151,182,62,104,226,62,191,44,113,99,191,162,77,229,61,189,226,119,63,205,35,20,63,218,57,14,191,224,148,121,191,51,37,15,190,164,14,96,63,244,151,67,63,86,26,169,190,56,230,127,191,21,239,195,190,105,6,58,63,229,165,102,63,174,34,172,189,173,254,117,191,235,239,25,191,65,51,8,63,190,20,123,63,192,134,43,62,252,126,92,191,28,38,72,191,133,123,155,62,230,152,127,63,155,31,209,62,243,4,53,191,42,172,105,191,32,170,101,61,18,233,115,63,7,157,31,63,58,17,2,191,11,98,124,191,194,197,71,190,235,194,88,63,243,139,76,63,98,189,141,190,26,24,127,191,2,38,222,190,8,223,47,63,94,131,108,63,67,193,229,188,87,162,113,191,254,41,37,191,1,170,247,62,131,124,125,63,135,220,99,62,49,219,84,191,153,200,80,191,104,197,127,62,236,99,126,63,172,255,234,62,176,149,42,191,240,42,111,191,243,4,53,63,133,123,155,62,153,200,80,191,243,139,76,191,86,26,169,62,56,230,127,63,98,189,141,62,49,219,84,191,28,38,72,191,25,151,182,62,230,152,127,63,104,197,127,62,235,194,88,191,244,151,67,191,21,239,195,62,26,24,127,63,135,220,99,62,252,126,92,191,104,226,62,191,155,31,209,62,236,99,126,63,194,197,71,62,164,14,96,191,105,6,58,191,2,38,222,62,131,124,125,63,192,134,43,62,44,113,99,191,243,4,53,191,172,255,234,62,11,98,124,63,51,37,15,62,229,165,102,191,8,223,47,191,1,170,247,62,190,20,123,63,162,77,229,61,42,172,105,191,176,149,42,191,58,17,2,63,224,148,121,63,174,34,172,61,94,131,108,191,254,41,37,191,65,51,8,63,189,226,119,63,32,170,101,61,240,42,111,191,7,157,31,191,218,57,14,63,173,254,117,63,67,193,229,60,87,162,113,191,235,239,25,191,205,35,20,63,18,233,115,63,243,4,53,63,104,197,127,62,164,14,96,191,8,223,47,191,65,51,8,63,18,233,115,63,32,170,101,189,190,20,123,191,2,38,222,190,244,151,67,63,153,200,80,63,25,151,182,190,236,99,126,191,51,37,15,190,94,131,108,63,235,239,25,63,7,157,31,191,42,172,105,191,192,134,43,62,26,24,127,63,86,26,169,62,49,219,84,191,104,226,62,191,172,255,234,62,224,148,121,63,67,193,229,60,173,254,117,191,58,17,2,191,243,4,53,63,252,126,92,63,98,189,141,190,56,230,127,191,135,220,99,190,44,113,99,63,176,149,42,63,218,57,14,191,87,162,113,191,174,34,172,61,11,98,124,63,155,31,209,62,28,38,72,191,243,139,76,191,21,239,195,62,131,124,125,63,162,77,229,61,240,42,111,191,205,35,20,191,254,41,37,63,229,165,102,63,194,197,71,190,230,152,127,191,133,123,155,190,235,194,88,63,105,6,58,63,1,170,247,190,189,226,119,191,243,4,53,63,194,197,71,62,94,131,108,191,218,57,14,191,243,4,53,63,49,219,84,63,21,239,195,190,190,20,123,191,23,22,247,165,190,20,123,63,21,239,195,62,49,219,84,191,243,4,53,191,218,57,14,63,94,131,108,63,194,197,71,190,0,0,128,191,194,197,71,190,94,131,108,63,218,57,14,63,243,4,53,191,49,219,84,191,21,239,195,62,190,20,123,63,222,94,13,166,190,20,123,191,21,239,195,190,49,219,84,63,243,4,53,63,218,57,14,191,94,131,108,191,194,197,71,62,0,0,128,63,194,197,71,62,94,131,108,191,218,57,14,191,243,4,53,63,49,219,84,63,21,239,195,190,190,20,123,191,231,54,141,167,190,20,123,63,21,239,195,62,49,219,84,191,243,4,53,191,218,57,14,63,94,131,108,63,194,197,71,190,0,0,128,191,194,197,71,190,94,131,108,63,218,57,14,63,243,4,53,191,49,219,84,191,21,239,195,62,190,20,123,63,243,4,53,63,51,37,15,62,173,254,117,191,155,31,209,190,235,194,88,63,254,41,37,63,176,149,42,191,49,219,84,191,2,38,222,62,18,233,115,63,192,134,43,190,56,230,127,191,162,77,229,189,189,226,119,63,21,239,195,62,252,126,92,191,7,157,31,191,8,223,47,63,153,200,80,63,172,255,234,190,87,162,113,191,194,197,71,62,230,152,127,63,174,34,172,61,224,148,121,191,25,151,182,190,164,14,96,63,235,239,25,63,243,4,53,191,243,139,76,191,1,170,247,62,240,42,111,63,135,220,99,190,26,24,127,191,32,170,101,189,190,20,123,63,86,26,169,62,44,113,99,191,205,35,20,191,105,6,58,63,28,38,72,63,58,17,2,191,94,131,108,191,104,197,127,62,236,99,126,63,67,193,229,60,11,98,124,191,133,123,155,190,229,165,102,63,218,57,14,63,104,226,62,191,244,151,67,191,65,51,8,63,42,172,105,63,98,189,141,190,131,124,125,191,243,4,53,63,174,34,172,61,11,98,124,191,104,197,127,190,87,162,113,63,155,31,209,62,164,14,96,191,218,57,14,191,28,38,72,63,8,223,47,63,176,149,42,191,243,139,76,191,65,51,8,63,44,113,99,63,21,239,195,190,18,233,115,191,135,220,99,62,131,124,125,63,32,170,101,189,56,230,127,191,162,77,229,189,190,20,123,63,98,189,141,62,240,42,111,191,2,38,222,190,252,126,92,63,205,35,20,63,244,151,67,191,243,4,53,191,254,41,37,63,153,200,80,63,58,17,2,191,229,165,102,191,25,151,182,62,173,254,117,63,194,197,71,190,236,99,126,191,67,193,229,60,230,152,127,63,51,37,15,62,224,148,121,191,133,123,155,190,94,131,108,63,172,255,234,62,235,194,88,191,235,239,25,191,104,226,62,63,105,6,58,63,7,157,31,191,49,219,84,191,1,170,247,62,42,172,105,63,86,26,169,190,189,226,119,191,192,134,43,62,26,24,127,63,243,4,53,63,67,193,229,60,230,152,127,191,174,34,172,189,236,99,126,63,51,37,15,62,11,98,124,191,194,197,71,190,224,148,121,63,104,197,127,62,173,254,117,191,133,123,155,190,87,162,113,63,25,151,182,62,94,131,108,191,155,31,209,190,229,165,102,63,172,255,234,62,164,14,96,191,58,17,2,191,235,194,88,63,218,57,14,63,153,200,80,191,235,239,25,191,28,38,72,63,254,41,37,63,104,226,62,191,8,223,47,191,243,4,53,63,105,6,58,63,176,149,42,191,244,151,67,191,7,157,31,63,243,139,76,63,205,35,20,191,49,219,84,191,65,51,8,63,252,126,92,63,1,170,247,190,44,113,99,191,2,38,222,62,42,172,105,63,21,239,195,190,240,42,111,191,86,26,169,62,18,233,115,63,98,189,141,190,189,226,119,191,135,220,99,62,190,20,123,63,192,134,43,190,131,124,125,191,162,77,229,61,26,24,127,63,32,170,101,189,56,230,127,191,243,4,53,63,67,193,229,188,230,152,127,191,174,34,172,61,236,99,126,63,51,37,15,190,11,98,124,191,194,197,71,62,224,148,121,63,104,197,127,190,173,254,117,191,133,123,155,62,87,162,113,63,25,151,182,190,94,131,108,191,155,31,209,62,229,165,102,63,172,255,234,190,164,14,96,191,58,17,2,63,235,194,88,63,218,57,14,191,153,200,80,191,235,239,25,63,28,38,72,63,254,41,37,191,104,226,62,191,8,223,47,63,243,4,53,63,105,6,58,191,176,149,42,191,244,151,67,63,7,157,31,63,243,139,76,191,205,35,20,191,49,219,84,63,65,51,8,63,252,126,92,191,1,170,247,190,44,113,99,63,2,38,222,62,42,172,105,191,21,239,195,190,240,42,111,63,86,26,169,62,18,233,115,191,98,189,141,190,189,226,119,63,135,220,99,62,190,20,123,191,192,134,43,190,131,124,125,63,162,77,229,61,26,24,127,191,32,170,101,189,56,230,127,63,243,4,53,63,174,34,172,189,11,98,124,191,104,197,127,62,87,162,113,63,155,31,209,190,164,14,96,191,218,57,14,63,28,38,72,63,8,223,47,191,176,149,42,191,243,139,76,63,65,51,8,63,44,113,99,191,21,239,195,190,18,233,115,63,135,220,99,62,131,124,125,191,32,170,101,189,56,230,127,63,162,77,229,189,190,20,123,191,98,189,141,62,240,42,111,63,2,38,222,190,252,126,92,191,205,35,20,63,244,151,67,63,243,4,53,191,254,41,37,191,153,200,80,63,58,17,2,63,229,165,102,191,25,151,182,190,173,254,117,63,194,197,71,62,236,99,126,191,67,193,229,188,230,152,127,63,51,37,15,190,224,148,121,191,133,123,155,62,94,131,108,63,172,255,234,190,235,194,88,191,235,239,25,63,104,226,62,63,105,6,58,191,7,157,31,191,49,219,84,63,1,170,247,62,42,172,105,191,86,26,169,190,189,226,119,63,192,134,43,62,26,24,127,191,243,4,53,63,51,37,15,190,173,254,117,191,155,31,209,62,235,194,88,63,254,41,37,191,176,149,42,191,49,219,84,63,2,38,222,62,18,233,115,191,192,134,43,190,56,230,127,63,162,77,229,189,189,226,119,191,21,239,195,62,252,126,92,63,7,157,31,191,8,223,47,191,153,200,80,63,172,255,234,62,87,162,113,191,194,197,71,190,230,152,127,63,174,34,172,189,224,148,121,191,25,151,182,62,164,14,96,63,235,239,25,191,243,4,53,191,243,139,76,63,1,170,247,62,240,42,111,191,135,220,99,190,26,24,127,63,32,170,101,189,190,20,123,191,86,26,169,62,44,113,99,63,205,35,20,191,105,6,58,191,28,38,72,63,58,17,2,63,94,131,108,191,104,197,127,190,236,99,126,63,67,193,229,188,11,98,124,191,133,123,155,62,229,165,102,63,218,57,14,191,104,226,62,191,244,151,67,63,65,51,8,63,42,172,105,191,98,189,141,190,131,124,125,63,243,4,53,63,194,197,71,190,94,131,108,191,218,57,14,63,243,4,53,63,49,219,84,191,21,239,195,190,190,20,123,63,88,215,30,38,190,20,123,191,21,239,195,62,49,219,84,63,243,4,53,191,218,57,14,191,94,131,108,63,194,197,71,62,0,0,128,191,194,197,71,62,94,131,108,63,218,57,14,191,243,4,53,191,49,219,84,63,21,239,195,62,190,20,123,191,130,33,119,167,190,20,123,63,21,239,195,190,49,219,84,191,243,4,53,63,218,57,14,63,94,131,108,191,194,197,71,190,0,0,128,63,194,197,71,190,94,131,108,191,218,57,14,63,243,4,53,63,49,219,84,191,21,239,195,190,190,20,123,63,91,26,141,38,190,20,123,191,21,239,195,62,49,219,84,63,243,4,53,191,218,57,14,191,94,131,108,63,194,197,71,62,0,0,128,191,194,197,71,62,94,131,108,63,218,57,14,191,243,4,53,191,49,219,84,63,21,239,195,62,190,20,123,191,243,4,53,63,104,197,127,190,164,14,96,191,8,223,47,63,65,51,8,63,18,233,115,191,32,170,101,189,190,20,123,63,2,38,222,190,244,151,67,191,153,200,80,63,25,151,182,62,236,99,126,191,51,37,15,62,94,131,108,63,235,239,25,191,7,157,31,191,42,172,105,63,192,134,43,62,26,24,127,191,86,26,169,62,49,219,84,63,104,226,62,191,172,255,234,190,224,148,121,63,67,193,229,188,173,254,117,191,58,17,2,63,243,4,53,63,252,126,92,191,98,189,141,190,56,230,127,63,135,220,99,190,44,113,99,191,176,149,42,63,218,57,14,63,87,162,113,191,174,34,172,189,11,98,124,63,155,31,209,190,28,38,72,191,243,139,76,63,21,239,195,62,131,124,125,191,162,77,229,61,240,42,111,63,205,35,20,191,254,41,37,191,229,165,102,63,194,197,71,62,230,152,127,191,133,123,155,62,235,194,88,63,105,6,58,191,1,170,247,190,189,226,119,63,243,4,53,63,133,123,155,190,153,200,80,191,243,139,76,63,86,26,169,62,56,230,127,191,98,189,141,62,49,219,84,63,28,38,72,191,25,151,182,190,230,152,127,63,104,197,127,190,235,194,88,191,244,151,67,63,21,239,195,62,26,24,127,191,135,220,99,62,252,126,92,63,104,226,62,191,155,31,209,190,236,99,126,63,194,197,71,190,164,14,96,191,105,6,58,63,2,38,222,62,131,124,125,191,192,134,43,62,44,113,99,63,243,4,53,191,172,255,234,190,11,98,124,63,51,37,15,190,229,165,102,191,8,223,47,63,1,170,247,62,190,20,123,191,162,77,229,61,42,172,105,63,176,149,42,191,58,17,2,191,224,148,121,63,174,34,172,189,94,131,108,191,254,41,37,63,65,51,8,63,189,226,119,191,32,170,101,61,240,42,111,63,7,157,31,191,218,57,14,191,173,254,117,63,67,193,229,188,87,162,113,191,235,239,25,63,205,35,20,63,18,233,115,191,243,4,53,63,25,151,182,190,104,226,62,191,44,113,99,63,162,77,229,61,189,226,119,191,205,35,20,63,218,57,14,63,224,148,121,191,51,37,15,62,164,14,96,63,244,151,67,191,86,26,169,190,56,230,127,63,21,239,195,190,105,6,58,191,229,165,102,63,174,34,172,61,173,254,117,191,235,239,25,63,65,51,8,63,190,20,123,191,192,134,43,62,252,126,92,63,28,38,72,191,133,123,155,190,230,152,127,63,155,31,209,190,243,4,53,191,42,172,105,63,32,170,101,61,18,233,115,191,7,157,31,63,58,17,2,63,11,98,124,191,194,197,71,62,235,194,88,63,243,139,76,191,98,189,141,190,26,24,127,63,2,38,222,190,8,223,47,191,94,131,108,63,67,193,229,60,87,162,113,191,254,41,37,63,1,170,247,62,131,124,125,191,135,220,99,62,49,219,84,63,153,200,80,191,104,197,127,190,236,99,126,63,172,255,234,190,176,149,42,191,240,42,111,63,243,4,53,63,155,31,209,190,176,149,42,191,18,233,115,63,162,77,229,189,252,126,92,191,153,200,80,63,194,197,71,62,224,148,121,191,235,239,25,63,1,170,247,62,26,24,127,191,86,26,169,62,105,6,58,63,94,131,108,191,67,193,229,60,229,165,102,63,244,151,67,191,98,189,141,190,131,124,125,63,65,51,8,191,218,57,14,191,11,98,124,63,104,197,127,190,28,38,72,191,44,113,99,63,32,170,101,61,240,42,111,191,243,4,53,63,25,151,182,62,230,152,127,191,172,255,234,62,7,157,31,63,189,226,119,191,192,134,43,62,49,219,84,63,235,194,88,191,51,37,15,190,173,254,117,63,254,41,37,191,2,38,222,190,56,230,127,63,21,239,195,190,8,223,47,191,87,162,113,63,174,34,172,189,164,14,96,191,243,139,76,63,135,220,99,62,190,20,123,191,205,35,20,63,58,17,2,63,236,99,126,191,133,123,155,62,104,226,62,63,42,172,105,191,243,4,53,63,172,255,234,190,205,35,20,191,131,124,125,63,86,26,169,190,8,223,47,191,173,254,117,63,194,197,71,190,28,38,72,191,42,172,105,63,32,170,101,189,252,126,92,191,235,194,88,63,174,34,172,61,94,131,108,191,244,151,67,63,135,220,99,62,189,226,119,191,176,149,42,63,25,151,182,62,236,99,126,191,218,57,14,63,1,170,247,62,56,230,127,191,2,38,222,62,235,239,25,63,11,98,124,191,133,123,155,62,243,4,53,63,18,233,115,191,192,134,43,62,243,139,76,63,229,165,102,191,67,193,229,60,164,14,96,63,49,219,84,191,162,77,229,189,240,42,111,63,104,226,62,191,104,197,127,190,224,148,121,63,254,41,37,191,21,239,195,190,26,24,127,63,65,51,8,191,58,17,2,191,230,152,127,63,155,31,209,190,7,157,31,191,190,20,123,63,98,189,141,190,105,6,58,191,87,162,113,63,51,37,15,190,153,200,80,191,44,113,99,63,243,4,53,63,58,17,2,191,1,170,247,190,56,230,127,63,65,51,8,191,172,255,234,190,230,152,127,63,218,57,14,191,2,38,222,190,26,24,127,63,205,35,20,191,155,31,209,190,236,99,126,63,235,239,25,191,21,239,195,190,131,124,125,63,7,157,31,191,25,151,182,190,11,98,124,63,254,41,37,191,86,26,169,190,190,20,123,63,176,149,42,191,133,123,155,190,224,148,121,63,8,223,47,191,98,189,141,190,189,226,119,63,243,4,53,191,104,197,127,190,173,254,117,63,105,6,58,191,135,220,99,190,18,233,115,63,104,226,62,191,194,197,71,190,87,162,113,63,244,151,67,191,192,134,43,190,240,42,111,63,28,38,72,191,51,37,15,190,94,131,108,63,243,139,76,191,162,77,229,189,42,172,105,63,153,200,80,191,174,34,172,189,229,165,102,63,49,219,84,191,32,170,101,189,44,113,99,63,235,194,88,191,67,193,229,188,164,14,96,63,252,126,92,191,243,4,53,63,218,57,14,191,21,239,195,190,190,20,123,63,243,4,53,191,194,197,71,190,94,131,108,63,49,219,84,191,233,136,48,167,49,219,84,63,94,131,108,191,194,197,71,62,243,4,53,63,190,20,123,191,21,239,195,62,218,57,14,63,0,0,128,191,218,57,14,63,21,239,195,62,190,20,123,191,243,4,53,63,194,197,71,62,94,131,108,191,49,219,84,63,175,102,4,40,49,219,84,191,94,131,108,63,194,197,71,190,243,4,53,191,190,20,123,63,21,239,195,190,218,57,14,191,0,0,128,63,218,57,14,191,21,239,195,190,190,20,123,63,243,4,53,191,194,197,71,190,94,131,108,63,49,219,84,191,35,171,92,168,49,219,84,63,94,131,108,191,194,197,71,62,243,4,53,63,190,20,123,191,21,239,195,62,218,57,14,63,0,0,128,191,218,57,14,63,21,239,195,62,190,20,123,191,243,4,53,63,194,197,71,62,94,131,108,191,49,219,84,63,243,4,53,63,235,239,25,191,98,189,141,190,240,42,111,63,235,194,88,191,174,34,172,61,104,226,62,63,190,20,123,191,2,38,222,62,172,255,234,62,11,98,124,191,105,6,58,63,162,77,229,61,252,126,92,191,94,131,108,63,104,197,127,190,7,157,31,191,56,230,127,63,205,35,20,191,133,123,155,190,87,162,113,63,49,219,84,191,32,170,101,61,244,151,67,63,224,148,121,191,155,31,209,62,1,170,247,62,131,124,125,191,243,4,53,63,51,37,15,62,164,14,96,191,42,172,105,63,135,220,99,190,254,41,37,191,230,152,127,63,218,57,14,191,86,26,169,190,18,233,115,63,153,200,80,191,67,193,229,60,28,38,72,63,189,226,119,191,21,239,195,62,58,17,2,63,236,99,126,191,8,223,47,63,192,134,43,62,44,113,99,191,229,165,102,63,194,197,71,190,176,149,42,191,26,24,127,63,65,51,8,191,25,151,182,190,173,254,117,63,243,139,76,191,243,4,53,63,254,41,37,191,192,134,43,190,252,126,92,63,87,162,113,191,25,151,182,62,1,170,247,62,190,20,123,191,28,38,72,63,67,193,229,188,104,226,62,191,131,124,125,63,65,51,8,191,133,123,155,190,94,131,108,63,44,113,99,191,135,220,99,62,235,239,25,63,230,152,127,191,8,223,47,63,162,77,229,61,49,219,84,191,173,254,117,63,155,31,209,190,2,38,222,190,189,226,119,63,153,200,80,191,174,34,172,61,243,4,53,63,26,24,127,191,205,35,20,63,104,197,127,62,229,165,102,191,42,172,105,63,98,189,141,190,218,57,14,191,236,99,126,63,105,6,58,191,32,170,101,189,243,139,76,63,224,148,121,191,172,255,234,62,21,239,195,62,18,233,115,191,235,194,88,63,51,37,15,190,176,149,42,191,56,230,127,63,7,157,31,191,194,197,71,190,164,14,96,63,240,42,111,191,86,26,169,62,58,17,2,63,11,98,124,191,244,151,67,63,243,4,53,63,8,223,47,191,32,170,101,189,244,151,67,63,236,99,126,191,235,239,25,63,192,134,43,62,49,219,84,191,224,148,121,63,58,17,2,191,98,189,141,190,44,113,99,63,87,162,113,191,155,31,209,62,21,239,195,62,240,42,111,191,229,165,102,63,133,123,155,190,1,170,247,190,189,226,119,63,235,194,88,191,194,197,71,62,205,35,20,63,131,124,125,191,28,38,72,63,174,34,172,189,176,149,42,191,56,230,127,63,243,4,53,191,67,193,229,188,104,226,62,63,26,24,127,191,7,157,31,63,51,37,15,62,153,200,80,191,190,20,123,63,65,51,8,191,104,197,127,190,164,14,96,63,18,233,115,191,2,38,222,62,25,151,182,62,94,131,108,191,42,172,105,63,86,26,169,190,172,255,234,190,173,254,117,63,252,126,92,191,135,220,99,62,218,57,14,63,11,98,124,191,243,139,76,63,162,77,229,189,254,41,37,191,230,152,127,63,105,6,58,191,243,4,53,63,105,6,58,191,32,170,101,61,254,41,37,63,236,99,126,191,243,139,76,63,192,134,43,190,218,57,14,191,224,148,121,63,252,126,92,191,98,189,141,62,172,255,234,62,87,162,113,191,42,172,105,63,21,239,195,190,25,151,182,190,229,165,102,63,18,233,115,191,1,170,247,62,104,197,127,62,235,194,88,191,190,20,123,63,205,35,20,191,51,37,15,190,28,38,72,63,26,24,127,191,176,149,42,63,67,193,229,60,243,4,53,191,56,230,127,63,104,226,62,191,174,34,172,61,7,157,31,63,131,124,125,191,153,200,80,63,194,197,71,190,65,51,8,191,189,226,119,63,164,14,96,191,133,123,155,62,2,38,222,62,240,42,111,191,94,131,108,63,155,31,209,190,86,26,169,190,44,113,99,63,173,254,117,191,58,17,2,63,135,220,99,62,49,219,84,191,11,98,124,63,235,239,25,191,162,77,229,189,244,151,67,63,230,152,127,191,8,223,47,63,243,4,53,63,244,151,67,191,192,134,43,62,58,17,2,63,87,162,113,191,240,42,111,63,1,170,247,190,194,197,71,190,28,38,72,63,56,230,127,191,104,226,62,63,51,37,15,190,65,51,8,191,18,233,115,63,94,131,108,191,172,255,234,62,135,220,99,62,243,139,76,191,230,152,127,63,105,6,58,191,162,77,229,61,218,57,14,63,173,254,117,191,42,172,105,63,2,38,222,190,104,197,127,190,153,200,80,63,26,24,127,191,243,4,53,63,174,34,172,189,205,35,20,191,189,226,119,63,229,165,102,191,155,31,209,62,98,189,141,62,49,219,84,191,236,99,126,63,8,223,47,191,32,170,101,61,235,239,25,63,224,148,121,191,44,113,99,63,21,239,195,190,133,123,155,190,235,194,88,63,131,124,125,191,176,149,42,63,67,193,229,188,7,157,31,191,190,20,123,63,164,14,96,191,25,151,182,62,86,26,169,62,252,126,92,191,11,98,124,63,254,41,37,191,243,4,53,63,243,139,76,191,98,189,141,62,25,151,182,62,235,194,88,191,26,24,127,63,104,226,62,191,194,197,71,62,2,38,222,62,44,113,99,191,11,98,124,63,8,223,47,191,162,77,229,61,58,17,2,63,94,131,108,191,189,226,119,63,7,157,31,191,67,193,229,60,205,35,20,63,18,233,115,191,87,162,113,63,218,57,14,191,32,170,101,189,254,41,37,63,224,148,121,191,42,172,105,63,1,170,247,190,51,37,15,190,243,4,53,63,131,124,125,191,164,14,96,63,155,31,209,190,135,220,99,190,244,151,67,63,230,152,127,191,49,219,84,63,86,26,169,190,133,123,155,190,153,200,80,63,56,230,127,191,28,38,72,63,104,197,127,190,21,239,195,190,252,126,92,63,236,99,126,191,105,6,58,63,192,134,43,190,172,255,234,190,229,165,102,63,190,20,123,191,176,149,42,63,174,34,172,189,65,51,8,191,240,42,111,63,173,254,117,191,235,239,25,63,243,4,53,63,49,219,84,191,21,239,195,62,194,197,71,62,243,4,53,191,190,20,123,63,94,131,108,191,218,57,14,63,8,72,141,166,218,57,14,191,94,131,108,63,190,20,123,191,243,4,53,63,194,197,71,190,21,239,195,190,49,219,84,63,0,0,128,191,49,219,84,63,21,239,195,190,194,197,71,190,243,4,53,63,190,20,123,191,94,131,108,63,218,57,14,191,12,236,83,39,218,57,14,63,94,131,108,191,190,20,123,63,243,4,53,191,194,197,71,62,21,239,195,62,49,219,84,191,0,0,128,63,49,219,84,191,21,239,195,62,194,197,71,62,243,4,53,191,190,20,123,63,94,131,108,191,218,57,14,63,10,154,176,167,218,57,14,191,94,131,108,63,190,20,123,191,243,4,53,63,194,197,71,190,21,239,195,190,49,219,84,63,0,0,128,191,49,219,84,63,21,239,195,190,194,197,71,190,243,4,53,63,190,20,123,191,94,131,108,63,218,57,14,191,243,4,53,63,252,126,92,191,1,170,247,62,67,193,229,60,65,51,8,191,44,113,99,63,230,152,127,191,49,219,84,63,2,38,222,190,174,34,172,189,205,35,20,63,42,172,105,191,236,99,126,63,243,139,76,191,21,239,195,62,51,37,15,62,7,157,31,191,240,42,111,63,11,98,124,191,244,151,67,63,86,26,169,190,194,197,71,190,176,149,42,63,18,233,115,191,224,148,121,63,105,6,58,191,98,189,141,62,104,197,127,62,243,4,53,191,189,226,119,63,173,254,117,191,8,223,47,63,135,220,99,190,133,123,155,190,104,226,62,63,190,20,123,191,87,162,113,63,254,41,37,191,192,134,43,62,25,151,182,62,28,38,72,191,131,124,125,63,94,131,108,191,235,239,25,63,162,77,229,189,155,31,209,190,153,200,80,63,26,24,127,191,229,165,102,63,218,57,14,191,32,170,101,61,172,255,234,62,235,194,88,191,56,230,127,63,164,14,96,191,58,17,2,63,243,4,53,63,44,113,99,191,205,35,20,63,51,37,15,190,86,26,169,190,105,6,58,63,173,254,117,191,190,20,123,63,28,38,72,191,155,31,209,62,32,170,101,61,58,17,2,191,235,194,88,63,26,24,127,191,94,131,108,63,254,41,37,191,135,220,99,62,104,197,127,62,176,149,42,191,240,42,111,63,236,99,126,191,49,219,84,63,1,170,247,190,67,193,229,60,2,38,222,62,243,139,76,191,11,98,124,63,18,233,115,191,243,4,53,63,133,123,155,190,192,134,43,190,235,239,25,63,229,165,102,191,56,230,127,63,164,14,96,191,218,57,14,63,162,77,229,189,25,151,182,190,104,226,62,63,189,226,119,191,224,148,121,63,244,151,67,191,21,239,195,62,174,34,172,61,65,51,8,191,252,126,92,63,230,152,127,191,42,172,105,63,7,157,31,191,194,197,71,62,98,189,141,62,8,223,47,191,87,162,113,63,131,124,125,191,153,200,80,63,172,255,234,190,243,4,53,63,42,172,105,191,176,149,42,63,133,123,155,190,162,77,229,189,58,17,2,63,153,200,80,191,190,20,123,63,224,148,121,191,243,139,76,63,1,170,247,190,174,34,172,61,86,26,169,62,8,223,47,191,94,131,108,63,56,230,127,191,229,165,102,63,254,41,37,191,98,189,141,62,51,37,15,62,65,51,8,191,49,219,84,63,11,98,124,191,189,226,119,63,28,38,72,191,172,255,234,62,32,170,101,189,25,151,182,190,243,4,53,63,240,42,111,191,230,152,127,63,44,113,99,191,7,157,31,63,104,197,127,190,192,134,43,190,218,57,14,63,235,194,88,191,131,124,125,63,173,254,117,191,244,151,67,63,2,38,222,190,67,193,229,60,21,239,195,62,105,6,58,191,87,162,113,63,26,24,127,191,164,14,96,63,235,239,25,191,135,220,99,62,194,197,71,62,205,35,20,191,252,126,92,63,236,99,126,191,18,233,115,63,104,226,62,191,155,31,209,62,243,4,53,63,240,42,111,191,104,226,62,63,172,255,234,190,162,77,229,61,104,197,127,62,205,35,20,191,49,219,84,63,224,148,121,191,131,124,125,63,164,14,96,191,254,41,37,63,86,26,169,190,67,193,229,188,21,239,195,62,8,223,47,191,229,165,102,63,26,24,127,191,173,254,117,63,243,139,76,191,65,51,8,63,194,197,71,190,192,134,43,190,58,17,2,63,28,38,72,191,18,233,115,63,230,152,127,191,42,172,105,63,243,4,53,191,155,31,209,62,32,170,101,189,133,123,155,190,7,157,31,63,252,126,92,191,11,98,124,63,190,20,123,191,235,194,88,63,235,239,25,191,98,189,141,62,174,34,172,61,2,38,222,190,105,6,58,63,94,131,108,191,56,230,127,63,87,162,113,191,244,151,67,63,1,170,247,190,51,37,15,62,135,220,99,62,218,57,14,191,153,200,80,63,189,226,119,191,236,99,126,63,44,113,99,191,176,149,42,63,25,151,182,190,243,4,53,63,18,233,115,191,153,200,80,63,235,239,25,191,86,26,169,62,67,193,229,188,98,189,141,190,218,57,14,63,28,38,72,191,240,42,111,63,230,152,127,191,189,226,119,63,235,194,88,191,254,41,37,63,21,239,195,190,174,34,172,61,135,220,99,62,58,17,2,191,104,226,62,63,42,172,105,191,236,99,126,63,190,20,123,191,164,14,96,63,8,223,47,191,2,38,222,62,51,37,15,190,192,134,43,190,172,255,234,62,243,4,53,191,44,113,99,63,11,98,124,191,131,124,125,63,229,165,102,191,105,6,58,63,1,170,247,190,194,197,71,62,162,77,229,61,155,31,209,190,176,149,42,63,252,126,92,191,224,148,121,63,26,24,127,191,94,131,108,63,244,151,67,191,65,51,8,63,104,197,127,190,32,170,101,189,25,151,182,62,7,157,31,191,49,219,84,63,173,254,117,191,56,230,127,63,87,162,113,191,243,139,76,63,205,35,20,191,133,123,155,62,243,4,53,63,189,226,119,191,164,14,96,63,105,6,58,191,65,51,8,63,133,123,155,190,32,170,101,61,194,197,71,62,2,38,222,190,254,41,37,63,153,200,80,191,240,42,111,63,236,99,126,191,131,124,125,63,94,131,108,191,243,139,76,63,7,157,31,191,155,31,209,62,192,134,43,190,174,34,172,189,86,26,169,62,218,57,14,191,104,226,62,63,44,113,99,191,224,148,121,63,56,230,127,191,173,254,117,63,252,126,92,191,243,4,53,63,58,17,2,191,98,189,141,62,67,193,229,188,135,220,99,190,172,255,234,62,176,149,42,191,49,219,84,63,87,162,113,191,26,24,127,63,11,98,124,191,42,172,105,63,28,38,72,191,235,239,25,63,21,239,195,190,51,37,15,62,162,77,229,61,25,151,182,190,205,35,20,63,244,151,67,191,229,165,102,63,190,20,123,191,230,152,127,63,18,233,115,191,235,194,88,63,8,223,47,191,1,170,247,62,104,197,127,190,243,4,53,63,190,20,123,191,94,131,108,63,49,219,84,191,243,4,53,63,218,57,14,191,21,239,195,62,194,197,71,190,15,47,66,167,194,197,71,62,21,239,195,190,218,57,14,63,243,4,53,191,49,219,84,63,94,131,108,191,190,20,123,63,0,0,128,191,190,20,123,63,94,131,108,191,49,219,84,63,243,4,53,191,218,57,14,63,21,239,195,190,194,197,71,62,166,209,136,40,194,197,71,190,21,239,195,62,218,57,14,191,243,4,53,63,49,219,84,191,94,131,108,63,190,20,123,191,0,0,128,63,190,20,123,191,94,131,108,63,49,219,84,191,243,4,53,63,218,57,14,191,21,239,195,62,194,197,71,190,166,117,229,167,194,197,71,62,21,239,195,190,218,57,14,63,243,4,53,191,49,219,84,63,94,131,108,191,190,20,123,63,0,0,128,191,190,20,123,63,94,131,108,191,49,219,84,63,243,4,53,191,218,57,14,63,21,239,195,190,194,197,71,62,243,4,53,63,131,124,125,191,173,254,117,63,42,172,105,191,235,194,88,63,244,151,67,191,176,149,42,63,218,57,14,191,2,38,222,62,133,123,155,190,192,134,43,62,67,193,229,188,162,77,229,189,104,197,127,62,21,239,195,190,58,17,2,63,7,157,31,191,105,6,58,63,153,200,80,191,44,113,99,63,87,162,113,191,190,20,123,63,230,152,127,191,26,24,127,63,224,148,121,191,240,42,111,63,164,14,96,191,243,139,76,63,243,4,53,191,235,239,25,63,1,170,247,190,25,151,182,62,135,220,99,190,174,34,172,61,32,170,101,61,194,197,71,190,86,26,169,62,172,255,234,190,205,35,20,63,8,223,47,191,28,38,72,63,252,126,92,191,94,131,108,63,189,226,119,191,236,99,126,63,56,230,127,191,11,98,124,63,18,233,115,191,229,165,102,63,49,219,84,191,104,226,62,63,254,41,37,191,65,51,8,63,155,31,209,190,98,189,141,62,51,37,15,190,243,4,53,63,26,24,127,191,11,98,124,63,189,226,119,191,87,162,113,63,42,172,105,191,164,14,96,63,49,219,84,191,28,38,72,63,105,6,58,191,176,149,42,63,235,239,25,191,65,51,8,63,172,255,234,190,21,239,195,62,133,123,155,190,135,220,99,62,51,37,15,190,32,170,101,61,67,193,229,60,162,77,229,189,194,197,71,62,98,189,141,190,25,151,182,62,2,38,222,190,58,17,2,63,205,35,20,191,254,41,37,63,243,4,53,191,244,151,67,63,153,200,80,191,252,126,92,63,229,165,102,191,240,42,111,63,173,254,117,191,190,20,123,63,236,99,126,191,56,230,127,63,230,152,127,191,131,124,125,63,224,148,121,191,18,233,115,63,94,131,108,191,44,113,99,63,235,194,88,191,243,139,76,63,104,226,62,191,8,223,47,63,7,157,31,191,218,57,14,63,1,170,247,190,155,31,209,62,86,26,169,190,104,197,127,62,192,134,43,190,174,34,172,61,243,4,53,63,56,230,127,191,230,152,127,63,26,24,127,191,236,99,126,63,131,124,125,191,11,98,124,63,190,20,123,191,224,148,121,63,189,226,119,191,173,254,117,63,18,233,115,191,87,162,113,63,240,42,111,191,94,131,108,63,42,172,105,191,229,165,102,63,44,113,99,191,164,14,96,63,252,126,92,191,235,194,88,63,49,219,84,191,153,200,80,63,243,139,76,191,28,38,72,63,244,151,67,191,104,226,62,63,105,6,58,191,243,4,53,63,8,223,47,191,176,149,42,63,254,41,37,191,7,157,31,63,235,239,25,191,205,35,20,63,218,57,14,191,65,51,8,63,58,17,2,191,1,170,247,62,172,255,234,190,2,38,222,62,155,31,209,190,21,239,195,62,25,151,182,190,86,26,169,62,133,123,155,190,98,189,141,62,104,197,127,190,135,220,99,62,194,197,71,190,192,134,43,62,51,37,15,190,162,77,229,61,174,34,172,189,32,170,101,61,67,193,229,188,243,4,53,63,30,231,127,63,124,156,127,63,41,32,127,63,62,114,126,63,219,146,125,63,45,130,124,63,104,64,123,63,203,205,121,63,158,42,120,63,50,87,118,63,227,83,116,63,20,33,114,63,51,191,111,63,183,46,109,63,31,112,106,63,243,131,103,63,198,106,100,63,49,37,97,63,215,179,93,63,100,23,90,63,139,80,86,63,8,96,82,63,159,70,78,63,29,5,74,63,84,156,69,63,33,13,65,63,103,88,60,63,15,127,55,63,11,130,50,63,83,98,45,63,231,32,40,63,203,190,34,63,11,61,29,63,187,156,23,63,241,222,17,63,203,4,12,63,110,15,6,63,0,0,0,63,96,175,243,62,97,47,231,62,113,130,218,62,6,171,205,62,159,171,192,62,196,134,179,62,2,63,166,62,239,214,152,62,37,81,139,62,140,96,123,62,240,237,95,62,203,79,68,62,124,139,40,62,105,166,12,62,253,75,225,61,92,31,169,61,180,163,97,61,165,185,225,60,243,4,53,63,41,32,127,63,45,130,124,63,158,42,120,63,20,33,114,63,31,112,106,63,49,37,97,63,139,80,86,63,29,5,74,63,103,88,60,63,83,98,45,63,11,61,29,63,203,4,12,63,96,175,243,62,6,171,205,62,2,63,166,62,140,96,123,62,124,139,40,62,92,31,169,61,50,49,141,36,92,31,169,189,124,139,40,190,140,96,123,190,2,63,166,190,6,171,205,190,96,175,243,190,203,4,12,191,11,61,29,191,83,98,45,191,103,88,60,191,29,5,74,191,139,80,86,191,49,37,97,191,31,112,106,191,20,33,114,191,158,42,120,191,45,130,124,191,41,32,127,191,0,0,128,191,41,32,127,191,45,130,124,191,158,42,120,191,20,33,114,191,31,112,106,191,49,37,97,191,139,80,86,191,29,5,74,191,103,88,60,191,83,98,45,191,11,61,29,191,203,4,12,191,96,175,243,190,6,171,205,190,2,63,166,190,140,96,123,190,124,139,40,190,92,31,169,189,243,4,53,63,219,146,125,63,50,87,118,63,31,112,106,63,100,23,90,63,84,156,69,63,83,98,45,63,241,222,17,63,97,47,231,62,2,63,166,62,203,79,68,62,180,163,97,61,92,31,169,189,240,237,95,190,196,134,179,190,96,175,243,190,187,156,23,191,11,130,50,191,29,5,74,191,215,179,93,191,183,46,109,191,158,42,120,191,62,114,126,191,30,231,127,191,45,130,124,191,227,83,116,191,243,131,103,191,139,80,86,191,33,13,65,191,231,32,40,191,203,4,12,191,113,130,218,190,239,214,152,190,124,139,40,190,165,185,225,188,253,75,225,61,140,96,123,62,159,171,192,62,0,0,0,63,11,61,29,63,15,127,55,63,159,70,78,63,49,37,97,63,51,191,111,63,203,205,121,63,41,32,127,63,124,156,127,63,104,64,123,63,20,33,114,63,198,106,100,63,8,96,82,63,103,88,60,63,203,190,34,63,110,15,6,63,6,171,205,62,37,81,139,62,105,166,12,62,243,4,53,63,104,64,123,63,183,46,109,63,139,80,86,63,15,127,55,63,241,222,17,63,6,171,205,62,240,237,95,62,165,185,225,60,124,139,40,190,196,134,179,190,110,15,6,191,83,98,45,191,159,70,78,191,243,131,103,191,158,42,120,191,124,156,127,191,219,146,125,191,20,33,114,191,215,179,93,191,33,13,65,191,11,61,29,191,97,47,231,190,37,81,139,190,92,31,169,189,253,75,225,61,239,214,152,62,96,175,243,62,203,190,34,63,84,156,69,63,49,37,97,63,227,83,116,63,62,114,126,63,41,32,127,63,50,87,118,63,198,106,100,63,29,5,74,63,231,32,40,63,0,0,0,63,2,63,166,62,105,166,12,62,180,163,97,189,140,96,123,190,113,130,218,190,187,156,23,191,103,88,60,191,100,23,90,191,51,191,111,191,45,130,124,191,30,231,127,191,203,205,121,191,31,112,106,191,8,96,82,191,11,130,50,191,203,4,12,191,159,171,192,190,203,79,68,190,243,4,53,63,158,42,120,63,49,37,97,63,103,88,60,63,203,4,12,63,2,63,166,62,92,31,169,61,124,139,40,190,6,171,205,190,11,61,29,191,29,5,74,191,31,112,106,191,45,130,124,191,41,32,127,191,20,33,114,191,139,80,86,191,83,98,45,191,96,175,243,190,140,96,123,190,202,201,83,165,140,96,123,62,96,175,243,62,83,98,45,63,139,80,86,63,20,33,114,63,41,32,127,63,45,130,124,63,31,112,106,63,29,5,74,63,11,61,29,63,6,171,205,62,124,139,40,62,92,31,169,189,2,63,166,190,203,4,12,191,103,88,60,191,49,37,97,191,158,42,120,191,0,0,128,191,158,42,120,191,49,37,97,191,103,88,60,191,203,4,12,191,2,63,166,190,92,31,169,189,124,139,40,62,6,171,205,62,11,61,29,63,29,5,74,63,31,112,106,63,45,130,124,63,41,32,127,63,20,33,114,63,139,80,86,63,83,98,45,63,96,175,243,62,140,96,123,62,243,4,53,63,227,83,116,63,8,96,82,63,11,61,29,63,196,134,179,62,180,163,97,61,140,96,123,190,110,15,6,191,33,13,65,191,31,112,106,191,62,114,126,191,104,64,123,191,49,37,97,191,11,130,50,191,97,47,231,190,124,139,40,190,105,166,12,62,113,130,218,62,83,98,45,63,215,179,93,63,203,205,121,63,41,32,127,63,183,46,109,63,84,156,69,63,203,4,12,63,37,81,139,62,165,185,225,188,2,63,166,190,187,156,23,191,159,70,78,191,20,33,114,191,30,231,127,191,50,87,118,191,139,80,86,191,203,190,34,191,159,171,192,190,92,31,169,189,240,237,95,62,0,0,0,63,103,88,60,63,243,131,103,63,219,146,125,63,45,130,124,63,198,106,100,63,15,127,55,63,96,175,243,62,203,79,68,62,253,75,225,189,6,171,205,190,231,32,40,191,100,23,90,191,158,42,120,191,124,156,127,191,51,191,111,191,29,5,74,191,241,222,17,191,239,214,152,190,243,4,53,63,51,191,111,63,33,13,65,63,96,175,243,62,105,166,12,62,240,237,95,190,203,4,12,191,159,70,78,191,50,87,118,191,41,32,127,191,243,131,103,191,11,130,50,191,6,171,205,190,180,163,97,189,239,214,152,62,11,61,29,63,100,23,90,63,104,64,123,63,45,130,124,63,215,179,93,63,203,190,34,63,2,63,166,62,165,185,225,188,159,171,192,190,83,98,45,191,198,106,100,191,62,114,126,191,158,42,120,191,8,96,82,191,241,222,17,191,140,96,123,190,253,75,225,61,97,47,231,62,103,88,60,63,183,46,109,63,30,231,127,63,20,33,114,63,84,156,69,63,0,0,0,63,124,139,40,62,203,79,68,190,110,15,6,191,29,5,74,191,227,83,116,191,124,156,127,191,31,112,106,191,15,127,55,191,113,130,218,190,92,31,169,189,37,81,139,62,187,156,23,63,139,80,86,63,203,205,121,63,219,146,125,63,49,37,97,63,231,32,40,63,196,134,179,62,243,4,53,63,31,112,106,63,83,98,45,63,2,63,166,62,92,31,169,189,96,175,243,190,29,5,74,191,158,42,120,191,45,130,124,191,139,80,86,191,203,4,12,191,124,139,40,190,140,96,123,62,11,61,29,63,49,37,97,63,41,32,127,63,20,33,114,63,103,88,60,63,6,171,205,62,126,125,176,37,6,171,205,190,103,88,60,191,20,33,114,191,41,32,127,191,49,37,97,191,11,61,29,191,140,96,123,190,124,139,40,62,203,4,12,63,139,80,86,63,45,130,124,63,158,42,120,63,29,5,74,63,96,175,243,62,92,31,169,61,2,63,166,190,83,98,45,191,31,112,106,191,0,0,128,191,31,112,106,191,83,98,45,191,2,63,166,190,92,31,169,61,96,175,243,62,29,5,74,63,158,42,120,63,45,130,124,63,139,80,86,63,203,4,12,63,124,139,40,62,140,96,123,190,11,61,29,191,49,37,97,191,41,32,127,191,20,33,114,191,103,88,60,191,6,171,205,190,243,4,53,63,198,106,100,63,187,156,23,63,124,139,40,62,239,214,152,190,11,130,50,191,20,33,114,191,219,146,125,191,8,96,82,191,96,175,243,190,165,185,225,188,113,130,218,62,29,5,74,63,104,64,123,63,50,87,118,63,103,88,60,63,196,134,179,62,253,75,225,189,203,4,12,191,215,179,93,191,124,156,127,191,31,112,106,191,203,190,34,191,240,237,95,190,140,96,123,62,231,32,40,63,183,46,109,63,41,32,127,63,100,23,90,63,110,15,6,63,92,31,169,61,159,171,192,190,33,13,65,191,158,42,120,191,203,205,121,191,84,156,69,191,6,171,205,190,180,163,97,61,0,0,0,63,139,80,86,63,62,114,126,63,51,191,111,63,83,98,45,63,37,81,139,62,203,79,68,190,11,61,29,191,243,131,103,191,30,231,127,191,49,37,97,191,241,222,17,191,105,166,12,190,2,63,166,62,15,127,55,63,227,83,116,63,45,130,124,63,159,70,78,63,97,47,231,62,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,202,201,83,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,95,31,172,38,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,23,22,247,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,214,181,39,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,233,136,48,167,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,252,91,57,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,15,47,66,167,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,34,2,75,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,243,4,53,63,139,80,86,63,6,171,205,62,124,139,40,190,83,98,45,191,158,42,120,191,20,33,114,191,11,61,29,191,92,31,169,189,96,175,243,62,49,37,97,63,41,32,127,63,29,5,74,63,2,63,166,62,140,96,123,190,103,88,60,191,45,130,124,191,31,112,106,191,203,4,12,191,23,22,247,165,203,4,12,63,31,112,106,63,45,130,124,63,103,88,60,63,140,96,123,62,2,63,166,190,29,5,74,191,41,32,127,191,49,37,97,191,96,175,243,190,92,31,169,61,11,61,29,63,20,33,114,63,158,42,120,63,83,98,45,63,124,139,40,62,6,171,205,190,139,80,86,191,0,0,128,191,139,80,86,191,6,171,205,190,124,139,40,62,83,98,45,63,158,42,120,63,20,33,114,63,11,61,29,63,92,31,169,61,96,175,243,190,49,37,97,191,41,32,127,191,29,5,74,191,2,63,166,190,140,96,123,62,103,88,60,63,45,130,124,63,31,112,106,63,203,4,12,63,243,4,53,63,159,70,78,63,239,214,152,62,2,63,166,190,8,96,82,191,30,231,127,191,29,5,74,191,37,81,139,190,196,134,179,62,139,80,86,63,124,156,127,63,84,156,69,63,140,96,123,62,159,171,192,190,100,23,90,191,41,32,127,191,33,13,65,191,240,237,95,190,6,171,205,62,215,179,93,63,62,114,126,63,103,88,60,63,203,79,68,62,113,130,218,190,49,37,97,191,219,146,125,191,15,127,55,191,124,139,40,190,97,47,231,62,198,106,100,63,45,130,124,63,11,130,50,63,105,166,12,62,96,175,243,190,243,131,103,191,104,64,123,191,83,98,45,191,253,75,225,189,0,0,0,63,31,112,106,63,203,205,121,63,231,32,40,63,92,31,169,61,110,15,6,191,183,46,109,191,158,42,120,191,203,190,34,191,180,163,97,189,203,4,12,63,51,191,111,63,50,87,118,63,11,61,29,63,165,185,225,60,241,222,17,191,20,33,114,191,227,83,116,191,187,156,23,191,243,4,53,63,84,156,69,63,203,79,68,62,96,175,243,190,183,46,109,191,227,83,116,191,203,4,12,191,253,75,225,61,15,127,55,63,41,32,127,63,8,96,82,63,37,81,139,62,6,171,205,190,198,106,100,191,203,205,121,191,11,61,29,191,165,185,225,60,231,32,40,63,45,130,124,63,215,179,93,63,196,134,179,62,2,63,166,190,100,23,90,191,219,146,125,191,83,98,45,191,180,163,97,189,187,156,23,63,158,42,120,63,243,131,103,63,113,130,218,62,140,96,123,190,159,70,78,191,124,156,127,191,103,88,60,191,105,166,12,190,110,15,6,63,20,33,114,63,51,191,111,63,0,0,0,63,124,139,40,190,33,13,65,191,30,231,127,191,29,5,74,191,240,237,95,190,97,47,231,62,31,112,106,63,50,87,118,63,241,222,17,63,92,31,169,189,11,130,50,191,62,114,126,191,139,80,86,191,239,214,152,190,159,171,192,62,49,37,97,63,104,64,123,63,203,190,34,63,243,4,53,63,103,88,60,63,92,31,169,61,11,61,29,191,45,130,124,191,139,80,86,191,140,96,123,190,96,175,243,62,20,33,114,63,31,112,106,63,6,171,205,62,2,63,166,190,49,37,97,191,158,42,120,191,203,4,12,191,124,139,40,62,29,5,74,63,41,32,127,63,83,98,45,63,88,215,30,38,83,98,45,191,41,32,127,191,29,5,74,191,124,139,40,190,203,4,12,63,158,42,120,63,49,37,97,63,2,63,166,62,6,171,205,190,31,112,106,191,20,33,114,191,96,175,243,190,140,96,123,62,139,80,86,63,45,130,124,63,11,61,29,63,92,31,169,189,103,88,60,191,0,0,128,191,103,88,60,191,92,31,169,189,11,61,29,63,45,130,124,63,139,80,86,63,140,96,123,62,96,175,243,190,20,33,114,191,31,112,106,191,6,171,205,190,2,63,166,62,49,37,97,63,158,42,120,63,203,4,12,63,124,139,40,190,29,5,74,191,41,32,127,191,83,98,45,191,243,4,53,63,11,130,50,63,165,185,225,188,103,88,60,191,124,156,127,191,231,32,40,191,92,31,169,61,84,156,69,63,62,114,126,63,11,61,29,63,105,166,12,190,159,70,78,191,45,130,124,191,241,222,17,191,203,79,68,62,139,80,86,63,203,205,121,63,110,15,6,63,140,96,123,190,215,179,93,191,50,87,118,191,96,175,243,190,239,214,152,62,198,106,100,63,20,33,114,63,113,130,218,62,196,134,179,190,31,112,106,191,183,46,109,191,159,171,192,190,6,171,205,62,51,191,111,63,243,131,103,63,2,63,166,62,97,47,231,190,227,83,116,191,49,37,97,191,37,81,139,190,0,0,0,63,158,42,120,63,100,23,90,63,240,237,95,62,203,4,12,191,104,64,123,191,8,96,82,191,124,139,40,190,187,156,23,63,219,146,125,63,29,5,74,63,253,75,225,61,203,190,34,191,41,32,127,191,33,13,65,191,180,163,97,189,83,98,45,63,30,231,127,63,15,127,55,63,243,4,53,63,231,32,40,63,105,166,12,190,139,80,86,191,50,87,118,191,113,130,218,190,6,171,205,62,227,83,116,63,100,23,90,63,124,139,40,62,203,190,34,191,30,231,127,191,83,98,45,191,253,75,225,61,8,96,82,63,158,42,120,63,97,47,231,62,159,171,192,190,20,33,114,191,215,179,93,191,203,79,68,190,11,61,29,63,124,156,127,63,11,130,50,63,92,31,169,189,159,70,78,191,203,205,121,191,96,175,243,190,196,134,179,62,51,191,111,63,49,37,97,63,240,237,95,62,187,156,23,191,41,32,127,191,15,127,55,191,180,163,97,61,29,5,74,63,104,64,123,63,0,0,0,63,2,63,166,190,183,46,109,191,198,106,100,191,140,96,123,190,241,222,17,63,62,114,126,63,103,88,60,63,165,185,225,188,84,156,69,191,45,130,124,191,110,15,6,191,239,214,152,62,31,112,106,63,243,131,103,63,37,81,139,62,203,4,12,191,219,146,125,191,33,13,65,191,243,4,53,63,11,61,29,63,140,96,123,190,31,112,106,191,49,37,97,191,124,139,40,190,83,98,45,63,41,32,127,63,203,4,12,63,2,63,166,190,20,33,114,191,139,80,86,191,92,31,169,189,103,88,60,63,45,130,124,63,96,175,243,62,6,171,205,190,158,42,120,191,29,5,74,191,46,238,158,38,29,5,74,63,158,42,120,63,6,171,205,62,96,175,243,190,45,130,124,191,103,88,60,191,92,31,169,61,139,80,86,63,20,33,114,63,2,63,166,62,203,4,12,191,41,32,127,191,83,98,45,191,124,139,40,62,49,37,97,63,31,112,106,63,140,96,123,62,11,61,29,191,0,0,128,191,11,61,29,191,140,96,123,62,31,112,106,63,49,37,97,63,124,139,40,62,83,98,45,191,41,32,127,191,203,4,12,191,2,63,166,62,20,33,114,63,139,80,86,63,92,31,169,61,103,88,60,191,45,130,124,191,96,175,243,190,6,171,205,62,158,42,120,63,29,5,74,63,243,4,53,63,241,222,17,63,196,134,179,190,158,42,120,191,33,13,65,191,253,75,225,61,49,37,97,63,198,106,100,63,105,166,12,62,103,88,60,191,203,205,121,191,159,171,192,190,203,4,12,63,30,231,127,63,187,156,23,63,2,63,166,190,50,87,118,191,84,156,69,191,92,31,169,61,215,179,93,63,243,131,103,63,124,139,40,62,15,127,55,191,104,64,123,191,6,171,205,190,110,15,6,63,124,156,127,63,11,61,29,63,239,214,152,190,227,83,116,191,29,5,74,191,180,163,97,61,100,23,90,63,31,112,106,63,203,79,68,62,11,130,50,191,45,130,124,191,113,130,218,190,0,0,0,63,41,32,127,63,203,190,34,63,37,81,139,190,20,33,114,191,159,70,78,191,165,185,225,60,139,80,86,63,183,46,109,63,240,237,95,62,83,98,45,191,219,146,125,191,97,47,231,190,96,175,243,62,62,114,126,63,231,32,40,63,140,96,123,190,51,191,111,191,8,96,82,191,243,4,53,63,110,15,6,63,97,47,231,190,41,32,127,191,187,156,23,191,159,171,192,62,45,130,124,63,231,32,40,63,239,214,152,190,158,42,120,191,15,127,55,191,240,237,95,62,20,33,114,63,84,156,69,63,105,166,12,190,31,112,106,191,8,96,82,191,180,163,97,61,49,37,97,63,215,179,93,63,165,185,225,60,139,80,86,191,243,131,103,191,253,75,225,189,29,5,74,63,51,191,111,63,203,79,68,62,103,88,60,191,50,87,118,191,37,81,139,190,83,98,45,63,104,64,123,63,196,134,179,62,11,61,29,191,62,114,126,191,113,130,218,190,203,4,12,63,30,231,127,63,0,0,0,63,96,175,243,190,124,156,127,191,241,222,17,191,6,171,205,62,219,146,125,63,203,190,34,63,2,63,166,190,203,205,121,191,11,130,50,191,140,96,123,62,227,83,116,63,33,13,65,63,124,139,40,190,183,46,109,191,159,70,78,191,92,31,169,61,198,106,100,63,100,23,90,63,243,4,53,63,96,175,243,62,203,4,12,191,41,32,127,191,6,171,205,190,11,61,29,63,45,130,124,63,2,63,166,62,83,98,45,191,158,42,120,191,140,96,123,190,103,88,60,63,20,33,114,63,124,139,40,62,29,5,74,191,31,112,106,191,92,31,169,189,139,80,86,63,49,37,97,63,252,91,57,39,49,37,97,191,139,80,86,191,92,31,169,61,31,112,106,63,29,5,74,63,124,139,40,190,20,33,114,191,103,88,60,191,140,96,123,62,158,42,120,63,83,98,45,63,2,63,166,190,45,130,124,191,11,61,29,191,6,171,205,62,41,32,127,63,203,4,12,63,96,175,243,190,0,0,128,191,96,175,243,190,203,4,12,63,41,32,127,63,6,171,205,62,11,61,29,191,45,130,124,191,2,63,166,190,83,98,45,63,158,42,120,63,140,96,123,62,103,88,60,191,20,33,114,191,124,139,40,190,29,5,74,63,31,112,106,63,92,31,169,61,139,80,86,191,49,37,97,191,243,4,53,63,113,130,218,62,203,190,34,191,158,42,120,191,203,79,68,190,159,70,78,63,49,37,97,63,180,163,97,189,183,46,109,191,103,88,60,191,239,214,152,62,219,146,125,63,203,4,12,63,110,15,6,191,62,114,126,191,2,63,166,190,15,127,55,63,51,191,111,63,92,31,169,61,215,179,93,191,8,96,82,191,124,139,40,62,50,87,118,63,231,32,40,63,6,171,205,190,30,231,127,191,97,47,231,190,11,61,29,63,203,205,121,63,240,237,95,62,29,5,74,191,198,106,100,191,165,185,225,60,31,112,106,63,33,13,65,63,37,81,139,190,45,130,124,191,241,222,17,191,0,0,0,63,41,32,127,63,196,134,179,62,11,130,50,191,20,33,114,191,253,75,225,189,100,23,90,63,139,80,86,63,105,166,12,190,227,83,116,191,83,98,45,191,159,171,192,62,124,156,127,63,96,175,243,62,187,156,23,191,104,64,123,191,140,96,123,190,84,156,69,63,243,131,103,63,243,4,53,63,159,171,192,62,15,127,55,191,31,112,106,191,165,185,225,60,51,191,111,63,83,98,45,63,113,130,218,190,124,156,127,191,2,63,166,190,33,13,65,63,198,106,100,63,92,31,169,189,227,83,116,191,203,190,34,191,96,175,243,62,62,114,126,63,37,81,139,62,29,5,74,191,215,179,93,191,105,166,12,62,158,42,120,63,187,156,23,63,110,15,6,191,45,130,124,191,240,237,95,190,8,96,82,63,139,80,86,63,203,79,68,190,104,64,123,191,203,4,12,191,241,222,17,63,203,205,121,63,124,139,40,62,100,23,90,191,159,70,78,191,140,96,123,62,219,146,125,63,0,0,0,63,11,61,29,191,50,87,118,191,253,75,225,189,49,37,97,63,84,156,69,63,239,214,152,190,41,32,127,191,97,47,231,190,231,32,40,63,20,33,114,63,180,163,97,61,243,131,103,191,103,88,60,191,196,134,179,62,30,231,127,63,6,171,205,62,11,130,50,191,183,46,109,191,243,4,53,63,2,63,166,62,29,5,74,191,139,80,86,191,140,96,123,62,41,32,127,63,6,171,205,62,103,88,60,191,49,37,97,191,124,139,40,62,45,130,124,63,96,175,243,62,83,98,45,191,31,112,106,191,92,31,169,61,158,42,120,63,203,4,12,63,11,61,29,191,20,33,114,191,15,47,66,167,20,33,114,63,11,61,29,63,203,4,12,191,158,42,120,191,92,31,169,189,31,112,106,63,83,98,45,63,96,175,243,190,45,130,124,191,124,139,40,190,49,37,97,63,103,88,60,63,6,171,205,190,41,32,127,191,140,96,123,190,139,80,86,63,29,5,74,63,2,63,166,190,0,0,128,191,2,63,166,190,29,5,74,63,139,80,86,63,140,96,123,190,41,32,127,191,6,171,205,190,103,88,60,63,49,37,97,63,124,139,40,190,45,130,124,191,96,175,243,190,83,98,45,63,31,112,106,63,92,31,169,189,158,42,120,191,203,4,12,191,11,61,29,63,20,33,114,63,243,4,53,63,37,81,139,62,100,23,90,191,103,88,60,191,97,47,231,62,104,64,123,63,92,31,169,61,51,191,111,191,187,156,23,191,11,61,29,63,183,46,109,63,253,75,225,189,45,130,124,191,113,130,218,190,33,13,65,63,139,80,86,63,239,214,152,190,30,231,127,191,140,96,123,190,215,179,93,63,15,127,55,63,96,175,243,190,203,205,121,191,180,163,97,189,20,33,114,63,241,222,17,63,203,190,34,191,31,112,106,191,105,166,12,62,219,146,125,63,6,171,205,62,84,156,69,191,8,96,82,191,2,63,166,62,124,156,127,63,240,237,95,62,49,37,97,191,11,130,50,191,0,0,0,63,158,42,120,63,165,185,225,60,227,83,116,191,203,4,12,191,231,32,40,63,243,131,103,63,124,139,40,190,62,114,126,191,159,171,192,190,29,5,74,63,159,70,78,63,196,134,179,190,41,32,127,191,203,79,68,190,198,106,100,63,83,98,45,63,110,15,6,191,50,87,118,191,243,4,53,63,240,237,95,62,243,131,103,191,11,61,29,191,203,190,34,63,198,106,100,63,140,96,123,190,30,231,127,191,203,79,68,190,31,112,106,63,187,156,23,63,231,32,40,191,49,37,97,191,37,81,139,62,124,156,127,63,124,139,40,62,183,46,109,191,241,222,17,191,83,98,45,63,215,179,93,63,239,214,152,190,41,32,127,191,105,166,12,190,51,191,111,63,203,4,12,63,11,130,50,191,100,23,90,191,2,63,166,62,62,114,126,63,253,75,225,61,20,33,114,191,110,15,6,191,15,127,55,63,139,80,86,63,196,134,179,190,219,146,125,191,92,31,169,189,227,83,116,63,0,0,0,63,103,88,60,191,8,96,82,191,159,171,192,62,45,130,124,63,180,163,97,61,50,87,118,191,96,175,243,190,33,13,65,63,159,70,78,63,6,171,205,190,104,64,123,191,165,185,225,188,158,42,120,63,97,47,231,62,84,156,69,191,29,5,74,191,113,130,218,62,203,205,121,63,243,4,53,63,124,139,40,62,20,33,114,191,96,175,243,190,29,5,74,63,103,88,60,63,203,4,12,191,31,112,106,191,140,96,123,62,41,32,127,63,92,31,169,61,158,42,120,191,6,171,205,190,139,80,86,63,83,98,45,63,11,61,29,191,49,37,97,191,2,63,166,62,45,130,124,63,34,2,75,39,45,130,124,191,2,63,166,190,49,37,97,63,11,61,29,63,83,98,45,191,139,80,86,191,6,171,205,62,158,42,120,63,92,31,169,189,41,32,127,191,140,96,123,190,31,112,106,63,203,4,12,63,103,88,60,191,29,5,74,191,96,175,243,62,20,33,114,63,124,139,40,190,0,0,128,191,124,139,40,190,20,33,114,63,96,175,243,62,29,5,74,191,103,88,60,191,203,4,12,63,31,112,106,63,140,96,123,190,41,32,127,191,92,31,169,189,158,42,120,63,6,171,205,62,139,80,86,191,83,98,45,191,11,61,29,63,49,37,97,63,2,63,166,190,45,130,124,191,243,4,53,63,253,75,225,61,203,205,121,191,2,63,166,190,243,131,103,63,110,15,6,63,29,5,74,191,11,130,50,191,203,190,34,63,139,80,86,63,97,47,231,190,51,191,111,191,140,96,123,62,219,146,125,63,165,185,225,188,41,32,127,191,203,79,68,190,227,83,116,63,6,171,205,62,215,179,93,191,187,156,23,191,103,88,60,63,33,13,65,63,241,222,17,191,49,37,97,191,159,171,192,62,50,87,118,63,124,139,40,190,124,156,127,191,180,163,97,189,45,130,124,63,37,81,139,62,183,46,109,191,96,175,243,190,8,96,82,63,231,32,40,63,83,98,45,191,159,70,78,191,0,0,0,63,31,112,106,63,239,214,152,190,104,64,123,191,92,31,169,61,30,231,127,63,105,166,12,62,158,42,120,191,196,134,179,190,198,106,100,63,203,4,12,63,84,156,69,191,15,127,55,191,11,61,29,63,100,23,90,63,113,130,218,190,20,33,114,191,240,237,95,62,62,114,126,63,243,4,53,63,180,163,97,61,62,114,126,191,124,139,40,190,203,205,121,63,37,81,139,62,20,33,114,191,159,171,192,190,243,131,103,63,96,175,243,62,100,23,90,191,241,222,17,191,29,5,74,63,231,32,40,63,15,127,55,191,103,88,60,191,203,190,34,63,159,70,78,63,203,4,12,191,215,179,93,191,97,47,231,62,31,112,106,63,196,134,179,190,227,83,116,191,140,96,123,62,104,64,123,63,105,166,12,190,41,32,127,191,165,185,225,60,30,231,127,63,92,31,169,61,219,146,125,191,203,79,68,190,158,42,120,63,239,214,152,62,51,191,111,191,6,171,205,190,198,106,100,63,0,0,0,63,139,80,86,191,187,156,23,191,84,156,69,63,83,98,45,63,11,130,50,191,33,13,65,191,11,61,29,63,8,96,82,63,110,15,6,191,49,37,97,191,113,130,218,62,183,46,109,63,2,63,166,190,50,87,118,191,240,237,95,62,45,130,124,63,253,75,225,189,124,156,127,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,91,26,141,38,0,0,128,191,191,159,48,39,0,0,128,63,213,12,22,40,0,0,128,191,52,131,176,167,0,0,128,63,244,178,211,38,0,0,128,191,115,83,13,39,0,0,128,63,243,4,53,63,180,163,97,189,62,114,126,191,124,139,40,62,203,205,121,63,37,81,139,190,20,33,114,191,159,171,192,62,243,131,103,63,96,175,243,190,100,23,90,191,241,222,17,63,29,5,74,63,231,32,40,191,15,127,55,191,103,88,60,63,203,190,34,63,159,70,78,191,203,4,12,191,215,179,93,63,97,47,231,62,31,112,106,191,196,134,179,190,227,83,116,63,140,96,123,62,104,64,123,191,105,166,12,190,41,32,127,63,165,185,225,60,30,231,127,191,92,31,169,61,219,146,125,63,203,79,68,190,158,42,120,191,239,214,152,62,51,191,111,63,6,171,205,190,198,106,100,191,0,0,0,63,139,80,86,63,187,156,23,191,84,156,69,191,83,98,45,63,11,130,50,63,33,13,65,191,11,61,29,191,8,96,82,63,110,15,6,63,49,37,97,191,113,130,218,190,183,46,109,63,2,63,166,62,50,87,118,191,240,237,95,190,45,130,124,63,253,75,225,61,124,156,127,191,243,4,53,63,253,75,225,189,203,205,121,191,2,63,166,62,243,131,103,63,110,15,6,191,29,5,74,191,11,130,50,63,203,190,34,63,139,80,86,191,97,47,231,190,51,191,111,63,140,96,123,62,219,146,125,191,165,185,225,188,41,32,127,63,203,79,68,190,227,83,116,191,6,171,205,62,215,179,93,63,187,156,23,191,103,88,60,191,33,13,65,63,241,222,17,63,49,37,97,191,159,171,192,190,50,87,118,63,124,139,40,62,124,156,127,191,180,163,97,61,45,130,124,63,37,81,139,190,183,46,109,191,96,175,243,62,8,96,82,63,231,32,40,191,83,98,45,191,159,70,78,63,0,0,0,63,31,112,106,191,239,214,152,190,104,64,123,63,92,31,169,61,30,231,127,191,105,166,12,62,158,42,120,63,196,134,179,190,198,106,100,191,203,4,12,63,84,156,69,63,15,127,55,191,11,61,29,191,100,23,90,63,113,130,218,62,20,33,114,191,240,237,95,190,62,114,126,63,243,4,53,63,124,139,40,190,20,33,114,191,96,175,243,62,29,5,74,63,103,88,60,191,203,4,12,191,31,112,106,63,140,96,123,62,41,32,127,191,92,31,169,61,158,42,120,63,6,171,205,190,139,80,86,191,83,98,45,63,11,61,29,63,49,37,97,191,2,63,166,190,45,130,124,63,222,94,13,166,45,130,124,191,2,63,166,62,49,37,97,63,11,61,29,191,83,98,45,191,139,80,86,63,6,171,205,62,158,42,120,191,92,31,169,189,41,32,127,63,140,96,123,190,31,112,106,191,203,4,12,63,103,88,60,63,29,5,74,191,96,175,243,190,20,33,114,63,124,139,40,62,0,0,128,191,124,139,40,62,20,33,114,63,96,175,243,190,29,5,74,191,103,88,60,63,203,4,12,63,31,112,106,191,140,96,123,190,41,32,127,63,92,31,169,189,158,42,120,191,6,171,205,62,139,80,86,63,83,98,45,191,11,61,29,191,49,37,97,63,2,63,166,62,45,130,124,191,243,4,53,63,240,237,95,190,243,131,103,191,11,61,29,63,203,190,34,63,198,106,100,191,140,96,123,190,30,231,127,63,203,79,68,190,31,112,106,191,187,156,23,63,231,32,40,63,49,37,97,191,37,81,139,190,124,156,127,63,124,139,40,190,183,46,109,191,241,222,17,63,83,98,45,63,215,179,93,191,239,214,152,190,41,32,127,63,105,166,12,190,51,191,111,191,203,4,12,63,11,130,50,63,100,23,90,191,2,63,166,190,62,114,126,63,253,75,225,189,20,33,114,191,110,15,6,63,15,127,55,63,139,80,86,191,196,134,179,190,219,146,125,63,92,31,169,189,227,83,116,191,0,0,0,63,103,88,60,63,8,96,82,191,159,171,192,190,45,130,124,63,180,163,97,189,50,87,118,191,96,175,243,62,33,13,65,63,159,70,78,191,6,171,205,190,104,64,123,63,165,185,225,188,158,42,120,191,97,47,231,62,84,156,69,63,29,5,74,191,113,130,218,190,203,205,121,63,243,4,53,63,37,81,139,190,100,23,90,191,103,88,60,63,97,47,231,62,104,64,123,191,92,31,169,61,51,191,111,63,187,156,23,191,11,61,29,191,183,46,109,63,253,75,225,61,45,130,124,191,113,130,218,62,33,13,65,63,139,80,86,191,239,214,152,190,30,231,127,63,140,96,123,190,215,179,93,191,15,127,55,63,96,175,243,62,203,205,121,191,180,163,97,61,20,33,114,63,241,222,17,191,203,190,34,191,31,112,106,63,105,166,12,62,219,146,125,191,6,171,205,62,84,156,69,63,8,96,82,191,2,63,166,190,124,156,127,63,240,237,95,190,49,37,97,191,11,130,50,63,0,0,0,63,158,42,120,191,165,185,225,60,227,83,116,63,203,4,12,191,231,32,40,191,243,131,103,63,124,139,40,62,62,114,126,191,159,171,192,62,29,5,74,63,159,70,78,191,196,134,179,190,41,32,127,63,203,79,68,190,198,106,100,191,83,98,45,63,110,15,6,63,50,87,118,191,243,4,53,63,2,63,166,190,29,5,74,191,139,80,86,63,140,96,123,62,41,32,127,191,6,171,205,62,103,88,60,63,49,37,97,191,124,139,40,190,45,130,124,63,96,175,243,190,83,98,45,191,31,112,106,63,92,31,169,61,158,42,120,191,203,4,12,63,11,61,29,63,20,33,114,191,92,123,101,167,20,33,114,63,11,61,29,191,203,4,12,191,158,42,120,63,92,31,169,189,31,112,106,191,83,98,45,63,96,175,243,62,45,130,124,191,124,139,40,62,49,37,97,63,103,88,60,191,6,171,205,190,41,32,127,63,140,96,123,190,139,80,86,191,29,5,74,63,2,63,166,62,0,0,128,191,2,63,166,62,29,5,74,63,139,80,86,191,140,96,123,190,41,32,127,63,6,171,205,190,103,88,60,191,49,37,97,63,124,139,40,62,45,130,124,191,96,175,243,62,83,98,45,63,31,112,106,191,92,31,169,189,158,42,120,63,203,4,12,191,11,61,29,191,20,33,114,63,243,4,53,63,159,171,192,190,15,127,55,191,31,112,106,63,165,185,225,60,51,191,111,191,83,98,45,63,113,130,218,62,124,156,127,191,2,63,166,62,33,13,65,63,198,106,100,191,92,31,169,189,227,83,116,63,203,190,34,191,96,175,243,190,62,114,126,63,37,81,139,190,29,5,74,191,215,179,93,63,105,166,12,62,158,42,120,191,187,156,23,63,110,15,6,63,45,130,124,191,240,237,95,62,8,96,82,63,139,80,86,191,203,79,68,190,104,64,123,63,203,4,12,191,241,222,17,191,203,205,121,63,124,139,40,190,100,23,90,191,159,70,78,63,140,96,123,62,219,146,125,191,0,0,0,63,11,61,29,63,50,87,118,191,253,75,225,61,49,37,97,63,84,156,69,191,239,214,152,190,41,32,127,63,97,47,231,190,231,32,40,191,20,33,114,63,180,163,97,189,243,131,103,191,103,88,60,63,196,134,179,62,30,231,127,191,6,171,205,62,11,130,50,63,183,46,109,191,243,4,53,63,113,130,218,190,203,190,34,191,158,42,120,63,203,79,68,190,159,70,78,191,49,37,97,63,180,163,97,61,183,46,109,191,103,88,60,63,239,214,152,62,219,146,125,191,203,4,12,63,110,15,6,63,62,114,126,191,2,63,166,62,15,127,55,63,51,191,111,191,92,31,169,61,215,179,93,63,8,96,82,191,124,139,40,190,50,87,118,63,231,32,40,191,6,171,205,190,30,231,127,63,97,47,231,190,11,61,29,191,203,205,121,63,240,237,95,190,29,5,74,191,198,106,100,63,165,185,225,60,31,112,106,191,33,13,65,63,37,81,139,62,45,130,124,191,241,222,17,63,0,0,0,63,41,32,127,191,196,134,179,62,11,130,50,63,20,33,114,191,253,75,225,61,100,23,90,63,139,80,86,191,105,166,12,190,227,83,116,63,83,98,45,191,159,171,192,190,124,156,127,63,96,175,243,190,187,156,23,191,104,64,123,63,140,96,123,190,84,156,69,191,243,131,103,63,243,4,53,63,96,175,243,190,203,4,12,191,41,32,127,63,6,171,205,190,11,61,29,191,45,130,124,63,2,63,166,190,83,98,45,191,158,42,120,63,140,96,123,190,103,88,60,191,20,33,114,63,124,139,40,190,29,5,74,191,31,112,106,63,92,31,169,189,139,80,86,191,49,37,97,63,138,140,141,165,49,37,97,191,139,80,86,63,92,31,169,61,31,112,106,191,29,5,74,63,124,139,40,62,20,33,114,191,103,88,60,63,140,96,123,62,158,42,120,191,83,98,45,63,2,63,166,62,45,130,124,191,11,61,29,63,6,171,205,62,41,32,127,191,203,4,12,63,96,175,243,62,0,0,128,191,96,175,243,62,203,4,12,63,41,32,127,191,6,171,205,62,11,61,29,63,45,130,124,191,2,63,166,62,83,98,45,63,158,42,120,191,140,96,123,62,103,88,60,63,20,33,114,191,124,139,40,62,29,5,74,63,31,112,106,191,92,31,169,61,139,80,86,63,49,37,97,191,243,4,53,63,110,15,6,191,97,47,231,190,41,32,127,63,187,156,23,191,159,171,192,190,45,130,124,63,231,32,40,191,239,214,152,190,158,42,120,63,15,127,55,191,240,237,95,190,20,33,114,63,84,156,69,191,105,166,12,190,31,112,106,63,8,96,82,191,180,163,97,189,49,37,97,63,215,179,93,191,165,185,225,60,139,80,86,63,243,131,103,191,253,75,225,61,29,5,74,63,51,191,111,191,203,79,68,62,103,88,60,63,50,87,118,191,37,81,139,62,83,98,45,63,104,64,123,191,196,134,179,62,11,61,29,63,62,114,126,191,113,130,218,62,203,4,12,63,30,231,127,191,0,0,0,63,96,175,243,62,124,156,127,191,241,222,17,63,6,171,205,62,219,146,125,191,203,190,34,63,2,63,166,62,203,205,121,191,11,130,50,63,140,96,123,62,227,83,116,191,33,13,65,63,124,139,40,62,183,46,109,191,159,70,78,63,92,31,169,61,198,106,100,191,100,23,90,63,243,4,53,63,241,222,17,191,196,134,179,190,158,42,120,63,33,13,65,191,253,75,225,189,49,37,97,63,198,106,100,191,105,166,12,62,103,88,60,63,203,205,121,191,159,171,192,62,203,4,12,63,30,231,127,191,187,156,23,63,2,63,166,62,50,87,118,191,84,156,69,63,92,31,169,61,215,179,93,191,243,131,103,63,124,139,40,190,15,127,55,191,104,64,123,63,6,171,205,190,110,15,6,191,124,156,127,63,11,61,29,191,239,214,152,190,227,83,116,63,29,5,74,191,180,163,97,189,100,23,90,63,31,112,106,191,203,79,68,62,11,130,50,63,45,130,124,191,113,130,218,62,0,0,0,63,41,32,127,191,203,190,34,63,37,81,139,62,20,33,114,191,159,70,78,63,165,185,225,60,139,80,86,191,183,46,109,63,240,237,95,190,83,98,45,191,219,146,125,63,97,47,231,190,96,175,243,190,62,114,126,63,231,32,40,191,140,96,123,190,51,191,111,63,8,96,82,191,243,4,53,63,11,61,29,191,140,96,123,190,31,112,106,63,49,37,97,191,124,139,40,62,83,98,45,63,41,32,127,191,203,4,12,63,2,63,166,62,20,33,114,191,139,80,86,63,92,31,169,189,103,88,60,191,45,130,124,63,96,175,243,190,6,171,205,190,158,42,120,63,29,5,74,191,130,33,119,167,29,5,74,63,158,42,120,191,6,171,205,62,96,175,243,62,45,130,124,191,103,88,60,63,92,31,169,61,139,80,86,191,20,33,114,63,2,63,166,190,203,4,12,191,41,32,127,63,83,98,45,191,124,139,40,190,49,37,97,63,31,112,106,191,140,96,123,62,11,61,29,63,0,0,128,191,11,61,29,63,140,96,123,62,31,112,106,191,49,37,97,63,124,139,40,190,83,98,45,191,41,32,127,63,203,4,12,191,2,63,166,190,20,33,114,63,139,80,86,191,92,31,169,61,103,88,60,63,45,130,124,191,96,175,243,62,6,171,205,62,158,42,120,191,29,5,74,63,243,4,53,63,231,32,40,191,105,166,12,190,139,80,86,63,50,87,118,191,113,130,218,62,6,171,205,62,227,83,116,191,100,23,90,63,124,139,40,190,203,190,34,191,30,231,127,63,83,98,45,191,253,75,225,189,8,96,82,63,158,42,120,191,97,47,231,62,159,171,192,62,20,33,114,191,215,179,93,63,203,79,68,190,11,61,29,191,124,156,127,63,11,130,50,191,92,31,169,189,159,70,78,63,203,205,121,191,96,175,243,62,196,134,179,62,51,191,111,191,49,37,97,63,240,237,95,190,187,156,23,191,41,32,127,63,15,127,55,191,180,163,97,189,29,5,74,63,104,64,123,191,0,0,0,63,2,63,166,62,183,46,109,191,198,106,100,63,140,96,123,190,241,222,17,191,62,114,126,63,103,88,60,191,165,185,225,188,84,156,69,63,45,130,124,191,110,15,6,63,239,214,152,62,31,112,106,191,243,131,103,63,37,81,139,190,203,4,12,191,219,146,125,63,33,13,65,191,243,4,53,63,11,130,50,191,165,185,225,188,103,88,60,63,124,156,127,191,231,32,40,63,92,31,169,61,84,156,69,191,62,114,126,63,11,61,29,191,105,166,12,190,159,70,78,63,45,130,124,191,241,222,17,63,203,79,68,62,139,80,86,191,203,205,121,63,110,15,6,191,140,96,123,190,215,179,93,63,50,87,118,191,96,175,243,62,239,214,152,62,198,106,100,191,20,33,114,63,113,130,218,190,196,134,179,190,31,112,106,63,183,46,109,191,159,171,192,62,6,171,205,62,51,191,111,191,243,131,103,63,2,63,166,190,97,47,231,190,227,83,116,63,49,37,97,191,37,81,139,62,0,0,0,63,158,42,120,191,100,23,90,63,240,237,95,190,203,4,12,191,104,64,123,63,8,96,82,191,124,139,40,62,187,156,23,63,219,146,125,191,29,5,74,63,253,75,225,189,203,190,34,191,41,32,127,63,33,13,65,191,180,163,97,61,83,98,45,63,30,231,127,191,15,127,55,63,243,4,53,63,103,88,60,191,92,31,169,61,11,61,29,63,45,130,124,191,139,80,86,63,140,96,123,190,96,175,243,190,20,33,114,63,31,112,106,191,6,171,205,62,2,63,166,62,49,37,97,191,158,42,120,63,203,4,12,191,124,139,40,190,29,5,74,63,41,32,127,191,83,98,45,63,219,176,54,161,83,98,45,191,41,32,127,63,29,5,74,191,124,139,40,62,203,4,12,63,158,42,120,191,49,37,97,63,2,63,166,190,6,171,205,190,31,112,106,63,20,33,114,191,96,175,243,62,140,96,123,62,139,80,86,191,45,130,124,63,11,61,29,191,92,31,169,189,103,88,60,63,0,0,128,191,103,88,60,63,92,31,169,189,11,61,29,191,45,130,124,63,139,80,86,191,140,96,123,62,96,175,243,62,20,33,114,191,31,112,106,63,6,171,205,190,2,63,166,190,49,37,97,63,158,42,120,191,203,4,12,63,124,139,40,62,29,5,74,191,41,32,127,63,83,98,45,191,243,4,53,63,84,156,69,191,203,79,68,62,96,175,243,62,183,46,109,191,227,83,116,63,203,4,12,191,253,75,225,189,15,127,55,63,41,32,127,191,8,96,82,63,37,81,139,190,6,171,205,190,198,106,100,63,203,205,121,191,11,61,29,63,165,185,225,60,231,32,40,191,45,130,124,63,215,179,93,191,196,134,179,62,2,63,166,62,100,23,90,191,219,146,125,63,83,98,45,191,180,163,97,61,187,156,23,63,158,42,120,191,243,131,103,63,113,130,218,190,140,96,123,190,159,70,78,63,124,156,127,191,103,88,60,63,105,166,12,190,110,15,6,191,20,33,114,63,51,191,111,191,0,0,0,63,124,139,40,62,33,13,65,191,30,231,127,63,29,5,74,191,240,237,95,62,97,47,231,62,31,112,106,191,50,87,118,63,241,222,17,191,92,31,169,189,11,130,50,63,62,114,126,191,139,80,86,63,239,214,152,190,159,171,192,190,49,37,97,63,104,64,123,191,203,190,34,63,243,4,53,63,159,70,78,191,239,214,152,62,2,63,166,62,8,96,82,191,30,231,127,63,29,5,74,191,37,81,139,62,196,134,179,62,139,80,86,191,124,156,127,63,84,156,69,191,140,96,123,62,159,171,192,62,100,23,90,191,41,32,127,63,33,13,65,191,240,237,95,62,6,171,205,62,215,179,93,191,62,114,126,63,103,88,60,191,203,79,68,62,113,130,218,62,49,37,97,191,219,146,125,63,15,127,55,191,124,139,40,62,97,47,231,62,198,106,100,191,45,130,124,63,11,130,50,191,105,166,12,62,96,175,243,62,243,131,103,191,104,64,123,63,83,98,45,191,253,75,225,61,0,0,0,63,31,112,106,191,203,205,121,63,231,32,40,191,92,31,169,61,110,15,6,63,183,46,109,191,158,42,120,63,203,190,34,191,180,163,97,61,203,4,12,63,51,191,111,191,50,87,118,63,11,61,29,191,165,185,225,60,241,222,17,63,20,33,114,191,227,83,116,63,187,156,23,191,243,4,53,63,139,80,86,191,6,171,205,62,124,139,40,62,83,98,45,191,158,42,120,63,20,33,114,191,11,61,29,63,92,31,169,189,96,175,243,190,49,37,97,63,41,32,127,191,29,5,74,63,2,63,166,190,140,96,123,190,103,88,60,63,45,130,124,191,31,112,106,63,203,4,12,191,88,56,119,39,203,4,12,63,31,112,106,191,45,130,124,63,103,88,60,191,140,96,123,62,2,63,166,62,29,5,74,191,41,32,127,63,49,37,97,191,96,175,243,62,92,31,169,61,11,61,29,191,20,33,114,63,158,42,120,191,83,98,45,63,124,139,40,190,6,171,205,190,139,80,86,63,0,0,128,191,139,80,86,63,6,171,205,190,124,139,40,190,83,98,45,63,158,42,120,191,20,33,114,63,11,61,29,191,92,31,169,61,96,175,243,62,49,37,97,191,41,32,127,63,29,5,74,191,2,63,166,62,140,96,123,62,103,88,60,191,45,130,124,63,31,112,106,191,203,4,12,63,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,195,67,119,38,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,138,140,141,165,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,50,146,101,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,91,26,141,38,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,115,83,13,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,10,154,176,167,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,45,69,13,40,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,172,10,119,39,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,243,4,53,63,198,106,100,191,187,156,23,63,124,139,40,190,239,214,152,190,11,130,50,63,20,33,114,191,219,146,125,63,8,96,82,191,96,175,243,62,165,185,225,188,113,130,218,190,29,5,74,63,104,64,123,191,50,87,118,63,103,88,60,191,196,134,179,62,253,75,225,61,203,4,12,191,215,179,93,63,124,156,127,191,31,112,106,63,203,190,34,191,240,237,95,62,140,96,123,62,231,32,40,191,183,46,109,63,41,32,127,191,100,23,90,63,110,15,6,191,92,31,169,61,159,171,192,62,33,13,65,191,158,42,120,63,203,205,121,191,84,156,69,63,6,171,205,190,180,163,97,189,0,0,0,63,139,80,86,191,62,114,126,63,51,191,111,191,83,98,45,63,37,81,139,190,203,79,68,190,11,61,29,63,243,131,103,191,30,231,127,63,49,37,97,191,241,222,17,63,105,166,12,190,2,63,166,190,15,127,55,63,227,83,116,191,45,130,124,63,159,70,78,191,97,47,231,62,243,4,53,63,31,112,106,191,83,98,45,63,2,63,166,190,92,31,169,189,96,175,243,62,29,5,74,191,158,42,120,63,45,130,124,191,139,80,86,63,203,4,12,191,124,139,40,62,140,96,123,62,11,61,29,191,49,37,97,63,41,32,127,191,20,33,114,63,103,88,60,191,6,171,205,62,217,213,140,37,6,171,205,190,103,88,60,63,20,33,114,191,41,32,127,63,49,37,97,191,11,61,29,63,140,96,123,190,124,139,40,190,203,4,12,63,139,80,86,191,45,130,124,63,158,42,120,191,29,5,74,63,96,175,243,190,92,31,169,61,2,63,166,62,83,98,45,191,31,112,106,63,0,0,128,191,31,112,106,63,83,98,45,191,2,63,166,62,92,31,169,61,96,175,243,190,29,5,74,63,158,42,120,191,45,130,124,63,139,80,86,191,203,4,12,63,124,139,40,190,140,96,123,190,11,61,29,63,49,37,97,191,41,32,127,63,20,33,114,191,103,88,60,63,6,171,205,190,243,4,53,63,51,191,111,191,33,13,65,63,96,175,243,190,105,166,12,62,240,237,95,62,203,4,12,191,159,70,78,63,50,87,118,191,41,32,127,63,243,131,103,191,11,130,50,63,6,171,205,190,180,163,97,61,239,214,152,62,11,61,29,191,100,23,90,63,104,64,123,191,45,130,124,63,215,179,93,191,203,190,34,63,2,63,166,190,165,185,225,188,159,171,192,62,83,98,45,191,198,106,100,63,62,114,126,191,158,42,120,63,8,96,82,191,241,222,17,63,140,96,123,190,253,75,225,189,97,47,231,62,103,88,60,191,183,46,109,63,30,231,127,191,20,33,114,63,84,156,69,191,0,0,0,63,124,139,40,190,203,79,68,190,110,15,6,63,29,5,74,191,227,83,116,63,124,156,127,191,31,112,106,63,15,127,55,191,113,130,218,62,92,31,169,189,37,81,139,190,187,156,23,63,139,80,86,191,203,205,121,63,219,146,125,191,49,37,97,63,231,32,40,191,196,134,179,62,243,4,53,63,227,83,116,191,8,96,82,63,11,61,29,191,196,134,179,62,180,163,97,189,140,96,123,190,110,15,6,63,33,13,65,191,31,112,106,63,62,114,126,191,104,64,123,63,49,37,97,191,11,130,50,63,97,47,231,190,124,139,40,62,105,166,12,62,113,130,218,190,83,98,45,63,215,179,93,191,203,205,121,63,41,32,127,191,183,46,109,63,84,156,69,191,203,4,12,63,37,81,139,190,165,185,225,188,2,63,166,62,187,156,23,191,159,70,78,63,20,33,114,191,30,231,127,63,50,87,118,191,139,80,86,63,203,190,34,191,159,171,192,62,92,31,169,189,240,237,95,190,0,0,0,63,103,88,60,191,243,131,103,63,219,146,125,191,45,130,124,63,198,106,100,191,15,127,55,63,96,175,243,190,203,79,68,62,253,75,225,61,6,171,205,190,231,32,40,63,100,23,90,191,158,42,120,63,124,156,127,191,51,191,111,63,29,5,74,191,241,222,17,63,239,214,152,190,243,4,53,63,158,42,120,191,49,37,97,63,103,88,60,191,203,4,12,63,2,63,166,190,92,31,169,61,124,139,40,62,6,171,205,190,11,61,29,63,29,5,74,191,31,112,106,63,45,130,124,191,41,32,127,63,20,33,114,191,139,80,86,63,83,98,45,191,96,175,243,62,140,96,123,190,231,54,141,167,140,96,123,62,96,175,243,190,83,98,45,63,139,80,86,191,20,33,114,63,41,32,127,191,45,130,124,63,31,112,106,191,29,5,74,63,11,61,29,191,6,171,205,62,124,139,40,190,92,31,169,189,2,63,166,62,203,4,12,191,103,88,60,63,49,37,97,191,158,42,120,63,0,0,128,191,158,42,120,63,49,37,97,191,103,88,60,63,203,4,12,191,2,63,166,62,92,31,169,189,124,139,40,190,6,171,205,62,11,61,29,191,29,5,74,63,31,112,106,191,45,130,124,63,41,32,127,191,20,33,114,63,139,80,86,191,83,98,45,63,96,175,243,190,140,96,123,62,243,4,53,63,104,64,123,191,183,46,109,63,139,80,86,191,15,127,55,63,241,222,17,191,6,171,205,62,240,237,95,190,165,185,225,60,124,139,40,62,196,134,179,190,110,15,6,63,83,98,45,191,159,70,78,63,243,131,103,191,158,42,120,63,124,156,127,191,219,146,125,63,20,33,114,191,215,179,93,63,33,13,65,191,11,61,29,63,97,47,231,190,37,81,139,62,92,31,169,189,253,75,225,189,239,214,152,62,96,175,243,190,203,190,34,63,84,156,69,191,49,37,97,63,227,83,116,191,62,114,126,63,41,32,127,191,50,87,118,63,198,106,100,191,29,5,74,63,231,32,40,191,0,0,0,63,2,63,166,190,105,166,12,62,180,163,97,61,140,96,123,190,113,130,218,62,187,156,23,191,103,88,60,63,100,23,90,191,51,191,111,63,45,130,124,191,30,231,127,63,203,205,121,191,31,112,106,63,8,96,82,191,11,130,50,63,203,4,12,191,159,171,192,62,203,79,68,190,243,4,53,63,219,146,125,191,50,87,118,63,31,112,106,191,100,23,90,63,84,156,69,191,83,98,45,63,241,222,17,191,97,47,231,62,2,63,166,190,203,79,68,62,180,163,97,189,92,31,169,189,240,237,95,62,196,134,179,190,96,175,243,62,187,156,23,191,11,130,50,63,29,5,74,191,215,179,93,63,183,46,109,191,158,42,120,63,62,114,126,191,30,231,127,63,45,130,124,191,227,83,116,63,243,131,103,191,139,80,86,63,33,13,65,191,231,32,40,63,203,4,12,191,113,130,218,62,239,214,152,190,124,139,40,62,165,185,225,188,253,75,225,189,140,96,123,62,159,171,192,190,0,0,0,63,11,61,29,191,15,127,55,63,159,70,78,191,49,37,97,63,51,191,111,191,203,205,121,63,41,32,127,191,124,156,127,63,104,64,123,191,20,33,114,63,198,106,100,191,8,96,82,63,103,88,60,191,203,190,34,63,110,15,6,191,6,171,205,62,37,81,139,190,105,166,12,62,243,4,53,63,41,32,127,191,45,130,124,63,158,42,120,191,20,33,114,63,31,112,106,191,49,37,97,63,139,80,86,191,29,5,74,63,103,88,60,191,83,98,45,63,11,61,29,191,203,4,12,63,96,175,243,190,6,171,205,62,2,63,166,190,140,96,123,62,124,139,40,190,92,31,169,61,133,3,13,38,92,31,169,189,124,139,40,62,140,96,123,190,2,63,166,62,6,171,205,190,96,175,243,62,203,4,12,191,11,61,29,63,83,98,45,191,103,88,60,63,29,5,74,191,139,80,86,63,49,37,97,191,31,112,106,63,20,33,114,191,158,42,120,63,45,130,124,191,41,32,127,63,0,0,128,191,41,32,127,63,45,130,124,191,158,42,120,63,20,33,114,191,31,112,106,63,49,37,97,191,139,80,86,63,29,5,74,191,103,88,60,63,83,98,45,191,11,61,29,63,203,4,12,191,96,175,243,62,6,171,205,190,2,63,166,62,140,96,123,190,124,139,40,62,92,31,169,189,243,4,53,63,30,231,127,191,124,156,127,63,41,32,127,191,62,114,126,63,219,146,125,191,45,130,124,63,104,64,123,191,203,205,121,63,158,42,120,191,50,87,118,63,227,83,116,191,20,33,114,63,51,191,111,191,183,46,109,63,31,112,106,191,243,131,103,63,198,106,100,191,49,37,97,63,215,179,93,191,100,23,90,63,139,80,86,191,8,96,82,63,159,70,78,191,29,5,74,63,84,156,69,191,33,13,65,63,103,88,60,191,15,127,55,63,11,130,50,191,83,98,45,63,231,32,40,191,203,190,34,63,11,61,29,191,187,156,23,63,241,222,17,191,203,4,12,63,110,15,6,191,0,0,0,63,96,175,243,190,97,47,231,62,113,130,218,190,6,171,205,62,159,171,192,190,196,134,179,62,2,63,166,190,239,214,152,62,37,81,139,190,140,96,123,62,240,237,95,190,203,79,68,62,124,139,40,190,105,166,12,62,253,75,225,189,92,31,169,61,180,163,97,189,165,185,225,60,243,4,53,63,248,231,127,63,227,159,127,63,207,39,127,63,211,127,126,63,15,168,125,63,170,160,124,63,214,105,123,63,206,3,122,63,213,110,120,63,54,171,118,63,72,185,116,63,102,153,114,63,248,75,112,63,107,209,109,63,56,42,107,63,221,86,104,63,226,87,101,63,216,45,98,63,87,217,94,63,254,90,91,63,117,179,87,63,109,227,83,63,156,235,79,63,193,204,75,63,163,135,71,63,13,29,67,63,214,141,62,63,215,218,57,63,243,4,53,63,18,13,48,63,35,244,42,63,28,187,37,63,246,98,32,63,179,236,26,63,89,89,21,63,245,169,15,63,151,223,9,63,86,251,3,63,156,252,251,62,59,211,239,62,211,124,227,62,180,251,214,62,56,82,202,62,192,130,189,62,178,143,176,62,125,123,163,62,151,72,150,62,121,249,136,62,72,33,119,62,54,33,92,62,208,247,64,62,46,170,37,62,114,61,10,62,129,109,221,61,140,54,166,61,195,192,93,61,150,213,221,60,243,4,53,63,207,39,127,63,170,160,124,63,213,110,120,63,102,153,114,63,56,42,107,63,216,45,98,63,117,179,87,63,193,204,75,63,214,141,62,63,18,13,48,63,246,98,32,63,245,169,15,63,156,252,251,62,180,251,214,62,178,143,176,62,121,249,136,62,208,247,64,62,129,109,221,61,150,213,221,60,195,192,93,189,114,61,10,190,54,33,92,190,151,72,150,190,192,130,189,190,211,124,227,190,86,251,3,191,89,89,21,191,28,187,37,191,243,4,53,191,13,29,67,191,156,235,79,191,254,90,91,191,226,87,101,191,107,209,109,191,72,185,116,191,206,3,122,191,15,168,125,191,227,159,127,191,248,231,127,191,211,127,126,191,214,105,123,191,54,171,118,191,248,75,112,191,221,86,104,191,87,217,94,191,109,227,83,191,163,135,71,191,215,218,57,191,35,244,42,191,179,236,26,191,151,223,9,191,59,211,239,190,56,82,202,190,125,123,163,190,72,33,119,190,46,170,37,190,140,54,166,189,243,4,53,63,15,168,125,63,54,171,118,63,56,42,107,63,254,90,91,63,163,135,71,63,18,13,48,63,89,89,21,63,59,211,239,62,178,143,176,62,54,33,92,62,140,54,166,61,195,192,93,189,208,247,64,190,125,123,163,190,211,124,227,190,245,169,15,191,35,244,42,191,13,29,67,191,117,179,87,191,221,86,104,191,72,185,116,191,170,160,124,191,248,231,127,191,211,127,126,191,213,110,120,191,107,209,109,191,87,217,94,191,193,204,75,191,243,4,53,191,179,236,26,191,156,252,251,190,192,130,189,190,72,33,119,190,129,109,221,189,150,213,221,60,46,170,37,62,151,72,150,62,180,251,214,62,151,223,9,63,28,187,37,63,214,141,62,63,109,227,83,63,226,87,101,63,102,153,114,63,214,105,123,63,227,159,127,63,207,39,127,63,206,3,122,63,248,75,112,63,216,45,98,63,156,235,79,63,215,218,57,63,246,98,32,63,86,251,3,63,56,82,202,62,121,249,136,62,114,61,10,62,243,4,53,63,214,105,123,63,107,209,109,63,117,179,87,63,215,218,57,63,89,89,21,63,180,251,214,62,72,33,119,62,195,192,93,61,114,61,10,190,125,123,163,190,156,252,251,190,28,187,37,191,163,135,71,191,216,45,98,191,72,185,116,191,211,127,126,191,207,39,127,191,54,171,118,191,226,87,101,191,193,204,75,191,35,244,42,191,86,251,3,191,178,143,176,190,46,170,37,190,150,213,221,60,54,33,92,62,56,82,202,62,245,169,15,63,243,4,53,63,109,227,83,63,56,42,107,63,206,3,122,63,248,231,127,63,170,160,124,63,248,75,112,63,254,90,91,63,214,141,62,63,179,236,26,63,211,124,227,62,121,249,136,62,140,54,166,61,129,109,221,189,151,72,150,190,59,211,239,190,246,98,32,191,13,29,67,191,87,217,94,191,102,153,114,191,15,168,125,191,227,159,127,191,213,110,120,191,221,86,104,191,156,235,79,191,18,13,48,191,151,223,9,191,192,130,189,190,208,247,64,190,243,4,53,63,213,110,120,63,216,45,98,63,214,141,62,63,245,169,15,63,178,143,176,62,129,109,221,61,114,61,10,190,192,130,189,190,89,89,21,191,13,29,67,191,226,87,101,191,206,3,122,191,248,231,127,191,54,171,118,191,87,217,94,191,215,218,57,191,151,223,9,191,125,123,163,190,140,54,166,189,46,170,37,62,56,82,202,62,179,236,26,63,163,135,71,63,221,86,104,63,214,105,123,63,227,159,127,63,72,185,116,63,254,90,91,63,243,4,53,63,86,251,3,63,151,72,150,62,195,192,93,61,208,247,64,190,180,251,214,190,246,98,32,191,193,204,75,191,56,42,107,191,170,160,124,191,207,39,127,191,102,153,114,191,117,179,87,191,18,13,48,191,156,252,251,190,121,249,136,190,150,213,221,188,54,33,92,62,211,124,227,62,28,187,37,63,156,235,79,63,107,209,109,63,15,168,125,63,211,127,126,63,248,75,112,63,109,227,83,63,35,244,42,63,59,211,239,62,72,33,119,62,243,4,53,63,72,185,116,63,109,227,83,63,246,98,32,63,192,130,189,62,140,54,166,61,54,33,92,190,156,252,251,190,215,218,57,191,226,87,101,191,170,160,124,191,15,168,125,191,221,86,104,191,214,141,62,191,86,251,3,191,72,33,119,190,195,192,93,61,178,143,176,62,179,236,26,63,156,235,79,63,102,153,114,63,248,231,127,63,54,171,118,63,117,179,87,63,28,187,37,63,56,82,202,62,129,109,221,61,208,247,64,190,59,211,239,190,243,4,53,191,216,45,98,191,214,105,123,191,211,127,126,191,56,42,107,191,13,29,67,191,151,223,9,191,121,249,136,190,150,213,221,60,125,123,163,62,89,89,21,63,193,204,75,63,248,75,112,63,227,159,127,63,213,110,120,63,254,90,91,63,35,244,42,63,180,251,214,62,114,61,10,62,46,170,37,190,211,124,227,190,18,13,48,191,87,217,94,191,206,3,122,191,207,39,127,191,107,209,109,191,163,135,71,191,245,169,15,191,151,72,150,190,243,4,53,63,248,75,112,63,13,29,67,63,156,252,251,62,46,170,37,62,208,247,64,190,86,251,3,191,163,135,71,191,102,153,114,191,248,231,127,191,107,209,109,191,214,141,62,191,59,211,239,190,114,61,10,190,54,33,92,62,151,223,9,63,193,204,75,63,72,185,116,63,227,159,127,63,56,42,107,63,215,218,57,63,211,124,227,62,129,109,221,61,72,33,119,190,245,169,15,191,156,235,79,191,54,171,118,191,207,39,127,191,221,86,104,191,243,4,53,191,180,251,214,190,140,54,166,189,121,249,136,62,89,89,21,63,109,227,83,63,213,110,120,63,211,127,126,63,226,87,101,63,18,13,48,63,56,82,202,62,195,192,93,61,151,72,150,190,179,236,26,191,117,179,87,191,206,3,122,191,15,168,125,191,216,45,98,191,35,244,42,191,192,130,189,190,150,213,221,188,125,123,163,62,246,98,32,63,254,90,91,63,214,105,123,63,170,160,124,63,87,217,94,63,28,187,37,63,178,143,176,62,243,4,53,63,56,42,107,63,18,13,48,63,178,143,176,62,195,192,93,189,211,124,227,190,13,29,67,191,72,185,116,191,211,127,126,191,87,217,94,191,179,236,26,191,72,33,119,190,46,170,37,62,151,223,9,63,109,227,83,63,214,105,123,63,206,3,122,63,156,235,79,63,86,251,3,63,114,61,10,62,121,249,136,190,246,98,32,191,216,45,98,191,207,39,127,191,102,153,114,191,214,141,62,191,180,251,214,190,150,213,221,188,192,130,189,62,243,4,53,63,107,209,109,63,248,231,127,63,221,86,104,63,35,244,42,63,125,123,163,62,140,54,166,189,59,211,239,190,163,135,71,191,54,171,118,191,15,168,125,191,254,90,91,191,89,89,21,191,54,33,92,190,208,247,64,62,245,169,15,63,117,179,87,63,170,160,124,63,213,110,120,63,193,204,75,63,156,252,251,62,129,109,221,61,151,72,150,190,28,187,37,191,226,87,101,191,227,159,127,191,248,75,112,191,215,218,57,191,56,82,202,190,243,4,53,63,226,87,101,63,179,236,26,63,208,247,64,62,121,249,136,190,35,244,42,191,107,209,109,191,207,39,127,191,254,90,91,191,151,223,9,191,129,109,221,189,178,143,176,62,215,218,57,63,72,185,116,63,170,160,124,63,156,235,79,63,59,211,239,62,150,213,221,60,180,251,214,190,163,135,71,191,206,3,122,191,213,110,120,191,13,29,67,191,56,82,202,190,195,192,93,61,156,252,251,62,109,227,83,63,15,168,125,63,102,153,114,63,243,4,53,63,125,123,163,62,114,61,10,190,245,169,15,191,87,217,94,191,227,159,127,191,56,42,107,191,28,187,37,191,72,33,119,190,54,33,92,62,246,98,32,63,221,86,104,63,248,231,127,63,216,45,98,63,89,89,21,63,46,170,37,62,151,72,150,190,18,13,48,191,248,75,112,191,211,127,126,191,117,179,87,191,86,251,3,191,140,54,166,189,192,130,189,62,214,141,62,63,54,171,118,63,214,105,123,63,193,204,75,63,211,124,227,62,243,4,53,63,87,217,94,63,86,251,3,63,150,213,221,60,59,211,239,190,117,179,87,191,227,159,127,191,226,87,101,191,245,169,15,191,140,54,166,189,180,251,214,62,156,235,79,63,211,127,126,63,56,42,107,63,179,236,26,63,114,61,10,62,192,130,189,190,163,135,71,191,170,160,124,191,248,75,112,191,28,187,37,191,208,247,64,190,125,123,163,62,214,141,62,63,206,3,122,63,72,185,116,63,18,13,48,63,72,33,119,62,121,249,136,190,243,4,53,191,54,171,118,191,213,110,120,191,215,218,57,191,151,72,150,190,54,33,92,62,35,244,42,63,102,153,114,63,214,105,123,63,13,29,67,63,178,143,176,62,46,170,37,190,246,98,32,191,107,209,109,191,15,168,125,191,193,204,75,191,56,82,202,190,129,109,221,61,89,89,21,63,221,86,104,63,207,39,127,63,109,227,83,63,211,124,227,62,195,192,93,189,151,223,9,191,216,45,98,191,248,231,127,191,254,90,91,191,156,252,251,190,243,4,53,63,117,179,87,63,180,251,214,62,114,61,10,190,28,187,37,191,72,185,116,191,54,171,118,191,35,244,42,191,46,170,37,190,56,82,202,62,109,227,83,63,248,231,127,63,254,90,91,63,211,124,227,62,129,109,221,189,246,98,32,191,102,153,114,191,213,110,120,191,18,13,48,191,208,247,64,190,192,130,189,62,156,235,79,63,227,159,127,63,87,217,94,63,59,211,239,62,140,54,166,189,179,236,26,191,248,75,112,191,206,3,122,191,243,4,53,191,54,33,92,190,178,143,176,62,193,204,75,63,207,39,127,63,216,45,98,63,156,252,251,62,195,192,93,189,89,89,21,191,107,209,109,191,214,105,123,191,215,218,57,191,72,33,119,190,125,123,163,62,163,135,71,63,211,127,126,63,226,87,101,63,86,251,3,63,150,213,221,188,245,169,15,191,56,42,107,191,170,160,124,191,214,141,62,191,121,249,136,190,151,72,150,62,13,29,67,63,15,168,125,63,221,86,104,63,151,223,9,63,243,4,53,63,156,235,79,63,125,123,163,62,151,72,150,190,193,204,75,191,248,231,127,191,109,227,83,191,178,143,176,190,121,249,136,62,163,135,71,63,227,159,127,63,117,179,87,63,192,130,189,62,72,33,119,190,13,29,67,191,207,39,127,191,254,90,91,191,56,82,202,190,54,33,92,62,214,141,62,63,211,127,126,63,87,217,94,63,180,251,214,62,208,247,64,190,215,218,57,191,15,168,125,191,216,45,98,191,211,124,227,190,46,170,37,62,243,4,53,63,170,160,124,63,226,87,101,63,59,211,239,62,114,61,10,190,18,13,48,191,214,105,123,191,221,86,104,191,156,252,251,190,129,109,221,61,35,244,42,63,206,3,122,63,56,42,107,63,86,251,3,63,140,54,166,189,28,187,37,191,213,110,120,191,107,209,109,191,151,223,9,191,195,192,93,61,246,98,32,63,54,171,118,63,248,75,112,63,245,169,15,63,150,213,221,188,179,236,26,191,72,185,116,191,102,153,114,191,89,89,21,191,243,4,53,63,163,135,71,63,54,33,92,62,211,124,227,190,221,86,104,191,213,110,120,191,179,236,26,191,150,213,221,60,28,187,37,63,214,105,123,63,216,45,98,63,56,82,202,62,121,249,136,190,156,235,79,191,227,159,127,191,214,141,62,191,46,170,37,190,156,252,251,62,107,209,109,63,72,185,116,63,245,169,15,63,140,54,166,189,18,13,48,191,15,168,125,191,254,90,91,191,178,143,176,190,125,123,163,62,117,179,87,63,211,127,126,63,243,4,53,63,129,109,221,61,151,223,9,191,102,153,114,191,248,75,112,191,86,251,3,191,114,61,10,62,215,218,57,63,207,39,127,63,109,227,83,63,151,72,150,62,192,130,189,190,87,217,94,191,170,160,124,191,35,244,42,191,195,192,93,189,89,89,21,63,54,171,118,63,56,42,107,63,59,211,239,62,208,247,64,190,13,29,67,191,248,231,127,191,193,204,75,191,72,33,119,190,180,251,214,62,226,87,101,63,206,3,122,63,246,98,32,63,243,4,53,63,214,141,62,63,129,109,221,61,89,89,21,191,206,3,122,191,87,217,94,191,125,123,163,190,56,82,202,62,221,86,104,63,72,185,116,63,86,251,3,63,208,247,64,190,193,204,75,191,207,39,127,191,18,13,48,191,150,213,221,188,28,187,37,63,15,168,125,63,109,227,83,63,72,33,119,62,59,211,239,190,248,75,112,191,107,209,109,191,211,124,227,190,121,249,136,62,117,179,87,63,170,160,124,63,246,98,32,63,195,192,93,189,243,4,53,191,227,159,127,191,163,135,71,191,46,170,37,190,151,223,9,63,54,171,118,63,226,87,101,63,192,130,189,62,178,143,176,190,216,45,98,191,213,110,120,191,245,169,15,191,114,61,10,62,13,29,67,63,248,231,127,63,215,218,57,63,140,54,166,61,179,236,26,191,214,105,123,191,254,90,91,191,151,72,150,190,180,251,214,62,56,42,107,63,102,153,114,63,156,252,251,62,54,33,92,190,156,235,79,191,211,127,126,191,35,244,42,191,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,8,72,141,166,243,4,53,191,0,0,128,191,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,63,243,4,53,63,119,247,83,166,243,4,53,191,0,0,128,191,243,4,53,191,53,213,83,167,243,4,53,63,0,0,128,63,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,191,243,4,53,191,92,123,101,167,243,4,53,63,0,0,128,63,243,4,53,63,138,140,141,165,243,4,53,191,0,0,128,191,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,63,243,4,53,63,243,4,53,63,35,244,42,63,129,109,221,189,156,235,79,191,206,3,122,191,156,252,251,190,125,123,163,62,56,42,107,63,221,86,104,63,151,72,150,62,86,251,3,191,214,105,123,191,193,204,75,191,140,54,166,189,18,13,48,63,248,231,127,63,28,187,37,63,114,61,10,190,109,227,83,191,213,110,120,191,59,211,239,190,178,143,176,62,107,209,109,63,226,87,101,63,121,249,136,62,151,223,9,191,170,160,124,191,163,135,71,191,195,192,93,189,243,4,53,63,227,159,127,63,246,98,32,63,46,170,37,190,117,179,87,191,54,171,118,191,211,124,227,190,192,130,189,62,248,75,112,63,216,45,98,63,72,33,119,62,245,169,15,191,15,168,125,191,13,29,67,191,150,213,221,188,215,218,57,63,207,39,127,63,179,236,26,63,208,247,64,190,254,90,91,191,72,185,116,191,180,251,214,190,56,82,202,62,102,153,114,63,87,217,94,63,54,33,92,62,89,89,21,191,211,127,126,191,214,141,62,191,243,4,53,63,246,98,32,63,54,33,92,190,226,87,101,191,221,86,104,191,72,33,119,190,179,236,26,63,248,231,127,63,28,187,37,63,208,247,64,190,216,45,98,191,56,42,107,191,121,249,136,190,89,89,21,63,227,159,127,63,35,244,42,63,46,170,37,190,87,217,94,191,107,209,109,191,151,72,150,190,245,169,15,63,207,39,127,63,18,13,48,63,114,61,10,190,254,90,91,191,248,75,112,191,125,123,163,190,151,223,9,63,211,127,126,63,243,4,53,63,129,109,221,189,117,179,87,191,102,153,114,191,178,143,176,190,86,251,3,63,15,168,125,63,215,218,57,63,140,54,166,189,109,227,83,191,72,185,116,191,192,130,189,190,156,252,251,62,170,160,124,63,214,141,62,63,195,192,93,189,156,235,79,191,54,171,118,191,56,82,202,190,59,211,239,62,214,105,123,63,13,29,67,63,150,213,221,188,193,204,75,191,213,110,120,191,180,251,214,190,211,124,227,62,206,3,122,63,163,135,71,63,243,4,53,63,89,89,21,63,125,123,163,190,72,185,116,191,193,204,75,191,150,213,221,60,109,227,83,63,248,75,112,63,121,249,136,62,246,98,32,191,227,159,127,191,151,223,9,191,192,130,189,62,213,110,120,63,13,29,67,63,140,54,166,189,254,90,91,191,56,42,107,191,54,33,92,190,35,244,42,63,211,127,126,63,156,252,251,62,180,251,214,190,214,105,123,191,215,218,57,191,114,61,10,62,216,45,98,63,226,87,101,63,46,170,37,62,243,4,53,191,170,160,124,191,211,124,227,190,59,211,239,62,15,168,125,63,18,13,48,63,208,247,64,190,221,86,104,191,87,217,94,191,129,109,221,189,214,141,62,63,206,3,122,63,56,82,202,62,86,251,3,191,207,39,127,191,28,187,37,191,72,33,119,62,107,209,109,63,117,179,87,63,195,192,93,61,163,135,71,191,54,171,118,191,178,143,176,190,245,169,15,63,248,231,127,63,179,236,26,63,151,72,150,190,102,153,114,191,156,235,79,191,243,4,53,63,151,223,9,63,180,251,214,190,15,168,125,191,28,187,37,191,151,72,150,62,54,171,118,63,214,141,62,63,46,170,37,190,56,42,107,191,109,227,83,191,150,213,221,60,254,90,91,63,226,87,101,63,129,109,221,61,163,135,71,191,102,153,114,191,72,33,119,190,18,13,48,63,214,105,123,63,192,130,189,62,89,89,21,191,227,159,127,191,156,252,251,190,59,211,239,62,207,39,127,63,179,236,26,63,178,143,176,190,206,3,122,191,243,4,53,191,54,33,92,62,248,75,112,63,193,204,75,63,140,54,166,189,216,45,98,191,87,217,94,191,195,192,93,189,156,235,79,63,107,209,109,63,208,247,64,62,215,218,57,191,213,110,120,191,125,123,163,190,246,98,32,63,211,127,126,63,211,124,227,62,86,251,3,191,248,231,127,191,245,169,15,191,56,82,202,62,170,160,124,63,35,244,42,63,121,249,136,190,72,185,116,191,13,29,67,191,114,61,10,62,221,86,104,63,117,179,87,63,243,4,53,63,156,252,251,62,86,251,3,191,248,231,127,191,59,211,239,190,151,223,9,63,227,159,127,63,211,124,227,62,245,169,15,191,207,39,127,191,180,251,214,190,89,89,21,63,211,127,126,63,56,82,202,62,179,236,26,191,15,168,125,191,192,130,189,190,246,98,32,63,170,160,124,63,178,143,176,62,28,187,37,191,214,105,123,191,125,123,163,190,35,244,42,63,206,3,122,63,151,72,150,62,18,13,48,191,213,110,120,191,121,249,136,190,243,4,53,63,54,171,118,63,72,33,119,62,215,218,57,191,72,185,116,191,54,33,92,190,214,141,62,63,102,153,114,63,208,247,64,62,13,29,67,191,248,75,112,191,46,170,37,190,163,135,71,63,107,209,109,63,114,61,10,62,193,204,75,191,56,42,107,191,129,109,221,189,156,235,79,63,221,86,104,63,140,54,166,61,109,227,83,191,226,87,101,191,195,192,93,189,117,179,87,63,216,45,98,63,150,213,221,60,254,90,91,191,87,217,94,191,243,4,53,63,211,124,227,62,179,236,26,191,214,105,123,191,121,249,136,190,214,141,62,63,107,209,109,63,140,54,166,61,254,90,91,191,117,179,87,191,129,109,221,61,248,75,112,63,215,218,57,63,151,72,150,190,170,160,124,191,89,89,21,191,59,211,239,62,248,231,127,63,180,251,214,62,246,98,32,191,206,3,122,191,72,33,119,190,13,29,67,63,56,42,107,63,195,192,93,61,87,217,94,191,109,227,83,191,114,61,10,62,102,153,114,63,243,4,53,63,125,123,163,190,15,168,125,191,245,169,15,191,156,252,251,62,227,159,127,63,56,82,202,62,28,187,37,191,213,110,120,191,54,33,92,190,163,135,71,63,221,86,104,63,150,213,221,60,216,45,98,191,156,235,79,191,46,170,37,62,72,185,116,63,18,13,48,63,178,143,176,190,211,127,126,191,151,223,9,191,86,251,3,63,207,39,127,63,192,130,189,62,35,244,42,191,54,171,118,191,208,247,64,190,193,204,75,63,226,87,101,63,243,4,53,63,56,82,202,62,18,13,48,191,248,75,112,191,195,192,93,189,226,87,101,63,13,29,67,63,151,72,150,190,211,127,126,191,156,252,251,190,179,236,26,63,213,110,120,63,46,170,37,62,117,179,87,191,109,227,83,191,208,247,64,62,206,3,122,63,89,89,21,63,86,251,3,191,15,168,125,191,121,249,136,190,163,135,71,63,216,45,98,63,140,54,166,189,102,153,114,191,35,244,42,191,180,251,214,62,248,231,127,63,192,130,189,62,243,4,53,191,107,209,109,191,150,213,221,188,221,86,104,63,214,141,62,63,125,123,163,190,207,39,127,191,59,211,239,190,246,98,32,63,54,171,118,63,114,61,10,62,254,90,91,191,156,235,79,191,54,33,92,62,214,105,123,63,245,169,15,63,151,223,9,191,170,160,124,191,72,33,119,190,193,204,75,63,87,217,94,63,129,109,221,189,72,185,116,191,28,187,37,191,211,124,227,62,227,159,127,63,178,143,176,62,215,218,57,191,56,42,107,191,243,4,53,63,178,143,176,62,13,29,67,191,87,217,94,191,46,170,37,62,214,105,123,63,86,251,3,63,246,98,32,191,102,153,114,191,150,213,221,188,107,209,109,63,35,244,42,63,59,211,239,190,15,168,125,191,54,33,92,190,117,179,87,63,193,204,75,63,151,72,150,190,227,159,127,191,56,82,202,190,215,218,57,63,226,87,101,63,129,109,221,189,213,110,120,191,245,169,15,191,89,89,21,63,54,171,118,63,140,54,166,61,221,86,104,191,243,4,53,191,180,251,214,62,207,39,127,63,121,249,136,62,156,235,79,191,109,227,83,191,72,33,119,62,211,127,126,63,211,124,227,62,18,13,48,191,56,42,107,191,195,192,93,61,72,185,116,63,179,236,26,63,151,223,9,191,206,3,122,191,114,61,10,190,216,45,98,63,214,141,62,63,192,130,189,190,248,231,127,191,125,123,163,190,163,135,71,63,254,90,91,63,208,247,64,190,170,160,124,191,156,252,251,190,28,187,37,63,248,75,112,63,243,4,53,63,151,72,150,62,109,227,83,191,163,135,71,191,192,130,189,62,207,39,127,63,54,33,92,62,87,217,94,191,215,218,57,191,211,124,227,62,170,160,124,63,114,61,10,62,221,86,104,191,35,244,42,191,86,251,3,63,213,110,120,63,195,192,93,61,248,75,112,191,179,236,26,191,89,89,21,63,102,153,114,63,150,213,221,188,54,171,118,191,151,223,9,191,28,187,37,63,56,42,107,63,129,109,221,189,214,105,123,191,59,211,239,190,243,4,53,63,216,45,98,63,208,247,64,190,211,127,126,191,56,82,202,190,13,29,67,63,117,179,87,63,121,249,136,190,248,231,127,191,125,123,163,190,156,235,79,63,193,204,75,63,178,143,176,190,227,159,127,191,72,33,119,190,254,90,91,63,214,141,62,63,180,251,214,190,15,168,125,191,46,170,37,190,226,87,101,63,18,13,48,63,156,252,251,190,206,3,122,191,140,54,166,189,107,209,109,63,246,98,32,63,245,169,15,191,72,185,116,191,243,4,53,63,72,33,119,62,216,45,98,191,35,244,42,191,245,169,15,63,248,75,112,63,129,109,221,189,15,168,125,191,192,130,189,190,156,235,79,63,13,29,67,63,211,124,227,190,206,3,122,191,150,213,221,188,54,171,118,63,156,252,251,62,215,218,57,191,117,179,87,191,125,123,163,62,207,39,127,63,46,170,37,62,56,42,107,191,179,236,26,191,246,98,32,63,221,86,104,63,208,247,64,190,227,159,127,191,151,72,150,190,254,90,91,63,243,4,53,63,86,251,3,191,72,185,116,191,195,192,93,61,214,105,123,63,180,251,214,62,163,135,71,191,193,204,75,191,56,82,202,62,170,160,124,63,140,54,166,61,102,153,114,191,151,223,9,191,18,13,48,63,87,217,94,63,121,249,136,190,248,231,127,191,54,33,92,190,226,87,101,63,28,187,37,63,89,89,21,191,107,209,109,191,114,61,10,62,211,127,126,63,178,143,176,62,109,227,83,191,214,141,62,191,59,211,239,62,213,110,120,63,243,4,53,63,208,247,64,62,107,209,109,191,151,223,9,191,215,218,57,63,156,235,79,63,180,251,214,190,213,110,120,191,195,192,93,61,15,168,125,63,125,123,163,62,87,217,94,191,28,187,37,191,246,98,32,63,216,45,98,63,151,72,150,190,211,127,126,191,140,54,166,189,54,171,118,63,211,124,227,62,193,204,75,191,214,141,62,191,86,251,3,63,248,75,112,63,46,170,37,190,248,231,127,191,54,33,92,190,56,42,107,63,245,169,15,63,243,4,53,191,109,227,83,191,56,82,202,62,206,3,122,63,150,213,221,188,170,160,124,191,178,143,176,190,254,90,91,63,35,244,42,63,179,236,26,191,226,87,101,191,121,249,136,62,207,39,127,63,129,109,221,61,72,185,116,191,59,211,239,190,163,135,71,63,13,29,67,63,156,252,251,190,102,153,114,191,114,61,10,62,227,159,127,63,72,33,119,62,221,86,104,191,89,89,21,191,18,13,48,63,117,179,87,63,192,130,189,190,214,105,123,191,243,4,53,63,114,61,10,62,54,171,118,191,56,82,202,190,254,90,91,63,246,98,32,63,18,13,48,191,156,235,79,191,59,211,239,62,248,75,112,63,54,33,92,190,207,39,127,191,195,192,93,189,214,105,123,63,125,123,163,62,226,87,101,191,245,169,15,191,214,141,62,63,13,29,67,63,151,223,9,191,221,86,104,191,151,72,150,62,170,160,124,63,150,213,221,188,211,127,126,191,72,33,119,190,107,209,109,63,156,252,251,62,193,204,75,191,243,4,53,191,179,236,26,63,87,217,94,63,192,130,189,190,213,110,120,191,129,109,221,61,248,231,127,63,46,170,37,62,72,185,116,191,180,251,214,190,117,179,87,63,28,187,37,63,35,244,42,191,109,227,83,191,211,124,227,62,102,153,114,63,208,247,64,190,227,159,127,191,140,54,166,189,206,3,122,63,178,143,176,62,216,45,98,191,89,89,21,191,215,218,57,63,163,135,71,63,86,251,3,191,56,42,107,191,121,249,136,62,15,168,125,63,243,4,53,63,140,54,166,61,170,160,124,191,72,33,119,190,102,153,114,63,56,82,202,62,216,45,98,191,151,223,9,191,193,204,75,63,35,244,42,63,18,13,48,191,163,135,71,191,245,169,15,63,87,217,94,63,180,251,214,190,248,75,112,191,121,249,136,62,214,105,123,63,129,109,221,189,248,231,127,191,195,192,93,189,15,168,125,63,54,33,92,62,72,185,116,191,192,130,189,190,226,87,101,63,86,251,3,63,156,235,79,191,28,187,37,191,243,4,53,63,13,29,67,63,89,89,21,191,254,90,91,191,211,124,227,62,107,209,109,63,151,72,150,190,206,3,122,191,114,61,10,62,227,159,127,63,150,213,221,60,211,127,126,191,208,247,64,190,54,171,118,63,178,143,176,62,221,86,104,191,156,252,251,190,109,227,83,63,246,98,32,63,215,218,57,191,214,141,62,191,179,236,26,63,117,179,87,63,59,211,239,190,56,42,107,191,125,123,163,62,213,110,120,63,46,170,37,190,207,39,127,191,243,4,53,63,150,213,221,60,227,159,127,191,140,54,166,189,211,127,126,63,114,61,10,62,170,160,124,191,208,247,64,190,206,3,122,63,72,33,119,62,54,171,118,191,151,72,150,190,102,153,114,63,178,143,176,62,107,209,109,191,56,82,202,190,221,86,104,63,211,124,227,62,216,45,98,191,156,252,251,190,254,90,91,63,151,223,9,63,109,227,83,191,89,89,21,191,193,204,75,63,246,98,32,63,13,29,67,191,35,244,42,191,215,218,57,63,243,4,53,63,18,13,48,191,214,141,62,191,28,187,37,63,163,135,71,63,179,236,26,191,156,235,79,191,245,169,15,63,117,179,87,63,86,251,3,191,87,217,94,191,59,211,239,62,226,87,101,63,180,251,214,190,56,42,107,191,192,130,189,62,248,75,112,63,125,123,163,190,72,185,116,191,121,249,136,62,213,110,120,63,54,33,92,190,214,105,123,191,46,170,37,62,15,168,125,63,129,109,221,189,207,39,127,191,195,192,93,61,248,231,127,63,243,4,53,63,150,213,221,188,227,159,127,191,140,54,166,61,211,127,126,63,114,61,10,190,170,160,124,191,208,247,64,62,206,3,122,63,72,33,119,190,54,171,118,191,151,72,150,62,102,153,114,63,178,143,176,190,107,209,109,191,56,82,202,62,221,86,104,63,211,124,227,190,216,45,98,191,156,252,251,62,254,90,91,63,151,223,9,191,109,227,83,191,89,89,21,63,193,204,75,63,246,98,32,191,13,29,67,191,35,244,42,63,215,218,57,63,243,4,53,191,18,13,48,191,214,141,62,63,28,187,37,63,163,135,71,191,179,236,26,191,156,235,79,63,245,169,15,63,117,179,87,191,86,251,3,191,87,217,94,63,59,211,239,62,226,87,101,191,180,251,214,190,56,42,107,63,192,130,189,62,248,75,112,191,125,123,163,190,72,185,116,63,121,249,136,62,213,110,120,191,54,33,92,190,214,105,123,63,46,170,37,62,15,168,125,191,129,109,221,189,207,39,127,63,195,192,93,61,248,231,127,191,243,4,53,63,140,54,166,189,170,160,124,191,72,33,119,62,102,153,114,63,56,82,202,190,216,45,98,191,151,223,9,63,193,204,75,63,35,244,42,191,18,13,48,191,163,135,71,63,245,169,15,63,87,217,94,191,180,251,214,190,248,75,112,63,121,249,136,62,214,105,123,191,129,109,221,189,248,231,127,63,195,192,93,189,15,168,125,191,54,33,92,62,72,185,116,63,192,130,189,190,226,87,101,191,86,251,3,63,156,235,79,63,28,187,37,191,243,4,53,191,13,29,67,63,89,89,21,63,254,90,91,191,211,124,227,190,107,209,109,63,151,72,150,62,206,3,122,191,114,61,10,190,227,159,127,63,150,213,221,188,211,127,126,191,208,247,64,62,54,171,118,63,178,143,176,190,221,86,104,191,156,252,251,62,109,227,83,63,246,98,32,191,215,218,57,191,214,141,62,63,179,236,26,63,117,179,87,191,59,211,239,190,56,42,107,63,125,123,163,62,213,110,120,191,46,170,37,190,207,39,127,63,243,4,53,63,114,61,10,190,54,171,118,191,56,82,202,62,254,90,91,63,246,98,32,191,18,13,48,191,156,235,79,63,59,211,239,62,248,75,112,191,54,33,92,190,207,39,127,63,195,192,93,189,214,105,123,191,125,123,163,62,226,87,101,63,245,169,15,191,214,141,62,191,13,29,67,63,151,223,9,63,221,86,104,191,151,72,150,190,170,160,124,63,150,213,221,60,211,127,126,191,72,33,119,62,107,209,109,63,156,252,251,190,193,204,75,191,243,4,53,63,179,236,26,63,87,217,94,191,192,130,189,190,213,110,120,63,129,109,221,61,248,231,127,191,46,170,37,62,72,185,116,63,180,251,214,190,117,179,87,191,28,187,37,63,35,244,42,63,109,227,83,191,211,124,227,190,102,153,114,63,208,247,64,62,227,159,127,191,140,54,166,61,206,3,122,63,178,143,176,190,216,45,98,191,89,89,21,63,215,218,57,63,163,135,71,191,86,251,3,191,56,42,107,63,121,249,136,62,15,168,125,191,243,4,53,63,208,247,64,190,107,209,109,191,151,223,9,63,215,218,57,63,156,235,79,191,180,251,214,190,213,110,120,63,195,192,93,61,15,168,125,191,125,123,163,62,87,217,94,63,28,187,37,191,246,98,32,191,216,45,98,63,151,72,150,62,211,127,126,191,140,54,166,61,54,171,118,63,211,124,227,190,193,204,75,191,214,141,62,63,86,251,3,63,248,75,112,191,46,170,37,190,248,231,127,63,54,33,92,190,56,42,107,191,245,169,15,63,243,4,53,63,109,227,83,191,56,82,202,190,206,3,122,63,150,213,221,60,170,160,124,191,178,143,176,62,254,90,91,63,35,244,42,191,179,236,26,191,226,87,101,63,121,249,136,62,207,39,127,191,129,109,221,61,72,185,116,63,59,211,239,190,163,135,71,191,13,29,67,63,156,252,251,62,102,153,114,191,114,61,10,190,227,159,127,63,72,33,119,190,221,86,104,191,89,89,21,63,18,13,48,63,117,179,87,191,192,130,189,190,214,105,123,63,243,4,53,63,72,33,119,190,216,45,98,191,35,244,42,63,245,169,15,63,248,75,112,191,129,109,221,189,15,168,125,63,192,130,189,190,156,235,79,191,13,29,67,63,211,124,227,62,206,3,122,191,150,213,221,60,54,171,118,63,156,252,251,190,215,218,57,191,117,179,87,63,125,123,163,62,207,39,127,191,46,170,37,62,56,42,107,63,179,236,26,191,246,98,32,191,221,86,104,63,208,247,64,62,227,159,127,191,151,72,150,62,254,90,91,63,243,4,53,191,86,251,3,191,72,185,116,63,195,192,93,61,214,105,123,191,180,251,214,62,163,135,71,63,193,204,75,191,56,82,202,190,170,160,124,63,140,54,166,189,102,153,114,191,151,223,9,63,18,13,48,63,87,217,94,191,121,249,136,190,248,231,127,63,54,33,92,190,226,87,101,191,28,187,37,63,89,89,21,63,107,209,109,191,114,61,10,190,211,127,126,63,178,143,176,190,109,227,83,191,214,141,62,63,59,211,239,62,213,110,120,191,243,4,53,63,151,72,150,190,109,227,83,191,163,135,71,63,192,130,189,62,207,39,127,191,54,33,92,62,87,217,94,63,215,218,57,191,211,124,227,190,170,160,124,63,114,61,10,190,221,86,104,191,35,244,42,63,86,251,3,63,213,110,120,191,195,192,93,61,248,75,112,63,179,236,26,191,89,89,21,191,102,153,114,63,150,213,221,60,54,171,118,191,151,223,9,63,28,187,37,63,56,42,107,191,129,109,221,189,214,105,123,63,59,211,239,190,243,4,53,191,216,45,98,63,208,247,64,62,211,127,126,191,56,82,202,62,13,29,67,63,117,179,87,191,121,249,136,190,248,231,127,63,125,123,163,190,156,235,79,191,193,204,75,63,178,143,176,62,227,159,127,191,72,33,119,62,254,90,91,63,214,141,62,191,180,251,214,190,15,168,125,63,46,170,37,190,226,87,101,191,18,13,48,63,156,252,251,62,206,3,122,191,140,54,166,61,107,209,109,63,246,98,32,191,245,169,15,191,72,185,116,63,243,4,53,63,178,143,176,190,13,29,67,191,87,217,94,63,46,170,37,62,214,105,123,191,86,251,3,63,246,98,32,63,102,153,114,191,150,213,221,60,107,209,109,63,35,244,42,191,59,211,239,190,15,168,125,63,54,33,92,190,117,179,87,191,193,204,75,63,151,72,150,62,227,159,127,191,56,82,202,62,215,218,57,63,226,87,101,191,129,109,221,189,213,110,120,63,245,169,15,191,89,89,21,191,54,171,118,63,140,54,166,189,221,86,104,191,243,4,53,63,180,251,214,62,207,39,127,191,121,249,136,62,156,235,79,63,109,227,83,191,72,33,119,190,211,127,126,63,211,124,227,190,18,13,48,191,56,42,107,63,195,192,93,61,72,185,116,191,179,236,26,63,151,223,9,63,206,3,122,191,114,61,10,62,216,45,98,63,214,141,62,191,192,130,189,190,248,231,127,63,125,123,163,190,163,135,71,191,254,90,91,63,208,247,64,62,170,160,124,191,156,252,251,62,28,187,37,63,248,75,112,191,243,4,53,63,56,82,202,190,18,13,48,191,248,75,112,63,195,192,93,189,226,87,101,191,13,29,67,63,151,72,150,62,211,127,126,191,156,252,251,62,179,236,26,63,213,110,120,191,46,170,37,62,117,179,87,63,109,227,83,191,208,247,64,190,206,3,122,63,89,89,21,191,86,251,3,191,15,168,125,63,121,249,136,190,163,135,71,191,216,45,98,63,140,54,166,61,102,153,114,191,35,244,42,63,180,251,214,62,248,231,127,191,192,130,189,62,243,4,53,63,107,209,109,191,150,213,221,60,221,86,104,63,214,141,62,191,125,123,163,190,207,39,127,63,59,211,239,190,246,98,32,191,54,171,118,63,114,61,10,190,254,90,91,191,156,235,79,63,54,33,92,62,214,105,123,191,245,169,15,63,151,223,9,63,170,160,124,191,72,33,119,62,193,204,75,63,87,217,94,191,129,109,221,189,72,185,116,63,28,187,37,191,211,124,227,190,227,159,127,63,178,143,176,190,215,218,57,191,56,42,107,63,243,4,53,63,211,124,227,190,179,236,26,191,214,105,123,63,121,249,136,190,214,141,62,191,107,209,109,63,140,54,166,189,254,90,91,191,117,179,87,63,129,109,221,61,248,75,112,191,215,218,57,63,151,72,150,62,170,160,124,191,89,89,21,63,59,211,239,62,248,231,127,191,180,251,214,62,246,98,32,63,206,3,122,191,72,33,119,62,13,29,67,63,56,42,107,191,195,192,93,61,87,217,94,63,109,227,83,191,114,61,10,190,102,153,114,63,243,4,53,191,125,123,163,190,15,168,125,63,245,169,15,191,156,252,251,190,227,159,127,63,56,82,202,190,28,187,37,191,213,110,120,63,54,33,92,190,163,135,71,191,221,86,104,63,150,213,221,188,216,45,98,191,156,235,79,63,46,170,37,62,72,185,116,191,18,13,48,63,178,143,176,62,211,127,126,191,151,223,9,63,86,251,3,63,207,39,127,191,192,130,189,62,35,244,42,63,54,171,118,191,208,247,64,62,193,204,75,63,226,87,101,191,243,4,53,63,156,252,251,190,86,251,3,191,248,231,127,63,59,211,239,190,151,223,9,191,227,159,127,63,211,124,227,190,245,169,15,191,207,39,127,63,180,251,214,190,89,89,21,191,211,127,126,63,56,82,202,190,179,236,26,191,15,168,125,63,192,130,189,190,246,98,32,191,170,160,124,63,178,143,176,190,28,187,37,191,214,105,123,63,125,123,163,190,35,244,42,191,206,3,122,63,151,72,150,190,18,13,48,191,213,110,120,63,121,249,136,190,243,4,53,191,54,171,118,63,72,33,119,190,215,218,57,191,72,185,116,63,54,33,92,190,214,141,62,191,102,153,114,63,208,247,64,190,13,29,67,191,248,75,112,63,46,170,37,190,163,135,71,191,107,209,109,63,114,61,10,190,193,204,75,191,56,42,107,63,129,109,221,189,156,235,79,191,221,86,104,63,140,54,166,189,109,227,83,191,226,87,101,63,195,192,93,189,117,179,87,191,216,45,98,63,150,213,221,188,254,90,91,191,87,217,94,63,243,4,53,63,151,223,9,191,180,251,214,190,15,168,125,63,28,187,37,191,151,72,150,190,54,171,118,63,214,141,62,191,46,170,37,190,56,42,107,63,109,227,83,191,150,213,221,188,254,90,91,63,226,87,101,191,129,109,221,61,163,135,71,63,102,153,114,191,72,33,119,62,18,13,48,63,214,105,123,191,192,130,189,62,89,89,21,63,227,159,127,191,156,252,251,62,59,211,239,62,207,39,127,191,179,236,26,63,178,143,176,62,206,3,122,191,243,4,53,63,54,33,92,62,248,75,112,191,193,204,75,63,140,54,166,61,216,45,98,191,87,217,94,63,195,192,93,189,156,235,79,191,107,209,109,63,208,247,64,190,215,218,57,191,213,110,120,63,125,123,163,190,246,98,32,191,211,127,126,63,211,124,227,190,86,251,3,191,248,231,127,63,245,169,15,191,56,82,202,190,170,160,124,63,35,244,42,191,121,249,136,190,72,185,116,63,13,29,67,191,114,61,10,190,221,86,104,63,117,179,87,191,243,4,53,63,89,89,21,191,125,123,163,190,72,185,116,63,193,204,75,191,150,213,221,188,109,227,83,63,248,75,112,191,121,249,136,62,246,98,32,63,227,159,127,191,151,223,9,63,192,130,189,62,213,110,120,191,13,29,67,63,140,54,166,61,254,90,91,191,56,42,107,63,54,33,92,190,35,244,42,191,211,127,126,63,156,252,251,190,180,251,214,190,214,105,123,63,215,218,57,191,114,61,10,190,216,45,98,63,226,87,101,191,46,170,37,62,243,4,53,63,170,160,124,191,211,124,227,62,59,211,239,62,15,168,125,191,18,13,48,63,208,247,64,62,221,86,104,191,87,217,94,63,129,109,221,189,214,141,62,191,206,3,122,63,56,82,202,190,86,251,3,191,207,39,127,63,28,187,37,191,72,33,119,190,107,209,109,63,117,179,87,191,195,192,93,61,163,135,71,63,54,171,118,191,178,143,176,62,245,169,15,63,248,231,127,191,179,236,26,63,151,72,150,62,102,153,114,191,156,235,79,63,243,4,53,63,246,98,32,191,54,33,92,190,226,87,101,63,221,86,104,191,72,33,119,62,179,236,26,63,248,231,127,191,28,187,37,63,208,247,64,62,216,45,98,191,56,42,107,63,121,249,136,190,89,89,21,191,227,159,127,63,35,244,42,191,46,170,37,190,87,217,94,63,107,209,109,191,151,72,150,62,245,169,15,63,207,39,127,191,18,13,48,63,114,61,10,62,254,90,91,191,248,75,112,63,125,123,163,190,151,223,9,191,211,127,126,63,243,4,53,191,129,109,221,189,117,179,87,63,102,153,114,191,178,143,176,62,86,251,3,63,15,168,125,191,215,218,57,63,140,54,166,61,109,227,83,191,72,185,116,63,192,130,189,190,156,252,251,190,170,160,124,63,214,141,62,191,195,192,93,189,156,235,79,63,54,171,118,191,56,82,202,62,59,211,239,62,214,105,123,191,13,29,67,63,150,213,221,60,193,204,75,191,213,110,120,63,180,251,214,190,211,124,227,190,206,3,122,63,163,135,71,191,243,4,53,63,35,244,42,191,129,109,221,189,156,235,79,63,206,3,122,191,156,252,251,62,125,123,163,62,56,42,107,191,221,86,104,63,151,72,150,190,86,251,3,191,214,105,123,63,193,204,75,191,140,54,166,61,18,13,48,63,248,231,127,191,28,187,37,63,114,61,10,62,109,227,83,191,213,110,120,63,59,211,239,190,178,143,176,190,107,209,109,63,226,87,101,191,121,249,136,62,151,223,9,63,170,160,124,191,163,135,71,63,195,192,93,189,243,4,53,191,227,159,127,63,246,98,32,191,46,170,37,190,117,179,87,63,54,171,118,191,211,124,227,62,192,130,189,62,248,75,112,191,216,45,98,63,72,33,119,190,245,169,15,191,15,168,125,63,13,29,67,191,150,213,221,60,215,218,57,63,207,39,127,191,179,236,26,63,208,247,64,62,254,90,91,191,72,185,116,63,180,251,214,190,56,82,202,190,102,153,114,63,87,217,94,191,54,33,92,62,89,89,21,63,211,127,126,191,214,141,62,63,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,250,9,150,167,243,4,53,63,0,0,128,191,243,4,53,63,91,26,141,38,243,4,53,191,0,0,128,63,243,4,53,191,52,131,176,167,243,4,53,63,0,0,128,191,243,4,53,63,232,223,30,40,243,4,53,191,0,0,128,63,243,4,53,191,77,14,212,38,243,4,53,63,0,0,128,191,243,4,53,63,19,114,48,39,243,4,53,191,0,0,128,63,243,4,53,191,166,117,229,167,243,4,53,63,0,0,128,191,243,4,53,63,33,89,57,40,243,4,53,191,0,0,128,63,243,4,53,191,243,4,53,63,214,141,62,191,129,109,221,61,89,89,21,63,206,3,122,191,87,217,94,63,125,123,163,190,56,82,202,190,221,86,104,63,72,185,116,191,86,251,3,63,208,247,64,62,193,204,75,191,207,39,127,63,18,13,48,191,150,213,221,60,28,187,37,63,15,168,125,191,109,227,83,63,72,33,119,190,59,211,239,190,248,75,112,63,107,209,109,191,211,124,227,62,121,249,136,62,117,179,87,191,170,160,124,63,246,98,32,191,195,192,93,189,243,4,53,63,227,159,127,191,163,135,71,63,46,170,37,190,151,223,9,191,54,171,118,63,226,87,101,191,192,130,189,62,178,143,176,62,216,45,98,191,213,110,120,63,245,169,15,191,114,61,10,190,13,29,67,63,248,231,127,191,215,218,57,63,140,54,166,189,179,236,26,191,214,105,123,63,254,90,91,191,151,72,150,62,180,251,214,62,56,42,107,191,102,153,114,63,156,252,251,190,54,33,92,190,156,235,79,63,211,127,126,191,35,244,42,63,243,4,53,63,163,135,71,191,54,33,92,62,211,124,227,62,221,86,104,191,213,110,120,63,179,236,26,191,150,213,221,188,28,187,37,63,214,105,123,191,216,45,98,63,56,82,202,190,121,249,136,190,156,235,79,63,227,159,127,191,214,141,62,63,46,170,37,190,156,252,251,190,107,209,109,63,72,185,116,191,245,169,15,63,140,54,166,61,18,13,48,191,15,168,125,63,254,90,91,191,178,143,176,62,125,123,163,62,117,179,87,191,211,127,126,63,243,4,53,191,129,109,221,61,151,223,9,63,102,153,114,191,248,75,112,63,86,251,3,191,114,61,10,190,215,218,57,63,207,39,127,191,109,227,83,63,151,72,150,190,192,130,189,190,87,217,94,63,170,160,124,191,35,244,42,63,195,192,93,189,89,89,21,191,54,171,118,63,56,42,107,191,59,211,239,62,208,247,64,62,13,29,67,191,248,231,127,63,193,204,75,191,72,33,119,62,180,251,214,62,226,87,101,191,206,3,122,63,246,98,32,191,243,4,53,63,156,235,79,191,125,123,163,62,151,72,150,62,193,204,75,191,248,231,127,63,109,227,83,191,178,143,176,62,121,249,136,62,163,135,71,191,227,159,127,63,117,179,87,191,192,130,189,62,72,33,119,62,13,29,67,191,207,39,127,63,254,90,91,191,56,82,202,62,54,33,92,62,214,141,62,191,211,127,126,63,87,217,94,191,180,251,214,62,208,247,64,62,215,218,57,191,15,168,125,63,216,45,98,191,211,124,227,62,46,170,37,62,243,4,53,191,170,160,124,63,226,87,101,191,59,211,239,62,114,61,10,62,18,13,48,191,214,105,123,63,221,86,104,191,156,252,251,62,129,109,221,61,35,244,42,191,206,3,122,63,56,42,107,191,86,251,3,63,140,54,166,61,28,187,37,191,213,110,120,63,107,209,109,191,151,223,9,63,195,192,93,61,246,98,32,191,54,171,118,63,248,75,112,191,245,169,15,63,150,213,221,60,179,236,26,191,72,185,116,63,102,153,114,191,89,89,21,63,243,4,53,63,117,179,87,191,180,251,214,62,114,61,10,62,28,187,37,191,72,185,116,63,54,171,118,191,35,244,42,63,46,170,37,190,56,82,202,190,109,227,83,63,248,231,127,191,254,90,91,63,211,124,227,190,129,109,221,189,246,98,32,63,102,153,114,191,213,110,120,63,18,13,48,191,208,247,64,62,192,130,189,62,156,235,79,191,227,159,127,63,87,217,94,191,59,211,239,62,140,54,166,61,179,236,26,191,248,75,112,63,206,3,122,191,243,4,53,63,54,33,92,190,178,143,176,190,193,204,75,63,207,39,127,191,216,45,98,63,156,252,251,190,195,192,93,189,89,89,21,63,107,209,109,191,214,105,123,63,215,218,57,191,72,33,119,62,125,123,163,62,163,135,71,191,211,127,126,63,226,87,101,191,86,251,3,63,150,213,221,60,245,169,15,191,56,42,107,63,170,160,124,191,214,141,62,63,121,249,136,190,151,72,150,190,13,29,67,63,15,168,125,191,221,86,104,63,151,223,9,191,243,4,53,63,87,217,94,191,86,251,3,63,150,213,221,188,59,211,239,190,117,179,87,63,227,159,127,191,226,87,101,63,245,169,15,191,140,54,166,61,180,251,214,62,156,235,79,191,211,127,126,63,56,42,107,191,179,236,26,63,114,61,10,190,192,130,189,190,163,135,71,63,170,160,124,191,248,75,112,63,28,187,37,191,208,247,64,62,125,123,163,62,214,141,62,191,206,3,122,63,72,185,116,191,18,13,48,63,72,33,119,190,121,249,136,190,243,4,53,63,54,171,118,191,213,110,120,63,215,218,57,191,151,72,150,62,54,33,92,62,35,244,42,191,102,153,114,63,214,105,123,191,13,29,67,63,178,143,176,190,46,170,37,190,246,98,32,63,107,209,109,191,15,168,125,63,193,204,75,191,56,82,202,62,129,109,221,61,89,89,21,191,221,86,104,63,207,39,127,191,109,227,83,63,211,124,227,190,195,192,93,189,151,223,9,63,216,45,98,191,248,231,127,63,254,90,91,191,156,252,251,62,243,4,53,63,226,87,101,191,179,236,26,63,208,247,64,190,121,249,136,190,35,244,42,63,107,209,109,191,207,39,127,63,254,90,91,191,151,223,9,63,129,109,221,189,178,143,176,190,215,218,57,63,72,185,116,191,170,160,124,63,156,235,79,191,59,211,239,62,150,213,221,188,180,251,214,190,163,135,71,63,206,3,122,191,213,110,120,63,13,29,67,191,56,82,202,62,195,192,93,61,156,252,251,190,109,227,83,63,15,168,125,191,102,153,114,63,243,4,53,191,125,123,163,62,114,61,10,62,245,169,15,191,87,217,94,63,227,159,127,191,56,42,107,63,28,187,37,191,72,33,119,62,54,33,92,62,246,98,32,191,221,86,104,63,248,231,127,191,216,45,98,63,89,89,21,191,46,170,37,62,151,72,150,62,18,13,48,191,248,75,112,63,211,127,126,191,117,179,87,63,86,251,3,191,140,54,166,61,192,130,189,62,214,141,62,191,54,171,118,63,214,105,123,191,193,204,75,63,211,124,227,190,243,4,53,63,56,42,107,191,18,13,48,63,178,143,176,190,195,192,93,189,211,124,227,62,13,29,67,191,72,185,116,63,211,127,126,191,87,217,94,63,179,236,26,191,72,33,119,62,46,170,37,62,151,223,9,191,109,227,83,63,214,105,123,191,206,3,122,63,156,235,79,191,86,251,3,63,114,61,10,190,121,249,136,190,246,98,32,63,216,45,98,191,207,39,127,63,102,153,114,191,214,141,62,63,180,251,214,190,150,213,221,60,192,130,189,62,243,4,53,191,107,209,109,63,248,231,127,191,221,86,104,63,35,244,42,191,125,123,163,62,140,54,166,61,59,211,239,190,163,135,71,63,54,171,118,191,15,168,125,63,254,90,91,191,89,89,21,63,54,33,92,190,208,247,64,190,245,169,15,63,117,179,87,191,170,160,124,63,213,110,120,191,193,204,75,63,156,252,251,190,129,109,221,61,151,72,150,62,28,187,37,191,226,87,101,63,227,159,127,191,248,75,112,63,215,218,57,191,56,82,202,62,243,4,53,63,248,75,112,191,13,29,67,63,156,252,251,190,46,170,37,62,208,247,64,62,86,251,3,191,163,135,71,63,102,153,114,191,248,231,127,63,107,209,109,191,214,141,62,63,59,211,239,190,114,61,10,62,54,33,92,62,151,223,9,191,193,204,75,63,72,185,116,191,227,159,127,63,56,42,107,191,215,218,57,63,211,124,227,190,129,109,221,61,72,33,119,62,245,169,15,191,156,235,79,63,54,171,118,191,207,39,127,63,221,86,104,191,243,4,53,63,180,251,214,190,140,54,166,61,121,249,136,62,89,89,21,191,109,227,83,63,213,110,120,191,211,127,126,63,226,87,101,191,18,13,48,63,56,82,202,190,195,192,93,61,151,72,150,62,179,236,26,191,117,179,87,63,206,3,122,191,15,168,125,63,216,45,98,191,35,244,42,63,192,130,189,190,150,213,221,60,125,123,163,62,246,98,32,191,254,90,91,63,214,105,123,191,170,160,124,63,87,217,94,191,28,187,37,63,178,143,176,190,243,4,53,63,72,185,116,191,109,227,83,63,246,98,32,191,192,130,189,62,140,54,166,189,54,33,92,190,156,252,251,62,215,218,57,191,226,87,101,63,170,160,124,191,15,168,125,63,221,86,104,191,214,141,62,63,86,251,3,191,72,33,119,62,195,192,93,61,178,143,176,190,179,236,26,63,156,235,79,191,102,153,114,63,248,231,127,191,54,171,118,63,117,179,87,191,28,187,37,63,56,82,202,190,129,109,221,61,208,247,64,62,59,211,239,190,243,4,53,63,216,45,98,191,214,105,123,63,211,127,126,191,56,42,107,63,13,29,67,191,151,223,9,63,121,249,136,190,150,213,221,188,125,123,163,62,89,89,21,191,193,204,75,63,248,75,112,191,227,159,127,63,213,110,120,191,254,90,91,63,35,244,42,191,180,251,214,62,114,61,10,190,46,170,37,190,211,124,227,62,18,13,48,191,87,217,94,63,206,3,122,191,207,39,127,63,107,209,109,191,163,135,71,63,245,169,15,191,151,72,150,62,243,4,53,63,213,110,120,191,216,45,98,63,214,141,62,191,245,169,15,63,178,143,176,190,129,109,221,61,114,61,10,62,192,130,189,190,89,89,21,63,13,29,67,191,226,87,101,63,206,3,122,191,248,231,127,63,54,171,118,191,87,217,94,63,215,218,57,191,151,223,9,63,125,123,163,190,140,54,166,61,46,170,37,62,56,82,202,190,179,236,26,63,163,135,71,191,221,86,104,63,214,105,123,191,227,159,127,63,72,185,116,191,254,90,91,63,243,4,53,191,86,251,3,63,151,72,150,190,195,192,93,61,208,247,64,62,180,251,214,190,246,98,32,63,193,204,75,191,56,42,107,63,170,160,124,191,207,39,127,63,102,153,114,191,117,179,87,63,18,13,48,191,156,252,251,62,121,249,136,190,150,213,221,60,54,33,92,62,211,124,227,190,28,187,37,63,156,235,79,191,107,209,109,63,15,168,125,191,211,127,126,63,248,75,112,191,109,227,83,63,35,244,42,191,59,211,239,62,72,33,119,190,243,4,53,63,214,105,123,191,107,209,109,63,117,179,87,191,215,218,57,63,89,89,21,191,180,251,214,62,72,33,119,190,195,192,93,61,114,61,10,62,125,123,163,190,156,252,251,62,28,187,37,191,163,135,71,63,216,45,98,191,72,185,116,63,211,127,126,191,207,39,127,63,54,171,118,191,226,87,101,63,193,204,75,191,35,244,42,63,86,251,3,191,178,143,176,62,46,170,37,190,150,213,221,188,54,33,92,62,56,82,202,190,245,169,15,63,243,4,53,191,109,227,83,63,56,42,107,191,206,3,122,63,248,231,127,191,170,160,124,63,248,75,112,191,254,90,91,63,214,141,62,191,179,236,26,63,211,124,227,190,121,249,136,62,140,54,166,189,129,109,221,189,151,72,150,62,59,211,239,190,246,98,32,63,13,29,67,191,87,217,94,63,102,153,114,191,15,168,125,63,227,159,127,191,213,110,120,63,221,86,104,191,156,235,79,63,18,13,48,191,151,223,9,63,192,130,189,190,208,247,64,62,243,4,53,63,15,168,125,191,54,171,118,63,56,42,107,191,254,90,91,63,163,135,71,191,18,13,48,63,89,89,21,191,59,211,239,62,178,143,176,190,54,33,92,62,140,54,166,189,195,192,93,189,208,247,64,62,125,123,163,190,211,124,227,62,245,169,15,191,35,244,42,63,13,29,67,191,117,179,87,63,221,86,104,191,72,185,116,63,170,160,124,191,248,231,127,63,211,127,126,191,213,110,120,63,107,209,109,191,87,217,94,63,193,204,75,191,243,4,53,63,179,236,26,191,156,252,251,62,192,130,189,190,72,33,119,62,129,109,221,189,150,213,221,188,46,170,37,62,151,72,150,190,180,251,214,62,151,223,9,191,28,187,37,63,214,141,62,191,109,227,83,63,226,87,101,191,102,153,114,63,214,105,123,191,227,159,127,63,207,39,127,191,206,3,122,63,248,75,112,191,216,45,98,63,156,235,79,191,215,218,57,63,246,98,32,191,86,251,3,63,56,82,202,190,121,249,136,62,114,61,10,190,243,4,53,63,207,39,127,191,170,160,124,63,213,110,120,191,102,153,114,63,56,42,107,191,216,45,98,63,117,179,87,191,193,204,75,63,214,141,62,191,18,13,48,63,246,98,32,191,245,169,15,63,156,252,251,190,180,251,214,62,178,143,176,190,121,249,136,62,208,247,64,190,129,109,221,61,150,213,221,188,195,192,93,189,114,61,10,62,54,33,92,190,151,72,150,62,192,130,189,190,211,124,227,62,86,251,3,191,89,89,21,63,28,187,37,191,243,4,53,63,13,29,67,191,156,235,79,63,254,90,91,191,226,87,101,63,107,209,109,191,72,185,116,63,206,3,122,191,15,168,125,63,227,159,127,191,248,231,127,63,211,127,126,191,214,105,123,63,54,171,118,191,248,75,112,63,221,86,104,191,87,217,94,63,109,227,83,191,163,135,71,63,215,218,57,191,35,244,42,63,179,236,26,191,151,223,9,63,59,211,239,190,56,82,202,62,125,123,163,190,72,33,119,62,46,170,37,190,140,54,166,61,243,4,53,63,248,231,127,191,227,159,127,63,207,39,127,191,211,127,126,63,15,168,125,191,170,160,124,63,214,105,123,191,206,3,122,63,213,110,120,191,54,171,118,63,72,185,116,191,102,153,114,63,248,75,112,191,107,209,109,63,56,42,107,191,221,86,104,63,226,87,101,191,216,45,98,63,87,217,94,191,254,90,91,63,117,179,87,191,109,227,83,63,156,235,79,191,193,204,75,63,163,135,71,191,13,29,67,63,214,141,62,191,215,218,57,63,243,4,53,191,18,13,48,63,35,244,42,191,28,187,37,63,246,98,32,191,179,236,26,63,89,89,21,191,245,169,15,63,151,223,9,191,86,251,3,63,156,252,251,190,59,211,239,62,211,124,227,190,180,251,214,62,56,82,202,190,192,130,189,62,178,143,176,190,125,123,163,62,151,72,150,190,121,249,136,62,72,33,119,190,54,33,92,62,208,247,64,190,46,170,37,62,114,61,10,190,129,109,221,61,140,54,166,189,195,192,93,61,150,213,221,188,243,4,53,63,198,232,127,63,30,163,127,63,18,47,127,63,186,140,126,63,49,188,125,63,158,189,124,63,48,145,123,63,28,55,122,63,161,175,120,63,7,251,118,63,156,25,117,63,185,11,115,63,188,209,112,63,12,108,110,63,26,219,107,63,92,31,105,63,82,57,102,63,129,41,99,63,121,240,95,63,207,142,92,63,32,5,89,63,16,84,85,63,74,124,81,63,131,126,77,63,113,91,73,63,215,19,69,63,122,168,64,63,41,26,60,63,181,105,55,63,251,151,50,63,216,165,45,63,52,148,40,63,249,99,35,63,24,22,30,63,136,171,24,63,69,37,19,63,78,132,13,63,170,201,7,63,99,246,1,63,13,23,248,62,81,20,236,62,191,230,223,62,140,144,211,62,246,19,199,62,65,115,186,62,183,176,173,62,170,206,160,62,110,207,147,62,97,181,134,62,197,5,115,62,176,116,88,62,84,188,61,62,139,225,34,62,51,233,7,62,102,176,217,61,230,102,163,61,127,255,89,61,72,19,218,60,243,4,53,63,18,47,127,63,158,189,124,63,161,175,120,63,185,11,115,63,26,219,107,63,129,41,99,63,32,5,89,63,131,126,77,63,122,168,64,63,251,151,50,63,249,99,35,63,69,37,19,63,99,246,1,63,191,230,223,62,65,115,186,62,110,207,147,62,176,116,88,62,51,233,7,62,127,255,89,61,72,19,218,188,102,176,217,189,84,188,61,190,97,181,134,190,183,176,173,190,140,144,211,190,13,23,248,190,78,132,13,191,24,22,30,191,216,165,45,191,41,26,60,191,113,91,73,191,16,84,85,191,121,240,95,191,92,31,105,191,188,209,112,191,7,251,118,191,48,145,123,191,186,140,126,191,198,232,127,191,30,163,127,191,49,188,125,191,28,55,122,191,156,25,117,191,12,108,110,191,82,57,102,191,207,142,92,191,74,124,81,191,215,19,69,191,181,105,55,191,52,148,40,191,136,171,24,191,170,201,7,191,81,20,236,190,246,19,199,190,170,206,160,190,197,5,115,190,139,225,34,190,230,102,163,189,243,4,53,63,49,188,125,63,7,251,118,63,26,219,107,63,207,142,92,63,113,91,73,63,251,151,50,63,136,171,24,63,13,23,248,62,65,115,186,62,197,5,115,62,102,176,217,61,72,19,218,188,139,225,34,190,110,207,147,190,140,144,211,190,170,201,7,191,249,99,35,191,41,26,60,191,74,124,81,191,129,41,99,191,188,209,112,191,28,55,122,191,18,47,127,191,30,163,127,191,48,145,123,191,185,11,115,191,82,57,102,191,16,84,85,191,122,168,64,191,52,148,40,191,78,132,13,191,191,230,223,190,170,206,160,190,84,188,61,190,127,255,89,189,230,102,163,61,176,116,88,62,183,176,173,62,81,20,236,62,69,37,19,63,216,165,45,63,215,19,69,63,32,5,89,63,92,31,105,63,156,25,117,63,158,189,124,63,198,232,127,63,186,140,126,63,161,175,120,63,12,108,110,63,121,240,95,63,131,126,77,63,181,105,55,63,24,22,30,63,99,246,1,63,246,19,199,62,97,181,134,62,51,233,7,62,243,4,53,63,48,145,123,63,12,108,110,63,32,5,89,63,41,26,60,63,136,171,24,63,191,230,223,62,97,181,134,62,230,102,163,61,102,176,217,189,110,207,147,190,81,20,236,190,24,22,30,191,122,168,64,191,207,142,92,191,188,209,112,191,158,189,124,191,198,232,127,191,28,55,122,191,26,219,107,191,16,84,85,191,181,105,55,191,69,37,19,191,140,144,211,190,197,5,115,190,127,255,89,189,51,233,7,62,170,206,160,62,13,23,248,62,249,99,35,63,215,19,69,63,121,240,95,63,185,11,115,63,49,188,125,63,30,163,127,63,161,175,120,63,92,31,105,63,74,124,81,63,251,151,50,63,78,132,13,63,246,19,199,62,176,116,88,62,72,19,218,60,139,225,34,190,183,176,173,190,99,246,1,191,52,148,40,191,113,91,73,191,129,41,99,191,156,25,117,191,186,140,126,191,18,47,127,191,7,251,118,191,82,57,102,191,131,126,77,191,216,165,45,191,170,201,7,191,65,115,186,190,84,188,61,190,243,4,53,63,161,175,120,63,129,41,99,63,122,168,64,63,69,37,19,63,65,115,186,62,51,233,7,62,102,176,217,189,183,176,173,190,78,132,13,191,41,26,60,191,121,240,95,191,7,251,118,191,198,232,127,191,28,55,122,191,82,57,102,191,215,19,69,191,136,171,24,191,246,19,199,190,139,225,34,190,230,102,163,61,170,206,160,62,170,201,7,63,181,105,55,63,207,142,92,63,156,25,117,63,30,163,127,63,48,145,123,63,92,31,105,63,113,91,73,63,24,22,30,63,140,144,211,62,84,188,61,62,127,255,89,189,110,207,147,190,99,246,1,191,251,151,50,191,32,5,89,191,185,11,115,191,18,47,127,191,158,189,124,191,26,219,107,191,131,126,77,191,249,99,35,191,191,230,223,190,176,116,88,190,72,19,218,60,97,181,134,62,13,23,248,62,216,165,45,63,16,84,85,63,188,209,112,63,186,140,126,63,49,188,125,63,12,108,110,63,74,124,81,63,52,148,40,63,81,20,236,62,197,5,115,62,243,4,53,63,156,25,117,63,16,84,85,63,249,99,35,63,246,19,199,62,102,176,217,61,84,188,61,190,81,20,236,190,251,151,50,191,121,240,95,191,28,55,122,191,18,47,127,191,12,108,110,191,113,91,73,191,69,37,19,191,170,206,160,190,72,19,218,188,97,181,134,62,170,201,7,63,122,168,64,63,92,31,105,63,49,188,125,63,158,189,124,63,82,57,102,63,41,26,60,63,99,246,1,63,197,5,115,62,127,255,89,189,183,176,173,190,136,171,24,191,131,126,77,191,188,209,112,191,30,163,127,191,161,175,120,191,207,142,92,191,216,165,45,191,191,230,223,190,139,225,34,190,51,233,7,62,140,144,211,62,52,148,40,63,32,5,89,63,7,251,118,63,198,232,127,63,185,11,115,63,74,124,81,63,24,22,30,63,65,115,186,62,230,102,163,61,176,116,88,190,13,23,248,190,181,105,55,191,129,41,99,191,48,145,123,191,186,140,126,191,26,219,107,191,215,19,69,191,78,132,13,191,110,207,147,190,243,4,53,63,188,209,112,63,215,19,69,63,99,246,1,63,84,188,61,62,139,225,34,190,13,23,248,190,122,168,64,191,12,108,110,191,198,232,127,191,185,11,115,191,113,91,73,191,170,201,7,191,176,116,88,190,51,233,7,62,81,20,236,62,41,26,60,63,26,219,107,63,30,163,127,63,156,25,117,63,131,126,77,63,78,132,13,63,197,5,115,62,102,176,217,189,191,230,223,190,181,105,55,191,92,31,105,191,18,47,127,191,7,251,118,191,74,124,81,191,69,37,19,191,97,181,134,190,230,102,163,61,140,144,211,62,251,151,50,63,82,57,102,63,186,140,126,63,161,175,120,63,16,84,85,63,136,171,24,63,110,207,147,62,127,255,89,189,246,19,199,190,216,165,45,191,129,41,99,191,49,188,125,191,28,55,122,191,32,5,89,191,24,22,30,191,170,206,160,190,72,19,218,60,65,115,186,62,52,148,40,63,121,240,95,63,158,189,124,63,48,145,123,63,207,142,92,63,249,99,35,63,183,176,173,62,243,4,53,63,26,219,107,63,251,151,50,63,65,115,186,62,72,19,218,188,140,144,211,190,41,26,60,191,188,209,112,191,30,163,127,191,82,57,102,191,52,148,40,191,170,206,160,190,230,102,163,61,81,20,236,62,215,19,69,63,156,25,117,63,186,140,126,63,121,240,95,63,24,22,30,63,97,181,134,62,51,233,7,190,99,246,1,191,131,126,77,191,161,175,120,191,158,189,124,191,32,5,89,191,69,37,19,191,176,116,88,190,84,188,61,62,78,132,13,63,16,84,85,63,48,145,123,63,28,55,122,63,74,124,81,63,170,201,7,63,139,225,34,62,197,5,115,190,136,171,24,191,207,142,92,191,49,188,125,191,7,251,118,191,113,91,73,191,13,23,248,190,102,176,217,189,110,207,147,62,249,99,35,63,129,41,99,63,18,47,127,63,185,11,115,63,122,168,64,63,191,230,223,62,127,255,89,61,183,176,173,190,216,165,45,191,92,31,105,191,198,232,127,191,12,108,110,191,181,105,55,191,246,19,199,190,243,4,53,63,82,57,102,63,24,22,30,63,176,116,88,62,197,5,115,190,249,99,35,191,92,31,105,191,198,232,127,191,129,41,99,191,136,171,24,191,84,188,61,190,97,181,134,62,52,148,40,63,26,219,107,63,30,163,127,63,121,240,95,63,69,37,19,63,139,225,34,62,110,207,147,190,216,165,45,191,12,108,110,191,18,47,127,191,207,142,92,191,78,132,13,191,51,233,7,190,170,206,160,62,251,151,50,63,188,209,112,63,186,140,126,63,32,5,89,63,170,201,7,63,102,176,217,61,183,176,173,190,181,105,55,191,185,11,115,191,49,188,125,191,16,84,85,191,99,246,1,191,230,102,163,189,65,115,186,62,41,26,60,63,156,25,117,63,158,189,124,63,74,124,81,63,13,23,248,62,127,255,89,61,246,19,199,190,122,168,64,191,7,251,118,191,48,145,123,191,131,126,77,191,81,20,236,190,72,19,218,188,140,144,211,62,215,19,69,63,161,175,120,63,28,55,122,63,113,91,73,63,191,230,223,62,243,4,53,63,121,240,95,63,170,201,7,63,127,255,89,61,191,230,223,190,74,124,81,191,186,140,126,191,26,219,107,191,24,22,30,191,139,225,34,190,183,176,173,62,122,168,64,63,28,55,122,63,156,25,117,63,251,151,50,63,97,181,134,62,197,5,115,190,216,165,45,191,185,11,115,191,48,145,123,191,215,19,69,191,65,115,186,190,51,233,7,62,136,171,24,63,92,31,105,63,18,47,127,63,16,84,85,63,81,20,236,62,72,19,218,188,99,246,1,191,207,142,92,191,198,232,127,191,129,41,99,191,78,132,13,191,230,102,163,189,140,144,211,62,131,126,77,63,49,188,125,63,12,108,110,63,249,99,35,63,84,188,61,62,170,206,160,190,41,26,60,191,161,175,120,191,7,251,118,191,181,105,55,191,110,207,147,190,176,116,88,62,52,148,40,63,188,209,112,63,158,189,124,63,113,91,73,63,246,19,199,62,102,176,217,189,69,37,19,191,82,57,102,191,30,163,127,191,32,5,89,191,13,23,248,190,243,4,53,63,32,5,89,63,191,230,223,62,102,176,217,189,24,22,30,191,188,209,112,191,28,55,122,191,181,105,55,191,197,5,115,190,170,206,160,62,215,19,69,63,49,188,125,63,92,31,105,63,78,132,13,63,72,19,218,60,99,246,1,191,129,41,99,191,18,47,127,191,131,126,77,191,65,115,186,190,84,188,61,62,216,165,45,63,7,251,118,63,156,25,117,63,52,148,40,63,139,225,34,62,246,19,199,190,74,124,81,191,30,163,127,191,121,240,95,191,13,23,248,190,127,255,89,61,69,37,19,63,26,219,107,63,158,189,124,63,122,168,64,63,110,207,147,62,97,181,134,190,41,26,60,191,48,145,123,191,12,108,110,191,136,171,24,191,230,102,163,189,81,20,236,62,207,142,92,63,198,232,127,63,16,84,85,63,140,144,211,62,51,233,7,190,249,99,35,191,185,11,115,191,161,175,120,191,251,151,50,191,176,116,88,190,183,176,173,62,113,91,73,63,186,140,126,63,82,57,102,63,170,201,7,63,243,4,53,63,74,124,81,63,183,176,173,62,97,181,134,190,215,19,69,191,18,47,127,191,207,142,92,191,140,144,211,190,84,188,61,62,181,105,55,63,158,189,124,63,82,57,102,63,13,23,248,62,102,176,217,189,52,148,40,191,161,175,120,191,12,108,110,191,78,132,13,191,72,19,218,60,136,171,24,63,185,11,115,63,156,25,117,63,24,22,30,63,127,255,89,61,170,201,7,191,26,219,107,191,28,55,122,191,216,165,45,191,51,233,7,190,81,20,236,62,129,41,99,63,49,188,125,63,41,26,60,63,176,116,88,62,246,19,199,190,32,5,89,191,30,163,127,191,113,91,73,191,110,207,147,190,170,206,160,62,131,126,77,63,198,232,127,63,16,84,85,63,65,115,186,62,197,5,115,190,122,168,64,191,186,140,126,191,121,240,95,191,191,230,223,190,139,225,34,62,251,151,50,63,48,145,123,63,92,31,105,63,99,246,1,63,230,102,163,189,249,99,35,191,7,251,118,191,188,209,112,191,69,37,19,191,243,4,53,63,113,91,73,63,197,5,115,62,140,144,211,190,129,41,99,191,48,145,123,191,52,148,40,191,127,255,89,189,69,37,19,63,156,25,117,63,12,108,110,63,99,246,1,63,51,233,7,190,181,105,55,191,186,140,126,191,32,5,89,191,183,176,173,190,170,206,160,62,16,84,85,63,18,47,127,63,41,26,60,63,139,225,34,62,13,23,248,190,26,219,107,191,7,251,118,191,136,171,24,191,72,19,218,60,249,99,35,63,28,55,122,63,82,57,102,63,191,230,223,62,176,116,88,190,215,19,69,191,198,232,127,191,131,126,77,191,97,181,134,190,246,19,199,62,121,240,95,63,158,189,124,63,216,165,45,63,230,102,163,61,78,132,13,191,185,11,115,191,188,209,112,191,170,201,7,191,102,176,217,61,251,151,50,63,49,188,125,63,207,142,92,63,65,115,186,62,110,207,147,190,74,124,81,191,30,163,127,191,122,168,64,191,84,188,61,190,81,20,236,62,92,31,105,63,161,175,120,63,24,22,30,63,243,4,53,63,122,168,64,63,51,233,7,62,78,132,13,191,7,251,118,191,82,57,102,191,246,19,199,190,170,206,160,62,207,142,92,63,48,145,123,63,24,22,30,63,127,255,89,189,251,151,50,191,18,47,127,191,131,126,77,191,176,116,88,190,13,23,248,62,188,209,112,63,12,108,110,63,81,20,236,62,197,5,115,190,74,124,81,191,186,140,126,191,216,165,45,191,72,19,218,188,249,99,35,63,158,189,124,63,32,5,89,63,110,207,147,62,140,144,211,190,92,31,105,191,156,25,117,191,170,201,7,191,139,225,34,62,215,19,69,63,198,232,127,63,41,26,60,63,102,176,217,61,69,37,19,191,161,175,120,191,129,41,99,191,65,115,186,190,183,176,173,62,121,240,95,63,28,55,122,63,136,171,24,63,230,102,163,189,181,105,55,191,30,163,127,191,113,91,73,191,84,188,61,190,99,246,1,63,185,11,115,63,26,219,107,63,191,230,223,62,97,181,134,190,16,84,85,191,49,188,125,191,52,148,40,191,243,4,53,63,181,105,55,63,72,19,218,60,216,165,45,191,30,163,127,191,122,168,64,191,230,102,163,189,249,99,35,63,186,140,126,63,113,91,73,63,51,233,7,62,136,171,24,191,158,189,124,191,74,124,81,191,84,188,61,190,78,132,13,63,28,55,122,63,32,5,89,63,197,5,115,62,99,246,1,191,7,251,118,191,121,240,95,191,110,207,147,190,81,20,236,62,185,11,115,63,82,57,102,63,183,176,173,62,140,144,211,190,12,108,110,191,26,219,107,191,246,19,199,190,65,115,186,62,92,31,105,63,188,209,112,63,191,230,223,62,170,206,160,190,129,41,99,191,156,25,117,191,13,23,248,190,97,181,134,62,207,142,92,63,161,175,120,63,170,201,7,63,176,116,88,190,16,84,85,191,48,145,123,191,69,37,19,191,139,225,34,62,131,126,77,63,49,188,125,63,24,22,30,63,102,176,217,189,215,19,69,191,18,47,127,191,52,148,40,191,127,255,89,61,41,26,60,63,198,232,127,63,251,151,50,63,243,4,53,63,216,165,45,63,230,102,163,189,113,91,73,191,158,189,124,191,78,132,13,191,197,5,115,62,121,240,95,63,185,11,115,63,140,144,211,62,246,19,199,190,188,209,112,191,129,41,99,191,97,181,134,190,170,201,7,63,48,145,123,63,131,126,77,63,102,176,217,61,52,148,40,191,198,232,127,191,251,151,50,191,127,255,89,61,215,19,69,63,49,188,125,63,69,37,19,63,176,116,88,190,207,142,92,191,156,25,117,191,191,230,223,190,65,115,186,62,12,108,110,63,82,57,102,63,110,207,147,62,99,246,1,191,28,55,122,191,74,124,81,191,51,233,7,190,249,99,35,63,30,163,127,63,181,105,55,63,72,19,218,188,122,168,64,191,186,140,126,191,136,171,24,191,84,188,61,62,32,5,89,63,7,251,118,63,81,20,236,62,183,176,173,190,26,219,107,191,92,31,105,191,170,206,160,190,13,23,248,62,161,175,120,63,16,84,85,63,139,225,34,62,24,22,30,191,18,47,127,191,41,26,60,191,243,4,53,63,249,99,35,63,84,188,61,190,121,240,95,191,12,108,110,191,170,206,160,190,170,201,7,63,49,188,125,63,41,26,60,63,127,255,89,189,131,126,77,191,161,175,120,191,191,230,223,190,140,144,211,62,7,251,118,63,74,124,81,63,230,102,163,61,181,105,55,191,186,140,126,191,78,132,13,191,110,207,147,62,26,219,107,63,129,41,99,63,176,116,88,62,24,22,30,191,198,232,127,191,52,148,40,191,139,225,34,62,207,142,92,63,188,209,112,63,183,176,173,62,99,246,1,191,158,189,124,191,122,168,64,191,72,19,218,60,113,91,73,63,28,55,122,63,81,20,236,62,246,19,199,190,156,25,117,191,16,84,85,191,102,176,217,189,251,151,50,63,18,47,127,63,69,37,19,63,97,181,134,190,92,31,105,191,82,57,102,191,197,5,115,190,136,171,24,63,30,163,127,63,216,165,45,63,51,233,7,190,32,5,89,191,185,11,115,191,65,115,186,190,13,23,248,62,48,145,123,63,215,19,69,63,243,4,53,63,136,171,24,63,110,207,147,190,188,209,112,191,16,84,85,191,127,255,89,189,215,19,69,63,161,175,120,63,246,19,199,62,99,246,1,191,186,140,126,191,216,165,45,191,84,188,61,62,82,57,102,63,129,41,99,63,139,225,34,62,251,151,50,191,49,188,125,191,13,23,248,190,140,144,211,62,28,55,122,63,122,168,64,63,230,102,163,189,32,5,89,191,12,108,110,191,97,181,134,190,24,22,30,63,198,232,127,63,69,37,19,63,170,206,160,190,185,11,115,191,74,124,81,191,72,19,218,188,113,91,73,63,7,251,118,63,65,115,186,62,170,201,7,191,18,47,127,191,52,148,40,191,176,116,88,62,92,31,105,63,121,240,95,63,51,233,7,62,181,105,55,191,158,189,124,191,81,20,236,190,191,230,223,62,48,145,123,63,41,26,60,63,102,176,217,189,207,142,92,191,26,219,107,191,197,5,115,190,249,99,35,63,30,163,127,63,78,132,13,63,183,176,173,190,156,25,117,191,131,126,77,191,243,4,53,63,78,132,13,63,246,19,199,190,48,145,123,191,251,151,50,191,176,116,88,62,12,108,110,63,74,124,81,63,72,19,218,188,32,5,89,191,92,31,105,191,139,225,34,190,41,26,60,63,161,175,120,63,183,176,173,62,136,171,24,191,30,163,127,191,99,246,1,191,191,230,223,62,49,188,125,63,52,148,40,63,97,181,134,190,185,11,115,191,113,91,73,191,230,102,163,61,121,240,95,63,129,41,99,63,102,176,217,61,215,19,69,191,156,25,117,191,110,207,147,190,249,99,35,63,186,140,126,63,81,20,236,62,13,23,248,190,18,47,127,191,24,22,30,191,170,206,160,62,7,251,118,63,122,168,64,63,51,233,7,190,82,57,102,191,207,142,92,191,127,255,89,189,131,126,77,63,188,209,112,63,197,5,115,62,216,165,45,191,158,189,124,191,140,144,211,190,170,201,7,63,198,232,127,63,69,37,19,63,65,115,186,190,28,55,122,191,181,105,55,191,84,188,61,62,26,219,107,63,16,84,85,63,243,4,53,63,99,246,1,63,13,23,248,190,198,232,127,191,170,201,7,191,81,20,236,62,30,163,127,63,78,132,13,63,191,230,223,190,18,47,127,191,69,37,19,191,140,144,211,62,186,140,126,63,136,171,24,63,246,19,199,190,49,188,125,191,24,22,30,191,65,115,186,62,158,189,124,63,249,99,35,63,183,176,173,190,48,145,123,191,52,148,40,191,170,206,160,62,28,55,122,63,216,165,45,63,110,207,147,190,161,175,120,191,251,151,50,191,97,181,134,62,7,251,118,63,181,105,55,63,197,5,115,190,156,25,117,191,41,26,60,191,176,116,88,62,185,11,115,63,122,168,64,63,84,188,61,190,188,209,112,191,215,19,69,191,139,225,34,62,12,108,110,63,113,91,73,63,51,233,7,190,26,219,107,191,131,126,77,191,102,176,217,61,92,31,105,63,74,124,81,63,230,102,163,189,82,57,102,191,16,84,85,191,127,255,89,61,129,41,99,63,32,5,89,63,72,19,218,188,121,240,95,191,207,142,92,191,243,4,53,63,81,20,236,62,69,37,19,191,49,188,125,191,183,176,173,190,216,165,45,63,7,251,118,63,176,116,88,62,215,19,69,191,26,219,107,191,230,102,163,189,32,5,89,63,207,142,92,63,127,255,89,189,92,31,105,191,113,91,73,191,84,188,61,62,156,25,117,63,251,151,50,63,170,206,160,190,158,189,124,191,136,171,24,191,191,230,223,62,198,232,127,63,13,23,248,62,78,132,13,191,186,140,126,191,65,115,186,190,52,148,40,63,161,175,120,63,197,5,115,62,122,168,64,191,12,108,110,191,102,176,217,189,16,84,85,63,121,240,95,63,72,19,218,188,82,57,102,191,131,126,77,191,139,225,34,62,185,11,115,63,181,105,55,63,110,207,147,190,48,145,123,191,24,22,30,191,140,144,211,62,30,163,127,63,99,246,1,63,170,201,7,191,18,47,127,191,246,19,199,190,249,99,35,63,28,55,122,63,97,181,134,62,41,26,60,191,188,209,112,191,51,233,7,190,74,124,81,63,129,41,99,63,243,4,53,63,140,144,211,62,52,148,40,191,156,25,117,191,51,233,7,190,32,5,89,63,16,84,85,63,139,225,34,190,7,251,118,191,249,99,35,191,191,230,223,62,198,232,127,63,246,19,199,62,216,165,45,191,185,11,115,191,102,176,217,189,207,142,92,63,74,124,81,63,84,188,61,190,161,175,120,191,24,22,30,191,81,20,236,62,30,163,127,63,65,115,186,62,251,151,50,191,188,209,112,191,230,102,163,189,121,240,95,63,131,126,77,63,176,116,88,190,28,55,122,191,136,171,24,191,13,23,248,62,18,47,127,63,183,176,173,62,181,105,55,191,12,108,110,191,127,255,89,189,129,41,99,63,113,91,73,63,197,5,115,190,48,145,123,191,69,37,19,191,99,246,1,63,186,140,126,63,170,206,160,62,41,26,60,191,26,219,107,191,72,19,218,188,82,57,102,63,215,19,69,63,97,181,134,190,158,189,124,191,78,132,13,191,170,201,7,63,49,188,125,63,110,207,147,62,122,168,64,191,92,31,105,191,243,4,53,63,65,115,186,62,41,26,60,191,82,57,102,191,230,102,163,61,156,25,117,63,24,22,30,63,99,246,1,191,158,189,124,191,176,116,88,190,16,84,85,63,74,124,81,63,197,5,115,190,49,188,125,191,13,23,248,190,249,99,35,63,185,11,115,63,127,255,89,61,92,31,105,191,181,105,55,191,246,19,199,62,198,232,127,63,183,176,173,62,122,168,64,191,129,41,99,191,102,176,217,61,7,251,118,63,136,171,24,63,170,201,7,191,48,145,123,191,84,188,61,190,32,5,89,63,131,126,77,63,97,181,134,190,186,140,126,191,81,20,236,190,52,148,40,63,188,209,112,63,72,19,218,60,26,219,107,191,251,151,50,191,140,144,211,62,30,163,127,63,170,206,160,62,215,19,69,191,121,240,95,191,51,233,7,62,161,175,120,63,69,37,19,63,78,132,13,191,28,55,122,191,139,225,34,190,207,142,92,63,113,91,73,63,110,207,147,190,18,47,127,191,191,230,223,190,216,165,45,63,12,108,110,63,243,4,53,63,170,206,160,62,131,126,77,191,74,124,81,191,110,207,147,62,198,232,127,63,183,176,173,62,113,91,73,191,16,84,85,191,97,181,134,62,30,163,127,63,65,115,186,62,215,19,69,191,32,5,89,191,197,5,115,62,18,47,127,63,246,19,199,62,122,168,64,191,207,142,92,191,176,116,88,62,186,140,126,63,140,144,211,62,41,26,60,191,121,240,95,191,84,188,61,62,49,188,125,63,191,230,223,62,181,105,55,191,129,41,99,191,139,225,34,62,158,189,124,63,81,20,236,62,251,151,50,191,82,57,102,191,51,233,7,62,48,145,123,63,13,23,248,62,216,165,45,191,92,31,105,191,102,176,217,61,28,55,122,63,99,246,1,63,52,148,40,191,26,219,107,191,230,102,163,61,161,175,120,63,170,201,7,63,249,99,35,191,12,108,110,191,127,255,89,61,7,251,118,63,78,132,13,63,24,22,30,191,188,209,112,191,72,19,218,60,156,25,117,63,69,37,19,63,136,171,24,191,185,11,115,191,243,4,53,63,97,181,134,62,207,142,92,191,181,105,55,191,13,23,248,62,161,175,120,63,72,19,218,60,156,25,117,191,170,201,7,191,216,165,45,63,129,41,99,63,176,116,88,190,30,163,127,191,170,206,160,190,16,84,85,63,122,168,64,63,191,230,223,190,48,145,123,191,230,102,163,189,188,209,112,63,69,37,19,63,249,99,35,191,92,31,105,191,139,225,34,62,186,140,126,63,65,115,186,62,131,126,77,191,113,91,73,191,246,19,199,62,49,188,125,63,51,233,7,62,26,219,107,191,24,22,30,191,136,171,24,63,12,108,110,63,102,176,217,189,158,189,124,191,140,144,211,190,215,19,69,63,74,124,81,63,183,176,173,190,18,47,127,191,84,188,61,190,82,57,102,63,52,148,40,63,78,132,13,191,185,11,115,191,127,255,89,61,28,55,122,63,81,20,236,62,41,26,60,191,32,5,89,191,110,207,147,62,198,232,127,63,197,5,115,62,121,240,95,191,251,151,50,191,99,246,1,63,7,251,118,63,243,4,53,63,176,116,88,62,92,31,105,191,136,171,24,191,52,148,40,63,121,240,95,63,110,207,147,190,18,47,127,191,51,233,7,190,188,209,112,63,170,201,7,63,181,105,55,191,16,84,85,191,65,115,186,62,158,189,124,63,127,255,89,61,7,251,118,191,81,20,236,190,215,19,69,63,113,91,73,63,191,230,223,190,161,175,120,191,72,19,218,60,48,145,123,63,246,19,199,62,74,124,81,191,41,26,60,191,99,246,1,63,185,11,115,63,102,176,217,189,186,140,126,191,170,206,160,190,207,142,92,63,216,165,45,63,69,37,19,191,26,219,107,191,84,188,61,62,198,232,127,63,197,5,115,62,82,57,102,191,24,22,30,191,249,99,35,63,129,41,99,63,97,181,134,190,30,163,127,191,139,225,34,190,12,108,110,63,78,132,13,63,251,151,50,191,32,5,89,191,183,176,173,62,49,188,125,63,230,102,163,61,156,25,117,191,13,23,248,190,122,168,64,63,131,126,77,63,140,144,211,190,28,55,122,191,243,4,53,63,139,225,34,62,185,11,115,191,81,20,236,190,131,126,77,63,181,105,55,63,69,37,19,191,82,57,102,191,110,207,147,62,49,188,125,63,72,19,218,60,48,145,123,191,183,176,173,190,121,240,95,63,24,22,30,63,216,165,45,191,16,84,85,191,140,144,211,62,7,251,118,63,102,176,217,189,30,163,127,191,176,116,88,190,12,108,110,63,99,246,1,63,215,19,69,191,122,168,64,191,170,201,7,63,26,219,107,63,197,5,115,190,18,47,127,191,230,102,163,189,161,175,120,63,246,19,199,62,32,5,89,191,52,148,40,191,249,99,35,63,207,142,92,63,65,115,186,190,28,55,122,191,127,255,89,61,186,140,126,63,97,181,134,62,92,31,105,191,78,132,13,191,41,26,60,63,113,91,73,63,13,23,248,190,188,209,112,191,84,188,61,62,198,232,127,63,51,233,7,62,156,25,117,191,191,230,223,190,74,124,81,63,251,151,50,63,136,171,24,191,129,41,99,191,170,206,160,62,158,189,124,63,243,4,53,63,102,176,217,61,28,55,122,191,170,206,160,190,92,31,105,63,99,246,1,63,131,126,77,191,216,165,45,191,52,148,40,63,74,124,81,63,13,23,248,190,26,219,107,191,110,207,147,62,48,145,123,63,230,102,163,189,198,232,127,191,51,233,7,190,161,175,120,63,183,176,173,62,82,57,102,191,170,201,7,191,113,91,73,63,251,151,50,63,249,99,35,191,16,84,85,191,81,20,236,62,12,108,110,63,97,181,134,190,158,189,124,191,127,255,89,61,30,163,127,63,139,225,34,62,7,251,118,191,65,115,186,190,129,41,99,63,78,132,13,63,215,19,69,191,181,105,55,191,24,22,30,63,32,5,89,63,191,230,223,190,188,209,112,191,197,5,115,62,49,188,125,63,72,19,218,188,18,47,127,191,84,188,61,190,156,25,117,63,246,19,199,62,121,240,95,191,69,37,19,191,122,168,64,63,41,26,60,63,136,171,24,191,207,142,92,191,140,144,211,62,185,11,115,63,176,116,88,190,186,140,126,191,243,4,53,63,127,255,89,61,186,140,126,191,139,225,34,190,28,55,122,63,97,181,134,62,185,11,115,191,65,115,186,190,92,31,105,63,81,20,236,62,207,142,92,191,78,132,13,191,131,126,77,63,249,99,35,63,41,26,60,191,181,105,55,191,52,148,40,63,113,91,73,63,69,37,19,191,32,5,89,191,13,23,248,62,82,57,102,63,246,19,199,190,188,209,112,191,110,207,147,62,161,175,120,63,84,188,61,190,49,188,125,191,230,102,163,61,198,232,127,63,72,19,218,60,18,47,127,191,51,233,7,190,48,145,123,63,197,5,115,62,156,25,117,191,183,176,173,190,26,219,107,63,191,230,223,62,121,240,95,191,170,201,7,191,74,124,81,63,24,22,30,63,122,168,64,191,251,151,50,191,216,165,45,63,215,19,69,63,136,171,24,191,16,84,85,191,99,246,1,63,129,41,99,63,140,144,211,190,12,108,110,191,170,206,160,62,7,251,118,63,176,116,88,190,158,189,124,191,102,176,217,61,30,163,127,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,91,26,141,38,0,0,128,191,191,159,48,39,0,0,128,63,213,12,22,40,0,0,128,191,52,131,176,167,0,0,128,63,244,178,211,38,0,0,128,191,115,83,13,39,0,0,128,63,232,223,30,40,0,0,128,191,243,4,53,63,127,255,89,189,186,140,126,191,139,225,34,62,28,55,122,63,97,181,134,190,185,11,115,191,65,115,186,62,92,31,105,63,81,20,236,190,207,142,92,191,78,132,13,63,131,126,77,63,249,99,35,191,41,26,60,191,181,105,55,63,52,148,40,63,113,91,73,191,69,37,19,191,32,5,89,63,13,23,248,62,82,57,102,191,246,19,199,190,188,209,112,63,110,207,147,62,161,175,120,191,84,188,61,190,49,188,125,63,230,102,163,61,198,232,127,191,72,19,218,60,18,47,127,63,51,233,7,190,48,145,123,191,197,5,115,62,156,25,117,63,183,176,173,190,26,219,107,191,191,230,223,62,121,240,95,63,170,201,7,191,74,124,81,191,24,22,30,63,122,168,64,63,251,151,50,191,216,165,45,191,215,19,69,63,136,171,24,63,16,84,85,191,99,246,1,191,129,41,99,63,140,144,211,62,12,108,110,191,170,206,160,190,7,251,118,63,176,116,88,62,158,189,124,191,102,176,217,189,30,163,127,63,243,4,53,63,102,176,217,189,28,55,122,191,170,206,160,62,92,31,105,63,99,246,1,191,131,126,77,191,216,165,45,63,52,148,40,63,74,124,81,191,13,23,248,190,26,219,107,63,110,207,147,62,48,145,123,191,230,102,163,189,198,232,127,63,51,233,7,190,161,175,120,191,183,176,173,62,82,57,102,63,170,201,7,191,113,91,73,191,251,151,50,63,249,99,35,63,16,84,85,191,81,20,236,190,12,108,110,63,97,181,134,62,158,189,124,191,127,255,89,189,30,163,127,63,139,225,34,190,7,251,118,191,65,115,186,62,129,41,99,63,78,132,13,191,215,19,69,191,181,105,55,63,24,22,30,63,32,5,89,191,191,230,223,190,188,209,112,63,197,5,115,62,49,188,125,191,72,19,218,188,18,47,127,63,84,188,61,190,156,25,117,191,246,19,199,62,121,240,95,63,69,37,19,191,122,168,64,191,41,26,60,63,136,171,24,63,207,142,92,191,140,144,211,190,185,11,115,63,176,116,88,62,186,140,126,191,243,4,53,63,139,225,34,190,185,11,115,191,81,20,236,62,131,126,77,63,181,105,55,191,69,37,19,191,82,57,102,63,110,207,147,62,49,188,125,191,72,19,218,60,48,145,123,63,183,176,173,190,121,240,95,191,24,22,30,63,216,165,45,63,16,84,85,191,140,144,211,190,7,251,118,63,102,176,217,61,30,163,127,191,176,116,88,62,12,108,110,63,99,246,1,191,215,19,69,191,122,168,64,63,170,201,7,63,26,219,107,191,197,5,115,190,18,47,127,63,230,102,163,189,161,175,120,191,246,19,199,62,32,5,89,63,52,148,40,191,249,99,35,191,207,142,92,63,65,115,186,62,28,55,122,191,127,255,89,189,186,140,126,63,97,181,134,190,92,31,105,191,78,132,13,63,41,26,60,63,113,91,73,191,13,23,248,190,188,209,112,63,84,188,61,62,198,232,127,191,51,233,7,62,156,25,117,63,191,230,223,190,74,124,81,191,251,151,50,63,136,171,24,63,129,41,99,191,170,206,160,190,158,189,124,63,243,4,53,63,176,116,88,190,92,31,105,191,136,171,24,63,52,148,40,63,121,240,95,191,110,207,147,190,18,47,127,63,51,233,7,190,188,209,112,191,170,201,7,63,181,105,55,63,16,84,85,191,65,115,186,190,158,189,124,63,127,255,89,189,7,251,118,191,81,20,236,62,215,19,69,63,113,91,73,191,191,230,223,190,161,175,120,63,72,19,218,60,48,145,123,191,246,19,199,62,74,124,81,63,41,26,60,191,99,246,1,191,185,11,115,63,102,176,217,61,186,140,126,191,170,206,160,62,207,142,92,63,216,165,45,191,69,37,19,191,26,219,107,63,84,188,61,62,198,232,127,191,197,5,115,62,82,57,102,63,24,22,30,191,249,99,35,191,129,41,99,63,97,181,134,62,30,163,127,191,139,225,34,62,12,108,110,63,78,132,13,191,251,151,50,191,32,5,89,63,183,176,173,62,49,188,125,191,230,102,163,61,156,25,117,63,13,23,248,190,122,168,64,191,131,126,77,63,140,144,211,62,28,55,122,191,243,4,53,63,97,181,134,190,207,142,92,191,181,105,55,63,13,23,248,62,161,175,120,191,72,19,218,60,156,25,117,63,170,201,7,191,216,165,45,191,129,41,99,63,176,116,88,62,30,163,127,191,170,206,160,62,16,84,85,63,122,168,64,191,191,230,223,190,48,145,123,63,230,102,163,189,188,209,112,191,69,37,19,63,249,99,35,63,92,31,105,191,139,225,34,190,186,140,126,63,65,115,186,190,131,126,77,191,113,91,73,63,246,19,199,62,49,188,125,191,51,233,7,62,26,219,107,63,24,22,30,191,136,171,24,191,12,108,110,63,102,176,217,61,158,189,124,191,140,144,211,62,215,19,69,63,74,124,81,191,183,176,173,190,18,47,127,63,84,188,61,190,82,57,102,191,52,148,40,63,78,132,13,63,185,11,115,191,127,255,89,189,28,55,122,63,81,20,236,190,41,26,60,191,32,5,89,63,110,207,147,62,198,232,127,191,197,5,115,62,121,240,95,63,251,151,50,191,99,246,1,191,7,251,118,63,243,4,53,63,170,206,160,190,131,126,77,191,74,124,81,63,110,207,147,62,198,232,127,191,183,176,173,62,113,91,73,63,16,84,85,191,97,181,134,190,30,163,127,63,65,115,186,190,215,19,69,191,32,5,89,63,197,5,115,62,18,47,127,191,246,19,199,62,122,168,64,63,207,142,92,191,176,116,88,190,186,140,126,63,140,144,211,190,41,26,60,191,121,240,95,63,84,188,61,62,49,188,125,191,191,230,223,62,181,105,55,63,129,41,99,191,139,225,34,190,158,189,124,63,81,20,236,190,251,151,50,191,82,57,102,63,51,233,7,62,48,145,123,191,13,23,248,62,216,165,45,63,92,31,105,191,102,176,217,189,28,55,122,63,99,246,1,191,52,148,40,191,26,219,107,63,230,102,163,61,161,175,120,191,170,201,7,63,249,99,35,63,12,108,110,191,127,255,89,189,7,251,118,63,78,132,13,191,24,22,30,191,188,209,112,63,72,19,218,60,156,25,117,191,69,37,19,63,136,171,24,63,185,11,115,191,243,4,53,63,65,115,186,190,41,26,60,191,82,57,102,63,230,102,163,61,156,25,117,191,24,22,30,63,99,246,1,63,158,189,124,191,176,116,88,62,16,84,85,63,74,124,81,191,197,5,115,190,49,188,125,63,13,23,248,190,249,99,35,191,185,11,115,63,127,255,89,189,92,31,105,191,181,105,55,63,246,19,199,62,198,232,127,191,183,176,173,62,122,168,64,63,129,41,99,191,102,176,217,189,7,251,118,63,136,171,24,191,170,201,7,191,48,145,123,63,84,188,61,190,32,5,89,191,131,126,77,63,97,181,134,62,186,140,126,191,81,20,236,62,52,148,40,63,188,209,112,191,72,19,218,60,26,219,107,63,251,151,50,191,140,144,211,190,30,163,127,63,170,206,160,190,215,19,69,191,121,240,95,63,51,233,7,62,161,175,120,191,69,37,19,63,78,132,13,63,28,55,122,191,139,225,34,62,207,142,92,63,113,91,73,191,110,207,147,190,18,47,127,63,191,230,223,190,216,165,45,191,12,108,110,63,243,4,53,63,140,144,211,190,52,148,40,191,156,25,117,63,51,233,7,190,32,5,89,191,16,84,85,63,139,225,34,62,7,251,118,191,249,99,35,63,191,230,223,62,198,232,127,191,246,19,199,62,216,165,45,63,185,11,115,191,102,176,217,61,207,142,92,63,74,124,81,191,84,188,61,190,161,175,120,63,24,22,30,191,81,20,236,190,30,163,127,63,65,115,186,190,251,151,50,191,188,209,112,63,230,102,163,189,121,240,95,191,131,126,77,63,176,116,88,62,28,55,122,191,136,171,24,63,13,23,248,62,18,47,127,191,183,176,173,62,181,105,55,63,12,108,110,191,127,255,89,61,129,41,99,63,113,91,73,191,197,5,115,190,48,145,123,63,69,37,19,191,99,246,1,191,186,140,126,63,170,206,160,190,41,26,60,191,26,219,107,63,72,19,218,188,82,57,102,191,215,19,69,63,97,181,134,62,158,189,124,191,78,132,13,63,170,201,7,63,49,188,125,191,110,207,147,62,122,168,64,63,92,31,105,191,243,4,53,63,81,20,236,190,69,37,19,191,49,188,125,63,183,176,173,190,216,165,45,191,7,251,118,63,176,116,88,190,215,19,69,191,26,219,107,63,230,102,163,189,32,5,89,191,207,142,92,63,127,255,89,61,92,31,105,191,113,91,73,63,84,188,61,62,156,25,117,191,251,151,50,63,170,206,160,62,158,189,124,191,136,171,24,63,191,230,223,62,198,232,127,191,13,23,248,62,78,132,13,63,186,140,126,191,65,115,186,62,52,148,40,63,161,175,120,191,197,5,115,62,122,168,64,63,12,108,110,191,102,176,217,61,16,84,85,63,121,240,95,191,72,19,218,188,82,57,102,63,131,126,77,191,139,225,34,190,185,11,115,63,181,105,55,191,110,207,147,190,48,145,123,63,24,22,30,191,140,144,211,190,30,163,127,63,99,246,1,191,170,201,7,191,18,47,127,63,246,19,199,190,249,99,35,191,28,55,122,63,97,181,134,190,41,26,60,191,188,209,112,63,51,233,7,190,74,124,81,191,129,41,99,63,243,4,53,63,99,246,1,191,13,23,248,190,198,232,127,63,170,201,7,191,81,20,236,190,30,163,127,63,78,132,13,191,191,230,223,190,18,47,127,63,69,37,19,191,140,144,211,190,186,140,126,63,136,171,24,191,246,19,199,190,49,188,125,63,24,22,30,191,65,115,186,190,158,189,124,63,249,99,35,191,183,176,173,190,48,145,123,63,52,148,40,191,170,206,160,190,28,55,122,63,216,165,45,191,110,207,147,190,161,175,120,63,251,151,50,191,97,181,134,190,7,251,118,63,181,105,55,191,197,5,115,190,156,25,117,63,41,26,60,191,176,116,88,190,185,11,115,63,122,168,64,191,84,188,61,190,188,209,112,63,215,19,69,191,139,225,34,190,12,108,110,63,113,91,73,191,51,233,7,190,26,219,107,63,131,126,77,191,102,176,217,189,92,31,105,63,74,124,81,191,230,102,163,189,82,57,102,63,16,84,85,191,127,255,89,189,129,41,99,63,32,5,89,191,72,19,218,188,121,240,95,63,207,142,92,191,243,4,53,63,78,132,13,191,246,19,199,190,48,145,123,63,251,151,50,191,176,116,88,190,12,108,110,63,74,124,81,191,72,19,218,188,32,5,89,63,92,31,105,191,139,225,34,62,41,26,60,63,161,175,120,191,183,176,173,62,136,171,24,63,30,163,127,191,99,246,1,63,191,230,223,62,49,188,125,191,52,148,40,63,97,181,134,62,185,11,115,191,113,91,73,63,230,102,163,61,121,240,95,191,129,41,99,63,102,176,217,189,215,19,69,191,156,25,117,63,110,207,147,190,249,99,35,191,186,140,126,63,81,20,236,190,13,23,248,190,18,47,127,63,24,22,30,191,170,206,160,190,7,251,118,63,122,168,64,191,51,233,7,190,82,57,102,63,207,142,92,191,127,255,89,61,131,126,77,63,188,209,112,191,197,5,115,62,216,165,45,63,158,189,124,191,140,144,211,62,170,201,7,63,198,232,127,191,69,37,19,63,65,115,186,62,28,55,122,191,181,105,55,63,84,188,61,62,26,219,107,191,16,84,85,63,243,4,53,63,136,171,24,191,110,207,147,190,188,209,112,63,16,84,85,191,127,255,89,61,215,19,69,63,161,175,120,191,246,19,199,62,99,246,1,63,186,140,126,191,216,165,45,63,84,188,61,62,82,57,102,191,129,41,99,63,139,225,34,190,251,151,50,191,49,188,125,63,13,23,248,190,140,144,211,190,28,55,122,63,122,168,64,191,230,102,163,189,32,5,89,63,12,108,110,191,97,181,134,62,24,22,30,63,198,232,127,191,69,37,19,63,170,206,160,62,185,11,115,191,74,124,81,63,72,19,218,188,113,91,73,191,7,251,118,63,65,115,186,190,170,201,7,191,18,47,127,63,52,148,40,191,176,116,88,190,92,31,105,63,121,240,95,191,51,233,7,62,181,105,55,63,158,189,124,191,81,20,236,62,191,230,223,62,48,145,123,191,41,26,60,63,102,176,217,61,207,142,92,191,26,219,107,63,197,5,115,190,249,99,35,191,30,163,127,63,78,132,13,191,183,176,173,190,156,25,117,63,131,126,77,191,243,4,53,63,249,99,35,191,84,188,61,190,121,240,95,63,12,108,110,191,170,206,160,62,170,201,7,63,49,188,125,191,41,26,60,63,127,255,89,61,131,126,77,191,161,175,120,63,191,230,223,190,140,144,211,190,7,251,118,63,74,124,81,191,230,102,163,61,181,105,55,63,186,140,126,191,78,132,13,63,110,207,147,62,26,219,107,191,129,41,99,63,176,116,88,190,24,22,30,191,198,232,127,63,52,148,40,191,139,225,34,190,207,142,92,63,188,209,112,191,183,176,173,62,99,246,1,63,158,189,124,191,122,168,64,63,72,19,218,60,113,91,73,191,28,55,122,63,81,20,236,190,246,19,199,190,156,25,117,63,16,84,85,191,102,176,217,61,251,151,50,63,18,47,127,191,69,37,19,63,97,181,134,62,92,31,105,191,82,57,102,63,197,5,115,190,136,171,24,191,30,163,127,63,216,165,45,191,51,233,7,190,32,5,89,63,185,11,115,191,65,115,186,62,13,23,248,62,48,145,123,191,215,19,69,63,243,4,53,63,216,165,45,191,230,102,163,189,113,91,73,63,158,189,124,191,78,132,13,63,197,5,115,62,121,240,95,191,185,11,115,63,140,144,211,190,246,19,199,190,188,209,112,63,129,41,99,191,97,181,134,62,170,201,7,63,48,145,123,191,131,126,77,63,102,176,217,189,52,148,40,191,198,232,127,63,251,151,50,191,127,255,89,189,215,19,69,63,49,188,125,191,69,37,19,63,176,116,88,62,207,142,92,191,156,25,117,63,191,230,223,190,65,115,186,190,12,108,110,63,82,57,102,191,110,207,147,62,99,246,1,63,28,55,122,191,74,124,81,63,51,233,7,190,249,99,35,191,30,163,127,63,181,105,55,191,72,19,218,188,122,168,64,63,186,140,126,191,136,171,24,63,84,188,61,62,32,5,89,191,7,251,118,63,81,20,236,190,183,176,173,190,26,219,107,63,92,31,105,191,170,206,160,62,13,23,248,62,161,175,120,191,16,84,85,63,139,225,34,190,24,22,30,191,18,47,127,63,41,26,60,191,243,4,53,63,181,105,55,191,72,19,218,60,216,165,45,63,30,163,127,191,122,168,64,63,230,102,163,189,249,99,35,191,186,140,126,63,113,91,73,191,51,233,7,62,136,171,24,63,158,189,124,191,74,124,81,63,84,188,61,190,78,132,13,191,28,55,122,63,32,5,89,191,197,5,115,62,99,246,1,63,7,251,118,191,121,240,95,63,110,207,147,190,81,20,236,190,185,11,115,63,82,57,102,191,183,176,173,62,140,144,211,62,12,108,110,191,26,219,107,63,246,19,199,190,65,115,186,190,92,31,105,63,188,209,112,191,191,230,223,62,170,206,160,62,129,41,99,191,156,25,117,63,13,23,248,190,97,181,134,190,207,142,92,63,161,175,120,191,170,201,7,63,176,116,88,62,16,84,85,191,48,145,123,63,69,37,19,191,139,225,34,190,131,126,77,63,49,188,125,191,24,22,30,63,102,176,217,61,215,19,69,191,18,47,127,63,52,148,40,191,127,255,89,189,41,26,60,63,198,232,127,191,251,151,50,63,243,4,53,63,122,168,64,191,51,233,7,62,78,132,13,63,7,251,118,191,82,57,102,63,246,19,199,190,170,206,160,190,207,142,92,63,48,145,123,191,24,22,30,63,127,255,89,61,251,151,50,191,18,47,127,63,131,126,77,191,176,116,88,62,13,23,248,62,188,209,112,191,12,108,110,63,81,20,236,190,197,5,115,190,74,124,81,63,186,140,126,191,216,165,45,63,72,19,218,188,249,99,35,191,158,189,124,63,32,5,89,191,110,207,147,62,140,144,211,62,92,31,105,191,156,25,117,63,170,201,7,191,139,225,34,190,215,19,69,63,198,232,127,191,41,26,60,63,102,176,217,189,69,37,19,191,161,175,120,63,129,41,99,191,65,115,186,62,183,176,173,62,121,240,95,191,28,55,122,63,136,171,24,191,230,102,163,189,181,105,55,63,30,163,127,191,113,91,73,63,84,188,61,190,99,246,1,191,185,11,115,63,26,219,107,191,191,230,223,62,97,181,134,62,16,84,85,191,49,188,125,63,52,148,40,191,243,4,53,63,113,91,73,191,197,5,115,62,140,144,211,62,129,41,99,191,48,145,123,63,52,148,40,191,127,255,89,61,69,37,19,63,156,25,117,191,12,108,110,63,99,246,1,191,51,233,7,190,181,105,55,63,186,140,126,191,32,5,89,63,183,176,173,190,170,206,160,190,16,84,85,63,18,47,127,191,41,26,60,63,139,225,34,190,13,23,248,190,26,219,107,63,7,251,118,191,136,171,24,63,72,19,218,60,249,99,35,191,28,55,122,63,82,57,102,191,191,230,223,62,176,116,88,62,215,19,69,191,198,232,127,63,131,126,77,191,97,181,134,62,246,19,199,62,121,240,95,191,158,189,124,63,216,165,45,191,230,102,163,61,78,132,13,63,185,11,115,191,188,209,112,63,170,201,7,191,102,176,217,189,251,151,50,63,49,188,125,191,207,142,92,63,65,115,186,190,110,207,147,190,74,124,81,63,30,163,127,191,122,168,64,63,84,188,61,190,81,20,236,190,92,31,105,63,161,175,120,191,24,22,30,63,243,4,53,63,74,124,81,191,183,176,173,62,97,181,134,62,215,19,69,191,18,47,127,63,207,142,92,191,140,144,211,62,84,188,61,62,181,105,55,191,158,189,124,63,82,57,102,191,13,23,248,62,102,176,217,61,52,148,40,191,161,175,120,63,12,108,110,191,78,132,13,63,72,19,218,60,136,171,24,191,185,11,115,63,156,25,117,191,24,22,30,63,127,255,89,189,170,201,7,191,26,219,107,63,28,55,122,191,216,165,45,63,51,233,7,190,81,20,236,190,129,41,99,63,49,188,125,191,41,26,60,63,176,116,88,190,246,19,199,190,32,5,89,63,30,163,127,191,113,91,73,63,110,207,147,190,170,206,160,190,131,126,77,63,198,232,127,191,16,84,85,63,65,115,186,190,197,5,115,190,122,168,64,63,186,140,126,191,121,240,95,63,191,230,223,190,139,225,34,190,251,151,50,63,48,145,123,191,92,31,105,63,99,246,1,191,230,102,163,189,249,99,35,63,7,251,118,191,188,209,112,63,69,37,19,191,243,4,53,63,32,5,89,191,191,230,223,62,102,176,217,61,24,22,30,191,188,209,112,63,28,55,122,191,181,105,55,63,197,5,115,190,170,206,160,190,215,19,69,63,49,188,125,191,92,31,105,63,78,132,13,191,72,19,218,60,99,246,1,63,129,41,99,191,18,47,127,63,131,126,77,191,65,115,186,62,84,188,61,62,216,165,45,191,7,251,118,63,156,25,117,191,52,148,40,63,139,225,34,190,246,19,199,190,74,124,81,63,30,163,127,191,121,240,95,63,13,23,248,190,127,255,89,189,69,37,19,63,26,219,107,191,158,189,124,63,122,168,64,191,110,207,147,62,97,181,134,62,41,26,60,191,48,145,123,63,12,108,110,191,136,171,24,63,230,102,163,189,81,20,236,190,207,142,92,63,198,232,127,191,16,84,85,63,140,144,211,190,51,233,7,190,249,99,35,63,185,11,115,191,161,175,120,63,251,151,50,191,176,116,88,62,183,176,173,62,113,91,73,191,186,140,126,63,82,57,102,191,170,201,7,63,243,4,53,63,121,240,95,191,170,201,7,63,127,255,89,189,191,230,223,190,74,124,81,63,186,140,126,191,26,219,107,63,24,22,30,191,139,225,34,62,183,176,173,62,122,168,64,191,28,55,122,63,156,25,117,191,251,151,50,63,97,181,134,190,197,5,115,190,216,165,45,63,185,11,115,191,48,145,123,63,215,19,69,191,65,115,186,62,51,233,7,62,136,171,24,191,92,31,105,63,18,47,127,191,16,84,85,63,81,20,236,190,72,19,218,188,99,246,1,63,207,142,92,191,198,232,127,63,129,41,99,191,78,132,13,63,230,102,163,189,140,144,211,190,131,126,77,63,49,188,125,191,12,108,110,63,249,99,35,191,84,188,61,62,170,206,160,62,41,26,60,191,161,175,120,63,7,251,118,191,181,105,55,63,110,207,147,190,176,116,88,190,52,148,40,63,188,209,112,191,158,189,124,63,113,91,73,191,246,19,199,62,102,176,217,61,69,37,19,191,82,57,102,63,30,163,127,191,32,5,89,63,13,23,248,190,243,4,53,63,82,57,102,191,24,22,30,63,176,116,88,190,197,5,115,190,249,99,35,63,92,31,105,191,198,232,127,63,129,41,99,191,136,171,24,63,84,188,61,190,97,181,134,190,52,148,40,63,26,219,107,191,30,163,127,63,121,240,95,191,69,37,19,63,139,225,34,190,110,207,147,190,216,165,45,63,12,108,110,191,18,47,127,63,207,142,92,191,78,132,13,63,51,233,7,190,170,206,160,190,251,151,50,63,188,209,112,191,186,140,126,63,32,5,89,191,170,201,7,63,102,176,217,189,183,176,173,190,181,105,55,63,185,11,115,191,49,188,125,63,16,84,85,191,99,246,1,63,230,102,163,189,65,115,186,190,41,26,60,63,156,25,117,191,158,189,124,63,74,124,81,191,13,23,248,62,127,255,89,189,246,19,199,190,122,168,64,63,7,251,118,191,48,145,123,63,131,126,77,191,81,20,236,62,72,19,218,188,140,144,211,190,215,19,69,63,161,175,120,191,28,55,122,63,113,91,73,191,191,230,223,62,243,4,53,63,26,219,107,191,251,151,50,63,65,115,186,190,72,19,218,188,140,144,211,62,41,26,60,191,188,209,112,63,30,163,127,191,82,57,102,63,52,148,40,191,170,206,160,62,230,102,163,61,81,20,236,190,215,19,69,63,156,25,117,191,186,140,126,63,121,240,95,191,24,22,30,63,97,181,134,190,51,233,7,190,99,246,1,63,131,126,77,191,161,175,120,63,158,189,124,191,32,5,89,63,69,37,19,191,176,116,88,62,84,188,61,62,78,132,13,191,16,84,85,63,48,145,123,191,28,55,122,63,74,124,81,191,170,201,7,63,139,225,34,190,197,5,115,190,136,171,24,63,207,142,92,191,49,188,125,63,7,251,118,191,113,91,73,63,13,23,248,190,102,176,217,61,110,207,147,62,249,99,35,191,129,41,99,63,18,47,127,191,185,11,115,63,122,168,64,191,191,230,223,62,127,255,89,189,183,176,173,190,216,165,45,63,92,31,105,191,198,232,127,63,12,108,110,191,181,105,55,63,246,19,199,190,243,4,53,63,188,209,112,191,215,19,69,63,99,246,1,191,84,188,61,62,139,225,34,62,13,23,248,190,122,168,64,63,12,108,110,191,198,232,127,63,185,11,115,191,113,91,73,63,170,201,7,191,176,116,88,62,51,233,7,62,81,20,236,190,41,26,60,63,26,219,107,191,30,163,127,63,156,25,117,191,131,126,77,63,78,132,13,191,197,5,115,62,102,176,217,61,191,230,223,190,181,105,55,63,92,31,105,191,18,47,127,63,7,251,118,191,74,124,81,63,69,37,19,191,97,181,134,62,230,102,163,61,140,144,211,190,251,151,50,63,82,57,102,191,186,140,126,63,161,175,120,191,16,84,85,63,136,171,24,191,110,207,147,62,127,255,89,61,246,19,199,190,216,165,45,63,129,41,99,191,49,188,125,63,28,55,122,191,32,5,89,63,24,22,30,191,170,206,160,62,72,19,218,60,65,115,186,190,52,148,40,63,121,240,95,191,158,189,124,63,48,145,123,191,207,142,92,63,249,99,35,191,183,176,173,62,243,4,53,63,156,25,117,191,16,84,85,63,249,99,35,191,246,19,199,62,102,176,217,189,84,188,61,190,81,20,236,62,251,151,50,191,121,240,95,63,28,55,122,191,18,47,127,63,12,108,110,191,113,91,73,63,69,37,19,191,170,206,160,62,72,19,218,188,97,181,134,190,170,201,7,63,122,168,64,191,92,31,105,63,49,188,125,191,158,189,124,63,82,57,102,191,41,26,60,63,99,246,1,191,197,5,115,62,127,255,89,61,183,176,173,190,136,171,24,63,131,126,77,191,188,209,112,63,30,163,127,191,161,175,120,63,207,142,92,191,216,165,45,63,191,230,223,190,139,225,34,62,51,233,7,62,140,144,211,190,52,148,40,63,32,5,89,191,7,251,118,63,198,232,127,191,185,11,115,63,74,124,81,191,24,22,30,63,65,115,186,190,230,102,163,61,176,116,88,62,13,23,248,190,181,105,55,63,129,41,99,191,48,145,123,63,186,140,126,191,26,219,107,63,215,19,69,191,78,132,13,63,110,207,147,190,243,4,53,63,161,175,120,191,129,41,99,63,122,168,64,191,69,37,19,63,65,115,186,190,51,233,7,62,102,176,217,61,183,176,173,190,78,132,13,63,41,26,60,191,121,240,95,63,7,251,118,191,198,232,127,63,28,55,122,191,82,57,102,63,215,19,69,191,136,171,24,63,246,19,199,190,139,225,34,62,230,102,163,61,170,206,160,190,170,201,7,63,181,105,55,191,207,142,92,63,156,25,117,191,30,163,127,63,48,145,123,191,92,31,105,63,113,91,73,191,24,22,30,63,140,144,211,190,84,188,61,62,127,255,89,61,110,207,147,190,99,246,1,63,251,151,50,191,32,5,89,63,185,11,115,191,18,47,127,63,158,189,124,191,26,219,107,63,131,126,77,191,249,99,35,63,191,230,223,190,176,116,88,62,72,19,218,60,97,181,134,190,13,23,248,62,216,165,45,191,16,84,85,63,188,209,112,191,186,140,126,63,49,188,125,191,12,108,110,63,74,124,81,191,52,148,40,63,81,20,236,190,197,5,115,62,243,4,53,63,48,145,123,191,12,108,110,63,32,5,89,191,41,26,60,63,136,171,24,191,191,230,223,62,97,181,134,190,230,102,163,61,102,176,217,61,110,207,147,190,81,20,236,62,24,22,30,191,122,168,64,63,207,142,92,191,188,209,112,63,158,189,124,191,198,232,127,63,28,55,122,191,26,219,107,63,16,84,85,191,181,105,55,63,69,37,19,191,140,144,211,62,197,5,115,190,127,255,89,61,51,233,7,62,170,206,160,190,13,23,248,62,249,99,35,191,215,19,69,63,121,240,95,191,185,11,115,63,49,188,125,191,30,163,127,63,161,175,120,191,92,31,105,63,74,124,81,191,251,151,50,63,78,132,13,191,246,19,199,62,176,116,88,190,72,19,218,60,139,225,34,62,183,176,173,190,99,246,1,63,52,148,40,191,113,91,73,63,129,41,99,191,156,25,117,63,186,140,126,191,18,47,127,63,7,251,118,191,82,57,102,63,131,126,77,191,216,165,45,63,170,201,7,191,65,115,186,62,84,188,61,190,243,4,53,63,49,188,125,191,7,251,118,63,26,219,107,191,207,142,92,63,113,91,73,191,251,151,50,63,136,171,24,191,13,23,248,62,65,115,186,190,197,5,115,62,102,176,217,189,72,19,218,188,139,225,34,62,110,207,147,190,140,144,211,62,170,201,7,191,249,99,35,63,41,26,60,191,74,124,81,63,129,41,99,191,188,209,112,63,28,55,122,191,18,47,127,63,30,163,127,191,48,145,123,63,185,11,115,191,82,57,102,63,16,84,85,191,122,168,64,63,52,148,40,191,78,132,13,63,191,230,223,190,170,206,160,62,84,188,61,190,127,255,89,61,230,102,163,61,176,116,88,190,183,176,173,62,81,20,236,190,69,37,19,63,216,165,45,191,215,19,69,63,32,5,89,191,92,31,105,63,156,25,117,191,158,189,124,63,198,232,127,191,186,140,126,63,161,175,120,191,12,108,110,63,121,240,95,191,131,126,77,63,181,105,55,191,24,22,30,63,99,246,1,191,246,19,199,62,97,181,134,190,51,233,7,62,243,4,53,63,18,47,127,191,158,189,124,63,161,175,120,191,185,11,115,63,26,219,107,191,129,41,99,63,32,5,89,191,131,126,77,63,122,168,64,191,251,151,50,63,249,99,35,191,69,37,19,63,99,246,1,191,191,230,223,62,65,115,186,190,110,207,147,62,176,116,88,190,51,233,7,62,127,255,89,189,72,19,218,188,102,176,217,61,84,188,61,190,97,181,134,62,183,176,173,190,140,144,211,62,13,23,248,190,78,132,13,63,24,22,30,191,216,165,45,63,41,26,60,191,113,91,73,63,16,84,85,191,121,240,95,63,92,31,105,191,188,209,112,63,7,251,118,191,48,145,123,63,186,140,126,191,198,232,127,63,30,163,127,191,49,188,125,63,28,55,122,191,156,25,117,63,12,108,110,191,82,57,102,63,207,142,92,191,74,124,81,63,215,19,69,191,181,105,55,63,52,148,40,191,136,171,24,63,170,201,7,191,81,20,236,62,246,19,199,190,170,206,160,62,197,5,115,190,139,225,34,62,230,102,163,189,243,4,53,63,198,232,127,191,30,163,127,63,18,47,127,191,186,140,126,63,49,188,125,191,158,189,124,63,48,145,123,191,28,55,122,63,161,175,120,191,7,251,118,63,156,25,117,191,185,11,115,63,188,209,112,191,12,108,110,63,26,219,107,191,92,31,105,63,82,57,102,191,129,41,99,63,121,240,95,191,207,142,92,63,32,5,89,191,16,84,85,63,74,124,81,191,131,126,77,63,113,91,73,191,215,19,69,63,122,168,64,191,41,26,60,63,181,105,55,191,251,151,50,63,216,165,45,191,52,148,40,63,249,99,35,191,24,22,30,63,136,171,24,191,69,37,19,63,78,132,13,191,170,201,7,63,99,246,1,191,13,23,248,62,81,20,236,190,191,230,223,62,140,144,211,190,246,19,199,62,65,115,186,190,183,176,173,62,170,206,160,190,110,207,147,62,97,181,134,190,197,5,115,62,176,116,88,190,84,188,61,62,139,225,34,190,51,233,7,62,102,176,217,189,230,102,163,61,127,255,89,189,72,19,218,60,243,4,53,63,139,233,127,63,47,166,127,63,249,53,127,63,253,152,126,63,85,207,125,63,37,217,124,63,152,182,123,63,226,103,122,63,60,237,120,63,234,70,119,63,54,117,117,63,113,120,115,63,244,80,113,63,32,255,110,63,94,131,108,63,29,222,105,63,212,15,103,63,1,25,100,63,41,250,96,63,215,179,93,63,160,70,90,63,29,179,86,63,239,249,82,63,189,27,79,63,52,25,75,63,10,243,70,63,247,169,66,63,189,62,62,63,35,178,57,63,243,4,53,63,1,56,48,63,37,76,43,63,58,66,38,63,36,27,33,63,202,215,27,63,24,121,22,63,0,0,17,63,119,109,11,63,119,194,5,63,0,0,0,63,39,78,244,62,113,113,232,62,243,107,220,62,201,63,208,62,21,239,195,62,1,124,183,62,188,232,170,62,122,55,158,62,118,106,145,62,238,131,132,62,77,12,111,62,205,230,84,62,243,155,58,62,91,48,32,62,168,168,5,62,5,19,214,61,42,175,160,61,58,94,86,61,10,113,214,60,243,4,53,63,249,53,127,63,37,217,124,63,60,237,120,63,113,120,115,63,94,131,108,63,1,25,100,63,160,70,90,63,189,27,79,63,247,169,66,63,243,4,53,63,58,66,38,63,24,121,22,63,119,194,5,63,113,113,232,62,21,239,195,62,122,55,158,62,77,12,111,62,91,48,32,62,42,175,160,61,50,49,141,36,42,175,160,189,91,48,32,190,77,12,111,190,122,55,158,190,21,239,195,190,113,113,232,190,119,194,5,191,24,121,22,191,58,66,38,191,243,4,53,191,247,169,66,191,189,27,79,191,160,70,90,191,1,25,100,191,94,131,108,191,113,120,115,191,60,237,120,191,37,217,124,191,249,53,127,191,0,0,128,191,249,53,127,191,37,217,124,191,60,237,120,191,113,120,115,191,94,131,108,191,1,25,100,191,160,70,90,191,189,27,79,191,247,169,66,191,243,4,53,191,58,66,38,191,24,121,22,191,119,194,5,191,113,113,232,190,21,239,195,190,122,55,158,190,77,12,111,190,91,48,32,190,42,175,160,189,243,4,53,63,85,207,125,63,234,70,119,63,94,131,108,63,215,179,93,63,52,25,75,63,243,4,53,63,202,215,27,63,0,0,0,63,21,239,195,62,238,131,132,62,168,168,5,62,50,49,141,36,168,168,5,190,238,131,132,190,21,239,195,190,0,0,0,191,202,215,27,191,243,4,53,191,52,25,75,191,215,179,93,191,94,131,108,191,234,70,119,191,85,207,125,191,0,0,128,191,85,207,125,191,234,70,119,191,94,131,108,191,215,179,93,191,52,25,75,191,243,4,53,191,202,215,27,191,0,0,0,191,21,239,195,190,238,131,132,190,168,168,5,190,202,201,83,165,168,168,5,62,238,131,132,62,21,239,195,62,0,0,0,63,202,215,27,63,243,4,53,63,52,25,75,63,215,179,93,63,94,131,108,63,234,70,119,63,85,207,125,63,0,0,128,63,85,207,125,63,234,70,119,63,94,131,108,63,215,179,93,63,52,25,75,63,243,4,53,63,202,215,27,63,0,0,0,63,21,239,195,62,238,131,132,62,168,168,5,62,243,4,53,63,152,182,123,63,32,255,110,63,160,70,90,63,189,62,62,63,202,215,27,63,113,113,232,62,118,106,145,62,5,19,214,61,42,175,160,189,238,131,132,190,243,107,220,190,24,121,22,191,35,178,57,191,29,179,86,191,94,131,108,191,226,103,122,191,139,233,127,191,37,217,124,191,244,80,113,191,215,179,93,191,247,169,66,191,36,27,33,191,39,78,244,190,122,55,158,190,168,168,5,190,58,94,86,61,77,12,111,62,201,63,208,62,0,0,17,63,243,4,53,63,239,249,82,63,29,222,105,63,60,237,120,63,47,166,127,63,85,207,125,63,113,120,115,63,41,250,96,63,10,243,70,63,58,66,38,63,0,0,0,63,188,232,170,62,91,48,32,62,10,113,214,188,205,230,84,190,21,239,195,190,119,109,11,191,1,56,48,191,189,27,79,191,212,15,103,191,234,70,119,191,249,53,127,191,253,152,126,191,54,117,117,191,1,25,100,191,52,25,75,191,37,76,43,191,119,194,5,191,1,124,183,190,243,155,58,190,243,4,53,63,60,237,120,63,1,25,100,63,247,169,66,63,24,121,22,63,21,239,195,62,91,48,32,62,42,175,160,189,122,55,158,190,119,194,5,191,243,4,53,191,160,70,90,191,113,120,115,191,249,53,127,191,37,217,124,191,94,131,108,191,189,27,79,191,58,66,38,191,113,113,232,190,77,12,111,190,202,201,83,165,77,12,111,62,113,113,232,62,58,66,38,63,189,27,79,63,94,131,108,63,37,217,124,63,249,53,127,63,113,120,115,63,160,70,90,63,243,4,53,63,119,194,5,63,122,55,158,62,42,175,160,61,91,48,32,190,21,239,195,190,24,121,22,191,247,169,66,191,1,25,100,191,60,237,120,191,0,0,128,191,60,237,120,191,1,25,100,191,247,169,66,191,24,121,22,191,21,239,195,190,91,48,32,190,42,175,160,61,122,55,158,62,119,194,5,63,243,4,53,63,160,70,90,63,113,120,115,63,249,53,127,63,37,217,124,63,94,131,108,63,189,27,79,63,58,66,38,63,113,113,232,62,77,12,111,62,243,4,53,63,54,117,117,63,29,179,86,63,58,66,38,63,201,63,208,62,168,168,5,62,91,48,32,190,243,107,220,190,37,76,43,191,160,70,90,191,234,70,119,191,139,233,127,191,113,120,115,191,239,249,82,191,36,27,33,191,21,239,195,190,5,19,214,189,243,155,58,62,113,113,232,62,1,56,48,63,215,179,93,63,60,237,120,63,47,166,127,63,244,80,113,63,189,27,79,63,202,215,27,63,1,124,183,62,42,175,160,61,205,230,84,190,39,78,244,190,243,4,53,191,41,250,96,191,226,103,122,191,249,53,127,191,32,255,110,191,52,25,75,191,24,121,22,191,188,232,170,190,58,94,86,189,77,12,111,62,0,0,0,63,35,178,57,63,1,25,100,63,152,182,123,63,253,152,126,63,94,131,108,63,10,243,70,63,0,0,17,63,122,55,158,62,10,113,214,60,238,131,132,190,119,194,5,191,189,62,62,191,212,15,103,191,37,217,124,191,85,207,125,191,29,222,105,191,247,169,66,191,119,109,11,191,118,106,145,190,243,4,53,63,244,80,113,63,10,243,70,63,119,194,5,63,205,230,84,62,168,168,5,190,113,113,232,190,35,178,57,191,29,222,105,191,249,53,127,191,234,70,119,191,239,249,82,191,24,121,22,191,118,106,145,190,58,94,86,61,21,239,195,62,37,76,43,63,41,250,96,63,37,217,124,63,152,182,123,63,215,179,93,63,58,66,38,63,1,124,183,62,10,113,214,60,122,55,158,190,202,215,27,191,29,179,86,191,60,237,120,191,253,152,126,191,212,15,103,191,243,4,53,191,243,107,220,190,5,19,214,189,77,12,111,62,119,109,11,63,52,25,75,63,113,120,115,63,139,233,127,63,32,255,110,63,247,169,66,63,0,0,0,63,243,155,58,62,91,48,32,190,39,78,244,190,189,62,62,191,94,131,108,191,47,166,127,191,54,117,117,191,189,27,79,191,0,0,17,191,238,131,132,190,42,175,160,61,201,63,208,62,1,56,48,63,1,25,100,63,85,207,125,63,226,103,122,63,160,70,90,63,36,27,33,63,188,232,170,62,243,4,53,63,94,131,108,63,243,4,53,63,21,239,195,62,50,49,141,36,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,202,201,83,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,126,125,176,37,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,88,215,30,38,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,233,136,48,167,21,239,195,62,243,4,53,63,94,131,108,63,0,0,128,63,94,131,108,63,243,4,53,63,21,239,195,62,8,72,141,166,21,239,195,190,243,4,53,191,94,131,108,191,0,0,128,191,94,131,108,191,243,4,53,191,21,239,195,190,243,4,53,63,212,15,103,63,36,27,33,63,77,12,111,62,205,230,84,190,202,215,27,191,1,25,100,191,139,233,127,191,29,222,105,191,58,66,38,191,238,131,132,190,243,155,58,62,24,121,22,63,41,250,96,63,47,166,127,63,94,131,108,63,37,76,43,63,118,106,145,62,91,48,32,190,0,0,17,191,215,179,93,191,249,53,127,191,32,255,110,191,1,56,48,191,122,55,158,190,168,168,5,62,119,109,11,63,160,70,90,63,253,152,126,63,244,80,113,63,243,4,53,63,188,232,170,62,5,19,214,189,119,194,5,191,29,179,86,191,85,207,125,191,113,120,115,191,35,178,57,191,1,124,183,190,42,175,160,61,0,0,0,63,239,249,82,63,37,217,124,63,54,117,117,63,189,62,62,63,21,239,195,62,58,94,86,189,39,78,244,190,189,27,79,191,152,182,123,191,234,70,119,191,247,169,66,191,201,63,208,190,10,113,214,60,113,113,232,62,52,25,75,63,226,103,122,63,60,237,120,63,10,243,70,63,243,107,220,62,243,4,53,63,41,250,96,63,119,109,11,63,42,175,160,61,201,63,208,190,52,25,75,191,37,217,124,191,244,80,113,191,37,76,43,191,77,12,111,190,238,131,132,62,1,56,48,63,113,120,115,63,152,182,123,63,10,243,70,63,21,239,195,62,5,19,214,189,0,0,17,191,1,25,100,191,139,233,127,191,215,179,93,191,119,194,5,191,58,94,86,189,243,107,220,62,189,27,79,63,85,207,125,63,32,255,110,63,58,66,38,63,205,230,84,62,118,106,145,190,243,4,53,191,54,117,117,191,226,103,122,191,247,169,66,191,1,124,183,190,168,168,5,62,24,121,22,63,212,15,103,63,47,166,127,63,160,70,90,63,0,0,0,63,10,113,214,60,113,113,232,190,239,249,82,191,253,152,126,191,94,131,108,191,36,27,33,191,243,155,58,190,122,55,158,62,35,178,57,63,234,70,119,63,60,237,120,63,189,62,62,63,188,232,170,62,91,48,32,190,202,215,27,191,29,222,105,191,249,53,127,191,29,179,86,191,39,78,244,190,243,4,53,63,160,70,90,63,113,113,232,62,42,175,160,189,24,121,22,191,94,131,108,191,37,217,124,191,247,169,66,191,122,55,158,190,77,12,111,62,243,4,53,63,60,237,120,63,113,120,115,63,58,66,38,63,91,48,32,62,21,239,195,190,189,27,79,191,249,53,127,191,1,25,100,191,119,194,5,191,23,22,247,165,119,194,5,63,1,25,100,63,249,53,127,63,189,27,79,63,21,239,195,62,91,48,32,190,58,66,38,191,113,120,115,191,60,237,120,191,243,4,53,191,77,12,111,190,122,55,158,62,247,169,66,63,37,217,124,63,94,131,108,63,24,121,22,63,42,175,160,61,113,113,232,190,160,70,90,191,0,0,128,191,160,70,90,191,113,113,232,190,42,175,160,61,24,121,22,63,94,131,108,63,37,217,124,63,247,169,66,63,122,55,158,62,77,12,111,190,243,4,53,191,60,237,120,191,113,120,115,191,58,66,38,191,91,48,32,190,21,239,195,62,189,27,79,63,249,53,127,63,1,25,100,63,119,194,5,63,243,4,53,63,239,249,82,63,1,124,183,62,77,12,111,190,189,62,62,191,85,207,125,191,1,25,100,191,39,78,244,190,5,19,214,61,58,66,38,63,234,70,119,63,244,80,113,63,24,121,22,63,10,113,214,60,119,109,11,191,94,131,108,191,226,103,122,191,1,56,48,191,91,48,32,190,243,107,220,62,215,179,93,63,249,53,127,63,10,243,70,63,118,106,145,62,122,55,158,190,52,25,75,191,47,166,127,191,160,70,90,191,201,63,208,190,243,155,58,62,243,4,53,63,152,182,123,63,29,222,105,63,119,194,5,63,58,94,86,189,202,215,27,191,113,120,115,191,54,117,117,191,36,27,33,191,42,175,160,189,0,0,0,63,212,15,103,63,37,217,124,63,35,178,57,63,205,230,84,62,21,239,195,190,29,179,86,191,139,233,127,191,189,27,79,191,188,232,170,190,238,131,132,62,247,169,66,63,253,152,126,63,41,250,96,63,113,113,232,62,168,168,5,190,37,76,43,191,60,237,120,191,32,255,110,191,0,0,17,191,243,4,53,63,52,25,75,63,238,131,132,62,21,239,195,190,215,179,93,191,85,207,125,191,243,4,53,191,168,168,5,190,0,0,0,63,94,131,108,63,234,70,119,63,202,215,27,63,126,125,176,37,202,215,27,191,234,70,119,191,94,131,108,191,0,0,0,191,168,168,5,62,243,4,53,63,85,207,125,63,215,179,93,63,21,239,195,62,238,131,132,190,52,25,75,191,0,0,128,191,52,25,75,191,238,131,132,190,21,239,195,62,215,179,93,63,85,207,125,63,243,4,53,63,168,168,5,62,0,0,0,191,94,131,108,191,234,70,119,191,202,215,27,191,195,67,119,38,202,215,27,63,234,70,119,63,94,131,108,63,0,0,0,63,168,168,5,190,243,4,53,191,85,207,125,191,215,179,93,191,21,239,195,190,238,131,132,62,52,25,75,63,0,0,128,63,52,25,75,63,238,131,132,62,21,239,195,190,215,179,93,191,85,207,125,191,243,4,53,191,168,168,5,190,0,0,0,63,94,131,108,63,234,70,119,63,202,215,27,63,243,4,53,63,247,169,66,63,91,48,32,62,119,194,5,191,113,120,115,191,94,131,108,191,113,113,232,190,77,12,111,62,189,27,79,63,249,53,127,63,243,4,53,63,42,175,160,61,24,121,22,191,60,237,120,191,1,25,100,191,21,239,195,190,122,55,158,62,160,70,90,63,37,217,124,63,58,66,38,63,88,215,30,38,58,66,38,191,37,217,124,191,160,70,90,191,122,55,158,190,21,239,195,62,1,25,100,63,60,237,120,63,24,121,22,63,42,175,160,189,243,4,53,191,249,53,127,191,189,27,79,191,77,12,111,190,113,113,232,62,94,131,108,63,113,120,115,63,119,194,5,63,91,48,32,190,247,169,66,191,0,0,128,191,247,169,66,191,91,48,32,190,119,194,5,63,113,120,115,63,94,131,108,63,113,113,232,62,77,12,111,190,189,27,79,191,249,53,127,191,243,4,53,191,42,175,160,189,24,121,22,63,60,237,120,63,1,25,100,63,21,239,195,62,122,55,158,190,160,70,90,191,37,217,124,191,58,66,38,191,243,4,53,63,35,178,57,63,58,94,86,61,58,66,38,191,253,152,126,191,52,25,75,191,91,48,32,190,0,0,17,63,226,103,122,63,160,70,90,63,238,131,132,62,39,78,244,190,113,120,115,191,212,15,103,191,1,124,183,190,21,239,195,62,29,222,105,63,244,80,113,63,113,113,232,62,118,106,145,190,215,179,93,191,60,237,120,191,119,109,11,191,243,155,58,62,189,27,79,63,85,207,125,63,36,27,33,63,42,175,160,189,189,62,62,191,139,233,127,191,243,4,53,191,10,113,214,188,37,76,43,63,249,53,127,63,10,243,70,63,168,168,5,62,24,121,22,191,152,182,123,191,29,179,86,191,77,12,111,190,0,0,0,63,54,117,117,63,1,25,100,63,188,232,170,62,201,63,208,190,94,131,108,191,32,255,110,191,243,107,220,190,122,55,158,62,41,250,96,63,234,70,119,63,119,194,5,63,205,230,84,190,239,249,82,191,37,217,124,191,202,215,27,191,5,19,214,61,247,169,66,63,47,166,127,63,1,56,48,63,243,4,53,63,1,56,48,63,58,94,86,189,247,169,66,191,253,152,126,191,202,215,27,191,91,48,32,62,239,249,82,63,226,103,122,63,119,194,5,63,238,131,132,190,41,250,96,191,113,120,115,191,243,107,220,190,1,124,183,62,94,131,108,63,29,222,105,63,188,232,170,62,113,113,232,190,54,117,117,191,215,179,93,191,77,12,111,190,119,109,11,63,152,182,123,63,189,27,79,63,168,168,5,62,36,27,33,191,249,53,127,191,189,62,62,191,10,113,214,188,243,4,53,63,139,233,127,63,37,76,43,63,42,175,160,189,10,243,70,191,85,207,125,191,24,121,22,191,243,155,58,62,29,179,86,63,60,237,120,63,0,0,0,63,118,106,145,190,1,25,100,191,244,80,113,191,201,63,208,190,21,239,195,62,32,255,110,63,212,15,103,63,122,55,158,62,39,78,244,190,234,70,119,191,160,70,90,191,205,230,84,190,0,0,17,63,37,217,124,63,52,25,75,63,5,19,214,61,58,66,38,191,47,166,127,191,35,178,57,191,243,4,53,63,58,66,38,63,91,48,32,190,160,70,90,191,113,120,115,191,21,239,195,190,113,113,232,62,60,237,120,63,189,27,79,63,42,175,160,61,243,4,53,191,249,53,127,191,24,121,22,191,77,12,111,62,1,25,100,63,94,131,108,63,122,55,158,62,119,194,5,191,37,217,124,191,247,169,66,191,46,238,158,38,247,169,66,63,37,217,124,63,119,194,5,63,122,55,158,190,94,131,108,191,1,25,100,191,77,12,111,190,24,121,22,63,249,53,127,63,243,4,53,63,42,175,160,189,189,27,79,191,60,237,120,191,113,113,232,190,21,239,195,62,113,120,115,63,160,70,90,63,91,48,32,62,58,66,38,191,0,0,128,191,58,66,38,191,91,48,32,62,160,70,90,63,113,120,115,63,21,239,195,62,113,113,232,190,60,237,120,191,189,27,79,191,42,175,160,189,243,4,53,63,249,53,127,63,24,121,22,63,77,12,111,190,1,25,100,191,94,131,108,191,122,55,158,190,119,194,5,63,37,217,124,63,247,169,66,63,243,4,53,63,202,215,27,63,238,131,132,190,94,131,108,191,215,179,93,191,168,168,5,190,243,4,53,63,85,207,125,63,0,0,0,63,21,239,195,190,234,70,119,191,52,25,75,191,122,58,194,38,52,25,75,63,234,70,119,63,21,239,195,62,0,0,0,191,85,207,125,191,243,4,53,191,168,168,5,62,215,179,93,63,94,131,108,63,238,131,132,62,202,215,27,191,0,0,128,191,202,215,27,191,238,131,132,62,94,131,108,63,215,179,93,63,168,168,5,62,243,4,53,191,85,207,125,191,0,0,0,191,21,239,195,62,234,70,119,63,52,25,75,63,222,94,13,166,52,25,75,191,234,70,119,191,21,239,195,190,0,0,0,63,85,207,125,63,243,4,53,63,168,168,5,190,215,179,93,191,94,131,108,191,238,131,132,190,202,215,27,63,0,0,128,63,202,215,27,63,238,131,132,190,94,131,108,191,215,179,93,191,168,168,5,190,243,4,53,63,85,207,125,63,0,0,0,63,21,239,195,190,234,70,119,191,52,25,75,191,243,4,53,63,0,0,17,63,1,124,183,190,60,237,120,191,189,62,62,191,168,168,5,62,1,25,100,63,41,250,96,63,5,19,214,61,247,169,66,191,234,70,119,191,188,232,170,190,24,121,22,63,139,233,127,63,119,109,11,63,21,239,195,190,226,103,122,191,35,178,57,191,91,48,32,62,212,15,103,63,215,179,93,63,42,175,160,61,10,243,70,191,54,117,117,191,122,55,158,190,202,215,27,63,47,166,127,63,119,194,5,63,201,63,208,190,152,182,123,191,243,4,53,191,243,155,58,62,29,222,105,63,160,70,90,63,58,94,86,61,52,25,75,191,113,120,115,191,118,106,145,190,36,27,33,63,249,53,127,63,0,0,0,63,243,107,220,190,37,217,124,191,1,56,48,191,205,230,84,62,94,131,108,63,29,179,86,63,10,113,214,60,189,27,79,191,244,80,113,191,238,131,132,190,58,66,38,63,253,152,126,63,39,78,244,62,113,113,232,190,85,207,125,191,37,76,43,191,77,12,111,62,32,255,110,63,239,249,82,63,243,4,53,63,119,194,5,63,113,113,232,190,249,53,127,191,24,121,22,191,21,239,195,62,37,217,124,63,58,66,38,63,122,55,158,190,60,237,120,191,243,4,53,191,77,12,111,62,113,120,115,63,247,169,66,63,91,48,32,190,94,131,108,191,189,27,79,191,42,175,160,61,1,25,100,63,160,70,90,63,8,72,141,166,160,70,90,191,1,25,100,191,42,175,160,189,189,27,79,63,94,131,108,63,91,48,32,62,247,169,66,191,113,120,115,191,77,12,111,190,243,4,53,63,60,237,120,63,122,55,158,62,58,66,38,191,37,217,124,191,21,239,195,190,24,121,22,63,249,53,127,63,113,113,232,62,119,194,5,191,0,0,128,191,119,194,5,191,113,113,232,62,249,53,127,63,24,121,22,63,21,239,195,190,37,217,124,191,58,66,38,191,122,55,158,62,60,237,120,63,243,4,53,63,77,12,111,190,113,120,115,191,247,169,66,191,91,48,32,62,94,131,108,63,189,27,79,63,42,175,160,189,1,25,100,191,160,70,90,191,243,4,53,63,39,78,244,62,119,109,11,191,249,53,127,191,201,63,208,190,202,215,27,63,37,217,124,63,188,232,170,62,37,76,43,191,60,237,120,191,238,131,132,190,35,178,57,63,113,120,115,63,243,155,58,62,10,243,70,191,94,131,108,191,5,19,214,189,239,249,82,63,1,25,100,63,10,113,214,60,215,179,93,191,160,70,90,191,58,94,86,61,212,15,103,63,189,27,79,63,168,168,5,190,32,255,110,191,247,169,66,191,205,230,84,62,54,117,117,63,243,4,53,63,118,106,145,190,226,103,122,191,58,66,38,191,1,124,183,62,85,207,125,63,24,121,22,63,243,107,220,190,47,166,127,191,119,194,5,191,0,0,0,63,139,233,127,63,113,113,232,62,0,0,17,191,253,152,126,191,21,239,195,190,36,27,33,63,152,182,123,63,122,55,158,62,1,56,48,191,234,70,119,191,77,12,111,190,189,62,62,63,244,80,113,63,91,48,32,62,52,25,75,191,29,222,105,191,42,175,160,189,29,179,86,63,41,250,96,63,243,4,53,63,243,107,220,62,36,27,33,191,60,237,120,191,205,230,84,190,52,25,75,63,1,25,100,63,10,113,214,188,29,222,105,191,247,169,66,191,238,131,132,62,152,182,123,63,24,121,22,63,39,78,244,190,47,166,127,191,21,239,195,190,37,76,43,63,54,117,117,63,91,48,32,62,239,249,82,191,215,179,93,191,42,175,160,61,32,255,110,63,35,178,57,63,122,55,158,190,85,207,125,191,119,109,11,191,119,194,5,63,253,152,126,63,188,232,170,62,243,4,53,191,244,80,113,191,5,19,214,189,160,70,90,63,29,179,86,63,168,168,5,190,113,120,115,191,1,56,48,191,1,124,183,62,249,53,127,63,0,0,0,63,0,0,17,191,37,217,124,191,118,106,145,190,189,62,62,63,94,131,108,63,58,94,86,61,41,250,96,191,189,27,79,191,243,155,58,62,234,70,119,63,58,66,38,63,201,63,208,190,139,233,127,191,113,113,232,190,202,215,27,63,226,103,122,63,77,12,111,62,10,243,70,191,212,15,103,191,243,4,53,63,21,239,195,62,243,4,53,191,94,131,108,191,202,201,83,165,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,88,215,30,38,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,222,94,13,166,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,130,33,119,167,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,217,213,140,37,94,131,108,191,243,4,53,191,21,239,195,62,0,0,128,63,21,239,195,62,243,4,53,191,94,131,108,191,250,9,150,167,94,131,108,63,243,4,53,63,21,239,195,190,0,0,128,191,21,239,195,190,243,4,53,63,94,131,108,63,243,4,53,63,188,232,170,62,10,243,70,191,160,70,90,191,205,230,84,62,85,207,125,63,113,113,232,62,1,56,48,191,29,222,105,191,42,175,160,61,234,70,119,63,0,0,17,63,24,121,22,191,54,117,117,191,58,94,86,189,94,131,108,63,37,76,43,63,39,78,244,190,37,217,124,191,243,155,58,190,215,179,93,63,247,169,66,63,1,124,183,190,139,233,127,191,122,55,158,190,52,25,75,63,29,179,86,63,77,12,111,190,253,152,126,191,243,107,220,190,243,4,53,63,212,15,103,63,5,19,214,189,60,237,120,191,119,109,11,191,202,215,27,63,113,120,115,63,10,113,214,60,32,255,110,191,58,66,38,191,0,0,0,63,152,182,123,63,91,48,32,62,41,250,96,191,189,62,62,191,21,239,195,62,47,166,127,63,118,106,145,62,189,27,79,191,239,249,82,191,238,131,132,62,249,53,127,63,201,63,208,62,35,178,57,191,1,25,100,191,168,168,5,62,226,103,122,63,119,194,5,63,36,27,33,191,244,80,113,191,243,4,53,63,118,106,145,62,29,179,86,191,247,169,66,191,201,63,208,62,85,207,125,63,91,48,32,62,212,15,103,191,37,76,43,191,119,194,5,63,234,70,119,63,10,113,214,60,113,120,115,191,0,0,17,191,36,27,33,63,94,131,108,63,5,19,214,189,152,182,123,191,113,113,232,190,35,178,57,63,215,179,93,63,77,12,111,190,47,166,127,191,188,232,170,190,189,27,79,63,52,25,75,63,1,124,183,190,249,53,127,191,205,230,84,190,41,250,96,63,243,4,53,63,39,78,244,190,226,103,122,191,42,175,160,189,32,255,110,63,202,215,27,63,24,121,22,191,244,80,113,191,58,94,86,61,60,237,120,63,0,0,0,63,1,56,48,191,1,25,100,191,243,155,58,62,253,152,126,63,21,239,195,62,10,243,70,191,239,249,82,191,122,55,158,62,139,233,127,63,238,131,132,62,160,70,90,191,189,62,62,191,243,107,220,62,37,217,124,63,168,168,5,62,29,222,105,191,58,66,38,191,119,109,11,63,54,117,117,63,243,4,53,63,77,12,111,62,1,25,100,191,58,66,38,191,24,121,22,63,94,131,108,63,91,48,32,190,249,53,127,191,122,55,158,190,160,70,90,63,243,4,53,63,119,194,5,191,113,120,115,191,42,175,160,61,37,217,124,63,21,239,195,62,189,27,79,191,247,169,66,191,113,113,232,62,60,237,120,63,119,247,83,166,60,237,120,191,113,113,232,190,247,169,66,63,189,27,79,63,21,239,195,190,37,217,124,191,42,175,160,189,113,120,115,63,119,194,5,63,243,4,53,191,160,70,90,191,122,55,158,62,249,53,127,63,91,48,32,62,94,131,108,191,24,121,22,191,58,66,38,63,1,25,100,63,77,12,111,190,0,0,128,191,77,12,111,190,1,25,100,63,58,66,38,63,24,121,22,191,94,131,108,191,91,48,32,62,249,53,127,63,122,55,158,62,160,70,90,191,243,4,53,191,119,194,5,63,113,120,115,63,42,175,160,189,37,217,124,191,21,239,195,190,189,27,79,63,247,169,66,63,113,113,232,190,60,237,120,191,243,4,53,63,243,155,58,62,32,255,110,191,119,194,5,191,189,62,62,63,52,25,75,63,113,113,232,190,54,117,117,191,5,19,214,61,249,53,127,63,238,131,132,62,212,15,103,191,24,121,22,191,1,56,48,63,29,179,86,63,21,239,195,190,226,103,122,191,10,113,214,60,37,217,124,63,188,232,170,62,215,179,93,191,58,66,38,191,36,27,33,63,41,250,96,63,122,55,158,190,85,207,125,191,58,94,86,189,60,237,120,63,201,63,208,62,239,249,82,191,243,4,53,191,0,0,17,63,29,222,105,63,77,12,111,190,47,166,127,191,168,168,5,190,113,120,115,63,39,78,244,62,10,243,70,191,247,169,66,191,0,0,0,63,244,80,113,63,91,48,32,190,139,233,127,191,205,230,84,190,94,131,108,63,119,109,11,63,35,178,57,191,189,27,79,191,243,107,220,62,234,70,119,63,42,175,160,189,253,152,126,191,118,106,145,190,1,25,100,63,202,215,27,63,37,76,43,191,160,70,90,191,1,124,183,62,152,182,123,63,243,4,53,63,168,168,5,62,234,70,119,191,21,239,195,190,215,179,93,63,202,215,27,63,243,4,53,191,52,25,75,191,0,0,0,63,94,131,108,63,238,131,132,190,85,207,125,191,233,136,48,167,85,207,125,63,238,131,132,62,94,131,108,191,0,0,0,191,52,25,75,63,243,4,53,63,202,215,27,191,215,179,93,191,21,239,195,62,234,70,119,63,168,168,5,190,0,0,128,191,168,168,5,190,234,70,119,63,21,239,195,62,215,179,93,191,202,215,27,191,243,4,53,63,52,25,75,63,0,0,0,191,94,131,108,191,238,131,132,62,85,207,125,63,175,102,4,40,85,207,125,191,238,131,132,190,94,131,108,63,0,0,0,63,52,25,75,191,243,4,53,191,202,215,27,63,215,179,93,63,21,239,195,190,234,70,119,191,168,168,5,62,0,0,128,63,168,168,5,62,234,70,119,191,21,239,195,190,215,179,93,63,202,215,27,63,243,4,53,191,52,25,75,191,0,0,0,63,94,131,108,63,238,131,132,190,85,207,125,191,243,4,53,63,42,175,160,61,37,217,124,191,77,12,111,190,113,120,115,63,21,239,195,62,1,25,100,191,119,194,5,191,189,27,79,63,58,66,38,63,243,4,53,191,247,169,66,191,24,121,22,63,160,70,90,63,113,113,232,190,94,131,108,191,122,55,158,62,60,237,120,63,91,48,32,190,249,53,127,191,53,213,83,167,249,53,127,63,91,48,32,62,60,237,120,191,122,55,158,190,94,131,108,63,113,113,232,62,160,70,90,191,24,121,22,191,247,169,66,63,243,4,53,63,58,66,38,191,189,27,79,191,119,194,5,63,1,25,100,63,21,239,195,190,113,120,115,191,77,12,111,62,37,217,124,63,42,175,160,189,0,0,128,191,42,175,160,189,37,217,124,63,77,12,111,62,113,120,115,191,21,239,195,190,1,25,100,63,119,194,5,63,189,27,79,191,58,66,38,191,243,4,53,63,247,169,66,63,24,121,22,191,160,70,90,191,113,113,232,62,94,131,108,63,122,55,158,190,60,237,120,191,91,48,32,62,249,53,127,63,243,4,53,63,10,113,214,60,47,166,127,191,42,175,160,189,253,152,126,63,168,168,5,62,37,217,124,191,243,155,58,190,226,103,122,63,77,12,111,62,234,70,119,191,118,106,145,190,113,120,115,63,188,232,170,62,32,255,110,191,21,239,195,190,29,222,105,63,243,107,220,62,1,25,100,191,39,78,244,190,215,179,93,63,119,194,5,63,29,179,86,191,0,0,17,191,189,27,79,63,202,215,27,63,10,243,70,191,58,66,38,191,189,62,62,63,1,56,48,63,243,4,53,191,35,178,57,191,37,76,43,63,247,169,66,63,36,27,33,191,52,25,75,191,24,121,22,63,239,249,82,63,119,109,11,191,160,70,90,191,0,0,0,63,41,250,96,63,113,113,232,190,212,15,103,191,201,63,208,62,94,131,108,63,1,124,183,190,244,80,113,191,122,55,158,62,54,117,117,63,238,131,132,190,60,237,120,191,205,230,84,62,152,182,123,63,91,48,32,190,85,207,125,191,5,19,214,61,249,53,127,63,58,94,86,189,139,233,127,191,243,4,53,63,10,113,214,188,47,166,127,191,42,175,160,61,253,152,126,63,168,168,5,190,37,217,124,191,243,155,58,62,226,103,122,63,77,12,111,190,234,70,119,191,118,106,145,62,113,120,115,63,188,232,170,190,32,255,110,191,21,239,195,62,29,222,105,63,243,107,220,190,1,25,100,191,39,78,244,62,215,179,93,63,119,194,5,191,29,179,86,191,0,0,17,63,189,27,79,63,202,215,27,191,10,243,70,191,58,66,38,63,189,62,62,63,1,56,48,191,243,4,53,191,35,178,57,63,37,76,43,63,247,169,66,191,36,27,33,191,52,25,75,63,24,121,22,63,239,249,82,191,119,109,11,191,160,70,90,63,0,0,0,63,41,250,96,191,113,113,232,190,212,15,103,63,201,63,208,62,94,131,108,191,1,124,183,190,244,80,113,63,122,55,158,62,54,117,117,191,238,131,132,190,60,237,120,63,205,230,84,62,152,182,123,191,91,48,32,190,85,207,125,63,5,19,214,61,249,53,127,191,58,94,86,189,139,233,127,63,243,4,53,63,42,175,160,189,37,217,124,191,77,12,111,62,113,120,115,63,21,239,195,190,1,25,100,191,119,194,5,63,189,27,79,63,58,66,38,191,243,4,53,191,247,169,66,63,24,121,22,63,160,70,90,191,113,113,232,190,94,131,108,63,122,55,158,62,60,237,120,191,91,48,32,190,249,53,127,63,222,94,13,166,249,53,127,191,91,48,32,62,60,237,120,63,122,55,158,190,94,131,108,191,113,113,232,62,160,70,90,63,24,121,22,191,247,169,66,191,243,4,53,63,58,66,38,63,189,27,79,191,119,194,5,191,1,25,100,63,21,239,195,62,113,120,115,191,77,12,111,190,37,217,124,63,42,175,160,61,0,0,128,191,42,175,160,61,37,217,124,63,77,12,111,190,113,120,115,191,21,239,195,62,1,25,100,63,119,194,5,191,189,27,79,191,58,66,38,63,243,4,53,63,247,169,66,191,24,121,22,191,160,70,90,63,113,113,232,62,94,131,108,191,122,55,158,190,60,237,120,63,91,48,32,62,249,53,127,191,243,4,53,63,168,168,5,190,234,70,119,191,21,239,195,62,215,179,93,63,202,215,27,191,243,4,53,191,52,25,75,63,0,0,0,63,94,131,108,191,238,131,132,190,85,207,125,63,252,91,57,39,85,207,125,191,238,131,132,62,94,131,108,63,0,0,0,191,52,25,75,191,243,4,53,63,202,215,27,63,215,179,93,191,21,239,195,190,234,70,119,63,168,168,5,62,0,0,128,191,168,168,5,62,234,70,119,63,21,239,195,190,215,179,93,191,202,215,27,63,243,4,53,63,52,25,75,191,0,0,0,191,94,131,108,63,238,131,132,62,85,207,125,191,253,4,75,168,85,207,125,63,238,131,132,190,94,131,108,191,0,0,0,63,52,25,75,63,243,4,53,191,202,215,27,191,215,179,93,63,21,239,195,62,234,70,119,191,168,168,5,190,0,0,128,63,168,168,5,190,234,70,119,191,21,239,195,62,215,179,93,63,202,215,27,191,243,4,53,191,52,25,75,63,0,0,0,63,94,131,108,191,238,131,132,190,85,207,125,63,243,4,53,63,243,155,58,190,32,255,110,191,119,194,5,63,189,62,62,63,52,25,75,191,113,113,232,190,54,117,117,63,5,19,214,61,249,53,127,191,238,131,132,62,212,15,103,63,24,121,22,191,1,56,48,191,29,179,86,63,21,239,195,62,226,103,122,191,10,113,214,188,37,217,124,63,188,232,170,190,215,179,93,191,58,66,38,63,36,27,33,63,41,250,96,191,122,55,158,190,85,207,125,63,58,94,86,189,60,237,120,191,201,63,208,62,239,249,82,63,243,4,53,191,0,0,17,191,29,222,105,63,77,12,111,62,47,166,127,191,168,168,5,62,113,120,115,63,39,78,244,190,10,243,70,191,247,169,66,63,0,0,0,63,244,80,113,191,91,48,32,190,139,233,127,63,205,230,84,190,94,131,108,191,119,109,11,63,35,178,57,63,189,27,79,191,243,107,220,190,234,70,119,63,42,175,160,61,253,152,126,191,118,106,145,62,1,25,100,63,202,215,27,191,37,76,43,191,160,70,90,63,1,124,183,62,152,182,123,191,243,4,53,63,77,12,111,190,1,25,100,191,58,66,38,63,24,121,22,63,94,131,108,191,91,48,32,190,249,53,127,63,122,55,158,190,160,70,90,191,243,4,53,63,119,194,5,63,113,120,115,191,42,175,160,189,37,217,124,63,21,239,195,190,189,27,79,191,247,169,66,63,113,113,232,62,60,237,120,191,92,123,101,167,60,237,120,63,113,113,232,190,247,169,66,191,189,27,79,63,21,239,195,62,37,217,124,191,42,175,160,61,113,120,115,63,119,194,5,191,243,4,53,191,160,70,90,63,122,55,158,62,249,53,127,191,91,48,32,62,94,131,108,63,24,121,22,191,58,66,38,191,1,25,100,63,77,12,111,62,0,0,128,191,77,12,111,62,1,25,100,63,58,66,38,191,24,121,22,191,94,131,108,63,91,48,32,62,249,53,127,191,122,55,158,62,160,70,90,63,243,4,53,191,119,194,5,191,113,120,115,63,42,175,160,61,37,217,124,191,21,239,195,62,189,27,79,63,247,169,66,191,113,113,232,190,60,237,120,63,243,4,53,63,118,106,145,190,29,179,86,191,247,169,66,63,201,63,208,62,85,207,125,191,91,48,32,62,212,15,103,63,37,76,43,191,119,194,5,191,234,70,119,63,10,113,214,188,113,120,115,191,0,0,17,63,36,27,33,63,94,131,108,191,5,19,214,189,152,182,123,63,113,113,232,190,35,178,57,191,215,179,93,63,77,12,111,62,47,166,127,191,188,232,170,62,189,27,79,63,52,25,75,191,1,124,183,190,249,53,127,63,205,230,84,190,41,250,96,191,243,4,53,63,39,78,244,62,226,103,122,191,42,175,160,61,32,255,110,63,202,215,27,191,24,121,22,191,244,80,113,63,58,94,86,61,60,237,120,191,0,0,0,63,1,56,48,63,1,25,100,191,243,155,58,190,253,152,126,63,21,239,195,190,10,243,70,191,239,249,82,63,122,55,158,62,139,233,127,191,238,131,132,62,160,70,90,63,189,62,62,191,243,107,220,190,37,217,124,63,168,168,5,190,29,222,105,191,58,66,38,63,119,109,11,63,54,117,117,191,243,4,53,63,188,232,170,190,10,243,70,191,160,70,90,63,205,230,84,62,85,207,125,191,113,113,232,62,1,56,48,63,29,222,105,191,42,175,160,189,234,70,119,63,0,0,17,191,24,121,22,191,54,117,117,63,58,94,86,189,94,131,108,191,37,76,43,63,39,78,244,62,37,217,124,191,243,155,58,62,215,179,93,63,247,169,66,191,1,124,183,190,139,233,127,63,122,55,158,190,52,25,75,191,29,179,86,63,77,12,111,62,253,152,126,191,243,107,220,62,243,4,53,63,212,15,103,191,5,19,214,189,60,237,120,63,119,109,11,191,202,215,27,191,113,120,115,63,10,113,214,188,32,255,110,191,58,66,38,63,0,0,0,63,152,182,123,191,91,48,32,62,41,250,96,63,189,62,62,191,21,239,195,190,47,166,127,63,118,106,145,190,189,27,79,191,239,249,82,63,238,131,132,62,249,53,127,191,201,63,208,62,35,178,57,63,1,25,100,191,168,168,5,190,226,103,122,63,119,194,5,191,36,27,33,191,244,80,113,63,243,4,53,63,21,239,195,190,243,4,53,191,94,131,108,63,126,125,176,37,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,15,47,66,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,138,140,141,165,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,231,54,141,167,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,91,26,141,38,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,115,83,13,39,94,131,108,63,243,4,53,191,21,239,195,190,0,0,128,63,21,239,195,190,243,4,53,191,94,131,108,63,251,178,39,40,94,131,108,191,243,4,53,63,21,239,195,62,0,0,128,191,21,239,195,62,243,4,53,63,94,131,108,191,243,4,53,63,243,107,220,190,36,27,33,191,60,237,120,63,205,230,84,190,52,25,75,191,1,25,100,63,10,113,214,60,29,222,105,191,247,169,66,63,238,131,132,62,152,182,123,191,24,121,22,63,39,78,244,62,47,166,127,191,21,239,195,62,37,76,43,63,54,117,117,191,91,48,32,62,239,249,82,63,215,179,93,191,42,175,160,189,32,255,110,63,35,178,57,191,122,55,158,190,85,207,125,63,119,109,11,191,119,194,5,191,253,152,126,63,188,232,170,190,243,4,53,191,244,80,113,63,5,19,214,189,160,70,90,191,29,179,86,63,168,168,5,62,113,120,115,191,1,56,48,63,1,124,183,62,249,53,127,191,0,0,0,63,0,0,17,63,37,217,124,191,118,106,145,62,189,62,62,63,94,131,108,191,58,94,86,61,41,250,96,63,189,27,79,191,243,155,58,190,234,70,119,63,58,66,38,191,201,63,208,190,139,233,127,63,113,113,232,190,202,215,27,191,226,103,122,63,77,12,111,190,10,243,70,191,212,15,103,63,243,4,53,63,39,78,244,190,119,109,11,191,249,53,127,63,201,63,208,190,202,215,27,191,37,217,124,63,188,232,170,190,37,76,43,191,60,237,120,63,238,131,132,190,35,178,57,191,113,120,115,63,243,155,58,190,10,243,70,191,94,131,108,63,5,19,214,189,239,249,82,191,1,25,100,63,10,113,214,188,215,179,93,191,160,70,90,63,58,94,86,61,212,15,103,191,189,27,79,63,168,168,5,62,32,255,110,191,247,169,66,63,205,230,84,62,54,117,117,191,243,4,53,63,118,106,145,62,226,103,122,191,58,66,38,63,1,124,183,62,85,207,125,191,24,121,22,63,243,107,220,62,47,166,127,191,119,194,5,63,0,0,0,63,139,233,127,191,113,113,232,62,0,0,17,63,253,152,126,191,21,239,195,62,36,27,33,63,152,182,123,191,122,55,158,62,1,56,48,63,234,70,119,191,77,12,111,62,189,62,62,63,244,80,113,191,91,48,32,62,52,25,75,63,29,222,105,191,42,175,160,61,29,179,86,63,41,250,96,191,243,4,53,63,119,194,5,191,113,113,232,190,249,53,127,63,24,121,22,191,21,239,195,190,37,217,124,63,58,66,38,191,122,55,158,190,60,237,120,63,243,4,53,191,77,12,111,190,113,120,115,63,247,169,66,191,91,48,32,190,94,131,108,63,189,27,79,191,42,175,160,189,1,25,100,63,160,70,90,191,130,33,119,167,160,70,90,63,1,25,100,191,42,175,160,61,189,27,79,63,94,131,108,191,91,48,32,62,247,169,66,63,113,120,115,191,77,12,111,62,243,4,53,63,60,237,120,191,122,55,158,62,58,66,38,63,37,217,124,191,21,239,195,62,24,121,22,63,249,53,127,191,113,113,232,62,119,194,5,63,0,0,128,191,119,194,5,63,113,113,232,62,249,53,127,191,24,121,22,63,21,239,195,62,37,217,124,191,58,66,38,63,122,55,158,62,60,237,120,191,243,4,53,63,77,12,111,62,113,120,115,191,247,169,66,63,91,48,32,62,94,131,108,191,189,27,79,63,42,175,160,61,1,25,100,191,160,70,90,63,243,4,53,63,0,0,17,191,1,124,183,190,60,237,120,63,189,62,62,191,168,168,5,190,1,25,100,63,41,250,96,191,5,19,214,61,247,169,66,63,234,70,119,191,188,232,170,62,24,121,22,63,139,233,127,191,119,109,11,63,21,239,195,62,226,103,122,191,35,178,57,63,91,48,32,62,212,15,103,191,215,179,93,63,42,175,160,189,10,243,70,191,54,117,117,63,122,55,158,190,202,215,27,191,47,166,127,63,119,194,5,191,201,63,208,190,152,182,123,63,243,4,53,191,243,155,58,190,29,222,105,63,160,70,90,191,58,94,86,61,52,25,75,63,113,120,115,191,118,106,145,62,36,27,33,63,249,53,127,191,0,0,0,63,243,107,220,62,37,217,124,191,1,56,48,63,205,230,84,62,94,131,108,191,29,179,86,63,10,113,214,188,189,27,79,191,244,80,113,63,238,131,132,190,58,66,38,191,253,152,126,63,39,78,244,190,113,113,232,190,85,207,125,63,37,76,43,191,77,12,111,190,32,255,110,63,239,249,82,191,243,4,53,63,202,215,27,191,238,131,132,190,94,131,108,63,215,179,93,191,168,168,5,62,243,4,53,63,85,207,125,191,0,0,0,63,21,239,195,62,234,70,119,191,52,25,75,63,119,247,83,166,52,25,75,191,234,70,119,63,21,239,195,190,0,0,0,191,85,207,125,63,243,4,53,191,168,168,5,190,215,179,93,63,94,131,108,191,238,131,132,62,202,215,27,63,0,0,128,191,202,215,27,63,238,131,132,62,94,131,108,191,215,179,93,63,168,168,5,190,243,4,53,191,85,207,125,63,0,0,0,191,21,239,195,190,234,70,119,63,52,25,75,191,102,190,39,40,52,25,75,63,234,70,119,191,21,239,195,62,0,0,0,63,85,207,125,191,243,4,53,63,168,168,5,62,215,179,93,191,94,131,108,63,238,131,132,190,202,215,27,191,0,0,128,63,202,215,27,191,238,131,132,190,94,131,108,63,215,179,93,191,168,168,5,62,243,4,53,63,85,207,125,191,0,0,0,63,21,239,195,62,234,70,119,191,52,25,75,63,243,4,53,63,58,66,38,191,91,48,32,190,160,70,90,63,113,120,115,191,21,239,195,62,113,113,232,62,60,237,120,191,189,27,79,63,42,175,160,189,243,4,53,191,249,53,127,63,24,121,22,191,77,12,111,190,1,25,100,63,94,131,108,191,122,55,158,62,119,194,5,63,37,217,124,191,247,169,66,63,219,176,54,161,247,169,66,191,37,217,124,63,119,194,5,191,122,55,158,190,94,131,108,63,1,25,100,191,77,12,111,62,24,121,22,63,249,53,127,191,243,4,53,63,42,175,160,61,189,27,79,191,60,237,120,63,113,113,232,190,21,239,195,190,113,120,115,63,160,70,90,191,91,48,32,62,58,66,38,63,0,0,128,191,58,66,38,63,91,48,32,62,160,70,90,191,113,120,115,63,21,239,195,190,113,113,232,190,60,237,120,63,189,27,79,191,42,175,160,61,243,4,53,63,249,53,127,191,24,121,22,63,77,12,111,62,1,25,100,191,94,131,108,63,122,55,158,190,119,194,5,191,37,217,124,63,247,169,66,191,243,4,53,63,1,56,48,191,58,94,86,189,247,169,66,63,253,152,126,191,202,215,27,63,91,48,32,62,239,249,82,191,226,103,122,63,119,194,5,191,238,131,132,190,41,250,96,63,113,120,115,191,243,107,220,62,1,124,183,62,94,131,108,191,29,222,105,63,188,232,170,190,113,113,232,190,54,117,117,63,215,179,93,191,77,12,111,62,119,109,11,63,152,182,123,191,189,27,79,63,168,168,5,190,36,27,33,191,249,53,127,63,189,62,62,191,10,113,214,60,243,4,53,63,139,233,127,191,37,76,43,63,42,175,160,61,10,243,70,191,85,207,125,63,24,121,22,191,243,155,58,190,29,179,86,63,60,237,120,191,0,0,0,63,118,106,145,62,1,25,100,191,244,80,113,63,201,63,208,190,21,239,195,190,32,255,110,63,212,15,103,191,122,55,158,62,39,78,244,62,234,70,119,191,160,70,90,63,205,230,84,190,0,0,17,191,37,217,124,63,52,25,75,191,5,19,214,61,58,66,38,63,47,166,127,191,35,178,57,63,243,4,53,63,35,178,57,191,58,94,86,61,58,66,38,63,253,152,126,191,52,25,75,63,91,48,32,190,0,0,17,191,226,103,122,63,160,70,90,191,238,131,132,62,39,78,244,62,113,120,115,191,212,15,103,63,1,124,183,190,21,239,195,190,29,222,105,63,244,80,113,191,113,113,232,62,118,106,145,62,215,179,93,191,60,237,120,63,119,109,11,191,243,155,58,190,189,27,79,63,85,207,125,191,36,27,33,63,42,175,160,61,189,62,62,191,139,233,127,63,243,4,53,191,10,113,214,60,37,76,43,63,249,53,127,191,10,243,70,63,168,168,5,190,24,121,22,191,152,182,123,63,29,179,86,191,77,12,111,62,0,0,0,63,54,117,117,191,1,25,100,63,188,232,170,190,201,63,208,190,94,131,108,63,32,255,110,191,243,107,220,62,122,55,158,62,41,250,96,191,234,70,119,63,119,194,5,191,205,230,84,190,239,249,82,63,37,217,124,191,202,215,27,63,5,19,214,61,247,169,66,191,47,166,127,63,1,56,48,191,243,4,53,63,247,169,66,191,91,48,32,62,119,194,5,63,113,120,115,191,94,131,108,63,113,113,232,190,77,12,111,190,189,27,79,63,249,53,127,191,243,4,53,63,42,175,160,189,24,121,22,191,60,237,120,63,1,25,100,191,21,239,195,62,122,55,158,62,160,70,90,191,37,217,124,63,58,66,38,191,212,99,132,167,58,66,38,63,37,217,124,191,160,70,90,63,122,55,158,190,21,239,195,190,1,25,100,63,60,237,120,191,24,121,22,63,42,175,160,61,243,4,53,191,249,53,127,63,189,27,79,191,77,12,111,62,113,113,232,62,94,131,108,191,113,120,115,63,119,194,5,191,91,48,32,190,247,169,66,63,0,0,128,191,247,169,66,63,91,48,32,190,119,194,5,191,113,120,115,63,94,131,108,191,113,113,232,62,77,12,111,62,189,27,79,191,249,53,127,63,243,4,53,191,42,175,160,61,24,121,22,63,60,237,120,191,1,25,100,63,21,239,195,190,122,55,158,190,160,70,90,63,37,217,124,191,58,66,38,63,243,4,53,63,52,25,75,191,238,131,132,62,21,239,195,62,215,179,93,191,85,207,125,63,243,4,53,191,168,168,5,62,0,0,0,63,94,131,108,191,234,70,119,63,202,215,27,191,53,213,83,167,202,215,27,63,234,70,119,191,94,131,108,63,0,0,0,191,168,168,5,190,243,4,53,63,85,207,125,191,215,179,93,63,21,239,195,190,238,131,132,190,52,25,75,63,0,0,128,191,52,25,75,63,238,131,132,190,21,239,195,190,215,179,93,63,85,207,125,191,243,4,53,63,168,168,5,190,0,0,0,191,94,131,108,63,234,70,119,191,202,215,27,63,232,223,30,40,202,215,27,191,234,70,119,63,94,131,108,191,0,0,0,63,168,168,5,62,243,4,53,191,85,207,125,63,215,179,93,191,21,239,195,62,238,131,132,62,52,25,75,191,0,0,128,63,52,25,75,191,238,131,132,62,21,239,195,62,215,179,93,191,85,207,125,63,243,4,53,191,168,168,5,62,0,0,0,63,94,131,108,191,234,70,119,63,202,215,27,191,243,4,53,63,239,249,82,191,1,124,183,62,77,12,111,62,189,62,62,191,85,207,125,63,1,25,100,191,39,78,244,62,5,19,214,61,58,66,38,191,234,70,119,63,244,80,113,191,24,121,22,63,10,113,214,188,119,109,11,191,94,131,108,63,226,103,122,191,1,56,48,63,91,48,32,190,243,107,220,190,215,179,93,63,249,53,127,191,10,243,70,63,118,106,145,190,122,55,158,190,52,25,75,63,47,166,127,191,160,70,90,63,201,63,208,190,243,155,58,190,243,4,53,63,152,182,123,191,29,222,105,63,119,194,5,191,58,94,86,189,202,215,27,63,113,120,115,191,54,117,117,63,36,27,33,191,42,175,160,61,0,0,0,63,212,15,103,191,37,217,124,63,35,178,57,191,205,230,84,62,21,239,195,62,29,179,86,191,139,233,127,63,189,27,79,191,188,232,170,62,238,131,132,62,247,169,66,191,253,152,126,63,41,250,96,191,113,113,232,62,168,168,5,62,37,76,43,191,60,237,120,63,32,255,110,191,0,0,17,63,243,4,53,63,160,70,90,191,113,113,232,62,42,175,160,61,24,121,22,191,94,131,108,63,37,217,124,191,247,169,66,63,122,55,158,190,77,12,111,190,243,4,53,63,60,237,120,191,113,120,115,63,58,66,38,191,91,48,32,62,21,239,195,62,189,27,79,191,249,53,127,63,1,25,100,191,119,194,5,63,217,213,140,37,119,194,5,191,1,25,100,63,249,53,127,191,189,27,79,63,21,239,195,190,91,48,32,190,58,66,38,63,113,120,115,191,60,237,120,63,243,4,53,191,77,12,111,62,122,55,158,62,247,169,66,191,37,217,124,63,94,131,108,191,24,121,22,63,42,175,160,189,113,113,232,190,160,70,90,63,0,0,128,191,160,70,90,63,113,113,232,190,42,175,160,189,24,121,22,63,94,131,108,191,37,217,124,63,247,169,66,191,122,55,158,62,77,12,111,62,243,4,53,191,60,237,120,63,113,120,115,191,58,66,38,63,91,48,32,190,21,239,195,190,189,27,79,63,249,53,127,191,1,25,100,63,119,194,5,191,243,4,53,63,41,250,96,191,119,109,11,63,42,175,160,189,201,63,208,190,52,25,75,63,37,217,124,191,244,80,113,63,37,76,43,191,77,12,111,62,238,131,132,62,1,56,48,191,113,120,115,63,152,182,123,191,10,243,70,63,21,239,195,190,5,19,214,189,0,0,17,63,1,25,100,191,139,233,127,63,215,179,93,191,119,194,5,63,58,94,86,189,243,107,220,190,189,27,79,63,85,207,125,191,32,255,110,63,58,66,38,191,205,230,84,62,118,106,145,62,243,4,53,191,54,117,117,63,226,103,122,191,247,169,66,63,1,124,183,190,168,168,5,190,24,121,22,63,212,15,103,191,47,166,127,63,160,70,90,191,0,0,0,63,10,113,214,188,113,113,232,190,239,249,82,63,253,152,126,191,94,131,108,63,36,27,33,191,243,155,58,62,122,55,158,62,35,178,57,191,234,70,119,63,60,237,120,191,189,62,62,63,188,232,170,190,91,48,32,190,202,215,27,63,29,222,105,191,249,53,127,63,29,179,86,191,39,78,244,62,243,4,53,63,212,15,103,191,36,27,33,63,77,12,111,190,205,230,84,190,202,215,27,63,1,25,100,191,139,233,127,63,29,222,105,191,58,66,38,63,238,131,132,190,243,155,58,190,24,121,22,63,41,250,96,191,47,166,127,63,94,131,108,191,37,76,43,63,118,106,145,190,91,48,32,190,0,0,17,63,215,179,93,191,249,53,127,63,32,255,110,191,1,56,48,63,122,55,158,190,168,168,5,190,119,109,11,63,160,70,90,191,253,152,126,63,244,80,113,191,243,4,53,63,188,232,170,190,5,19,214,189,119,194,5,63,29,179,86,191,85,207,125,63,113,120,115,191,35,178,57,63,1,124,183,190,42,175,160,189,0,0,0,63,239,249,82,191,37,217,124,63,54,117,117,191,189,62,62,63,21,239,195,190,58,94,86,189,39,78,244,62,189,27,79,191,152,182,123,63,234,70,119,191,247,169,66,63,201,63,208,190,10,113,214,188,113,113,232,62,52,25,75,191,226,103,122,63,60,237,120,191,10,243,70,63,243,107,220,190,243,4,53,63,94,131,108,191,243,4,53,63,21,239,195,190,23,22,247,165,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,222,94,13,166,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,231,54,141,167,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,213,12,22,40,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,77,14,212,38,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,95,190,83,39,21,239,195,190,243,4,53,63,94,131,108,191,0,0,128,63,94,131,108,191,243,4,53,63,21,239,195,190,249,96,4,168,21,239,195,62,243,4,53,191,94,131,108,63,0,0,128,191,94,131,108,63,243,4,53,191,21,239,195,62,243,4,53,63,244,80,113,191,10,243,70,63,119,194,5,191,205,230,84,62,168,168,5,62,113,113,232,190,35,178,57,63,29,222,105,191,249,53,127,63,234,70,119,191,239,249,82,63,24,121,22,191,118,106,145,62,58,94,86,61,21,239,195,190,37,76,43,63,41,250,96,191,37,217,124,63,152,182,123,191,215,179,93,63,58,66,38,191,1,124,183,62,10,113,214,188,122,55,158,190,202,215,27,63,29,179,86,191,60,237,120,63,253,152,126,191,212,15,103,63,243,4,53,191,243,107,220,62,5,19,214,189,77,12,111,190,119,109,11,63,52,25,75,191,113,120,115,63,139,233,127,191,32,255,110,63,247,169,66,191,0,0,0,63,243,155,58,190,91,48,32,190,39,78,244,62,189,62,62,191,94,131,108,63,47,166,127,191,54,117,117,63,189,27,79,191,0,0,17,63,238,131,132,190,42,175,160,189,201,63,208,62,1,56,48,191,1,25,100,63,85,207,125,191,226,103,122,63,160,70,90,191,36,27,33,63,188,232,170,190,243,4,53,63,54,117,117,191,29,179,86,63,58,66,38,191,201,63,208,62,168,168,5,190,91,48,32,190,243,107,220,62,37,76,43,191,160,70,90,63,234,70,119,191,139,233,127,63,113,120,115,191,239,249,82,63,36,27,33,191,21,239,195,62,5,19,214,189,243,155,58,190,113,113,232,62,1,56,48,191,215,179,93,63,60,237,120,191,47,166,127,63,244,80,113,191,189,27,79,63,202,215,27,191,1,124,183,62,42,175,160,189,205,230,84,190,39,78,244,62,243,4,53,191,41,250,96,63,226,103,122,191,249,53,127,63,32,255,110,191,52,25,75,63,24,121,22,191,188,232,170,62,58,94,86,189,77,12,111,190,0,0,0,63,35,178,57,191,1,25,100,63,152,182,123,191,253,152,126,63,94,131,108,191,10,243,70,63,0,0,17,191,122,55,158,62,10,113,214,188,238,131,132,190,119,194,5,63,189,62,62,191,212,15,103,63,37,217,124,191,85,207,125,63,29,222,105,191,247,169,66,63,119,109,11,191,118,106,145,62,243,4,53,63,60,237,120,191,1,25,100,63,247,169,66,191,24,121,22,63,21,239,195,190,91,48,32,62,42,175,160,61,122,55,158,190,119,194,5,63,243,4,53,191,160,70,90,63,113,120,115,191,249,53,127,63,37,217,124,191,94,131,108,63,189,27,79,191,58,66,38,63,113,113,232,190,77,12,111,62,133,3,13,38,77,12,111,190,113,113,232,62,58,66,38,191,189,27,79,63,94,131,108,191,37,217,124,63,249,53,127,191,113,120,115,63,160,70,90,191,243,4,53,63,119,194,5,191,122,55,158,62,42,175,160,189,91,48,32,190,21,239,195,62,24,121,22,191,247,169,66,63,1,25,100,191,60,237,120,63,0,0,128,191,60,237,120,63,1,25,100,191,247,169,66,63,24,121,22,191,21,239,195,62,91,48,32,190,42,175,160,189,122,55,158,62,119,194,5,191,243,4,53,63,160,70,90,191,113,120,115,63,249,53,127,191,37,217,124,63,94,131,108,191,189,27,79,63,58,66,38,191,113,113,232,62,77,12,111,190,243,4,53,63,152,182,123,191,32,255,110,63,160,70,90,191,189,62,62,63,202,215,27,191,113,113,232,62,118,106,145,190,5,19,214,61,42,175,160,61,238,131,132,190,243,107,220,62,24,121,22,191,35,178,57,63,29,179,86,191,94,131,108,63,226,103,122,191,139,233,127,63,37,217,124,191,244,80,113,63,215,179,93,191,247,169,66,63,36,27,33,191,39,78,244,62,122,55,158,190,168,168,5,62,58,94,86,61,77,12,111,190,201,63,208,62,0,0,17,191,243,4,53,63,239,249,82,191,29,222,105,63,60,237,120,191,47,166,127,63,85,207,125,191,113,120,115,63,41,250,96,191,10,243,70,63,58,66,38,191,0,0,0,63,188,232,170,190,91,48,32,62,10,113,214,60,205,230,84,190,21,239,195,62,119,109,11,191,1,56,48,63,189,27,79,191,212,15,103,63,234,70,119,191,249,53,127,63,253,152,126,191,54,117,117,63,1,25,100,191,52,25,75,63,37,76,43,191,119,194,5,63,1,124,183,190,243,155,58,62,243,4,53,63,85,207,125,191,234,70,119,63,94,131,108,191,215,179,93,63,52,25,75,191,243,4,53,63,202,215,27,191,0,0,0,63,21,239,195,190,238,131,132,62,168,168,5,190,82,66,141,39,168,168,5,62,238,131,132,190,21,239,195,62,0,0,0,191,202,215,27,63,243,4,53,191,52,25,75,63,215,179,93,191,94,131,108,63,234,70,119,191,85,207,125,63,0,0,128,191,85,207,125,63,234,70,119,191,94,131,108,63,215,179,93,191,52,25,75,63,243,4,53,191,202,215,27,63,0,0,0,191,21,239,195,62,238,131,132,190,168,168,5,62,19,114,48,39,168,168,5,190,238,131,132,62,21,239,195,190,0,0,0,63,202,215,27,191,243,4,53,63,52,25,75,191,215,179,93,63,94,131,108,191,234,70,119,63,85,207,125,191,0,0,128,63,85,207,125,191,234,70,119,63,94,131,108,191,215,179,93,63,52,25,75,191,243,4,53,63,202,215,27,191,0,0,0,63,21,239,195,190,238,131,132,62,168,168,5,190,243,4,53,63,249,53,127,191,37,217,124,63,60,237,120,191,113,120,115,63,94,131,108,191,1,25,100,63,160,70,90,191,189,27,79,63,247,169,66,191,243,4,53,63,58,66,38,191,24,121,22,63,119,194,5,191,113,113,232,62,21,239,195,190,122,55,158,62,77,12,111,190,91,48,32,62,42,175,160,189,250,9,150,167,42,175,160,61,91,48,32,190,77,12,111,62,122,55,158,190,21,239,195,62,113,113,232,190,119,194,5,63,24,121,22,191,58,66,38,63,243,4,53,191,247,169,66,63,189,27,79,191,160,70,90,63,1,25,100,191,94,131,108,63,113,120,115,191,60,237,120,63,37,217,124,191,249,53,127,63,0,0,128,191,249,53,127,63,37,217,124,191,60,237,120,63,113,120,115,191,94,131,108,63,1,25,100,191,160,70,90,63,189,27,79,191,247,169,66,63,243,4,53,191,58,66,38,63,24,121,22,191,119,194,5,63,113,113,232,190,21,239,195,62,122,55,158,190,77,12,111,62,91,48,32,190,42,175,160,61,243,4,53,63,139,233,127,191,47,166,127,63,249,53,127,191,253,152,126,63,85,207,125,191,37,217,124,63,152,182,123,191,226,103,122,63,60,237,120,191,234,70,119,63,54,117,117,191,113,120,115,63,244,80,113,191,32,255,110,63,94,131,108,191,29,222,105,63,212,15,103,191,1,25,100,63,41,250,96,191,215,179,93,63,160,70,90,191,29,179,86,63,239,249,82,191,189,27,79,63,52,25,75,191,10,243,70,63,247,169,66,191,189,62,62,63,35,178,57,191,243,4,53,63,1,56,48,191,37,76,43,63,58,66,38,191,36,27,33,63,202,215,27,191,24,121,22,63,0,0,17,191,119,109,11,63,119,194,5,191,0,0,0,63,39,78,244,190,113,113,232,62,243,107,220,190,201,63,208,62,21,239,195,190,1,124,183,62,188,232,170,190,122,55,158,62,118,106,145,190,238,131,132,62,77,12,111,190,205,230,84,62,243,155,58,190,91,48,32,62,168,168,5,190,5,19,214,61,42,175,160,189,58,94,86,61,10,113,214,188,243,4,53,63,70,234,127,63,27,169,127,63,138,60,127,63,167,164,126,63,138,225,125,63,84,243,124,63,47,218,123,63,73,150,122,63,219,39,121,63,33,143,119,63,98,204,117,63,234,223,115,63,12,202,113,63,35,139,111,63,145,35,109,63,191,147,106,63,26,220,103,63,27,253,100,63,61,247,97,63,3,203,94,63,249,120,91,63,173,1,88,63,182,101,84,63,178,165,80,63,68,194,76,63,19,188,72,63,208,147,68,63,47,74,64,63,233,223,59,63,192,85,55,63,120,172,50,63,220,228,45,63,187,255,40,63,234,253,35,63,67,224,30,63,165,167,25,63,241,84,20,63,16,233,14,63,236,100,9,63,118,201,3,63,67,47,252,62,203,160,240,62,122,233,228,62,79,11,217,62,75,8,205,62,122,226,192,62,236,155,180,62,181,54,168,62,240,180,155,62,190,24,143,62,65,100,130,62,67,51,107,62,25,118,81,62,96,149,55,62,126,149,29,62,220,122,3,62,209,147,210,61,43,14,158,61,99,219,82,61,74,237,210,60,243,4,53,63,138,60,127,63,84,243,124,63,219,39,121,63,234,223,115,63,145,35,109,63,27,253,100,63,249,120,91,63,178,165,80,63,208,147,68,63,192,85,55,63,187,255,40,63,165,167,25,63,236,100,9,63,203,160,240,62,75,8,205,62,181,54,168,62,65,100,130,62,96,149,55,62,209,147,210,61,74,237,210,60,99,219,82,189,220,122,3,190,25,118,81,190,190,24,143,190,236,155,180,190,79,11,217,190,67,47,252,190,16,233,14,191,67,224,30,191,220,228,45,191,233,223,59,191,19,188,72,191,182,101,84,191,3,203,94,191,26,220,103,191,35,139,111,191,98,204,117,191,73,150,122,191,138,225,125,191,27,169,127,191,70,234,127,191,167,164,126,191,47,218,123,191,33,143,119,191,12,202,113,191,191,147,106,191,61,247,97,191,173,1,88,191,68,194,76,191,47,74,64,191,120,172,50,191,234,253,35,191,241,84,20,191,118,201,3,191,122,233,228,190,122,226,192,190,240,180,155,190,67,51,107,190,126,149,29,190,43,14,158,189,243,4,53,63,138,225,125,63,33,143,119,63,145,35,109,63,3,203,94,63,68,194,76,63,192,85,55,63,67,224,30,63,118,201,3,63,75,8,205,62,190,24,143,62,126,149,29,62,74,237,210,60,209,147,210,189,67,51,107,190,236,155,180,190,203,160,240,190,241,84,20,191,220,228,45,191,208,147,68,191,173,1,88,191,26,220,103,191,234,223,115,191,47,218,123,191,27,169,127,191,138,60,127,191,73,150,122,191,12,202,113,191,27,253,100,191,182,101,84,191,47,74,64,191,187,255,40,191,16,233,14,191,122,233,228,190,181,54,168,190,25,118,81,190,43,14,158,189,99,219,82,61,96,149,55,62,240,180,155,62,79,11,217,62,236,100,9,63,234,253,35,63,233,223,59,63,178,165,80,63,61,247,97,63,35,139,111,63,219,39,121,63,167,164,126,63,70,234,127,63,84,243,124,63,98,204,117,63,191,147,106,63,249,120,91,63,19,188,72,63,120,172,50,63,165,167,25,63,67,47,252,62,122,226,192,62,65,100,130,62,220,122,3,62,243,4,53,63,47,218,123,63,35,139,111,63,249,120,91,63,47,74,64,63,67,224,30,63,203,160,240,62,240,180,155,62,220,122,3,62,99,219,82,189,67,51,107,190,75,8,205,190,16,233,14,191,120,172,50,191,178,165,80,191,26,220,103,191,33,143,119,191,138,60,127,191,167,164,126,191,98,204,117,191,27,253,100,191,68,194,76,191,220,228,45,191,236,100,9,191,122,226,192,190,25,118,81,190,74,237,210,188,126,149,29,62,181,54,168,62,67,47,252,62,234,253,35,63,208,147,68,63,3,203,94,63,12,202,113,63,84,243,124,63,70,234,127,63,73,150,122,63,145,35,109,63,173,1,88,63,233,223,59,63,165,167,25,63,122,233,228,62,190,24,143,62,209,147,210,61,43,14,158,189,65,100,130,190,79,11,217,190,241,84,20,191,192,85,55,191,182,101,84,191,191,147,106,191,219,39,121,191,27,169,127,191,138,225,125,191,234,223,115,191,61,247,97,191,19,188,72,191,187,255,40,191,118,201,3,191,236,155,180,190,96,149,55,190,243,4,53,63,219,39,121,63,27,253,100,63,208,147,68,63,165,167,25,63,75,8,205,62,96,149,55,62,99,219,82,189,190,24,143,190,67,47,252,190,220,228,45,191,182,101,84,191,35,139,111,191,138,225,125,191,167,164,126,191,12,202,113,191,173,1,88,191,120,172,50,191,118,201,3,191,240,180,155,190,43,14,158,189,126,149,29,62,122,226,192,62,241,84,20,63,47,74,64,63,61,247,97,63,33,143,119,63,70,234,127,63,73,150,122,63,26,220,103,63,19,188,72,63,67,224,30,63,79,11,217,62,25,118,81,62,74,237,210,188,65,100,130,190,203,160,240,190,187,255,40,191,178,165,80,191,145,35,109,191,84,243,124,191,138,60,127,191,234,223,115,191,249,120,91,191,192,85,55,191,236,100,9,191,181,54,168,190,209,147,210,189,220,122,3,62,236,155,180,62,16,233,14,63,233,223,59,63,3,203,94,63,98,204,117,63,27,169,127,63,47,218,123,63,191,147,106,63,68,194,76,63,234,253,35,63,122,233,228,62,67,51,107,62,243,4,53,63,98,204,117,63,173,1,88,63,187,255,40,63,79,11,217,62,126,149,29,62,220,122,3,190,75,8,205,190,234,253,35,191,182,101,84,191,234,223,115,191,70,234,127,191,33,143,119,191,249,120,91,191,220,228,45,191,122,233,228,190,96,149,55,190,209,147,210,61,122,226,192,62,67,224,30,63,178,165,80,63,12,202,113,63,27,169,127,63,219,39,121,63,3,203,94,63,120,172,50,63,203,160,240,62,25,118,81,62,43,14,158,189,236,155,180,190,165,167,25,191,68,194,76,191,35,139,111,191,138,60,127,191,73,150,122,191,61,247,97,191,192,85,55,191,67,47,252,190,67,51,107,190,99,219,82,61,181,54,168,62,241,84,20,63,19,188,72,63,145,35,109,63,167,164,126,63,47,218,123,63,27,253,100,63,233,223,59,63,118,201,3,63,65,100,130,62,74,237,210,188,240,180,155,190,16,233,14,191,208,147,68,191,191,147,106,191,138,225,125,191,84,243,124,191,26,220,103,191,47,74,64,191,236,100,9,191,190,24,143,190,243,4,53,63,12,202,113,63,19,188,72,63,236,100,9,63,67,51,107,62,209,147,210,189,79,11,217,190,120,172,50,191,27,253,100,191,138,225,125,191,73,150,122,191,249,120,91,191,234,253,35,191,236,155,180,190,74,237,210,188,240,180,155,62,165,167,25,63,182,101,84,63,33,143,119,63,138,60,127,63,191,147,106,63,233,223,59,63,203,160,240,62,126,149,29,62,96,149,55,190,67,47,252,190,47,74,64,191,145,35,109,191,27,169,127,191,98,204,117,191,178,165,80,191,241,84,20,191,190,24,143,190,99,219,82,61,122,226,192,62,187,255,40,63,3,203,94,63,47,218,123,63,84,243,124,63,61,247,97,63,220,228,45,63,75,8,205,62,43,14,158,61,65,100,130,190,16,233,14,191,68,194,76,191,234,223,115,191,70,234,127,191,35,139,111,191,208,147,68,191,118,201,3,191,25,118,81,190,220,122,3,62,122,233,228,62,192,85,55,63,26,220,103,63,167,164,126,63,219,39,121,63,173,1,88,63,67,224,30,63,181,54,168,62,243,4,53,63,145,35,109,63,192,85,55,63,75,8,205,62,74,237,210,60,236,155,180,190,220,228,45,191,26,220,103,191,27,169,127,191,12,202,113,191,47,74,64,191,122,233,228,190,43,14,158,189,240,180,155,62,234,253,35,63,61,247,97,63,167,164,126,63,98,204,117,63,19,188,72,63,67,47,252,62,220,122,3,62,65,100,130,190,165,167,25,191,249,120,91,191,84,243,124,191,219,39,121,191,178,165,80,191,236,100,9,191,96,149,55,190,25,118,81,62,16,233,14,63,182,101,84,63,73,150,122,63,47,218,123,63,173,1,88,63,241,84,20,63,67,51,107,62,126,149,29,190,118,201,3,191,68,194,76,191,33,143,119,191,138,225,125,191,3,203,94,191,67,224,30,191,190,24,143,190,209,147,210,61,203,160,240,62,208,147,68,63,234,223,115,63,138,60,127,63,27,253,100,63,187,255,40,63,181,54,168,62,99,219,82,189,79,11,217,190,233,223,59,191,35,139,111,191,70,234,127,191,191,147,106,191,120,172,50,191,122,226,192,190,243,4,53,63,26,220,103,63,234,253,35,63,65,100,130,62,96,149,55,190,241,84,20,191,3,203,94,191,138,60,127,191,35,139,111,191,120,172,50,191,181,54,168,190,209,147,210,61,118,201,3,63,182,101,84,63,84,243,124,63,98,204,117,63,47,74,64,63,75,8,205,62,74,237,210,188,122,233,228,190,19,188,72,191,219,39,121,191,73,150,122,191,68,194,76,191,203,160,240,190,99,219,82,189,122,226,192,62,233,223,59,63,234,223,115,63,138,225,125,63,173,1,88,63,236,100,9,63,220,122,3,62,240,180,155,190,220,228,45,191,145,35,109,191,27,169,127,191,61,247,97,191,165,167,25,191,25,118,81,190,67,51,107,62,67,224,30,63,27,253,100,63,70,234,127,63,191,147,106,63,187,255,40,63,190,24,143,62,126,149,29,190,16,233,14,191,249,120,91,191,167,164,126,191,12,202,113,191,192,85,55,191,236,155,180,190,43,14,158,61,67,47,252,62,178,165,80,63,47,218,123,63,33,143,119,63,208,147,68,63,79,11,217,62,243,4,53,63,61,247,97,63,16,233,14,63,209,147,210,61,122,226,192,190,208,147,68,191,73,150,122,191,98,204,117,191,192,85,55,191,240,180,155,190,96,149,55,62,67,224,30,63,191,147,106,63,138,60,127,63,173,1,88,63,67,47,252,62,74,237,210,60,122,233,228,190,178,165,80,191,138,225,125,191,35,139,111,191,187,255,40,191,67,51,107,190,65,100,130,62,220,228,45,63,12,202,113,63,84,243,124,63,68,194,76,63,79,11,217,62,99,219,82,189,118,201,3,191,249,120,91,191,27,169,127,191,26,220,103,191,165,167,25,191,126,149,29,190,181,54,168,62,233,223,59,63,33,143,119,63,219,39,121,63,47,74,64,63,236,155,180,62,220,122,3,190,241,84,20,191,27,253,100,191,70,234,127,191,3,203,94,191,236,100,9,191,43,14,158,189,75,8,205,62,19,188,72,63,47,218,123,63,234,223,115,63,120,172,50,63,190,24,143,62,25,118,81,190,234,253,35,191,145,35,109,191,167,164,126,191,182,101,84,191,203,160,240,190,243,4,53,63,249,120,91,63,203,160,240,62,99,219,82,189,16,233,14,191,26,220,103,191,167,164,126,191,68,194,76,191,122,226,192,190,126,149,29,62,234,253,35,63,12,202,113,63,73,150,122,63,233,223,59,63,190,24,143,62,65,100,130,190,192,85,55,191,219,39,121,191,234,223,115,191,187,255,40,191,96,149,55,190,236,155,180,62,19,188,72,63,138,225,125,63,191,147,106,63,241,84,20,63,43,14,158,61,122,233,228,190,173,1,88,191,70,234,127,191,3,203,94,191,67,47,252,190,74,237,210,60,236,100,9,63,27,253,100,63,138,60,127,63,178,165,80,63,75,8,205,62,220,122,3,190,67,224,30,191,35,139,111,191,47,218,123,191,47,74,64,191,240,180,155,190,67,51,107,62,120,172,50,63,33,143,119,63,98,204,117,63,220,228,45,63,25,118,81,62,181,54,168,190,208,147,68,191,84,243,124,191,145,35,109,191,165,167,25,191,209,147,210,189,79,11,217,62,182,101,84,63,27,169,127,63,61,247,97,63,118,201,3,63,243,4,53,63,182,101,84,63,122,226,192,62,25,118,81,190,192,85,55,191,47,218,123,191,191,147,106,191,236,100,9,191,74,237,210,60,241,84,20,63,35,139,111,63,219,39,121,63,220,228,45,63,126,149,29,62,79,11,217,190,249,120,91,191,27,169,127,191,68,194,76,191,181,54,168,190,65,100,130,62,47,74,64,63,138,225,125,63,27,253,100,63,67,47,252,62,43,14,158,189,67,224,30,191,234,223,115,191,98,204,117,191,234,253,35,191,209,147,210,189,203,160,240,62,61,247,97,63,167,164,126,63,208,147,68,63,190,24,143,62,240,180,155,190,19,188,72,191,138,60,127,191,3,203,94,191,122,233,228,190,220,122,3,62,187,255,40,63,33,143,119,63,12,202,113,63,165,167,25,63,99,219,82,61,118,201,3,191,26,220,103,191,84,243,124,191,233,223,59,191,67,51,107,190,236,155,180,62,178,165,80,63,70,234,127,63,173,1,88,63,75,8,205,62,96,149,55,190,120,172,50,191,73,150,122,191,145,35,109,191,16,233,14,191,243,4,53,63,68,194,76,63,190,24,143,62,236,155,180,190,173,1,88,191,138,60,127,191,47,74,64,191,25,118,81,190,79,11,217,62,61,247,97,63,84,243,124,63,120,172,50,63,220,122,3,62,67,47,252,190,191,147,106,191,219,39,121,191,234,253,35,191,99,219,82,189,16,233,14,63,12,202,113,63,234,223,115,63,241,84,20,63,74,237,210,188,67,224,30,191,33,143,119,191,145,35,109,191,118,201,3,191,209,147,210,61,220,228,45,63,47,218,123,63,27,253,100,63,122,233,228,62,96,149,55,190,233,223,59,191,167,164,126,191,249,120,91,191,122,226,192,190,65,100,130,62,19,188,72,63,70,234,127,63,178,165,80,63,240,180,155,62,181,54,168,190,182,101,84,191,27,169,127,191,208,147,68,191,67,51,107,190,75,8,205,62,3,203,94,63,138,225,125,63,192,85,55,63,126,149,29,62,203,160,240,190,26,220,103,191,73,150,122,191,187,255,40,191,43,14,158,189,236,100,9,63,35,139,111,63,98,204,117,63,165,167,25,63,243,4,53,63,208,147,68,63,96,149,55,62,67,47,252,190,35,139,111,191,12,202,113,191,118,201,3,191,126,149,29,62,47,74,64,63,70,234,127,63,19,188,72,63,25,118,81,62,203,160,240,190,145,35,109,191,234,223,115,191,236,100,9,191,220,122,3,62,233,223,59,63,27,169,127,63,68,194,76,63,67,51,107,62,122,233,228,190,191,147,106,191,98,204,117,191,16,233,14,191,209,147,210,61,192,85,55,63,138,60,127,63,178,165,80,63,65,100,130,62,79,11,217,190,26,220,103,191,33,143,119,191,241,84,20,191,43,14,158,61,120,172,50,63,167,164,126,63,182,101,84,63,190,24,143,62,75,8,205,190,27,253,100,191,219,39,121,191,165,167,25,191,99,219,82,61,220,228,45,63,138,225,125,63,173,1,88,63,240,180,155,62,122,226,192,190,61,247,97,191,73,150,122,191,67,224,30,191,74,237,210,60,187,255,40,63,84,243,124,63,249,120,91,63,181,54,168,62,236,155,180,190,3,203,94,191,47,218,123,191,234,253,35,191,243,4,53,63,233,223,59,63,43,14,158,61,67,224,30,191,84,243,124,191,182,101,84,191,67,51,107,190,67,47,252,62,234,223,115,63,26,220,103,63,122,226,192,62,236,155,180,190,27,253,100,191,98,204,117,191,118,201,3,191,25,118,81,62,178,165,80,63,138,225,125,63,234,253,35,63,99,219,82,189,192,85,55,191,70,234,127,191,47,74,64,191,209,147,210,189,165,167,25,63,47,218,123,63,173,1,88,63,65,100,130,62,203,160,240,190,12,202,113,191,191,147,106,191,75,8,205,190,181,54,168,62,61,247,97,63,33,143,119,63,236,100,9,63,96,149,55,190,68,194,76,191,167,164,126,191,187,255,40,191,74,237,210,60,120,172,50,63,27,169,127,63,208,147,68,63,220,122,3,62,241,84,20,191,73,150,122,191,249,120,91,191,190,24,143,190,122,233,228,62,35,139,111,63,145,35,109,63,79,11,217,62,240,180,155,190,3,203,94,191,219,39,121,191,16,233,14,191,126,149,29,62,19,188,72,63,138,60,127,63,220,228,45,63,243,4,53,63,120,172,50,63,74,237,210,188,233,223,59,191,27,169,127,191,187,255,40,191,43,14,158,61,208,147,68,63,167,164,126,63,67,224,30,63,220,122,3,190,68,194,76,191,84,243,124,191,241,84,20,191,96,149,55,62,182,101,84,63,73,150,122,63,236,100,9,63,67,51,107,190,249,120,91,191,33,143,119,191,67,47,252,190,190,24,143,62,61,247,97,63,234,223,115,63,122,233,228,62,181,54,168,190,26,220,103,191,35,139,111,191,75,8,205,190,122,226,192,62,145,35,109,63,191,147,106,63,236,155,180,62,79,11,217,190,12,202,113,191,27,253,100,191,240,180,155,190,203,160,240,62,98,204,117,63,3,203,94,63,65,100,130,62,118,201,3,191,219,39,121,191,173,1,88,191,25,118,81,190,16,233,14,63,47,218,123,63,178,165,80,63,126,149,29,62,165,167,25,191,138,225,125,191,19,188,72,191,209,147,210,189,234,253,35,63,138,60,127,63,47,74,64,63,99,219,82,61,220,228,45,191,70,234,127,191,192,85,55,191,243,4,53,63,187,255,40,63,220,122,3,190,182,101,84,191,33,143,119,191,122,233,228,190,122,226,192,62,12,202,113,63,3,203,94,63,25,118,81,62,165,167,25,191,138,60,127,191,192,85,55,191,99,219,82,61,19,188,72,63,47,218,123,63,118,201,3,63,240,180,155,190,191,147,106,191,26,220,103,191,190,24,143,190,236,100,9,63,84,243,124,63,208,147,68,63,74,237,210,60,233,223,59,191,167,164,126,191,241,84,20,191,67,51,107,62,61,247,97,63,35,139,111,63,236,155,180,62,203,160,240,190,219,39,121,191,178,165,80,191,209,147,210,189,220,228,45,63,70,234,127,63,234,253,35,63,126,149,29,190,173,1,88,191,98,204,117,191,79,11,217,190,75,8,205,62,234,223,115,63,249,120,91,63,96,149,55,62,67,224,30,191,27,169,127,191,120,172,50,191,43,14,158,61,68,194,76,63,73,150,122,63,67,47,252,62,181,54,168,190,145,35,109,191,27,253,100,191,65,100,130,190,16,233,14,63,138,225,125,63,47,74,64,63,243,4,53,63,67,224,30,63,67,51,107,190,26,220,103,191,27,253,100,191,25,118,81,190,234,253,35,63,70,234,127,63,165,167,25,63,65,100,130,190,191,147,106,191,61,247,97,191,96,149,55,190,187,255,40,63,27,169,127,63,241,84,20,63,190,24,143,190,145,35,109,191,3,203,94,191,126,149,29,190,220,228,45,63,138,60,127,63,16,233,14,63,240,180,155,190,35,139,111,191,249,120,91,191,220,122,3,190,120,172,50,63,167,164,126,63,236,100,9,63,181,54,168,190,12,202,113,191,173,1,88,191,209,147,210,189,192,85,55,63,138,225,125,63,118,201,3,63,236,155,180,190,234,223,115,191,182,101,84,191,43,14,158,189,233,223,59,63,84,243,124,63,67,47,252,62,122,226,192,190,98,204,117,191,178,165,80,191,99,219,82,189,47,74,64,63,47,218,123,63,203,160,240,62,75,8,205,190,33,143,119,191,68,194,76,191,74,237,210,188,208,147,68,63,73,150,122,63,122,233,228,62,79,11,217,190,219,39,121,191,19,188,72,191,243,4,53,63,241,84,20,63,181,54,168,190,98,204,117,191,19,188,72,191,99,219,82,61,173,1,88,63,145,35,109,63,67,51,107,62,187,255,40,191,167,164,126,191,67,47,252,190,79,11,217,62,47,218,123,63,192,85,55,63,126,149,29,190,27,253,100,191,61,247,97,191,220,122,3,190,233,223,59,63,73,150,122,63,75,8,205,62,118,201,3,191,138,60,127,191,234,253,35,191,65,100,130,62,35,139,111,63,182,101,84,63,74,237,210,60,68,194,76,191,234,223,115,191,240,180,155,190,165,167,25,63,70,234,127,63,16,233,14,63,236,155,180,190,33,143,119,191,208,147,68,191,43,14,158,61,249,120,91,63,191,147,106,63,25,118,81,62,220,228,45,191,138,225,125,191,203,160,240,190,122,233,228,62,84,243,124,63,120,172,50,63,96,149,55,190,26,220,103,191,3,203,94,191,209,147,210,189,47,74,64,63,219,39,121,63,122,226,192,62,236,100,9,191,27,169,127,191,67,224,30,191,190,24,143,62,12,202,113,63,178,165,80,63,243,4,53,63,236,100,9,63,79,11,217,190,138,225,125,191,234,253,35,191,240,180,155,62,33,143,119,63,233,223,59,63,96,149,55,190,145,35,109,191,178,165,80,191,99,219,82,61,3,203,94,63,61,247,97,63,43,14,158,61,68,194,76,191,35,139,111,191,25,118,81,190,192,85,55,63,219,39,121,63,181,54,168,62,67,224,30,191,167,164,126,191,122,233,228,190,118,201,3,63,70,234,127,63,16,233,14,63,75,8,205,190,84,243,124,191,187,255,40,191,190,24,143,62,98,204,117,63,47,74,64,63,126,149,29,190,191,147,106,191,182,101,84,191,74,237,210,60,249,120,91,63,27,253,100,63,209,147,210,61,19,188,72,191,12,202,113,191,67,51,107,190,120,172,50,63,73,150,122,63,236,155,180,62,165,167,25,191,138,60,127,191,203,160,240,190,67,47,252,62,27,169,127,63,241,84,20,63,122,226,192,190,47,218,123,191,220,228,45,191,65,100,130,62,234,223,115,63,208,147,68,63,220,122,3,190,26,220,103,191,173,1,88,191,243,4,53,63,67,47,252,62,118,201,3,191,70,234,127,191,203,160,240,190,236,100,9,63,27,169,127,63,122,233,228,62,16,233,14,191,138,60,127,191,79,11,217,190,241,84,20,63,167,164,126,63,75,8,205,62,165,167,25,191,138,225,125,191,122,226,192,190,67,224,30,63,84,243,124,63,236,155,180,62,234,253,35,191,47,218,123,191,181,54,168,190,187,255,40,63,73,150,122,63,240,180,155,62,220,228,45,191,219,39,121,191,190,24,143,190,120,172,50,63,33,143,119,63,65,100,130,62,192,85,55,191,98,204,117,191,67,51,107,190,233,223,59,63,234,223,115,63,25,118,81,62,47,74,64,191,12,202,113,191,96,149,55,190,208,147,68,63,35,139,111,63,126,149,29,62,19,188,72,191,145,35,109,191,220,122,3,190,68,194,76,63,191,147,106,63,209,147,210,61,178,165,80,191,26,220,103,191,43,14,158,189,182,101,84,63,27,253,100,63,99,219,82,61,173,1,88,191,61,247,97,191,74,237,210,188,249,120,91,63,3,203,94,63,243,4,53,63,122,233,228,62,165,167,25,191,47,218,123,191,190,24,143,190,233,223,59,63,35,139,111,63,209,147,210,61,173,1,88,191,249,120,91,191,43,14,158,61,145,35,109,63,47,74,64,63,65,100,130,190,73,150,122,191,67,224,30,191,79,11,217,62,70,234,127,63,203,160,240,62,241,84,20,191,84,243,124,191,240,180,155,190,192,85,55,63,12,202,113,63,220,122,3,62,182,101,84,191,3,203,94,191,99,219,82,61,191,147,106,63,208,147,68,63,67,51,107,190,219,39,121,191,234,253,35,191,75,8,205,62,27,169,127,63,67,47,252,62,16,233,14,191,138,225,125,191,181,54,168,190,120,172,50,63,234,223,115,63,126,149,29,62,178,165,80,191,61,247,97,191,74,237,210,60,26,220,103,63,19,188,72,63,25,118,81,190,33,143,119,191,187,255,40,191,122,226,192,62,138,60,127,63,118,201,3,63,236,100,9,191,167,164,126,191,236,155,180,190,220,228,45,63,98,204,117,63,96,149,55,62,68,194,76,191,27,253,100,191,243,4,53,63,75,8,205,62,220,228,45,191,12,202,113,191,43,14,158,189,61,247,97,63,19,188,72,63,65,100,130,190,84,243,124,191,236,100,9,191,16,233,14,63,47,218,123,63,67,51,107,62,68,194,76,191,3,203,94,191,209,147,210,61,234,223,115,63,187,255,40,63,79,11,217,190,70,234,127,191,122,226,192,190,120,172,50,63,35,139,111,63,99,219,82,61,27,253,100,191,208,147,68,191,190,24,143,62,138,225,125,63,118,201,3,63,241,84,20,191,73,150,122,191,25,118,81,190,178,165,80,63,249,120,91,63,220,122,3,190,98,204,117,191,234,253,35,191,122,233,228,62,27,169,127,63,236,155,180,62,192,85,55,191,145,35,109,191,74,237,210,188,26,220,103,63,47,74,64,63,240,180,155,190,167,164,126,191,67,47,252,190,165,167,25,63,219,39,121,63,96,149,55,62,182,101,84,191,173,1,88,191,126,149,29,62,33,143,119,63,67,224,30,63,203,160,240,190,138,60,127,191,181,54,168,190,233,223,59,63,191,147,106,63,243,4,53,63,236,155,180,62,47,74,64,191,61,247,97,191,220,122,3,62,219,39,121,63,16,233,14,63,241,84,20,191,33,143,119,191,209,147,210,189,27,253,100,63,233,223,59,63,122,226,192,190,70,234,127,191,181,54,168,190,208,147,68,63,3,203,94,63,126,149,29,190,73,150,122,191,236,100,9,191,165,167,25,63,98,204,117,63,43,14,158,61,26,220,103,191,192,85,55,191,75,8,205,62,27,169,127,63,240,180,155,62,19,188,72,191,249,120,91,191,96,149,55,62,47,218,123,63,118,201,3,63,67,224,30,191,234,223,115,191,99,219,82,189,191,147,106,63,120,172,50,63,79,11,217,190,138,60,127,191,190,24,143,190,68,194,76,63,173,1,88,63,25,118,81,190,84,243,124,191,67,47,252,190,234,253,35,63,12,202,113,63,74,237,210,60,145,35,109,191,220,228,45,191,122,233,228,62,167,164,126,63,65,100,130,62,178,165,80,191,182,101,84,191,67,51,107,62,138,225,125,63,203,160,240,62,187,255,40,191,35,139,111,191,243,4,53,63,240,180,155,62,178,165,80,191,68,194,76,191,181,54,168,62,70,234,127,63,190,24,143,62,182,101,84,191,19,188,72,191,236,155,180,62,27,169,127,63,65,100,130,62,173,1,88,191,208,147,68,191,122,226,192,62,138,60,127,63,67,51,107,62,249,120,91,191,47,74,64,191,75,8,205,62,167,164,126,63,25,118,81,62,3,203,94,191,233,223,59,191,79,11,217,62,138,225,125,63,96,149,55,62,61,247,97,191,192,85,55,191,122,233,228,62,84,243,124,63,126,149,29,62,27,253,100,191,120,172,50,191,203,160,240,62,47,218,123,63,220,122,3,62,26,220,103,191,220,228,45,191,67,47,252,62,73,150,122,63,209,147,210,61,191,147,106,191,187,255,40,191,118,201,3,63,219,39,121,63,43,14,158,61,145,35,109,191,234,253,35,191,236,100,9,63,33,143,119,63,99,219,82,61,35,139,111,191,67,224,30,191,16,233,14,63,98,204,117,63,74,237,210,60,12,202,113,191,165,167,25,191,241,84,20,63,234,223,115,63,243,4,53,63,65,100,130,62,3,203,94,191,120,172,50,191,118,201,3,63,98,204,117,63,74,237,210,188,219,39,121,191,203,160,240,190,233,223,59,63,173,1,88,63,240,180,155,190,27,169,127,191,25,118,81,190,27,253,100,63,187,255,40,63,16,233,14,191,12,202,113,191,43,14,158,61,47,218,123,63,79,11,217,62,208,147,68,191,178,165,80,191,236,155,180,62,167,164,126,63,126,149,29,62,191,147,106,191,67,224,30,191,165,167,25,63,145,35,109,63,220,122,3,190,138,225,125,191,122,226,192,190,68,194,76,63,19,188,72,63,75,8,205,190,84,243,124,191,209,147,210,189,35,139,111,63,241,84,20,63,234,253,35,191,26,220,103,191,96,149,55,62,138,60,127,63,181,54,168,62,182,101,84,191,47,74,64,191,122,233,228,62,73,150,122,63,99,219,82,61,234,223,115,191,236,100,9,191,220,228,45,63,61,247,97,63,67,51,107,190,70,234,127,191,190,24,143,190,249,120,91,63,192,85,55,63,67,47,252,190,33,143,119,191,243,4,53,63,25,118,81,62,191,147,106,191,241,84,20,191,220,228,45,63,249,120,91,63,181,54,168,190,138,225,125,191,43,14,158,189,98,204,117,63,203,160,240,62,208,147,68,191,19,188,72,191,122,233,228,62,33,143,119,63,99,219,82,189,84,243,124,191,236,155,180,190,173,1,88,63,120,172,50,63,16,233,14,191,145,35,109,191,96,149,55,62,70,234,127,63,67,51,107,62,26,220,103,191,165,167,25,191,187,255,40,63,3,203,94,63,240,180,155,190,167,164,126,191,209,147,210,189,234,223,115,63,67,47,252,62,47,74,64,191,68,194,76,191,79,11,217,62,219,39,121,63,74,237,210,188,47,218,123,191,122,226,192,190,182,101,84,63,192,85,55,63,236,100,9,191,35,139,111,191,126,149,29,62,27,169,127,63,65,100,130,62,27,253,100,191,67,224,30,191,234,253,35,63,61,247,97,63,190,24,143,190,138,60,127,191,220,122,3,190,12,202,113,63,118,201,3,63,233,223,59,191,178,165,80,191,75,8,205,62,73,150,122,63,243,4,53,63,126,149,29,62,234,223,115,191,122,233,228,190,178,165,80,63,120,172,50,63,165,167,25,191,61,247,97,191,181,54,168,62,47,218,123,63,74,237,210,188,138,225,125,191,190,24,143,190,26,220,103,63,16,233,14,63,233,223,59,191,19,188,72,191,67,47,252,62,35,139,111,63,25,118,81,190,27,169,127,191,209,147,210,189,33,143,119,63,75,8,205,62,173,1,88,191,187,255,40,191,234,253,35,63,249,120,91,63,122,226,192,190,219,39,121,191,43,14,158,61,138,60,127,63,67,51,107,62,145,35,109,191,118,201,3,191,208,147,68,63,47,74,64,63,236,100,9,191,191,147,106,191,65,100,130,62,167,164,126,63,99,219,82,61,73,150,122,191,236,155,180,190,3,203,94,63,67,224,30,63,220,228,45,191,182,101,84,191,79,11,217,62,98,204,117,63,220,122,3,190,70,234,127,191,96,149,55,190,12,202,113,63,203,160,240,62,68,194,76,191,192,85,55,191,241,84,20,63,27,253,100,63,240,180,155,190,84,243,124,191,243,4,53,63,209,147,210,61,73,150,122,191,240,180,155,190,191,147,106,63,67,47,252,62,178,165,80,191,187,255,40,191,220,228,45,63,68,194,76,63,118,201,3,191,26,220,103,191,181,54,168,62,219,39,121,63,220,122,3,190,70,234,127,191,43,14,158,189,47,218,123,63,190,24,143,62,145,35,109,191,203,160,240,190,182,101,84,63,234,253,35,63,120,172,50,191,19,188,72,191,236,100,9,63,27,253,100,63,236,155,180,190,33,143,119,191,126,149,29,62,27,169,127,63,99,219,82,61,84,243,124,191,65,100,130,190,35,139,111,63,122,233,228,62,173,1,88,191,67,224,30,191,192,85,55,63,208,147,68,63,16,233,14,191,61,247,97,191,122,226,192,62,98,204,117,63,96,149,55,190,138,60,127,191,74,237,210,188,138,225,125,63,67,51,107,62,12,202,113,191,79,11,217,190,249,120,91,63,165,167,25,63,233,223,59,191,47,74,64,191,241,84,20,63,3,203,94,63,75,8,205,190,234,223,115,191,25,118,81,62,167,164,126,63,243,4,53,63,99,219,82,61,167,164,126,191,126,149,29,190,73,150,122,63,65,100,130,62,234,223,115,191,236,155,180,190,191,147,106,63,122,233,228,62,3,203,94,191,236,100,9,191,178,165,80,63,67,224,30,63,47,74,64,191,120,172,50,191,220,228,45,63,208,147,68,63,165,167,25,191,182,101,84,191,118,201,3,63,61,247,97,63,79,11,217,190,145,35,109,191,181,54,168,62,98,204,117,63,67,51,107,190,47,218,123,191,220,122,3,62,138,60,127,63,74,237,210,188,70,234,127,191,43,14,158,189,138,225,125,63,96,149,55,62,219,39,121,191,190,24,143,190,12,202,113,63,122,226,192,62,26,220,103,191,203,160,240,190,249,120,91,63,16,233,14,63,68,194,76,191,234,253,35,191,233,223,59,63,192,85,55,63,187,255,40,191,19,188,72,191,241,84,20,63,173,1,88,63,67,47,252,190,27,253,100,191,75,8,205,62,35,139,111,63,240,180,155,190,33,143,119,191,25,118,81,62,84,243,124,63,209,147,210,189,27,169,127,191,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,91,26,141,38,0,0,128,191,191,159,48,39,0,0,128,63,213,12,22,40,0,0,128,191,52,131,176,167,0,0,128,63,244,178,211,38,0,0,128,191,115,83,13,39,0,0,128,63,232,223,30,40,0,0,128,191,90,41,194,167,0,0,128,63,243,4,53,63,99,219,82,189,167,164,126,191,126,149,29,62,73,150,122,63,65,100,130,190,234,223,115,191,236,155,180,62,191,147,106,63,122,233,228,190,3,203,94,191,236,100,9,63,178,165,80,63,67,224,30,191,47,74,64,191,120,172,50,63,220,228,45,63,208,147,68,191,165,167,25,191,182,101,84,63,118,201,3,63,61,247,97,191,79,11,217,190,145,35,109,63,181,54,168,62,98,204,117,191,67,51,107,190,47,218,123,63,220,122,3,62,138,60,127,191,74,237,210,188,70,234,127,63,43,14,158,189,138,225,125,191,96,149,55,62,219,39,121,63,190,24,143,190,12,202,113,191,122,226,192,62,26,220,103,63,203,160,240,190,249,120,91,191,16,233,14,63,68,194,76,63,234,253,35,191,233,223,59,191,192,85,55,63,187,255,40,63,19,188,72,191,241,84,20,191,173,1,88,63,67,47,252,62,27,253,100,191,75,8,205,190,35,139,111,63,240,180,155,62,33,143,119,191,25,118,81,190,84,243,124,63,209,147,210,61,27,169,127,191,243,4,53,63,209,147,210,189,73,150,122,191,240,180,155,62,191,147,106,63,67,47,252,190,178,165,80,191,187,255,40,63,220,228,45,63,68,194,76,191,118,201,3,191,26,220,103,63,181,54,168,62,219,39,121,191,220,122,3,190,70,234,127,63,43,14,158,189,47,218,123,191,190,24,143,62,145,35,109,63,203,160,240,190,182,101,84,191,234,253,35,63,120,172,50,63,19,188,72,191,236,100,9,191,27,253,100,63,236,155,180,62,33,143,119,191,126,149,29,190,27,169,127,63,99,219,82,189,84,243,124,191,65,100,130,62,35,139,111,63,122,233,228,190,173,1,88,191,67,224,30,63,192,85,55,63,208,147,68,191,16,233,14,191,61,247,97,63,122,226,192,62,98,204,117,191,96,149,55,190,138,60,127,63,74,237,210,188,138,225,125,191,67,51,107,62,12,202,113,63,79,11,217,190,249,120,91,191,165,167,25,63,233,223,59,63,47,74,64,191,241,84,20,191,3,203,94,63,75,8,205,62,234,223,115,191,25,118,81,190,167,164,126,63,243,4,53,63,126,149,29,190,234,223,115,191,122,233,228,62,178,165,80,63,120,172,50,191,165,167,25,191,61,247,97,63,181,54,168,62,47,218,123,191,74,237,210,188,138,225,125,63,190,24,143,190,26,220,103,191,16,233,14,63,233,223,59,63,19,188,72,191,67,47,252,190,35,139,111,63,25,118,81,62,27,169,127,191,209,147,210,61,33,143,119,63,75,8,205,190,173,1,88,191,187,255,40,63,234,253,35,63,249,120,91,191,122,226,192,190,219,39,121,63,43,14,158,61,138,60,127,191,67,51,107,62,145,35,109,63,118,201,3,191,208,147,68,191,47,74,64,63,236,100,9,63,191,147,106,191,65,100,130,190,167,164,126,63,99,219,82,189,73,150,122,191,236,155,180,62,3,203,94,63,67,224,30,191,220,228,45,191,182,101,84,63,79,11,217,62,98,204,117,191,220,122,3,190,70,234,127,63,96,149,55,190,12,202,113,191,203,160,240,62,68,194,76,63,192,85,55,191,241,84,20,191,27,253,100,63,240,180,155,62,84,243,124,191,243,4,53,63,25,118,81,190,191,147,106,191,241,84,20,63,220,228,45,63,249,120,91,191,181,54,168,190,138,225,125,63,43,14,158,189,98,204,117,191,203,160,240,62,208,147,68,63,19,188,72,191,122,233,228,190,33,143,119,63,99,219,82,61,84,243,124,191,236,155,180,62,173,1,88,63,120,172,50,191,16,233,14,191,145,35,109,63,96,149,55,62,70,234,127,191,67,51,107,62,26,220,103,63,165,167,25,191,187,255,40,191,3,203,94,63,240,180,155,62,167,164,126,191,209,147,210,61,234,223,115,63,67,47,252,190,47,74,64,191,68,194,76,63,79,11,217,62,219,39,121,191,74,237,210,188,47,218,123,63,122,226,192,190,182,101,84,191,192,85,55,63,236,100,9,63,35,139,111,191,126,149,29,190,27,169,127,63,65,100,130,190,27,253,100,191,67,224,30,63,234,253,35,63,61,247,97,191,190,24,143,190,138,60,127,63,220,122,3,190,12,202,113,191,118,201,3,63,233,223,59,63,178,165,80,191,75,8,205,190,73,150,122,63,243,4,53,63,65,100,130,190,3,203,94,191,120,172,50,63,118,201,3,63,98,204,117,191,74,237,210,188,219,39,121,63,203,160,240,190,233,223,59,191,173,1,88,63,240,180,155,62,27,169,127,191,25,118,81,62,27,253,100,63,187,255,40,191,16,233,14,191,12,202,113,63,43,14,158,61,47,218,123,191,79,11,217,62,208,147,68,63,178,165,80,191,236,155,180,190,167,164,126,63,126,149,29,190,191,147,106,191,67,224,30,63,165,167,25,63,145,35,109,191,220,122,3,190,138,225,125,63,122,226,192,190,68,194,76,191,19,188,72,63,75,8,205,62,84,243,124,191,209,147,210,61,35,139,111,63,241,84,20,191,234,253,35,191,26,220,103,63,96,149,55,62,138,60,127,191,181,54,168,62,182,101,84,63,47,74,64,191,122,233,228,190,73,150,122,63,99,219,82,189,234,223,115,191,236,100,9,63,220,228,45,63,61,247,97,191,67,51,107,190,70,234,127,63,190,24,143,190,249,120,91,191,192,85,55,63,67,47,252,62,33,143,119,191,243,4,53,63,240,180,155,190,178,165,80,191,68,194,76,63,181,54,168,62,70,234,127,191,190,24,143,62,182,101,84,63,19,188,72,191,236,155,180,190,27,169,127,63,65,100,130,190,173,1,88,191,208,147,68,63,122,226,192,62,138,60,127,191,67,51,107,62,249,120,91,63,47,74,64,191,75,8,205,190,167,164,126,63,25,118,81,190,3,203,94,191,233,223,59,63,79,11,217,62,138,225,125,191,96,149,55,62,61,247,97,63,192,85,55,191,122,233,228,190,84,243,124,63,126,149,29,190,27,253,100,191,120,172,50,63,203,160,240,62,47,218,123,191,220,122,3,62,26,220,103,63,220,228,45,191,67,47,252,190,73,150,122,63,209,147,210,189,191,147,106,191,187,255,40,63,118,201,3,63,219,39,121,191,43,14,158,61,145,35,109,63,234,253,35,191,236,100,9,191,33,143,119,63,99,219,82,189,35,139,111,191,67,224,30,63,16,233,14,63,98,204,117,191,74,237,210,60,12,202,113,63,165,167,25,191,241,84,20,191,234,223,115,63,243,4,53,63,236,155,180,190,47,74,64,191,61,247,97,63,220,122,3,62,219,39,121,191,16,233,14,63,241,84,20,63,33,143,119,191,209,147,210,61,27,253,100,63,233,223,59,191,122,226,192,190,70,234,127,63,181,54,168,190,208,147,68,191,3,203,94,63,126,149,29,62,73,150,122,191,236,100,9,63,165,167,25,63,98,204,117,191,43,14,158,61,26,220,103,63,192,85,55,191,75,8,205,190,27,169,127,63,240,180,155,190,19,188,72,191,249,120,91,63,96,149,55,62,47,218,123,191,118,201,3,63,67,224,30,63,234,223,115,191,99,219,82,61,191,147,106,63,120,172,50,191,79,11,217,190,138,60,127,63,190,24,143,190,68,194,76,191,173,1,88,63,25,118,81,62,84,243,124,191,67,47,252,62,234,253,35,63,12,202,113,191,74,237,210,60,145,35,109,63,220,228,45,191,122,233,228,190,167,164,126,63,65,100,130,190,178,165,80,191,182,101,84,63,67,51,107,62,138,225,125,191,203,160,240,62,187,255,40,63,35,139,111,191,243,4,53,63,75,8,205,190,220,228,45,191,12,202,113,63,43,14,158,189,61,247,97,191,19,188,72,63,65,100,130,62,84,243,124,191,236,100,9,63,16,233,14,63,47,218,123,191,67,51,107,62,68,194,76,63,3,203,94,191,209,147,210,189,234,223,115,63,187,255,40,191,79,11,217,190,70,234,127,63,122,226,192,190,120,172,50,191,35,139,111,63,99,219,82,189,27,253,100,191,208,147,68,63,190,24,143,62,138,225,125,191,118,201,3,63,241,84,20,63,73,150,122,191,25,118,81,62,178,165,80,63,249,120,91,191,220,122,3,190,98,204,117,63,234,253,35,191,122,233,228,190,27,169,127,63,236,155,180,190,192,85,55,191,145,35,109,63,74,237,210,188,26,220,103,191,47,74,64,63,240,180,155,62,167,164,126,191,67,47,252,62,165,167,25,63,219,39,121,191,96,149,55,62,182,101,84,63,173,1,88,191,126,149,29,190,33,143,119,63,67,224,30,191,203,160,240,190,138,60,127,63,181,54,168,190,233,223,59,191,191,147,106,63,243,4,53,63,122,233,228,190,165,167,25,191,47,218,123,63,190,24,143,190,233,223,59,191,35,139,111,63,209,147,210,189,173,1,88,191,249,120,91,63,43,14,158,61,145,35,109,191,47,74,64,63,65,100,130,62,73,150,122,191,67,224,30,63,79,11,217,62,70,234,127,191,203,160,240,62,241,84,20,63,84,243,124,191,240,180,155,62,192,85,55,63,12,202,113,191,220,122,3,62,182,101,84,63,3,203,94,191,99,219,82,189,191,147,106,63,208,147,68,191,67,51,107,190,219,39,121,63,234,253,35,191,75,8,205,190,27,169,127,63,67,47,252,190,16,233,14,191,138,225,125,63,181,54,168,190,120,172,50,191,234,223,115,63,126,149,29,190,178,165,80,191,61,247,97,63,74,237,210,60,26,220,103,191,19,188,72,63,25,118,81,62,33,143,119,191,187,255,40,63,122,226,192,62,138,60,127,191,118,201,3,63,236,100,9,63,167,164,126,191,236,155,180,62,220,228,45,63,98,204,117,191,96,149,55,62,68,194,76,63,27,253,100,191,243,4,53,63,67,47,252,190,118,201,3,191,70,234,127,63,203,160,240,190,236,100,9,191,27,169,127,63,122,233,228,190,16,233,14,191,138,60,127,63,79,11,217,190,241,84,20,191,167,164,126,63,75,8,205,190,165,167,25,191,138,225,125,63,122,226,192,190,67,224,30,191,84,243,124,63,236,155,180,190,234,253,35,191,47,218,123,63,181,54,168,190,187,255,40,191,73,150,122,63,240,180,155,190,220,228,45,191,219,39,121,63,190,24,143,190,120,172,50,191,33,143,119,63,65,100,130,190,192,85,55,191,98,204,117,63,67,51,107,190,233,223,59,191,234,223,115,63,25,118,81,190,47,74,64,191,12,202,113,63,96,149,55,190,208,147,68,191,35,139,111,63,126,149,29,190,19,188,72,191,145,35,109,63,220,122,3,190,68,194,76,191,191,147,106,63,209,147,210,189,178,165,80,191,26,220,103,63,43,14,158,189,182,101,84,191,27,253,100,63,99,219,82,189,173,1,88,191,61,247,97,63,74,237,210,188,249,120,91,191,3,203,94,63,243,4,53,63,236,100,9,191,79,11,217,190,138,225,125,63,234,253,35,191,240,180,155,190,33,143,119,63,233,223,59,191,96,149,55,190,145,35,109,63,178,165,80,191,99,219,82,189,3,203,94,63,61,247,97,191,43,14,158,61,68,194,76,63,35,139,111,191,25,118,81,62,192,85,55,63,219,39,121,191,181,54,168,62,67,224,30,63,167,164,126,191,122,233,228,62,118,201,3,63,70,234,127,191,16,233,14,63,75,8,205,62,84,243,124,191,187,255,40,63,190,24,143,62,98,204,117,191,47,74,64,63,126,149,29,62,191,147,106,191,182,101,84,63,74,237,210,60,249,120,91,191,27,253,100,63,209,147,210,189,19,188,72,191,12,202,113,63,67,51,107,190,120,172,50,191,73,150,122,63,236,155,180,190,165,167,25,191,138,60,127,63,203,160,240,190,67,47,252,190,27,169,127,63,241,84,20,191,122,226,192,190,47,218,123,63,220,228,45,191,65,100,130,190,234,223,115,63,208,147,68,191,220,122,3,190,26,220,103,63,173,1,88,191,243,4,53,63,241,84,20,191,181,54,168,190,98,204,117,63,19,188,72,191,99,219,82,189,173,1,88,63,145,35,109,191,67,51,107,62,187,255,40,63,167,164,126,191,67,47,252,62,79,11,217,62,47,218,123,191,192,85,55,63,126,149,29,62,27,253,100,191,61,247,97,63,220,122,3,190,233,223,59,191,73,150,122,63,75,8,205,190,118,201,3,191,138,60,127,63,234,253,35,191,65,100,130,190,35,139,111,63,182,101,84,191,74,237,210,60,68,194,76,63,234,223,115,191,240,180,155,62,165,167,25,63,70,234,127,191,16,233,14,63,236,155,180,62,33,143,119,191,208,147,68,63,43,14,158,61,249,120,91,191,191,147,106,63,25,118,81,190,220,228,45,191,138,225,125,63,203,160,240,190,122,233,228,190,84,243,124,63,120,172,50,191,96,149,55,190,26,220,103,63,3,203,94,191,209,147,210,61,47,74,64,63,219,39,121,191,122,226,192,62,236,100,9,63,27,169,127,191,67,224,30,63,190,24,143,62,12,202,113,191,178,165,80,63,243,4,53,63,67,224,30,191,67,51,107,190,26,220,103,63,27,253,100,191,25,118,81,62,234,253,35,63,70,234,127,191,165,167,25,63,65,100,130,62,191,147,106,191,61,247,97,63,96,149,55,190,187,255,40,191,27,169,127,63,241,84,20,191,190,24,143,190,145,35,109,63,3,203,94,191,126,149,29,62,220,228,45,63,138,60,127,191,16,233,14,63,240,180,155,62,35,139,111,191,249,120,91,63,220,122,3,190,120,172,50,191,167,164,126,63,236,100,9,191,181,54,168,190,12,202,113,63,173,1,88,191,209,147,210,61,192,85,55,63,138,225,125,191,118,201,3,63,236,155,180,62,234,223,115,191,182,101,84,63,43,14,158,189,233,223,59,191,84,243,124,63,67,47,252,190,122,226,192,190,98,204,117,63,178,165,80,191,99,219,82,61,47,74,64,63,47,218,123,191,203,160,240,62,75,8,205,62,33,143,119,191,68,194,76,63,74,237,210,188,208,147,68,191,73,150,122,63,122,233,228,190,79,11,217,190,219,39,121,63,19,188,72,191,243,4,53,63,187,255,40,191,220,122,3,190,182,101,84,63,33,143,119,191,122,233,228,62,122,226,192,62,12,202,113,191,3,203,94,63,25,118,81,190,165,167,25,191,138,60,127,63,192,85,55,191,99,219,82,189,19,188,72,63,47,218,123,191,118,201,3,63,240,180,155,62,191,147,106,191,26,220,103,63,190,24,143,190,236,100,9,191,84,243,124,63,208,147,68,191,74,237,210,60,233,223,59,63,167,164,126,191,241,84,20,63,67,51,107,62,61,247,97,191,35,139,111,63,236,155,180,190,203,160,240,190,219,39,121,63,178,165,80,191,209,147,210,61,220,228,45,63,70,234,127,191,234,253,35,63,126,149,29,62,173,1,88,191,98,204,117,63,79,11,217,190,75,8,205,190,234,223,115,63,249,120,91,191,96,149,55,62,67,224,30,63,27,169,127,191,120,172,50,63,43,14,158,61,68,194,76,191,73,150,122,63,67,47,252,190,181,54,168,190,145,35,109,63,27,253,100,191,65,100,130,62,16,233,14,63,138,225,125,191,47,74,64,63,243,4,53,63,120,172,50,191,74,237,210,188,233,223,59,63,27,169,127,191,187,255,40,63,43,14,158,61,208,147,68,191,167,164,126,63,67,224,30,191,220,122,3,190,68,194,76,63,84,243,124,191,241,84,20,63,96,149,55,62,182,101,84,191,73,150,122,63,236,100,9,191,67,51,107,190,249,120,91,63,33,143,119,191,67,47,252,62,190,24,143,62,61,247,97,191,234,223,115,63,122,233,228,190,181,54,168,190,26,220,103,63,35,139,111,191,75,8,205,62,122,226,192,62,145,35,109,191,191,147,106,63,236,155,180,190,79,11,217,190,12,202,113,63,27,253,100,191,240,180,155,62,203,160,240,62,98,204,117,191,3,203,94,63,65,100,130,190,118,201,3,191,219,39,121,63,173,1,88,191,25,118,81,62,16,233,14,63,47,218,123,191,178,165,80,63,126,149,29,190,165,167,25,191,138,225,125,63,19,188,72,191,209,147,210,61,234,253,35,63,138,60,127,191,47,74,64,63,99,219,82,189,220,228,45,191,70,234,127,63,192,85,55,191,243,4,53,63,233,223,59,191,43,14,158,61,67,224,30,63,84,243,124,191,182,101,84,63,67,51,107,190,67,47,252,190,234,223,115,63,26,220,103,191,122,226,192,62,236,155,180,62,27,253,100,191,98,204,117,63,118,201,3,191,25,118,81,190,178,165,80,63,138,225,125,191,234,253,35,63,99,219,82,61,192,85,55,191,70,234,127,63,47,74,64,191,209,147,210,61,165,167,25,63,47,218,123,191,173,1,88,63,65,100,130,190,203,160,240,190,12,202,113,63,191,147,106,191,75,8,205,62,181,54,168,62,61,247,97,191,33,143,119,63,236,100,9,191,96,149,55,190,68,194,76,63,167,164,126,191,187,255,40,63,74,237,210,60,120,172,50,191,27,169,127,63,208,147,68,191,220,122,3,62,241,84,20,63,73,150,122,191,249,120,91,63,190,24,143,190,122,233,228,190,35,139,111,63,145,35,109,191,79,11,217,62,240,180,155,62,3,203,94,191,219,39,121,63,16,233,14,191,126,149,29,190,19,188,72,63,138,60,127,191,220,228,45,63,243,4,53,63,208,147,68,191,96,149,55,62,67,47,252,62,35,139,111,191,12,202,113,63,118,201,3,191,126,149,29,190,47,74,64,63,70,234,127,191,19,188,72,63,25,118,81,190,203,160,240,190,145,35,109,63,234,223,115,191,236,100,9,63,220,122,3,62,233,223,59,191,27,169,127,63,68,194,76,191,67,51,107,62,122,233,228,62,191,147,106,191,98,204,117,63,16,233,14,191,209,147,210,189,192,85,55,63,138,60,127,191,178,165,80,63,65,100,130,190,79,11,217,190,26,220,103,63,33,143,119,191,241,84,20,63,43,14,158,61,120,172,50,191,167,164,126,63,182,101,84,191,190,24,143,62,75,8,205,62,27,253,100,191,219,39,121,63,165,167,25,191,99,219,82,189,220,228,45,63,138,225,125,191,173,1,88,63,240,180,155,190,122,226,192,190,61,247,97,63,73,150,122,191,67,224,30,63,74,237,210,60,187,255,40,191,84,243,124,63,249,120,91,191,181,54,168,62,236,155,180,62,3,203,94,191,47,218,123,63,234,253,35,191,243,4,53,63,68,194,76,191,190,24,143,62,236,155,180,62,173,1,88,191,138,60,127,63,47,74,64,191,25,118,81,62,79,11,217,62,61,247,97,191,84,243,124,63,120,172,50,191,220,122,3,62,67,47,252,62,191,147,106,191,219,39,121,63,234,253,35,191,99,219,82,61,16,233,14,63,12,202,113,191,234,223,115,63,241,84,20,191,74,237,210,188,67,224,30,63,33,143,119,191,145,35,109,63,118,201,3,191,209,147,210,189,220,228,45,63,47,218,123,191,27,253,100,63,122,233,228,190,96,149,55,190,233,223,59,63,167,164,126,191,249,120,91,63,122,226,192,190,65,100,130,190,19,188,72,63,70,234,127,191,178,165,80,63,240,180,155,190,181,54,168,190,182,101,84,63,27,169,127,191,208,147,68,63,67,51,107,190,75,8,205,190,3,203,94,63,138,225,125,191,192,85,55,63,126,149,29,190,203,160,240,190,26,220,103,63,73,150,122,191,187,255,40,63,43,14,158,189,236,100,9,191,35,139,111,63,98,204,117,191,165,167,25,63,243,4,53,63,182,101,84,191,122,226,192,62,25,118,81,62,192,85,55,191,47,218,123,63,191,147,106,191,236,100,9,63,74,237,210,60,241,84,20,191,35,139,111,63,219,39,121,191,220,228,45,63,126,149,29,190,79,11,217,190,249,120,91,63,27,169,127,191,68,194,76,63,181,54,168,190,65,100,130,190,47,74,64,63,138,225,125,191,27,253,100,63,67,47,252,190,43,14,158,189,67,224,30,63,234,223,115,191,98,204,117,63,234,253,35,191,209,147,210,61,203,160,240,62,61,247,97,191,167,164,126,63,208,147,68,191,190,24,143,62,240,180,155,62,19,188,72,191,138,60,127,63,3,203,94,191,122,233,228,62,220,122,3,62,187,255,40,191,33,143,119,63,12,202,113,191,165,167,25,63,99,219,82,189,118,201,3,191,26,220,103,63,84,243,124,191,233,223,59,63,67,51,107,190,236,155,180,190,178,165,80,63,70,234,127,191,173,1,88,63,75,8,205,190,96,149,55,190,120,172,50,63,73,150,122,191,145,35,109,63,16,233,14,191,243,4,53,63,249,120,91,191,203,160,240,62,99,219,82,61,16,233,14,191,26,220,103,63,167,164,126,191,68,194,76,63,122,226,192,190,126,149,29,190,234,253,35,63,12,202,113,191,73,150,122,63,233,223,59,191,190,24,143,62,65,100,130,62,192,85,55,191,219,39,121,63,234,223,115,191,187,255,40,63,96,149,55,190,236,155,180,190,19,188,72,63,138,225,125,191,191,147,106,63,241,84,20,191,43,14,158,61,122,233,228,62,173,1,88,191,70,234,127,63,3,203,94,191,67,47,252,62,74,237,210,60,236,100,9,191,27,253,100,63,138,60,127,191,178,165,80,63,75,8,205,190,220,122,3,190,67,224,30,63,35,139,111,191,47,218,123,63,47,74,64,191,240,180,155,62,67,51,107,62,120,172,50,191,33,143,119,63,98,204,117,191,220,228,45,63,25,118,81,190,181,54,168,190,208,147,68,63,84,243,124,191,145,35,109,63,165,167,25,191,209,147,210,61,79,11,217,62,182,101,84,191,27,169,127,63,61,247,97,191,118,201,3,63,243,4,53,63,61,247,97,191,16,233,14,63,209,147,210,189,122,226,192,190,208,147,68,63,73,150,122,191,98,204,117,63,192,85,55,191,240,180,155,62,96,149,55,62,67,224,30,191,191,147,106,63,138,60,127,191,173,1,88,63,67,47,252,190,74,237,210,60,122,233,228,62,178,165,80,191,138,225,125,63,35,139,111,191,187,255,40,63,67,51,107,190,65,100,130,190,220,228,45,63,12,202,113,191,84,243,124,63,68,194,76,191,79,11,217,62,99,219,82,61,118,201,3,191,249,120,91,63,27,169,127,191,26,220,103,63,165,167,25,191,126,149,29,62,181,54,168,62,233,223,59,191,33,143,119,63,219,39,121,191,47,74,64,63,236,155,180,190,220,122,3,190,241,84,20,63,27,253,100,191,70,234,127,63,3,203,94,191,236,100,9,63,43,14,158,189,75,8,205,190,19,188,72,63,47,218,123,191,234,223,115,63,120,172,50,191,190,24,143,62,25,118,81,62,234,253,35,191,145,35,109,63,167,164,126,191,182,101,84,63,203,160,240,190,243,4,53,63,26,220,103,191,234,253,35,63,65,100,130,190,96,149,55,190,241,84,20,63,3,203,94,191,138,60,127,63,35,139,111,191,120,172,50,63,181,54,168,190,209,147,210,189,118,201,3,63,182,101,84,191,84,243,124,63,98,204,117,191,47,74,64,63,75,8,205,190,74,237,210,188,122,233,228,62,19,188,72,191,219,39,121,63,73,150,122,191,68,194,76,63,203,160,240,190,99,219,82,61,122,226,192,62,233,223,59,191,234,223,115,63,138,225,125,191,173,1,88,63,236,100,9,191,220,122,3,62,240,180,155,62,220,228,45,191,145,35,109,63,27,169,127,191,61,247,97,63,165,167,25,191,25,118,81,62,67,51,107,62,67,224,30,191,27,253,100,63,70,234,127,191,191,147,106,63,187,255,40,191,190,24,143,62,126,149,29,62,16,233,14,191,249,120,91,63,167,164,126,191,12,202,113,63,192,85,55,191,236,155,180,62,43,14,158,61,67,47,252,190,178,165,80,63,47,218,123,191,33,143,119,63,208,147,68,191,79,11,217,62,243,4,53,63,145,35,109,191,192,85,55,63,75,8,205,190,74,237,210,60,236,155,180,62,220,228,45,191,26,220,103,63,27,169,127,191,12,202,113,63,47,74,64,191,122,233,228,62,43,14,158,189,240,180,155,190,234,253,35,63,61,247,97,191,167,164,126,63,98,204,117,191,19,188,72,63,67,47,252,190,220,122,3,62,65,100,130,62,165,167,25,191,249,120,91,63,84,243,124,191,219,39,121,63,178,165,80,191,236,100,9,63,96,149,55,190,25,118,81,190,16,233,14,63,182,101,84,191,73,150,122,63,47,218,123,191,173,1,88,63,241,84,20,191,67,51,107,62,126,149,29,62,118,201,3,191,68,194,76,63,33,143,119,191,138,225,125,63,3,203,94,191,67,224,30,63,190,24,143,190,209,147,210,189,203,160,240,62,208,147,68,191,234,223,115,63,138,60,127,191,27,253,100,63,187,255,40,191,181,54,168,62,99,219,82,61,79,11,217,190,233,223,59,63,35,139,111,191,70,234,127,63,191,147,106,191,120,172,50,63,122,226,192,190,243,4,53,63,12,202,113,191,19,188,72,63,236,100,9,191,67,51,107,62,209,147,210,61,79,11,217,190,120,172,50,63,27,253,100,191,138,225,125,63,73,150,122,191,249,120,91,63,234,253,35,191,236,155,180,62,74,237,210,188,240,180,155,190,165,167,25,63,182,101,84,191,33,143,119,63,138,60,127,191,191,147,106,63,233,223,59,191,203,160,240,62,126,149,29,190,96,149,55,190,67,47,252,62,47,74,64,191,145,35,109,63,27,169,127,191,98,204,117,63,178,165,80,191,241,84,20,63,190,24,143,190,99,219,82,189,122,226,192,62,187,255,40,191,3,203,94,63,47,218,123,191,84,243,124,63,61,247,97,191,220,228,45,63,75,8,205,190,43,14,158,61,65,100,130,62,16,233,14,191,68,194,76,63,234,223,115,191,70,234,127,63,35,139,111,191,208,147,68,63,118,201,3,191,25,118,81,62,220,122,3,62,122,233,228,190,192,85,55,63,26,220,103,191,167,164,126,63,219,39,121,191,173,1,88,63,67,224,30,191,181,54,168,62,243,4,53,63,98,204,117,191,173,1,88,63,187,255,40,191,79,11,217,62,126,149,29,190,220,122,3,190,75,8,205,62,234,253,35,191,182,101,84,63,234,223,115,191,70,234,127,63,33,143,119,191,249,120,91,63,220,228,45,191,122,233,228,62,96,149,55,190,209,147,210,189,122,226,192,62,67,224,30,191,178,165,80,63,12,202,113,191,27,169,127,63,219,39,121,191,3,203,94,63,120,172,50,191,203,160,240,62,25,118,81,190,43,14,158,189,236,155,180,62,165,167,25,191,68,194,76,63,35,139,111,191,138,60,127,63,73,150,122,191,61,247,97,63,192,85,55,191,67,47,252,62,67,51,107,190,99,219,82,189,181,54,168,62,241,84,20,191,19,188,72,63,145,35,109,191,167,164,126,63,47,218,123,191,27,253,100,63,233,223,59,191,118,201,3,63,65,100,130,190,74,237,210,188,240,180,155,62,16,233,14,191,208,147,68,63,191,147,106,191,138,225,125,63,84,243,124,191,26,220,103,63,47,74,64,191,236,100,9,63,190,24,143,190,243,4,53,63,219,39,121,191,27,253,100,63,208,147,68,191,165,167,25,63,75,8,205,190,96,149,55,62,99,219,82,61,190,24,143,190,67,47,252,62,220,228,45,191,182,101,84,63,35,139,111,191,138,225,125,63,167,164,126,191,12,202,113,63,173,1,88,191,120,172,50,63,118,201,3,191,240,180,155,62,43,14,158,189,126,149,29,190,122,226,192,62,241,84,20,191,47,74,64,63,61,247,97,191,33,143,119,63,70,234,127,191,73,150,122,63,26,220,103,191,19,188,72,63,67,224,30,191,79,11,217,62,25,118,81,190,74,237,210,188,65,100,130,62,203,160,240,190,187,255,40,63,178,165,80,191,145,35,109,63,84,243,124,191,138,60,127,63,234,223,115,191,249,120,91,63,192,85,55,191,236,100,9,63,181,54,168,190,209,147,210,61,220,122,3,62,236,155,180,190,16,233,14,63,233,223,59,191,3,203,94,63,98,204,117,191,27,169,127,63,47,218,123,191,191,147,106,63,68,194,76,191,234,253,35,63,122,233,228,190,67,51,107,62,243,4,53,63,47,218,123,191,35,139,111,63,249,120,91,191,47,74,64,63,67,224,30,191,203,160,240,62,240,180,155,190,220,122,3,62,99,219,82,61,67,51,107,190,75,8,205,62,16,233,14,191,120,172,50,63,178,165,80,191,26,220,103,63,33,143,119,191,138,60,127,63,167,164,126,191,98,204,117,63,27,253,100,191,68,194,76,63,220,228,45,191,236,100,9,63,122,226,192,190,25,118,81,62,74,237,210,188,126,149,29,190,181,54,168,62,67,47,252,190,234,253,35,63,208,147,68,191,3,203,94,63,12,202,113,191,84,243,124,63,70,234,127,191,73,150,122,63,145,35,109,191,173,1,88,63,233,223,59,191,165,167,25,63,122,233,228,190,190,24,143,62,209,147,210,189,43,14,158,189,65,100,130,62,79,11,217,190,241,84,20,63,192,85,55,191,182,101,84,63,191,147,106,191,219,39,121,63,27,169,127,191,138,225,125,63,234,223,115,191,61,247,97,63,19,188,72,191,187,255,40,63,118,201,3,191,236,155,180,62,96,149,55,190,243,4,53,63,138,225,125,191,33,143,119,63,145,35,109,191,3,203,94,63,68,194,76,191,192,85,55,63,67,224,30,191,118,201,3,63,75,8,205,190,190,24,143,62,126,149,29,190,74,237,210,60,209,147,210,61,67,51,107,190,236,155,180,62,203,160,240,190,241,84,20,63,220,228,45,191,208,147,68,63,173,1,88,191,26,220,103,63,234,223,115,191,47,218,123,63,27,169,127,191,138,60,127,63,73,150,122,191,12,202,113,63,27,253,100,191,182,101,84,63,47,74,64,191,187,255,40,63,16,233,14,191,122,233,228,62,181,54,168,190,25,118,81,62,43,14,158,189,99,219,82,189,96,149,55,62,240,180,155,190,79,11,217,62,236,100,9,191,234,253,35,63,233,223,59,191,178,165,80,63,61,247,97,191,35,139,111,63,219,39,121,191,167,164,126,63,70,234,127,191,84,243,124,63,98,204,117,191,191,147,106,63,249,120,91,191,19,188,72,63,120,172,50,191,165,167,25,63,67,47,252,190,122,226,192,62,65,100,130,190,220,122,3,62,243,4,53,63,138,60,127,191,84,243,124,63,219,39,121,191,234,223,115,63,145,35,109,191,27,253,100,63,249,120,91,191,178,165,80,63,208,147,68,191,192,85,55,63,187,255,40,191,165,167,25,63,236,100,9,191,203,160,240,62,75,8,205,190,181,54,168,62,65,100,130,190,96,149,55,62,209,147,210,189,74,237,210,60,99,219,82,61,220,122,3,190,25,118,81,62,190,24,143,190,236,155,180,62,79,11,217,190,67,47,252,62,16,233,14,191,67,224,30,63,220,228,45,191,233,223,59,63,19,188,72,191,182,101,84,63,3,203,94,191,26,220,103,63,35,139,111,191,98,204,117,63,73,150,122,191,138,225,125,63,27,169,127,191,70,234,127,63,167,164,126,191,47,218,123,63,33,143,119,191,12,202,113,63,191,147,106,191,61,247,97,63,173,1,88,191,68,194,76,63,47,74,64,191,120,172,50,63,234,253,35,191,241,84,20,63,118,201,3,191,122,233,228,62,122,226,192,190,240,180,155,62,67,51,107,190,126,149,29,62,43,14,158,189,243,4,53,63,70,234,127,191,27,169,127,63,138,60,127,191,167,164,126,63,138,225,125,191,84,243,124,63,47,218,123,191,73,150,122,63,219,39,121,191,33,143,119,63,98,204,117,191,234,223,115,63,12,202,113,191,35,139,111,63,145,35,109,191,191,147,106,63,26,220,103,191,27,253,100,63,61,247,97,191,3,203,94,63,249,120,91,191,173,1,88,63,182,101,84,191,178,165,80,63,68,194,76,191,19,188,72,63,208,147,68,191,47,74,64,63,233,223,59,191,192,85,55,63,120,172,50,191,220,228,45,63,187,255,40,191,234,253,35,63,67,224,30,191,165,167,25,63,241,84,20,191,16,233,14,63,236,100,9,191,118,201,3,63,67,47,252,190,203,160,240,62,122,233,228,190,79,11,217,62,75,8,205,190,122,226,192,62,236,155,180,190,181,54,168,62,240,180,155,190,190,24,143,62,65,100,130,190,67,51,107,62,25,118,81,190,96,149,55,62,126,149,29,190,220,122,3,62,209,147,210,189,43,14,158,61,99,219,82,189,74,237,210,60,243,4,53,63,248,234,127,63,227,171,127,63,203,66,127,63,194,175,126,63,223,242,125,63,67,12,125,63,18,252,123,63,121,194,122,63,173,95,121,63,231,211,119,63,104,31,118,63,120,66,116,63,102,61,114,63,134,16,112,63,52,188,109,63,210,64,107,63,200,158,104,63,133,214,101,63,126,232,98,63,46,213,95,63,23,157,92,63,192,64,89,63,182,192,85,63,142,29,82,63,222,87,78,63,71,112,74,63,109,103,70,63,249,61,66,63,154,244,61,63,5,140,57,63,243,4,53,63,35,96,48,63,87,158,43,63,89,192,38,63,244,198,33,63,250,178,28,63,65,133,23,63,162,62,18,63,252,223,12,63,47,106,7,63,35,222,1,63,128,121,248,62,229,13,237,62,88,123,225,62,189,195,213,62,3,233,201,62,27,237,189,62,254,209,177,62,170,153,165,62,32,70,153,62,102,217,140,62,135,85,128,62,37,121,103,62,51,33,78,62,98,167,52,62,226,15,27,62,232,94,1,62,86,49,207,61,210,130,155,61,129,117,79,61,141,134,207,60,243,4,53,63,203,66,127,63,67,12,125,63,173,95,121,63,120,66,116,63,52,188,109,63,133,214,101,63,23,157,92,63,142,29,82,63,109,103,70,63,5,140,57,63,87,158,43,63,250,178,28,63,252,223,12,63,128,121,248,62,189,195,213,62,254,209,177,62,102,217,140,62,51,33,78,62,232,94,1,62,129,117,79,61,141,134,207,188,86,49,207,189,98,167,52,190,135,85,128,190,170,153,165,190,3,233,201,190,229,13,237,190,47,106,7,191,65,133,23,191,89,192,38,191,243,4,53,191,249,61,66,191,222,87,78,191,192,64,89,191,126,232,98,191,210,64,107,191,102,61,114,191,231,211,119,191,18,252,123,191,194,175,126,191,248,234,127,191,227,171,127,191,223,242,125,191,121,194,122,191,104,31,118,191,134,16,112,191,200,158,104,191,46,213,95,191,182,192,85,191,71,112,74,191,154,244,61,191,35,96,48,191,244,198,33,191,162,62,18,191,35,222,1,191,88,123,225,190,27,237,189,190,32,70,153,190,37,121,103,190,226,15,27,190,210,130,155,189,243,4,53,63,223,242,125,63,231,211,119,63,52,188,109,63,46,213,95,63,222,87,78,63,5,140,57,63,244,198,33,63,47,106,7,63,189,195,213,62,32,70,153,62,98,167,52,62,129,117,79,61,210,130,155,189,51,33,78,190,170,153,165,190,88,123,225,190,252,223,12,191,89,192,38,191,154,244,61,191,142,29,82,191,126,232,98,191,134,16,112,191,173,95,121,191,194,175,126,191,248,234,127,191,67,12,125,191,104,31,118,191,210,64,107,191,23,157,92,191,71,112,74,191,243,4,53,191,250,178,28,191,35,222,1,191,3,233,201,190,102,217,140,190,226,15,27,190,141,134,207,188,86,49,207,61,37,121,103,62,254,209,177,62,229,13,237,62,162,62,18,63,87,158,43,63,249,61,66,63,182,192,85,63,133,214,101,63,102,61,114,63,121,194,122,63,203,66,127,63,227,171,127,63,18,252,123,63,120,66,116,63,200,158,104,63,192,64,89,63,109,103,70,63,35,96,48,63,65,133,23,63,128,121,248,62,27,237,189,62,135,85,128,62,232,94,1,62,243,4,53,63,18,252,123,63,134,16,112,63,23,157,92,63,249,61,66,63,244,198,33,63,128,121,248,62,170,153,165,62,226,15,27,62,141,134,207,188,51,33,78,190,27,237,189,190,47,106,7,191,87,158,43,191,71,112,74,191,126,232,98,191,120,66,116,191,223,242,125,191,227,171,127,191,173,95,121,191,210,64,107,191,182,192,85,191,5,140,57,191,65,133,23,191,88,123,225,190,102,217,140,190,86,49,207,189,210,130,155,61,135,85,128,62,189,195,213,62,162,62,18,63,243,4,53,63,142,29,82,63,200,158,104,63,231,211,119,63,203,66,127,63,194,175,126,63,104,31,118,63,133,214,101,63,222,87,78,63,35,96,48,63,252,223,12,63,3,233,201,62,37,121,103,62,129,117,79,61,232,94,1,190,32,70,153,190,229,13,237,190,250,178,28,191,154,244,61,191,192,64,89,191,52,188,109,191,121,194,122,191,248,234,127,191,67,12,125,191,102,61,114,191,46,213,95,191,109,103,70,191,89,192,38,191,35,222,1,191,254,209,177,190,98,167,52,190,243,4,53,63,173,95,121,63,133,214,101,63,109,103,70,63,250,178,28,63,189,195,213,62,51,33,78,62,141,134,207,188,135,85,128,190,229,13,237,190,89,192,38,191,222,87,78,191,210,64,107,191,18,252,123,191,227,171,127,191,104,31,118,191,46,213,95,191,154,244,61,191,162,62,18,191,27,237,189,190,226,15,27,190,210,130,155,61,32,70,153,62,35,222,1,63,35,96,48,63,182,192,85,63,134,16,112,63,223,242,125,63,194,175,126,63,102,61,114,63,192,64,89,63,243,4,53,63,47,106,7,63,170,153,165,62,86,49,207,61,232,94,1,190,254,209,177,190,252,223,12,191,5,140,57,191,23,157,92,191,120,66,116,191,203,66,127,191,67,12,125,191,52,188,109,191,142,29,82,191,87,158,43,191,128,121,248,190,102,217,140,190,129,117,79,189,98,167,52,62,3,233,201,62,65,133,23,63,249,61,66,63,126,232,98,63,231,211,119,63,248,234,127,63,121,194,122,63,200,158,104,63,71,112,74,63,244,198,33,63,88,123,225,62,37,121,103,62,243,4,53,63,104,31,118,63,192,64,89,63,87,158,43,63,88,123,225,62,98,167,52,62,86,49,207,189,27,237,189,190,250,178,28,191,222,87,78,191,134,16,112,191,203,66,127,191,121,194,122,191,126,232,98,191,5,140,57,191,35,222,1,191,135,85,128,190,141,134,207,60,32,70,153,62,252,223,12,63,249,61,66,63,200,158,104,63,67,12,125,63,223,242,125,63,210,64,107,63,109,103,70,63,162,62,18,63,170,153,165,62,129,117,79,61,37,121,103,190,128,121,248,190,243,4,53,191,46,213,95,191,173,95,121,191,227,171,127,191,102,61,114,191,142,29,82,191,244,198,33,191,3,233,201,190,232,94,1,190,226,15,27,62,189,195,213,62,89,192,38,63,182,192,85,63,120,66,116,63,248,234,127,63,231,211,119,63,23,157,92,63,35,96,48,63,229,13,237,62,51,33,78,62,210,130,155,189,254,209,177,190,65,133,23,191,71,112,74,191,52,188,109,191,194,175,126,191,18,252,123,191,133,214,101,191,154,244,61,191,47,106,7,191,102,217,140,190,243,4,53,63,102,61,114,63,71,112,74,63,252,223,12,63,135,85,128,62,210,130,155,189,3,233,201,190,87,158,43,191,46,213,95,191,18,252,123,191,67,12,125,191,126,232,98,191,35,96,48,191,189,195,213,190,86,49,207,189,37,121,103,62,47,106,7,63,109,103,70,63,134,16,112,63,248,234,127,63,120,66,116,63,222,87,78,63,162,62,18,63,102,217,140,62,129,117,79,189,27,237,189,190,89,192,38,191,23,157,92,191,121,194,122,191,223,242,125,191,133,214,101,191,243,4,53,191,88,123,225,190,232,94,1,190,51,33,78,62,35,222,1,63,249,61,66,63,52,188,109,63,227,171,127,63,104,31,118,63,142,29,82,63,65,133,23,63,32,70,153,62,141,134,207,188,254,209,177,190,244,198,33,191,192,64,89,191,173,95,121,191,194,175,126,191,200,158,104,191,5,140,57,191,229,13,237,190,226,15,27,190,98,167,52,62,128,121,248,62,154,244,61,63,210,64,107,63,203,66,127,63,231,211,119,63,182,192,85,63,250,178,28,63,170,153,165,62,243,4,53,63,52,188,109,63,5,140,57,63,189,195,213,62,129,117,79,61,170,153,165,190,89,192,38,191,126,232,98,191,194,175,126,191,104,31,118,191,71,112,74,191,35,222,1,191,226,15,27,190,37,121,103,62,162,62,18,63,182,192,85,63,121,194,122,63,18,252,123,63,192,64,89,63,65,133,23,63,135,85,128,62,232,94,1,190,128,121,248,190,109,103,70,191,120,66,116,191,203,66,127,191,133,214,101,191,87,158,43,191,254,209,177,190,141,134,207,60,3,233,201,62,243,4,53,63,210,64,107,63,248,234,127,63,134,16,112,63,154,244,61,63,88,123,225,62,210,130,155,61,32,70,153,190,244,198,33,191,46,213,95,191,223,242,125,191,231,211,119,191,222,87,78,191,47,106,7,191,98,167,52,190,51,33,78,62,252,223,12,63,142,29,82,63,173,95,121,63,67,12,125,63,23,157,92,63,250,178,28,63,102,217,140,62,86,49,207,189,229,13,237,190,249,61,66,191,102,61,114,191,227,171,127,191,200,158,104,191,35,96,48,191,27,237,189,190,243,4,53,63,200,158,104,63,89,192,38,63,102,217,140,62,226,15,27,190,252,223,12,191,192,64,89,191,223,242,125,191,120,66,116,191,154,244,61,191,3,233,201,190,141,134,207,60,88,123,225,62,109,103,70,63,231,211,119,63,18,252,123,63,142,29,82,63,35,222,1,63,86,49,207,61,170,153,165,190,35,96,48,191,52,188,109,191,227,171,127,191,126,232,98,191,250,178,28,191,37,121,103,190,51,33,78,62,65,133,23,63,46,213,95,63,203,66,127,63,134,16,112,63,243,4,53,63,254,209,177,62,210,130,155,189,128,121,248,190,222,87,78,191,121,194,122,191,173,95,121,191,71,112,74,191,229,13,237,190,129,117,79,189,27,237,189,62,5,140,57,63,102,61,114,63,194,175,126,63,23,157,92,63,162,62,18,63,98,167,52,62,135,85,128,190,244,198,33,191,133,214,101,191,248,234,127,191,210,64,107,191,87,158,43,191,32,70,153,190,232,94,1,62,47,106,7,63,182,192,85,63,67,12,125,63,104,31,118,63,249,61,66,63,189,195,213,62,243,4,53,63,126,232,98,63,162,62,18,63,232,94,1,62,254,209,177,190,154,244,61,191,231,211,119,191,173,95,121,191,249,61,66,191,27,237,189,190,86,49,207,61,252,223,12,63,46,213,95,63,248,234,127,63,133,214,101,63,65,133,23,63,226,15,27,62,170,153,165,190,5,140,57,191,104,31,118,191,121,194,122,191,109,103,70,191,3,233,201,190,210,130,155,61,47,106,7,63,23,157,92,63,227,171,127,63,200,158,104,63,250,178,28,63,98,167,52,62,32,70,153,190,243,4,53,191,120,66,116,191,18,252,123,191,71,112,74,191,189,195,213,190,129,117,79,61,35,222,1,63,192,64,89,63,203,66,127,63,210,64,107,63,244,198,33,63,51,33,78,62,102,217,140,190,35,96,48,191,102,61,114,191,67,12,125,191,222,87,78,191,88,123,225,190,141,134,207,60,128,121,248,62,182,192,85,63,194,175,126,63,52,188,109,63,89,192,38,63,37,121,103,62,135,85,128,190,87,158,43,191,134,16,112,191,223,242,125,191,142,29,82,191,229,13,237,190,243,4,53,63,23,157,92,63,128,121,248,62,141,134,207,188,47,106,7,191,126,232,98,191,227,171,127,191,182,192,85,191,88,123,225,190,210,130,155,61,162,62,18,63,200,158,104,63,194,175,126,63,222,87,78,63,3,233,201,62,232,94,1,190,250,178,28,191,52,188,109,191,67,12,125,191,109,103,70,191,254,209,177,190,98,167,52,62,89,192,38,63,102,61,114,63,121,194,122,63,154,244,61,63,32,70,153,62,37,121,103,190,35,96,48,191,104,31,118,191,231,211,119,191,243,4,53,191,135,85,128,190,102,217,140,62,5,140,57,63,173,95,121,63,120,66,116,63,87,158,43,63,51,33,78,62,170,153,165,190,249,61,66,191,18,252,123,191,134,16,112,191,244,198,33,191,226,15,27,190,27,237,189,62,71,112,74,63,223,242,125,63,210,64,107,63,65,133,23,63,86,49,207,61,189,195,213,190,142,29,82,191,203,66,127,191,133,214,101,191,252,223,12,191,129,117,79,189,229,13,237,62,192,64,89,63,248,234,127,63,46,213,95,63,35,222,1,63,243,4,53,63,182,192,85,63,3,233,201,62,98,167,52,190,35,96,48,191,173,95,121,191,134,16,112,191,65,133,23,191,129,117,79,189,35,222,1,63,133,214,101,63,223,242,125,63,249,61,66,63,102,217,140,62,32,70,153,190,109,103,70,191,194,175,126,191,126,232,98,191,128,121,248,190,210,130,155,61,250,178,28,63,102,61,114,63,231,211,119,63,87,158,43,63,226,15,27,62,189,195,213,190,192,64,89,191,248,234,127,191,142,29,82,191,27,237,189,190,51,33,78,62,243,4,53,63,121,194,122,63,52,188,109,63,162,62,18,63,141,134,207,60,47,106,7,191,200,158,104,191,67,12,125,191,154,244,61,191,135,85,128,190,170,153,165,62,71,112,74,63,203,66,127,63,46,213,95,63,229,13,237,62,86,49,207,189,244,198,33,191,120,66,116,191,104,31,118,191,89,192,38,191,232,94,1,190,88,123,225,62,23,157,92,63,227,171,127,63,222,87,78,63,254,209,177,62,37,121,103,190,5,140,57,191,18,252,123,191,210,64,107,191,252,223,12,191,243,4,53,63,222,87,78,63,32,70,153,62,170,153,165,190,142,29,82,191,248,234,127,191,71,112,74,191,102,217,140,190,254,209,177,62,182,192,85,63,227,171,127,63,109,103,70,63,135,85,128,62,27,237,189,190,192,64,89,191,203,66,127,191,249,61,66,191,37,121,103,190,3,233,201,62,23,157,92,63,194,175,126,63,154,244,61,63,51,33,78,62,189,195,213,190,46,213,95,191,223,242,125,191,5,140,57,191,98,167,52,190,88,123,225,62,126,232,98,63,67,12,125,63,243,4,53,63,226,15,27,62,229,13,237,190,133,214,101,191,18,252,123,191,35,96,48,191,232,94,1,190,128,121,248,62,200,158,104,63,121,194,122,63,87,158,43,63,86,49,207,61,35,222,1,191,210,64,107,191,173,95,121,191,89,192,38,191,210,130,155,189,47,106,7,63,52,188,109,63,231,211,119,63,244,198,33,63,129,117,79,61,252,223,12,191,134,16,112,191,104,31,118,191,250,178,28,191,141,134,207,188,162,62,18,63,102,61,114,63,120,66,116,63,65,133,23,63,243,4,53,63,109,103,70,63,51,33,78,62,229,13,237,190,210,64,107,191,104,31,118,191,162,62,18,191,210,130,155,61,35,96,48,63,223,242,125,63,192,64,89,63,170,153,165,62,254,209,177,190,23,157,92,191,67,12,125,191,87,158,43,191,129,117,79,189,65,133,23,63,231,211,119,63,200,158,104,63,88,123,225,62,37,121,103,190,71,112,74,191,248,234,127,191,249,61,66,191,98,167,52,190,128,121,248,62,52,188,109,63,120,66,116,63,252,223,12,63,86,49,207,189,243,4,53,191,194,175,126,191,182,192,85,191,32,70,153,190,27,237,189,62,46,213,95,63,18,252,123,63,89,192,38,63,141,134,207,60,250,178,28,191,173,95,121,191,133,214,101,191,189,195,213,190,135,85,128,62,222,87,78,63,227,171,127,63,154,244,61,63,226,15,27,62,35,222,1,191,134,16,112,191,102,61,114,191,47,106,7,191,232,94,1,62,5,140,57,63,203,66,127,63,142,29,82,63,102,217,140,62,3,233,201,190,126,232,98,191,121,194,122,191,244,198,33,191,243,4,53,63,154,244,61,63,86,49,207,61,65,133,23,191,121,194,122,191,23,157,92,191,32,70,153,190,189,195,213,62,210,64,107,63,102,61,114,63,128,121,248,62,37,121,103,190,142,29,82,191,223,242,125,191,89,192,38,191,141,134,207,60,35,96,48,63,203,66,127,63,71,112,74,63,98,167,52,62,47,106,7,191,104,31,118,191,133,214,101,191,27,237,189,190,254,209,177,62,126,232,98,63,231,211,119,63,252,223,12,63,226,15,27,190,109,103,70,191,227,171,127,191,243,4,53,191,129,117,79,189,244,198,33,63,67,12,125,63,182,192,85,63,135,85,128,62,229,13,237,190,134,16,112,191,52,188,109,191,88,123,225,190,102,217,140,62,192,64,89,63,18,252,123,63,250,178,28,63,210,130,155,189,5,140,57,191,248,234,127,191,249,61,66,191,232,94,1,190,162,62,18,63,173,95,121,63,46,213,95,63,170,153,165,62,3,233,201,190,200,158,104,191,120,66,116,191,35,222,1,191,51,33,78,62,222,87,78,63,194,175,126,63,87,158,43,63,243,4,53,63,243,4,53,63,50,49,141,36,243,4,53,191,0,0,128,191,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,63,243,4,53,63,126,125,176,37,243,4,53,191,0,0,128,191,243,4,53,191,23,22,247,165,243,4,53,63,0,0,128,63,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,191,243,4,53,191,233,136,48,167,243,4,53,63,0,0,128,63,243,4,53,63,8,72,141,166,243,4,53,191,0,0,128,191,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,63,243,4,53,63,119,247,83,166,243,4,53,191,0,0,128,191,243,4,53,191,53,213,83,167,243,4,53,63,0,0,128,63,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,191,243,4,53,191,92,123,101,167,243,4,53,63,0,0,128,63,243,4,53,63,138,140,141,165,243,4,53,191,0,0,128,191,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,63,243,4,53,63,219,176,54,161,243,4,53,191,0,0,128,191,243,4,53,191,243,4,53,63,87,158,43,63,86,49,207,189,222,87,78,191,121,194,122,191,35,222,1,191,32,70,153,62,200,158,104,63,210,64,107,63,170,153,165,62,128,121,248,190,173,95,121,191,142,29,82,191,232,94,1,190,89,192,38,63,248,234,127,63,35,96,48,63,210,130,155,189,71,112,74,191,18,252,123,191,47,106,7,191,102,217,140,62,133,214,101,63,52,188,109,63,254,209,177,62,229,13,237,190,231,211,119,191,182,192,85,191,226,15,27,190,244,198,33,63,227,171,127,63,243,4,53,63,129,117,79,189,109,103,70,191,67,12,125,191,252,223,12,191,135,85,128,62,126,232,98,63,134,16,112,63,27,237,189,62,88,123,225,190,104,31,118,191,192,64,89,191,98,167,52,190,250,178,28,63,203,66,127,63,5,140,57,63,141,134,207,188,249,61,66,191,223,242,125,191,162,62,18,191,37,121,103,62,46,213,95,63,102,61,114,63,3,233,201,62,189,195,213,190,120,66,116,191,23,157,92,191,51,33,78,190,65,133,23,63,194,175,126,63,154,244,61,63,243,4,53,63,244,198,33,63,51,33,78,190,126,232,98,191,210,64,107,191,102,217,140,190,162,62,18,63,203,66,127,63,35,96,48,63,232,94,1,190,192,64,89,191,102,61,114,191,254,209,177,190,35,222,1,63,67,12,125,63,154,244,61,63,129,117,79,189,222,87,78,191,231,211,119,191,189,195,213,190,88,123,225,62,173,95,121,63,71,112,74,63,141,134,207,60,249,61,66,191,18,252,123,191,128,121,248,190,27,237,189,62,120,66,116,63,182,192,85,63,86,49,207,61,243,4,53,191,194,175,126,191,252,223,12,191,32,70,153,62,52,188,109,63,46,213,95,63,98,167,52,62,89,192,38,191,248,234,127,191,250,178,28,191,37,121,103,62,133,214,101,63,200,158,104,63,135,85,128,62,65,133,23,191,227,171,127,191,87,158,43,191,226,15,27,62,23,157,92,63,134,16,112,63,170,153,165,62,47,106,7,191,223,242,125,191,5,140,57,191,210,130,155,61,142,29,82,63,104,31,118,63,3,233,201,62,229,13,237,190,121,194,122,191,109,103,70,191,243,4,53,63,65,133,23,63,32,70,153,190,102,61,114,191,142,29,82,191,141,134,207,188,71,112,74,63,104,31,118,63,254,209,177,62,252,223,12,191,227,171,127,191,244,198,33,191,135,85,128,62,52,188,109,63,192,64,89,63,210,130,155,61,249,61,66,191,173,95,121,191,3,233,201,190,35,222,1,63,194,175,126,63,87,158,43,63,51,33,78,190,200,158,104,191,46,213,95,191,232,94,1,190,5,140,57,63,18,252,123,63,88,123,225,62,229,13,237,190,67,12,125,191,243,4,53,191,226,15,27,62,126,232,98,63,133,214,101,63,98,167,52,62,35,96,48,191,223,242,125,191,128,121,248,190,189,195,213,62,121,194,122,63,154,244,61,63,86,49,207,189,23,157,92,191,210,64,107,191,37,121,103,190,89,192,38,63,203,66,127,63,47,106,7,63,27,237,189,190,231,211,119,191,109,103,70,191,129,117,79,61,182,192,85,63,134,16,112,63,102,217,140,62,250,178,28,191,248,234,127,191,162,62,18,191,170,153,165,62,120,66,116,63,222,87,78,63,243,4,53,63,252,223,12,63,3,233,201,190,18,252,123,191,35,96,48,191,37,121,103,62,134,16,112,63,222,87,78,63,129,117,79,189,23,157,92,191,133,214,101,191,232,94,1,190,249,61,66,63,104,31,118,63,32,70,153,62,244,198,33,191,194,175,126,191,229,13,237,190,128,121,248,62,203,66,127,63,250,178,28,63,170,153,165,190,231,211,119,191,154,244,61,191,226,15,27,62,200,158,104,63,192,64,89,63,141,134,207,60,142,29,82,191,52,188,109,191,51,33,78,190,243,4,53,63,121,194,122,63,27,237,189,62,162,62,18,191,248,234,127,191,47,106,7,191,189,195,213,62,67,12,125,63,87,158,43,63,135,85,128,190,102,61,114,191,71,112,74,191,210,130,155,61,46,213,95,63,126,232,98,63,86,49,207,61,109,103,70,191,120,66,116,191,102,217,140,190,89,192,38,63,223,242,125,63,88,123,225,62,35,222,1,191,227,171,127,191,65,133,23,191,254,209,177,62,173,95,121,63,5,140,57,63,98,167,52,190,210,64,107,191,182,192,85,191,243,4,53,63,35,222,1,63,128,121,248,190,248,234,127,191,47,106,7,191,229,13,237,62,227,171,127,63,252,223,12,63,88,123,225,190,203,66,127,191,162,62,18,191,189,195,213,62,194,175,126,63,65,133,23,63,3,233,201,190,223,242,125,191,250,178,28,191,27,237,189,62,67,12,125,63,244,198,33,63,254,209,177,190,18,252,123,191,89,192,38,191,170,153,165,62,121,194,122,63,87,158,43,63,32,70,153,190,173,95,121,191,35,96,48,191,102,217,140,62,231,211,119,63,243,4,53,63,135,85,128,190,104,31,118,191,5,140,57,191,37,121,103,62,120,66,116,63,154,244,61,63,51,33,78,190,102,61,114,191,249,61,66,191,98,167,52,62,134,16,112,63,109,103,70,63,226,15,27,190,52,188,109,191,71,112,74,191,232,94,1,62,210,64,107,63,222,87,78,63,86,49,207,189,200,158,104,191,142,29,82,191,210,130,155,61,133,214,101,63,182,192,85,63,129,117,79,189,126,232,98,191,192,64,89,191,141,134,207,60,46,213,95,63,23,157,92,63,243,4,53,63,229,13,237,62,162,62,18,191,223,242,125,191,254,209,177,190,87,158,43,63,231,211,119,63,37,121,103,62,249,61,66,191,52,188,109,191,86,49,207,189,182,192,85,63,46,213,95,63,141,134,207,188,133,214,101,191,222,87,78,191,226,15,27,62,102,61,114,63,5,140,57,63,102,217,140,190,121,194,122,191,244,198,33,191,3,233,201,62,203,66,127,63,47,106,7,63,35,222,1,191,227,171,127,191,189,195,213,190,250,178,28,63,18,252,123,63,32,70,153,62,243,4,53,191,120,66,116,191,98,167,52,190,71,112,74,63,200,158,104,63,129,117,79,61,23,157,92,191,192,64,89,191,210,130,155,61,210,64,107,63,109,103,70,63,51,33,78,190,104,31,118,191,35,96,48,191,170,153,165,62,67,12,125,63,65,133,23,63,88,123,225,190,248,234,127,191,128,121,248,190,252,223,12,63,194,175,126,63,27,237,189,62,89,192,38,191,173,95,121,191,135,85,128,190,154,244,61,63,134,16,112,63,232,94,1,62,142,29,82,191,126,232,98,191,243,4,53,63,189,195,213,62,89,192,38,191,104,31,118,191,226,15,27,190,182,192,85,63,192,64,89,63,232,94,1,190,120,66,116,191,87,158,43,191,3,233,201,62,248,234,127,63,88,123,225,62,244,198,33,191,231,211,119,191,98,167,52,190,142,29,82,63,23,157,92,63,86,49,207,189,102,61,114,191,35,96,48,191,27,237,189,62,227,171,127,63,229,13,237,62,250,178,28,191,173,95,121,191,51,33,78,190,222,87,78,63,46,213,95,63,210,130,155,189,134,16,112,191,243,4,53,191,254,209,177,62,203,66,127,63,128,121,248,62,65,133,23,191,121,194,122,191,37,121,103,190,71,112,74,63,126,232,98,63,129,117,79,189,52,188,109,191,5,140,57,191,170,153,165,62,194,175,126,63,35,222,1,63,162,62,18,191,18,252,123,191,135,85,128,190,109,103,70,63,133,214,101,63,141,134,207,188,210,64,107,191,154,244,61,191,32,70,153,62,223,242,125,63,47,106,7,63,252,223,12,191,67,12,125,191,102,217,140,190,249,61,66,63,200,158,104,63,243,4,53,63,27,237,189,62,5,140,57,191,200,158,104,191,129,117,79,61,102,61,114,63,89,192,38,63,229,13,237,190,194,175,126,191,102,217,140,190,71,112,74,63,23,157,92,63,226,15,27,190,173,95,121,191,162,62,18,191,252,223,12,63,121,194,122,63,98,167,52,62,192,64,89,191,222,87,78,191,135,85,128,62,223,242,125,63,128,121,248,62,244,198,33,191,120,66,116,191,210,130,155,189,133,214,101,63,154,244,61,63,254,209,177,190,248,234,127,191,3,233,201,190,243,4,53,63,210,64,107,63,141,134,207,188,134,16,112,191,87,158,43,191,88,123,225,62,203,66,127,63,32,70,153,62,109,103,70,191,46,213,95,191,232,94,1,62,231,211,119,63,65,133,23,63,47,106,7,191,18,252,123,191,51,33,78,190,182,192,85,63,142,29,82,63,37,121,103,190,67,12,125,191,35,222,1,191,250,178,28,63,104,31,118,63,86,49,207,61,126,232,98,191,249,61,66,191,170,153,165,62,227,171,127,63,189,195,213,62,35,96,48,191,52,188,109,191,243,4,53,63,170,153,165,62,71,112,74,191,182,192,85,191,135,85,128,62,203,66,127,63,3,233,201,62,154,244,61,191,46,213,95,191,98,167,52,62,67,12,125,63,229,13,237,62,35,96,48,191,200,158,104,191,86,49,207,61,173,95,121,63,47,106,7,63,244,198,33,191,134,16,112,191,141,134,207,60,120,66,116,63,65,133,23,63,162,62,18,191,104,31,118,191,129,117,79,189,52,188,109,63,89,192,38,63,35,222,1,191,121,194,122,191,232,94,1,190,133,214,101,63,243,4,53,63,88,123,225,190,223,242,125,191,51,33,78,190,23,157,92,63,249,61,66,63,27,237,189,190,227,171,127,191,102,217,140,190,142,29,82,63,222,87,78,63,32,70,153,190,248,234,127,191,254,209,177,190,109,103,70,63,192,64,89,63,37,121,103,190,194,175,126,191,189,195,213,190,5,140,57,63,126,232,98,63,226,15,27,190,18,252,123,191,128,121,248,190,87,158,43,63,210,64,107,63,210,130,155,189,231,211,119,191,252,223,12,191,250,178,28,63,102,61,114,63,243,4,53,63,102,217,140,62,192,64,89,191,154,244,61,191,88,123,225,62,18,252,123,63,86,49,207,61,52,188,109,191,250,178,28,191,65,133,23,63,134,16,112,63,210,130,155,189,121,194,122,191,229,13,237,190,5,140,57,63,23,157,92,63,135,85,128,190,248,234,127,191,32,70,153,190,182,192,85,63,249,61,66,63,189,195,213,190,67,12,125,191,232,94,1,190,210,64,107,63,244,198,33,63,162,62,18,191,102,61,114,191,129,117,79,61,173,95,121,63,128,121,248,62,243,4,53,191,46,213,95,191,37,121,103,62,227,171,127,63,170,153,165,62,142,29,82,191,109,103,70,191,3,233,201,62,223,242,125,63,226,15,27,62,200,158,104,191,89,192,38,191,252,223,12,63,120,66,116,63,141,134,207,188,231,211,119,191,35,222,1,191,35,96,48,63,126,232,98,63,51,33,78,190,203,66,127,191,254,209,177,190,222,87,78,63,71,112,74,63,27,237,189,190,194,175,126,191,98,167,52,190,133,214,101,63,87,158,43,63,47,106,7,191,104,31,118,191,243,4,53,63,37,121,103,62,133,214,101,191,244,198,33,191,250,178,28,63,200,158,104,63,51,33,78,190,248,234,127,191,135,85,128,190,126,232,98,63,89,192,38,63,65,133,23,191,210,64,107,191,98,167,52,62,227,171,127,63,102,217,140,62,46,213,95,191,87,158,43,191,162,62,18,63,52,188,109,63,226,15,27,190,203,66,127,191,32,70,153,190,23,157,92,63,35,96,48,63,252,223,12,191,134,16,112,191,232,94,1,62,194,175,126,63,170,153,165,62,192,64,89,191,243,4,53,191,47,106,7,63,102,61,114,63,86,49,207,189,223,242,125,191,254,209,177,190,182,192,85,63,5,140,57,63,35,222,1,191,120,66,116,191,210,130,155,61,67,12,125,63,27,237,189,62,142,29,82,191,154,244,61,191,128,121,248,62,104,31,118,63,129,117,79,189,18,252,123,191,3,233,201,190,222,87,78,63,249,61,66,63,229,13,237,190,231,211,119,191,141,134,207,60,121,194,122,63,189,195,213,62,71,112,74,191,109,103,70,191,88,123,225,62,173,95,121,63,243,4,53,63,98,167,52,62,134,16,112,191,35,222,1,191,249,61,66,63,109,103,70,63,128,121,248,190,102,61,114,191,226,15,27,62,248,234,127,63,51,33,78,62,52,188,109,191,47,106,7,191,154,244,61,63,71,112,74,63,229,13,237,190,120,66,116,191,232,94,1,62,227,171,127,63,37,121,103,62,210,64,107,191,252,223,12,191,5,140,57,63,222,87,78,63,88,123,225,190,104,31,118,191,86,49,207,61,203,66,127,63,135,85,128,62,200,158,104,191,162,62,18,191,243,4,53,63,142,29,82,63,189,195,213,190,231,211,119,191,210,130,155,61,194,175,126,63,102,217,140,62,133,214,101,191,65,133,23,191,35,96,48,63,182,192,85,63,3,233,201,190,173,95,121,191,129,117,79,61,223,242,125,63,32,70,153,62,126,232,98,191,250,178,28,191,87,158,43,63,192,64,89,63,27,237,189,190,121,194,122,191,141,134,207,60,67,12,125,63,170,153,165,62,46,213,95,191,244,198,33,191,89,192,38,63,23,157,92,63,254,209,177,190,18,252,123,191,243,4,53,63,232,94,1,62,231,211,119,191,27,237,189,190,46,213,95,63,65,133,23,63,5,140,57,191,109,103,70,191,47,106,7,63,200,158,104,63,32,70,153,190,18,252,123,191,129,117,79,61,203,66,127,63,51,33,78,62,102,61,114,191,88,123,225,190,182,192,85,63,89,192,38,63,87,158,43,191,142,29,82,191,229,13,237,62,134,16,112,63,37,121,103,190,194,175,126,191,141,134,207,188,67,12,125,63,102,217,140,62,210,64,107,191,35,222,1,191,71,112,74,63,243,4,53,63,250,178,28,191,23,157,92,191,3,233,201,62,104,31,118,63,226,15,27,190,248,234,127,191,86,49,207,189,173,95,121,63,254,209,177,62,126,232,98,191,162,62,18,191,154,244,61,63,249,61,66,63,252,223,12,191,133,214,101,191,170,153,165,62,121,194,122,63,210,130,155,189,227,171,127,191,98,167,52,190,120,66,116,63,189,195,213,62,192,64,89,191,244,198,33,191,35,96,48,63,222,87,78,63,128,121,248,190,52,188,109,191,135,85,128,62,223,242,125,63,243,4,53,63,210,130,155,61,67,12,125,191,37,121,103,190,120,66,116,63,27,237,189,62,133,214,101,191,35,222,1,191,142,29,82,63,244,198,33,63,5,140,57,191,154,244,61,191,250,178,28,63,182,192,85,63,128,121,248,190,200,158,104,191,254,209,177,62,104,31,118,63,51,33,78,190,223,242,125,191,129,117,79,61,248,234,127,63,86,49,207,61,18,252,123,191,135,85,128,190,102,61,114,63,3,233,201,62,126,232,98,191,47,106,7,191,222,87,78,63,89,192,38,63,243,4,53,191,249,61,66,191,65,133,23,63,192,64,89,63,229,13,237,190,210,64,107,191,170,153,165,62,231,211,119,63,98,167,52,190,194,175,126,191,141,134,207,60,227,171,127,63,232,94,1,62,121,194,122,191,102,217,140,190,134,16,112,63,189,195,213,62,46,213,95,191,252,223,12,191,71,112,74,63,87,158,43,63,35,96,48,191,109,103,70,191,162,62,18,63,23,157,92,63,88,123,225,190,52,188,109,191,32,70,153,62,173,95,121,63,226,15,27,190,203,66,127,191,243,4,53,63,141,134,207,60,227,171,127,191,210,130,155,189,194,175,126,63,232,94,1,62,67,12,125,191,98,167,52,190,121,194,122,63,37,121,103,62,231,211,119,191,102,217,140,190,120,66,116,63,170,153,165,62,134,16,112,191,27,237,189,190,210,64,107,63,189,195,213,62,133,214,101,191,229,13,237,190,46,213,95,63,35,222,1,63,192,64,89,191,252,223,12,191,142,29,82,63,65,133,23,63,71,112,74,191,244,198,33,191,249,61,66,63,87,158,43,63,5,140,57,191,243,4,53,191,35,96,48,63,154,244,61,63,89,192,38,191,109,103,70,191,250,178,28,63,222,87,78,63,162,62,18,191,182,192,85,191,47,106,7,63,23,157,92,63,128,121,248,190,126,232,98,191,88,123,225,62,200,158,104,63,3,233,201,190,52,188,109,191,254,209,177,62,102,61,114,63,32,70,153,190,104,31,118,191,135,85,128,62,173,95,121,63,51,33,78,190,18,252,123,191,226,15,27,62,223,242,125,63,86,49,207,189,203,66,127,191,129,117,79,61,248,234,127,63,243,4,53,63,141,134,207,188,227,171,127,191,210,130,155,61,194,175,126,63,232,94,1,190,67,12,125,191,98,167,52,62,121,194,122,63,37,121,103,190,231,211,119,191,102,217,140,62,120,66,116,63,170,153,165,190,134,16,112,191,27,237,189,62,210,64,107,63,189,195,213,190,133,214,101,191,229,13,237,62,46,213,95,63,35,222,1,191,192,64,89,191,252,223,12,63,142,29,82,63,65,133,23,191,71,112,74,191,244,198,33,63,249,61,66,63,87,158,43,191,5,140,57,191,243,4,53,63,35,96,48,63,154,244,61,191,89,192,38,191,109,103,70,63,250,178,28,63,222,87,78,191,162,62,18,191,182,192,85,63,47,106,7,63,23,157,92,191,128,121,248,190,126,232,98,63,88,123,225,62,200,158,104,191,3,233,201,190,52,188,109,63,254,209,177,62,102,61,114,191,32,70,153,190,104,31,118,63,135,85,128,62,173,95,121,191,51,33,78,190,18,252,123,63,226,15,27,62,223,242,125,191,86,49,207,189,203,66,127,63,129,117,79,61,248,234,127,191,243,4,53,63,210,130,155,189,67,12,125,191,37,121,103,62,120,66,116,63,27,237,189,190,133,214,101,191,35,222,1,63,142,29,82,63,244,198,33,191,5,140,57,191,154,244,61,63,250,178,28,63,182,192,85,191,128,121,248,190,200,158,104,63,254,209,177,62,104,31,118,191,51,33,78,190,223,242,125,63,129,117,79,61,248,234,127,191,86,49,207,61,18,252,123,63,135,85,128,190,102,61,114,191,3,233,201,62,126,232,98,63,47,106,7,191,222,87,78,191,89,192,38,63,243,4,53,63,249,61,66,191,65,133,23,191,192,64,89,63,229,13,237,62,210,64,107,191,170,153,165,190,231,211,119,63,98,167,52,62,194,175,126,191,141,134,207,188,227,171,127,63,232,94,1,190,121,194,122,191,102,217,140,62,134,16,112,63,189,195,213,190,46,213,95,191,252,223,12,63,71,112,74,63,87,158,43,191,35,96,48,191,109,103,70,63,162,62,18,63,23,157,92,191,88,123,225,190,52,188,109,63,32,70,153,62,173,95,121,191,226,15,27,190,203,66,127,63,243,4,53,63,232,94,1,190,231,211,119,191,27,237,189,62,46,213,95,63,65,133,23,191,5,140,57,191,109,103,70,63,47,106,7,63,200,158,104,191,32,70,153,190,18,252,123,63,129,117,79,61,203,66,127,191,51,33,78,62,102,61,114,63,88,123,225,190,182,192,85,191,89,192,38,63,87,158,43,63,142,29,82,191,229,13,237,190,134,16,112,63,37,121,103,62,194,175,126,191,141,134,207,60,67,12,125,63,102,217,140,190,210,64,107,191,35,222,1,63,71,112,74,63,243,4,53,191,250,178,28,191,23,157,92,63,3,233,201,62,104,31,118,191,226,15,27,190,248,234,127,63,86,49,207,189,173,95,121,191,254,209,177,62,126,232,98,63,162,62,18,191,154,244,61,191,249,61,66,63,252,223,12,63,133,214,101,191,170,153,165,190,121,194,122,63,210,130,155,61,227,171,127,191,98,167,52,62,120,66,116,63,189,195,213,190,192,64,89,191,244,198,33,63,35,96,48,63,222,87,78,191,128,121,248,190,52,188,109,63,135,85,128,62,223,242,125,191,243,4,53,63,98,167,52,190,134,16,112,191,35,222,1,63,249,61,66,63,109,103,70,191,128,121,248,190,102,61,114,63,226,15,27,62,248,234,127,191,51,33,78,62,52,188,109,63,47,106,7,191,154,244,61,191,71,112,74,63,229,13,237,62,120,66,116,191,232,94,1,190,227,171,127,63,37,121,103,190,210,64,107,191,252,223,12,63,5,140,57,63,222,87,78,191,88,123,225,190,104,31,118,63,86,49,207,61,203,66,127,191,135,85,128,62,200,158,104,63,162,62,18,191,243,4,53,191,142,29,82,63,189,195,213,62,231,211,119,191,210,130,155,189,194,175,126,63,102,217,140,190,133,214,101,191,65,133,23,63,35,96,48,63,182,192,85,191,3,233,201,190,173,95,121,63,129,117,79,61,223,242,125,191,32,70,153,62,126,232,98,63,250,178,28,191,87,158,43,191,192,64,89,63,27,237,189,62,121,194,122,191,141,134,207,188,67,12,125,63,170,153,165,190,46,213,95,191,244,198,33,63,89,192,38,63,23,157,92,191,254,209,177,190,18,252,123,63,243,4,53,63,37,121,103,190,133,214,101,191,244,198,33,63,250,178,28,63,200,158,104,191,51,33,78,190,248,234,127,63,135,85,128,190,126,232,98,191,89,192,38,63,65,133,23,63,210,64,107,191,98,167,52,190,227,171,127,63,102,217,140,190,46,213,95,191,87,158,43,63,162,62,18,63,52,188,109,191,226,15,27,190,203,66,127,63,32,70,153,190,23,157,92,191,35,96,48,63,252,223,12,63,134,16,112,191,232,94,1,190,194,175,126,63,170,153,165,190,192,64,89,191,243,4,53,63,47,106,7,63,102,61,114,191,86,49,207,189,223,242,125,63,254,209,177,190,182,192,85,191,5,140,57,63,35,222,1,63,120,66,116,191,210,130,155,189,67,12,125,63,27,237,189,190,142,29,82,191,154,244,61,63,128,121,248,62,104,31,118,191,129,117,79,189,18,252,123,63,3,233,201,190,222,87,78,191,249,61,66,63,229,13,237,62,231,211,119,191,141,134,207,188,121,194,122,63,189,195,213,190,71,112,74,191,109,103,70,63,88,123,225,62,173,95,121,191,243,4,53,63,102,217,140,190,192,64,89,191,154,244,61,63,88,123,225,62,18,252,123,191,86,49,207,61,52,188,109,63,250,178,28,191,65,133,23,191,134,16,112,63,210,130,155,61,121,194,122,191,229,13,237,62,5,140,57,63,23,157,92,191,135,85,128,190,248,234,127,63,32,70,153,190,182,192,85,191,249,61,66,63,189,195,213,62,67,12,125,191,232,94,1,62,210,64,107,63,244,198,33,191,162,62,18,191,102,61,114,63,129,117,79,61,173,95,121,191,128,121,248,62,243,4,53,63,46,213,95,191,37,121,103,190,227,171,127,63,170,153,165,190,142,29,82,191,109,103,70,63,3,233,201,62,223,242,125,191,226,15,27,62,200,158,104,63,89,192,38,191,252,223,12,191,120,66,116,63,141,134,207,60,231,211,119,191,35,222,1,63,35,96,48,63,126,232,98,191,51,33,78,190,203,66,127,63,254,209,177,190,222,87,78,191,71,112,74,63,27,237,189,62,194,175,126,191,98,167,52,62,133,214,101,63,87,158,43,191,47,106,7,191,104,31,118,63,243,4,53,63,170,153,165,190,71,112,74,191,182,192,85,63,135,85,128,62,203,66,127,191,3,233,201,62,154,244,61,63,46,213,95,191,98,167,52,190,67,12,125,63,229,13,237,190,35,96,48,191,200,158,104,63,86,49,207,61,173,95,121,191,47,106,7,63,244,198,33,63,134,16,112,191,141,134,207,188,120,66,116,63,65,133,23,191,162,62,18,191,104,31,118,63,129,117,79,189,52,188,109,191,89,192,38,63,35,222,1,63,121,194,122,191,232,94,1,62,133,214,101,63,243,4,53,191,88,123,225,190,223,242,125,63,51,33,78,190,23,157,92,191,249,61,66,63,27,237,189,62,227,171,127,191,102,217,140,62,142,29,82,63,222,87,78,191,32,70,153,190,248,234,127,63,254,209,177,190,109,103,70,191,192,64,89,63,37,121,103,62,194,175,126,191,189,195,213,62,5,140,57,63,126,232,98,191,226,15,27,190,18,252,123,63,128,121,248,190,87,158,43,191,210,64,107,63,210,130,155,61,231,211,119,191,252,223,12,63,250,178,28,63,102,61,114,191,243,4,53,63,27,237,189,190,5,140,57,191,200,158,104,63,129,117,79,61,102,61,114,191,89,192,38,63,229,13,237,62,194,175,126,191,102,217,140,62,71,112,74,63,23,157,92,191,226,15,27,190,173,95,121,63,162,62,18,191,252,223,12,191,121,194,122,63,98,167,52,190,192,64,89,191,222,87,78,63,135,85,128,62,223,242,125,191,128,121,248,62,244,198,33,63,120,66,116,191,210,130,155,61,133,214,101,63,154,244,61,191,254,209,177,190,248,234,127,63,3,233,201,190,243,4,53,191,210,64,107,63,141,134,207,60,134,16,112,191,87,158,43,63,88,123,225,62,203,66,127,191,32,70,153,62,109,103,70,63,46,213,95,191,232,94,1,190,231,211,119,63,65,133,23,191,47,106,7,191,18,252,123,63,51,33,78,190,182,192,85,191,142,29,82,63,37,121,103,62,67,12,125,191,35,222,1,63,250,178,28,63,104,31,118,191,86,49,207,61,126,232,98,63,249,61,66,191,170,153,165,190,227,171,127,63,189,195,213,190,35,96,48,191,52,188,109,63,243,4,53,63,189,195,213,190,89,192,38,191,104,31,118,63,226,15,27,190,182,192,85,191,192,64,89,63,232,94,1,62,120,66,116,191,87,158,43,63,3,233,201,62,248,234,127,191,88,123,225,62,244,198,33,63,231,211,119,191,98,167,52,62,142,29,82,63,23,157,92,191,86,49,207,189,102,61,114,63,35,96,48,191,27,237,189,190,227,171,127,63,229,13,237,190,250,178,28,191,173,95,121,63,51,33,78,190,222,87,78,191,46,213,95,63,210,130,155,61,134,16,112,191,243,4,53,63,254,209,177,62,203,66,127,191,128,121,248,62,65,133,23,63,121,194,122,191,37,121,103,62,71,112,74,63,126,232,98,191,129,117,79,189,52,188,109,63,5,140,57,191,170,153,165,190,194,175,126,63,35,222,1,191,162,62,18,191,18,252,123,63,135,85,128,190,109,103,70,191,133,214,101,63,141,134,207,60,210,64,107,191,154,244,61,63,32,70,153,62,223,242,125,191,47,106,7,63,252,223,12,63,67,12,125,191,102,217,140,62,249,61,66,63,200,158,104,191,243,4,53,63,229,13,237,190,162,62,18,191,223,242,125,63,254,209,177,190,87,158,43,191,231,211,119,63,37,121,103,190,249,61,66,191,52,188,109,63,86,49,207,189,182,192,85,191,46,213,95,63,141,134,207,60,133,214,101,191,222,87,78,63,226,15,27,62,102,61,114,191,5,140,57,63,102,217,140,62,121,194,122,191,244,198,33,63,3,233,201,62,203,66,127,191,47,106,7,63,35,222,1,63,227,171,127,191,189,195,213,62,250,178,28,63,18,252,123,191,32,70,153,62,243,4,53,63,120,66,116,191,98,167,52,62,71,112,74,63,200,158,104,191,129,117,79,61,23,157,92,63,192,64,89,191,210,130,155,189,210,64,107,63,109,103,70,191,51,33,78,190,104,31,118,63,35,96,48,191,170,153,165,190,67,12,125,63,65,133,23,191,88,123,225,190,248,234,127,63,128,121,248,190,252,223,12,191,194,175,126,63,27,237,189,190,89,192,38,191,173,95,121,63,135,85,128,190,154,244,61,191,134,16,112,63,232,94,1,190,142,29,82,191,126,232,98,63,243,4,53,63,35,222,1,191,128,121,248,190,248,234,127,63,47,106,7,191,229,13,237,190,227,171,127,63,252,223,12,191,88,123,225,190,203,66,127,63,162,62,18,191,189,195,213,190,194,175,126,63,65,133,23,191,3,233,201,190,223,242,125,63,250,178,28,191,27,237,189,190,67,12,125,63,244,198,33,191,254,209,177,190,18,252,123,63,89,192,38,191,170,153,165,190,121,194,122,63,87,158,43,191,32,70,153,190,173,95,121,63,35,96,48,191,102,217,140,190,231,211,119,63,243,4,53,191,135,85,128,190,104,31,118,63,5,140,57,191,37,121,103,190,120,66,116,63,154,244,61,191,51,33,78,190,102,61,114,63,249,61,66,191,98,167,52,190,134,16,112,63,109,103,70,191,226,15,27,190,52,188,109,63,71,112,74,191,232,94,1,190,210,64,107,63,222,87,78,191,86,49,207,189,200,158,104,63,142,29,82,191,210,130,155,189,133,214,101,63,182,192,85,191,129,117,79,189,126,232,98,63,192,64,89,191,141,134,207,188,46,213,95,63,23,157,92,191,243,4,53,63,252,223,12,191,3,233,201,190,18,252,123,63,35,96,48,191,37,121,103,190,134,16,112,63,222,87,78,191,129,117,79,189,23,157,92,63,133,214,101,191,232,94,1,62,249,61,66,63,104,31,118,191,32,70,153,62,244,198,33,63,194,175,126,191,229,13,237,62,128,121,248,62,203,66,127,191,250,178,28,63,170,153,165,62,231,211,119,191,154,244,61,63,226,15,27,62,200,158,104,191,192,64,89,63,141,134,207,188,142,29,82,191,52,188,109,63,51,33,78,190,243,4,53,191,121,194,122,63,27,237,189,190,162,62,18,191,248,234,127,63,47,106,7,191,189,195,213,190,67,12,125,63,87,158,43,191,135,85,128,190,102,61,114,63,71,112,74,191,210,130,155,189,46,213,95,63,126,232,98,191,86,49,207,61,109,103,70,63,120,66,116,191,102,217,140,62,89,192,38,63,223,242,125,191,88,123,225,62,35,222,1,63,227,171,127,191,65,133,23,63,254,209,177,62,173,95,121,191,5,140,57,63,98,167,52,62,210,64,107,191,182,192,85,63,243,4,53,63,65,133,23,191,32,70,153,190,102,61,114,63,142,29,82,191,141,134,207,60,71,112,74,63,104,31,118,191,254,209,177,62,252,223,12,63,227,171,127,191,244,198,33,63,135,85,128,62,52,188,109,191,192,64,89,63,210,130,155,189,249,61,66,191,173,95,121,63,3,233,201,190,35,222,1,191,194,175,126,63,87,158,43,191,51,33,78,190,200,158,104,63,46,213,95,191,232,94,1,62,5,140,57,63,18,252,123,191,88,123,225,62,229,13,237,62,67,12,125,191,243,4,53,63,226,15,27,62,126,232,98,191,133,214,101,63,98,167,52,190,35,96,48,191,223,242,125,63,128,121,248,190,189,195,213,190,121,194,122,63,154,244,61,191,86,49,207,189,23,157,92,63,210,64,107,191,37,121,103,62,89,192,38,63,203,66,127,191,47,106,7,63,27,237,189,62,231,211,119,191,109,103,70,63,129,117,79,61,182,192,85,191,134,16,112,63,102,217,140,190,250,178,28,191,248,234,127,63,162,62,18,191,170,153,165,190,120,66,116,63,222,87,78,191,243,4,53,63,244,198,33,191,51,33,78,190,126,232,98,63,210,64,107,191,102,217,140,62,162,62,18,63,203,66,127,191,35,96,48,63,232,94,1,62,192,64,89,191,102,61,114,63,254,209,177,190,35,222,1,191,67,12,125,63,154,244,61,191,129,117,79,189,222,87,78,63,231,211,119,191,189,195,213,62,88,123,225,62,173,95,121,191,71,112,74,63,141,134,207,188,249,61,66,191,18,252,123,63,128,121,248,190,27,237,189,190,120,66,116,63,182,192,85,191,86,49,207,61,243,4,53,63,194,175,126,191,252,223,12,63,32,70,153,62,52,188,109,191,46,213,95,63,98,167,52,190,89,192,38,191,248,234,127,63,250,178,28,191,37,121,103,190,133,214,101,63,200,158,104,191,135,85,128,62,65,133,23,63,227,171,127,191,87,158,43,63,226,15,27,62,23,157,92,191,134,16,112,63,170,153,165,190,47,106,7,191,223,242,125,63,5,140,57,191,210,130,155,189,142,29,82,63,104,31,118,191,3,233,201,62,229,13,237,62,121,194,122,191,109,103,70,63,243,4,53,63,87,158,43,191,86,49,207,189,222,87,78,63,121,194,122,191,35,222,1,63,32,70,153,62,200,158,104,191,210,64,107,63,170,153,165,190,128,121,248,190,173,95,121,63,142,29,82,191,232,94,1,62,89,192,38,63,248,234,127,191,35,96,48,63,210,130,155,61,71,112,74,191,18,252,123,63,47,106,7,191,102,217,140,190,133,214,101,63,52,188,109,191,254,209,177,62,229,13,237,62,231,211,119,191,182,192,85,63,226,15,27,190,244,198,33,191,227,171,127,63,243,4,53,191,129,117,79,189,109,103,70,63,67,12,125,191,252,223,12,63,135,85,128,62,126,232,98,191,134,16,112,63,27,237,189,190,88,123,225,190,104,31,118,63,192,64,89,191,98,167,52,62,250,178,28,63,203,66,127,191,5,140,57,63,141,134,207,60,249,61,66,191,223,242,125,63,162,62,18,191,37,121,103,190,46,213,95,63,102,61,114,191,3,233,201,62,189,195,213,62,120,66,116,191,23,157,92,63,51,33,78,190,65,133,23,191,194,175,126,63,154,244,61,191,243,4,53,63,243,4,53,191,202,201,83,165,243,4,53,63,0,0,128,191,243,4,53,63,88,215,30,38,243,4,53,191,0,0,128,63,243,4,53,191,15,47,66,167,243,4,53,63,0,0,128,191,243,4,53,63,222,94,13,166,243,4,53,191,0,0,128,63,243,4,53,191,130,33,119,167,243,4,53,63,0,0,128,191,243,4,53,63,217,213,140,37,243,4,53,191,0,0,128,63,243,4,53,191,250,9,150,167,243,4,53,63,0,0,128,191,243,4,53,63,91,26,141,38,243,4,53,191,0,0,128,63,243,4,53,191,52,131,176,167,243,4,53,63,0,0,128,191,243,4,53,63,232,223,30,40,243,4,53,191,0,0,128,63,243,4,53,191,77,14,212,38,243,4,53,63,0,0,128,191,243,4,53,63,19,114,48,39,243,4,53,191,0,0,128,63,243,4,53,191,166,117,229,167,243,4,53,63,0,0,128,191,243,4,53,63,33,89,57,40,243,4,53,191,0,0,128,63,243,4,53,191,112,247,127,168,243,4,53,63,0,0,128,191,243,4,53,63,243,4,53,63,154,244,61,191,86,49,207,61,65,133,23,63,121,194,122,191,23,157,92,63,32,70,153,190,189,195,213,190,210,64,107,63,102,61,114,191,128,121,248,62,37,121,103,62,142,29,82,191,223,242,125,63,89,192,38,191,141,134,207,188,35,96,48,63,203,66,127,191,71,112,74,63,98,167,52,190,47,106,7,191,104,31,118,63,133,214,101,191,27,237,189,62,254,209,177,62,126,232,98,191,231,211,119,63,252,223,12,191,226,15,27,190,109,103,70,63,227,171,127,191,243,4,53,63,129,117,79,189,244,198,33,191,67,12,125,63,182,192,85,191,135,85,128,62,229,13,237,62,134,16,112,191,52,188,109,63,88,123,225,190,102,217,140,190,192,64,89,63,18,252,123,191,250,178,28,63,210,130,155,61,5,140,57,191,248,234,127,63,249,61,66,191,232,94,1,62,162,62,18,63,173,95,121,191,46,213,95,63,170,153,165,190,3,233,201,190,200,158,104,63,120,66,116,191,35,222,1,63,51,33,78,62,222,87,78,191,194,175,126,63,87,158,43,191,243,4,53,63,109,103,70,191,51,33,78,62,229,13,237,62,210,64,107,191,104,31,118,63,162,62,18,191,210,130,155,189,35,96,48,63,223,242,125,191,192,64,89,63,170,153,165,190,254,209,177,190,23,157,92,63,67,12,125,191,87,158,43,63,129,117,79,189,65,133,23,191,231,211,119,63,200,158,104,191,88,123,225,62,37,121,103,62,71,112,74,191,248,234,127,63,249,61,66,191,98,167,52,62,128,121,248,62,52,188,109,191,120,66,116,63,252,223,12,191,86,49,207,189,243,4,53,63,194,175,126,191,182,192,85,63,32,70,153,190,27,237,189,190,46,213,95,63,18,252,123,191,89,192,38,63,141,134,207,188,250,178,28,191,173,95,121,63,133,214,101,191,189,195,213,62,135,85,128,62,222,87,78,191,227,171,127,63,154,244,61,191,226,15,27,62,35,222,1,63,134,16,112,191,102,61,114,63,47,106,7,191,232,94,1,190,5,140,57,63,203,66,127,191,142,29,82,63,102,217,140,190,3,233,201,190,126,232,98,63,121,194,122,191,244,198,33,63,243,4,53,63,222,87,78,191,32,70,153,62,170,153,165,62,142,29,82,191,248,234,127,63,71,112,74,191,102,217,140,62,254,209,177,62,182,192,85,191,227,171,127,63,109,103,70,191,135,85,128,62,27,237,189,62,192,64,89,191,203,66,127,63,249,61,66,191,37,121,103,62,3,233,201,62,23,157,92,191,194,175,126,63,154,244,61,191,51,33,78,62,189,195,213,62,46,213,95,191,223,242,125,63,5,140,57,191,98,167,52,62,88,123,225,62,126,232,98,191,67,12,125,63,243,4,53,191,226,15,27,62,229,13,237,62,133,214,101,191,18,252,123,63,35,96,48,191,232,94,1,62,128,121,248,62,200,158,104,191,121,194,122,63,87,158,43,191,86,49,207,61,35,222,1,63,210,64,107,191,173,95,121,63,89,192,38,191,210,130,155,61,47,106,7,63,52,188,109,191,231,211,119,63,244,198,33,191,129,117,79,61,252,223,12,63,134,16,112,191,104,31,118,63,250,178,28,191,141,134,207,60,162,62,18,63,102,61,114,191,120,66,116,63,65,133,23,191,243,4,53,63,182,192,85,191,3,233,201,62,98,167,52,62,35,96,48,191,173,95,121,63,134,16,112,191,65,133,23,63,129,117,79,189,35,222,1,191,133,214,101,63,223,242,125,191,249,61,66,63,102,217,140,190,32,70,153,190,109,103,70,63,194,175,126,191,126,232,98,63,128,121,248,190,210,130,155,189,250,178,28,63,102,61,114,191,231,211,119,63,87,158,43,191,226,15,27,62,189,195,213,62,192,64,89,191,248,234,127,63,142,29,82,191,27,237,189,62,51,33,78,62,243,4,53,191,121,194,122,63,52,188,109,191,162,62,18,63,141,134,207,188,47,106,7,191,200,158,104,63,67,12,125,191,154,244,61,63,135,85,128,190,170,153,165,190,71,112,74,63,203,66,127,191,46,213,95,63,229,13,237,190,86,49,207,189,244,198,33,63,120,66,116,191,104,31,118,63,89,192,38,191,232,94,1,62,88,123,225,62,23,157,92,191,227,171,127,63,222,87,78,191,254,209,177,62,37,121,103,62,5,140,57,191,18,252,123,63,210,64,107,191,252,223,12,63,243,4,53,63,23,157,92,191,128,121,248,62,141,134,207,60,47,106,7,191,126,232,98,63,227,171,127,191,182,192,85,63,88,123,225,190,210,130,155,189,162,62,18,63,200,158,104,191,194,175,126,63,222,87,78,191,3,233,201,62,232,94,1,62,250,178,28,191,52,188,109,63,67,12,125,191,109,103,70,63,254,209,177,190,98,167,52,190,89,192,38,63,102,61,114,191,121,194,122,63,154,244,61,191,32,70,153,62,37,121,103,62,35,96,48,191,104,31,118,63,231,211,119,191,243,4,53,63,135,85,128,190,102,217,140,190,5,140,57,63,173,95,121,191,120,66,116,63,87,158,43,191,51,33,78,62,170,153,165,62,249,61,66,191,18,252,123,63,134,16,112,191,244,198,33,63,226,15,27,190,27,237,189,190,71,112,74,63,223,242,125,191,210,64,107,63,65,133,23,191,86,49,207,61,189,195,213,62,142,29,82,191,203,66,127,63,133,214,101,191,252,223,12,63,129,117,79,189,229,13,237,190,192,64,89,63,248,234,127,191,46,213,95,63,35,222,1,191,243,4,53,63,126,232,98,191,162,62,18,63,232,94,1,190,254,209,177,190,154,244,61,63,231,211,119,191,173,95,121,63,249,61,66,191,27,237,189,62,86,49,207,61,252,223,12,191,46,213,95,63,248,234,127,191,133,214,101,63,65,133,23,191,226,15,27,62,170,153,165,62,5,140,57,191,104,31,118,63,121,194,122,191,109,103,70,63,3,233,201,190,210,130,155,189,47,106,7,63,23,157,92,191,227,171,127,63,200,158,104,191,250,178,28,63,98,167,52,190,32,70,153,190,243,4,53,63,120,66,116,191,18,252,123,63,71,112,74,191,189,195,213,62,129,117,79,61,35,222,1,191,192,64,89,63,203,66,127,191,210,64,107,63,244,198,33,191,51,33,78,62,102,217,140,62,35,96,48,191,102,61,114,63,67,12,125,191,222,87,78,63,88,123,225,190,141,134,207,188,128,121,248,62,182,192,85,191,194,175,126,63,52,188,109,191,89,192,38,63,37,121,103,190,135,85,128,190,87,158,43,63,134,16,112,191,223,242,125,63,142,29,82,191,229,13,237,62,243,4,53,63,200,158,104,191,89,192,38,63,102,217,140,190,226,15,27,190,252,223,12,63,192,64,89,191,223,242,125,63,120,66,116,191,154,244,61,63,3,233,201,190,141,134,207,188,88,123,225,62,109,103,70,191,231,211,119,63,18,252,123,191,142,29,82,63,35,222,1,191,86,49,207,61,170,153,165,62,35,96,48,191,52,188,109,63,227,171,127,191,126,232,98,63,250,178,28,191,37,121,103,62,51,33,78,62,65,133,23,191,46,213,95,63,203,66,127,191,134,16,112,63,243,4,53,191,254,209,177,62,210,130,155,61,128,121,248,190,222,87,78,63,121,194,122,191,173,95,121,63,71,112,74,191,229,13,237,62,129,117,79,189,27,237,189,190,5,140,57,63,102,61,114,191,194,175,126,63,23,157,92,191,162,62,18,63,98,167,52,190,135,85,128,190,244,198,33,63,133,214,101,191,248,234,127,63,210,64,107,191,87,158,43,63,32,70,153,190,232,94,1,190,47,106,7,63,182,192,85,191,67,12,125,63,104,31,118,191,249,61,66,63,189,195,213,190,243,4,53,63,52,188,109,191,5,140,57,63,189,195,213,190,129,117,79,61,170,153,165,62,89,192,38,191,126,232,98,63,194,175,126,191,104,31,118,63,71,112,74,191,35,222,1,63,226,15,27,190,37,121,103,190,162,62,18,63,182,192,85,191,121,194,122,63,18,252,123,191,192,64,89,63,65,133,23,191,135,85,128,62,232,94,1,62,128,121,248,190,109,103,70,63,120,66,116,191,203,66,127,63,133,214,101,191,87,158,43,63,254,209,177,190,141,134,207,188,3,233,201,62,243,4,53,191,210,64,107,63,248,234,127,191,134,16,112,63,154,244,61,191,88,123,225,62,210,130,155,189,32,70,153,190,244,198,33,63,46,213,95,191,223,242,125,63,231,211,119,191,222,87,78,63,47,106,7,191,98,167,52,62,51,33,78,62,252,223,12,191,142,29,82,63,173,95,121,191,67,12,125,63,23,157,92,191,250,178,28,63,102,217,140,190,86,49,207,189,229,13,237,62,249,61,66,191,102,61,114,63,227,171,127,191,200,158,104,63,35,96,48,191,27,237,189,62,243,4,53,63,102,61,114,191,71,112,74,63,252,223,12,191,135,85,128,62,210,130,155,61,3,233,201,190,87,158,43,63,46,213,95,191,18,252,123,63,67,12,125,191,126,232,98,63,35,96,48,191,189,195,213,62,86,49,207,189,37,121,103,190,47,106,7,63,109,103,70,191,134,16,112,63,248,234,127,191,120,66,116,63,222,87,78,191,162,62,18,63,102,217,140,190,129,117,79,189,27,237,189,62,89,192,38,191,23,157,92,63,121,194,122,191,223,242,125,63,133,214,101,191,243,4,53,63,88,123,225,190,232,94,1,62,51,33,78,62,35,222,1,191,249,61,66,63,52,188,109,191,227,171,127,63,104,31,118,191,142,29,82,63,65,133,23,191,32,70,153,62,141,134,207,60,254,209,177,190,244,198,33,63,192,64,89,191,173,95,121,63,194,175,126,191,200,158,104,63,5,140,57,191,229,13,237,62,226,15,27,190,98,167,52,190,128,121,248,62,154,244,61,191,210,64,107,63,203,66,127,191,231,211,119,63,182,192,85,191,250,178,28,63,170,153,165,190,243,4,53,63,104,31,118,191,192,64,89,63,87,158,43,191,88,123,225,62,98,167,52,190,86,49,207,189,27,237,189,62,250,178,28,191,222,87,78,63,134,16,112,191,203,66,127,63,121,194,122,191,126,232,98,63,5,140,57,191,35,222,1,63,135,85,128,190,141,134,207,188,32,70,153,62,252,223,12,191,249,61,66,63,200,158,104,191,67,12,125,63,223,242,125,191,210,64,107,63,109,103,70,191,162,62,18,63,170,153,165,190,129,117,79,61,37,121,103,62,128,121,248,190,243,4,53,63,46,213,95,191,173,95,121,63,227,171,127,191,102,61,114,63,142,29,82,191,244,198,33,63,3,233,201,190,232,94,1,62,226,15,27,62,189,195,213,190,89,192,38,63,182,192,85,191,120,66,116,63,248,234,127,191,231,211,119,63,23,157,92,191,35,96,48,63,229,13,237,190,51,33,78,62,210,130,155,61,254,209,177,190,65,133,23,63,71,112,74,191,52,188,109,63,194,175,126,191,18,252,123,63,133,214,101,191,154,244,61,63,47,106,7,191,102,217,140,62,243,4,53,63,173,95,121,191,133,214,101,63,109,103,70,191,250,178,28,63,189,195,213,190,51,33,78,62,141,134,207,60,135,85,128,190,229,13,237,62,89,192,38,191,222,87,78,63,210,64,107,191,18,252,123,63,227,171,127,191,104,31,118,63,46,213,95,191,154,244,61,63,162,62,18,191,27,237,189,62,226,15,27,190,210,130,155,189,32,70,153,62,35,222,1,191,35,96,48,63,182,192,85,191,134,16,112,63,223,242,125,191,194,175,126,63,102,61,114,191,192,64,89,63,243,4,53,191,47,106,7,63,170,153,165,190,86,49,207,61,232,94,1,62,254,209,177,190,252,223,12,63,5,140,57,191,23,157,92,63,120,66,116,191,203,66,127,63,67,12,125,191,52,188,109,63,142,29,82,191,87,158,43,63,128,121,248,190,102,217,140,62,129,117,79,189,98,167,52,190,3,233,201,62,65,133,23,191,249,61,66,63,126,232,98,191,231,211,119,63,248,234,127,191,121,194,122,63,200,158,104,191,71,112,74,63,244,198,33,191,88,123,225,62,37,121,103,190,243,4,53,63,18,252,123,191,134,16,112,63,23,157,92,191,249,61,66,63,244,198,33,191,128,121,248,62,170,153,165,190,226,15,27,62,141,134,207,60,51,33,78,190,27,237,189,62,47,106,7,191,87,158,43,63,71,112,74,191,126,232,98,63,120,66,116,191,223,242,125,63,227,171,127,191,173,95,121,63,210,64,107,191,182,192,85,63,5,140,57,191,65,133,23,63,88,123,225,190,102,217,140,62,86,49,207,189,210,130,155,189,135,85,128,62,189,195,213,190,162,62,18,63,243,4,53,191,142,29,82,63,200,158,104,191,231,211,119,63,203,66,127,191,194,175,126,63,104,31,118,191,133,214,101,63,222,87,78,191,35,96,48,63,252,223,12,191,3,233,201,62,37,121,103,190,129,117,79,61,232,94,1,62,32,70,153,190,229,13,237,62,250,178,28,191,154,244,61,63,192,64,89,191,52,188,109,63,121,194,122,191,248,234,127,63,67,12,125,191,102,61,114,63,46,213,95,191,109,103,70,63,89,192,38,191,35,222,1,63,254,209,177,190,98,167,52,62,243,4,53,63,223,242,125,191,231,211,119,63,52,188,109,191,46,213,95,63,222,87,78,191,5,140,57,63,244,198,33,191,47,106,7,63,189,195,213,190,32,70,153,62,98,167,52,190,129,117,79,61,210,130,155,61,51,33,78,190,170,153,165,62,88,123,225,190,252,223,12,63,89,192,38,191,154,244,61,63,142,29,82,191,126,232,98,63,134,16,112,191,173,95,121,63,194,175,126,191,248,234,127,63,67,12,125,191,104,31,118,63,210,64,107,191,23,157,92,63,71,112,74,191,243,4,53,63,250,178,28,191,35,222,1,63,3,233,201,190,102,217,140,62,226,15,27,190,141,134,207,60,86,49,207,61,37,121,103,190,254,209,177,62,229,13,237,190,162,62,18,63,87,158,43,191,249,61,66,63,182,192,85,191,133,214,101,63,102,61,114,191,121,194,122,63,203,66,127,191,227,171,127,63,18,252,123,191,120,66,116,63,200,158,104,191,192,64,89,63,109,103,70,191,35,96,48,63,65,133,23,191,128,121,248,62,27,237,189,190,135,85,128,62,232,94,1,190,243,4,53,63,203,66,127,191,67,12,125,63,173,95,121,191,120,66,116,63,52,188,109,191,133,214,101,63,23,157,92,191,142,29,82,63,109,103,70,191,5,140,57,63,87,158,43,191,250,178,28,63,252,223,12,191,128,121,248,62,189,195,213,190,254,209,177,62,102,217,140,190,51,33,78,62,232,94,1,190,129,117,79,61,141,134,207,60,86,49,207,189,98,167,52,62,135,85,128,190,170,153,165,62,3,233,201,190,229,13,237,62,47,106,7,191,65,133,23,63,89,192,38,191,243,4,53,63,249,61,66,191,222,87,78,63,192,64,89,191,126,232,98,63,210,64,107,191,102,61,114,63,231,211,119,191,18,252,123,63,194,175,126,191,248,234,127,63,227,171,127,191,223,242,125,63,121,194,122,191,104,31,118,63,134,16,112,191,200,158,104,63,46,213,95,191,182,192,85,63,71,112,74,191,154,244,61,63,35,96,48,191,244,198,33,63,162,62,18,191,35,222,1,63,88,123,225,190,27,237,189,62,32,70,153,190,37,121,103,62,226,15,27,190,210,130,155,61,243,4,53,63,248,234,127,191,227,171,127,63,203,66,127,191,194,175,126,63,223,242,125,191,67,12,125,63,18,252,123,191,121,194,122,63,173,95,121,191,231,211,119,63,104,31,118,191,120,66,116,63,102,61,114,191,134,16,112,63,52,188,109,191,210,64,107,63,200,158,104,191,133,214,101,63,126,232,98,191,46,213,95,63,23,157,92,191,192,64,89,63,182,192,85,191,142,29,82,63,222,87,78,191,71,112,74,63,109,103,70,191,249,61,66,63,154,244,61,191,5,140,57,63,243,4,53,191,35,96,48,63,87,158,43,191,89,192,38,63,244,198,33,191,250,178,28,63,65,133,23,191,162,62,18,63,252,223,12,191,47,106,7,63,35,222,1,191,128,121,248,62,229,13,237,190,88,123,225,62,189,195,213,190,3,233,201,62,27,237,189,190,254,209,177,62,170,153,165,190,32,70,153,62,102,217,140,190,135,85,128,62,37,121,103,190,51,33,78,62,98,167,52,190,226,15,27,62,232,94,1,190,86,49,207,61,210,130,155,189,129,117,79,61,141,134,207,188,243,4,53,63,161,235,127,63,137,174,127,63,192,72,127,63,86,186,126,63,99,3,126,63,4,36,125,63,92,28,124,63,150,236,122,63,224,148,121,63,115,21,120,63,139,110,118,63,107,160,116,63,94,171,114,63,178,143,112,63,190,77,110,63,221,229,107,63,115,88,105,63,229,165,102,63,164,206,99,63,33,211,96,63,215,179,93,63,69,113,90,63,240,11,87,63,98,132,83,63,43,219,79,63,224,16,76,63,28,38,72,63,125,27,68,63,169,241,63,63,74,169,59,63,13,67,55,63,166,191,50,63,205,31,46,63,62,100,41,63,187,141,36,63,7,157,31,63,237,146,26,63,58,112,21,63,190,53,16,63,80,228,10,63,199,124,5,63,0,0,0,63,181,221,244,62,113,148,233,62,2,38,222,62,57,148,210,62,237,224,198,62,251,13,187,62,68,29,175,62,175,16,163,62,38,234,150,62,154,171,138,62,249,173,124,62,135,220,99,62,211,230,74,62,212,208,49,62,137,158,24,62,234,167,254,61,58,234,203,61,23,12,153,61,51,43,76,61,115,59,204,60,243,4,53,63,192,72,127,63,4,36,125,63,224,148,121,63,107,160,116,63,190,77,110,63,229,165,102,63,215,179,93,63,98,132,83,63,28,38,72,63,74,169,59,63,205,31,46,63,7,157,31,63,190,53,16,63,0,0,0,63,2,38,222,62,251,13,187,62,38,234,150,62,135,220,99,62,137,158,24,62,23,12,153,61,76,76,163,37,23,12,153,189,137,158,24,190,135,220,99,190,38,234,150,190,251,13,187,190,2,38,222,190,0,0,0,191,190,53,16,191,7,157,31,191,205,31,46,191,74,169,59,191,28,38,72,191,98,132,83,191,215,179,93,191,229,165,102,191,190,77,110,191,107,160,116,191,224,148,121,191,4,36,125,191,192,72,127,191,0,0,128,191,192,72,127,191,4,36,125,191,224,148,121,191,107,160,116,191,190,77,110,191,229,165,102,191,215,179,93,191,98,132,83,191,28,38,72,191,74,169,59,191,205,31,46,191,7,157,31,191,190,53,16,191,0,0,0,191,2,38,222,190,251,13,187,190,38,234,150,190,135,220,99,190,137,158,24,190,23,12,153,189,243,4,53,63,99,3,126,63,115,21,120,63,190,77,110,63,33,211,96,63,43,219,79,63,74,169,59,63,187,141,36,63,80,228,10,63,2,38,222,62,175,16,163,62,211,230,74,62,23,12,153,61,51,43,76,189,212,208,49,190,38,234,150,190,57,148,210,190,199,124,5,191,7,157,31,191,13,67,55,191,224,16,76,191,215,179,93,191,221,229,107,191,139,110,118,191,4,36,125,191,161,235,127,191,86,186,126,191,224,148,121,191,178,143,112,191,164,206,99,191,98,132,83,191,169,241,63,191,62,100,41,191,190,53,16,191,113,148,233,190,68,29,175,190,135,220,99,190,58,234,203,189,115,59,204,60,137,158,24,62,154,171,138,62,237,224,198,62,0,0,0,63,237,146,26,63,166,191,50,63,28,38,72,63,69,113,90,63,115,88,105,63,107,160,116,63,92,28,124,63,137,174,127,63,192,72,127,63,150,236,122,63,94,171,114,63,229,165,102,63,240,11,87,63,125,27,68,63,205,31,46,63,58,112,21,63,181,221,244,62,251,13,187,62,249,173,124,62,234,167,254,61,243,4,53,63,92,28,124,63,178,143,112,63,215,179,93,63,125,27,68,63,187,141,36,63,0,0,0,63,68,29,175,62,212,208,49,62,50,49,141,36,212,208,49,190,68,29,175,190,0,0,0,191,187,141,36,191,125,27,68,191,215,179,93,191,178,143,112,191,92,28,124,191,0,0,128,191,92,28,124,191,178,143,112,191,215,179,93,191,125,27,68,191,187,141,36,191,0,0,0,191,68,29,175,190,212,208,49,190,202,201,83,165,212,208,49,62,68,29,175,62,0,0,0,63,187,141,36,63,125,27,68,63,215,179,93,63,178,143,112,63,92,28,124,63,0,0,128,63,92,28,124,63,178,143,112,63,215,179,93,63,125,27,68,63,187,141,36,63,0,0,0,63,68,29,175,62,212,208,49,62,126,125,176,37,212,208,49,190,68,29,175,190,0,0,0,191,187,141,36,191,125,27,68,191,215,179,93,191,178,143,112,191,92,28,124,191,0,0,128,191,92,28,124,191,178,143,112,191,215,179,93,191,125,27,68,191,187,141,36,191,0,0,0,191,68,29,175,190,212,208,49,190,243,4,53,63,224,148,121,63,229,165,102,63,28,38,72,63,7,157,31,63,2,38,222,62,135,220,99,62,50,49,141,36,135,220,99,190,2,38,222,190,7,157,31,191,28,38,72,191,229,165,102,191,224,148,121,191,0,0,128,191,224,148,121,191,229,165,102,191,28,38,72,191,7,157,31,191,2,38,222,190,135,220,99,190,202,201,83,165,135,220,99,62,2,38,222,62,7,157,31,63,28,38,72,63,229,165,102,63,224,148,121,63,0,0,128,63,224,148,121,63,229,165,102,63,28,38,72,63,7,157,31,63,2,38,222,62,135,220,99,62,126,125,176,37,135,220,99,190,2,38,222,190,7,157,31,191,28,38,72,191,229,165,102,191,224,148,121,191,0,0,128,191,224,148,121,191,229,165,102,191,28,38,72,191,7,157,31,191,2,38,222,190,135,220,99,190,23,22,247,165,135,220,99,62,2,38,222,62,7,157,31,63,28,38,72,63,229,165,102,63,224,148,121,63,0,0,128,63,224,148,121,63,229,165,102,63,28,38,72,63,7,157,31,63,2,38,222,62,135,220,99,62,243,4,53,63,139,110,118,63,69,113,90,63,205,31,46,63,113,148,233,62,211,230,74,62,23,12,153,189,68,29,175,190,58,112,21,191,28,38,72,191,221,229,107,191,99,3,126,191,4,36,125,191,115,88,105,191,125,27,68,191,190,53,16,191,175,16,163,190,51,43,76,189,135,220,99,62,181,221,244,62,166,191,50,63,215,179,93,63,115,21,120,63,161,235,127,63,107,160,116,63,240,11,87,63,62,100,41,63,2,38,222,62,212,208,49,62,58,234,203,189,251,13,187,190,237,146,26,191,224,16,76,191,190,77,110,191,86,186,126,191,92,28,124,191,229,165,102,191,169,241,63,191,80,228,10,191,38,234,150,190,115,59,204,188,249,173,124,62,0,0,0,63,13,67,55,63,33,211,96,63,224,148,121,63,137,174,127,63,94,171,114,63,98,132,83,63,187,141,36,63,57,148,210,62,137,158,24,62,234,167,254,189,237,224,198,190,7,157,31,191,43,219,79,191,178,143,112,191,192,72,127,191,150,236,122,191,164,206,99,191,74,169,59,191,199,124,5,191,154,171,138,190,243,4,53,63,94,171,114,63,224,16,76,63,190,53,16,63,154,171,138,62,51,43,76,189,251,13,187,190,187,141,36,191,69,113,90,191,224,148,121,191,86,186,126,191,115,88,105,191,74,169,59,191,181,221,244,190,212,208,49,190,137,158,24,62,113,148,233,62,13,67,55,63,229,165,102,63,99,3,126,63,150,236,122,63,215,179,93,63,62,100,41,63,237,224,198,62,23,12,153,61,249,173,124,190,80,228,10,191,28,38,72,191,178,143,112,191,161,235,127,191,107,160,116,191,43,219,79,191,58,112,21,191,38,234,150,190,115,59,204,60,68,29,175,62,7,157,31,63,240,11,87,63,115,21,120,63,192,72,127,63,221,229,107,63,169,241,63,63,0,0,0,63,211,230,74,62,234,167,254,189,2,38,222,190,166,191,50,191,164,206,99,191,4,36,125,191,92,28,124,191,33,211,96,191,205,31,46,191,57,148,210,190,58,234,203,189,135,220,99,62,199,124,5,63,125,27,68,63,190,77,110,63,137,174,127,63,139,110,118,63,98,132,83,63,237,146,26,63,175,16,163,62,243,4,53,63,190,77,110,63,74,169,59,63,2,38,222,62,23,12,153,61,38,234,150,190,7,157,31,191,215,179,93,191,4,36,125,191,224,148,121,191,98,132,83,191,190,53,16,191,135,220,99,190,137,158,24,62,0,0,0,63,28,38,72,63,107,160,116,63,192,72,127,63,229,165,102,63,205,31,46,63,251,13,187,62,126,125,176,37,251,13,187,190,205,31,46,191,229,165,102,191,192,72,127,191,107,160,116,191,28,38,72,191,0,0,0,191,137,158,24,190,135,220,99,62,190,53,16,63,98,132,83,63,224,148,121,63,4,36,125,63,215,179,93,63,7,157,31,63,38,234,150,62,23,12,153,189,2,38,222,190,74,169,59,191,190,77,110,191,0,0,128,191,190,77,110,191,74,169,59,191,2,38,222,190,23,12,153,189,38,234,150,62,7,157,31,63,215,179,93,63,4,36,125,63,224,148,121,63,98,132,83,63,190,53,16,63,135,220,99,62,137,158,24,190,0,0,0,191,28,38,72,191,107,160,116,191,192,72,127,191,229,165,102,191,205,31,46,191,251,13,187,190,243,4,53,63,115,88,105,63,62,100,41,63,38,234,150,62,234,167,254,189,199,124,5,191,98,132,83,191,92,28,124,191,115,21,120,191,28,38,72,191,113,148,233,190,51,43,76,189,251,13,187,62,13,67,55,63,178,143,112,63,192,72,127,63,33,211,96,63,237,146,26,63,135,220,99,62,211,230,74,190,58,112,21,191,215,179,93,191,86,186,126,191,94,171,114,191,74,169,59,191,237,224,198,190,115,59,204,60,2,38,222,62,125,27,68,63,139,110,118,63,4,36,125,63,240,11,87,63,80,228,10,63,137,158,24,62,154,171,138,190,187,141,36,191,229,165,102,191,161,235,127,191,221,229,107,191,205,31,46,191,175,16,163,190,58,234,203,61,0,0,0,63,43,219,79,63,150,236,122,63,224,148,121,63,224,16,76,63,181,221,244,62,23,12,153,61,68,29,175,190,166,191,50,191,190,77,110,191,137,174,127,191,164,206,99,191,7,157,31,191,249,173,124,190,212,208,49,62,190,53,16,63,69,113,90,63,99,3,126,63,107,160,116,63,169,241,63,63,57,148,210,62,243,4,53,63,164,206,99,63,58,112,21,63,137,158,24,62,175,16,163,190,13,67,55,191,107,160,116,191,92,28,124,191,224,16,76,191,2,38,222,190,115,59,204,60,181,221,244,62,98,132,83,63,99,3,126,63,178,143,112,63,205,31,46,63,154,171,138,62,211,230,74,190,7,157,31,191,115,88,105,191,137,174,127,191,215,179,93,191,80,228,10,191,58,234,203,189,251,13,187,62,169,241,63,63,115,21,120,63,224,148,121,63,125,27,68,63,237,224,198,62,23,12,153,189,199,124,5,191,69,113,90,191,192,72,127,191,221,229,107,191,187,141,36,191,135,220,99,190,249,173,124,62,62,100,41,63,190,77,110,63,86,186,126,63,240,11,87,63,0,0,0,63,51,43,76,61,57,148,210,190,28,38,72,191,150,236,122,191,139,110,118,191,74,169,59,191,68,29,175,190,234,167,254,61,190,53,16,63,33,211,96,63,161,235,127,63,229,165,102,63,237,146,26,63,212,208,49,62,38,234,150,190,166,191,50,191,94,171,114,191,4,36,125,191,43,219,79,191,113,148,233,190,243,4,53,63,215,179,93,63,0,0,0,63,50,49,141,36,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,202,201,83,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,95,31,172,38,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,23,22,247,165,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,214,181,39,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,233,136,48,167,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,252,91,57,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,15,47,66,167,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,34,2,75,39,0,0,0,191,215,179,93,191,0,0,128,191,215,179,93,191,0,0,0,191,53,213,83,167,0,0,0,63,215,179,93,63,0,0,128,63,215,179,93,63,0,0,0,63,243,4,53,63,240,11,87,63,57,148,210,62,137,158,24,190,62,100,41,191,139,110,118,191,107,160,116,191,187,141,36,191,234,167,254,189,2,38,222,62,69,113,90,63,161,235,127,63,98,132,83,63,237,224,198,62,212,208,49,190,205,31,46,191,115,21,120,191,94,171,114,191,7,157,31,191,58,234,203,189,113,148,233,62,215,179,93,63,137,174,127,63,43,219,79,63,251,13,187,62,211,230,74,190,166,191,50,191,224,148,121,191,178,143,112,191,237,146,26,191,23,12,153,189,181,221,244,62,33,211,96,63,192,72,127,63,224,16,76,63,68,29,175,62,135,220,99,190,13,67,55,191,150,236,122,191,190,77,110,191,58,112,21,191,51,43,76,189,0,0,0,63,164,206,99,63,86,186,126,63,28,38,72,63,175,16,163,62,249,173,124,190,74,169,59,191,92,28,124,191,221,229,107,191,190,53,16,191,115,59,204,188,199,124,5,63,229,165,102,63,99,3,126,63,125,27,68,63,38,234,150,62,154,171,138,190,169,241,63,191,4,36,125,191,115,88,105,191,80,228,10,191,243,4,53,63,43,219,79,63,175,16,163,62,38,234,150,190,224,16,76,191,161,235,127,191,98,132,83,191,68,29,175,190,154,171,138,62,28,38,72,63,137,174,127,63,240,11,87,63,251,13,187,62,249,173,124,190,125,27,68,191,192,72,127,191,69,113,90,191,237,224,198,190,135,220,99,62,169,241,63,63,86,186,126,63,215,179,93,63,57,148,210,62,211,230,74,190,74,169,59,191,99,3,126,191,33,211,96,191,2,38,222,190,212,208,49,62,13,67,55,63,4,36,125,63,164,206,99,63,113,148,233,62,137,158,24,190,166,191,50,191,92,28,124,191,229,165,102,191,181,221,244,190,234,167,254,61,205,31,46,63,150,236,122,63,115,88,105,63,0,0,0,63,58,234,203,189,62,100,41,191,224,148,121,191,221,229,107,191,199,124,5,191,23,12,153,61,187,141,36,63,115,21,120,63,190,77,110,63,80,228,10,63,51,43,76,189,7,157,31,191,139,110,118,191,178,143,112,191,190,53,16,191,115,59,204,60,237,146,26,63,107,160,116,63,94,171,114,63,58,112,21,63,243,4,53,63,28,38,72,63,135,220,99,62,2,38,222,190,229,165,102,191,224,148,121,191,7,157,31,191,202,201,83,165,7,157,31,63,224,148,121,63,229,165,102,63,2,38,222,62,135,220,99,190,28,38,72,191,0,0,128,191,28,38,72,191,135,220,99,190,2,38,222,62,229,165,102,63,224,148,121,63,7,157,31,63,88,215,30,38,7,157,31,191,224,148,121,191,229,165,102,191,2,38,222,190,135,220,99,62,28,38,72,63,0,0,128,63,28,38,72,63,135,220,99,62,2,38,222,190,229,165,102,191,224,148,121,191,7,157,31,191,15,47,66,167,7,157,31,63,224,148,121,63,229,165,102,63,2,38,222,62,135,220,99,190,28,38,72,191,0,0,128,191,28,38,72,191,135,220,99,190,2,38,222,62,229,165,102,63,224,148,121,63,7,157,31,63,222,94,13,166,7,157,31,191,224,148,121,191,229,165,102,191,2,38,222,190,135,220,99,62,28,38,72,63,0,0,128,63,28,38,72,63,135,220,99,62,2,38,222,190,229,165,102,191,224,148,121,191,7,157,31,191,243,4,53,63,169,241,63,63,234,167,254,61,190,53,16,191,115,21,120,191,164,206,99,191,251,13,187,190,68,29,175,62,33,211,96,63,224,148,121,63,58,112,21,63,58,234,203,189,74,169,59,191,161,235,127,191,125,27,68,191,137,158,24,190,80,228,10,63,139,110,118,63,229,165,102,63,237,224,198,62,175,16,163,190,215,179,93,191,150,236,122,191,237,146,26,191,23,12,153,61,13,67,55,63,137,174,127,63,28,38,72,63,212,208,49,62,199,124,5,191,107,160,116,191,115,88,105,191,57,148,210,190,38,234,150,62,69,113,90,63,92,28,124,63,7,157,31,63,51,43,76,189,166,191,50,191,192,72,127,191,224,16,76,191,211,230,74,190,0,0,0,63,94,171,114,63,221,229,107,63,2,38,222,62,154,171,138,190,240,11,87,191,4,36,125,191,187,141,36,191,115,59,204,60,205,31,46,63,86,186,126,63,43,219,79,63,135,220,99,62,181,221,244,190,178,143,112,191,190,77,110,191,113,148,233,190,249,173,124,62,98,132,83,63,99,3,126,63,62,100,41,63,243,4,53,63,13,67,55,63,115,59,204,60,205,31,46,191,137,174,127,191,169,241,63,191,23,12,153,189,187,141,36,63,86,186,126,63,28,38,72,63,234,167,254,61,237,146,26,191,4,36,125,191,43,219,79,191,212,208,49,190,190,53,16,63,150,236,122,63,240,11,87,63,135,220,99,62,199,124,5,191,115,21,120,191,215,179,93,191,154,171,138,190,181,221,244,62,107,160,116,63,164,206,99,63,175,16,163,62,2,38,222,190,178,143,112,191,115,88,105,191,251,13,187,190,237,224,198,62,221,229,107,63,190,77,110,63,57,148,210,62,68,29,175,190,229,165,102,191,94,171,114,191,113,148,233,190,38,234,150,62,33,211,96,63,139,110,118,63,0,0,0,63,249,173,124,190,69,113,90,191,224,148,121,191,80,228,10,191,211,230,74,62,98,132,83,63,92,28,124,63,58,112,21,63,137,158,24,190,224,16,76,191,99,3,126,191,7,157,31,191,58,234,203,61,125,27,68,63,192,72,127,63,62,100,41,63,51,43,76,189,74,169,59,191,161,235,127,191,166,191,50,191,243,4,53,63,205,31,46,63,23,12,153,189,28,38,72,191,4,36,125,191,190,53,16,191,135,220,99,62,215,179,93,63,107,160,116,63,2,38,222,62,251,13,187,190,190,77,110,191,229,165,102,191,38,234,150,190,0,0,0,63,224,148,121,63,98,132,83,63,137,158,24,62,7,157,31,191,192,72,127,191,74,169,59,191,46,238,158,38,74,169,59,63,192,72,127,63,7,157,31,63,137,158,24,190,98,132,83,191,224,148,121,191,0,0,0,191,38,234,150,62,229,165,102,63,190,77,110,63,251,13,187,62,2,38,222,190,107,160,116,191,215,179,93,191,135,220,99,190,190,53,16,63,4,36,125,63,28,38,72,63,23,12,153,61,205,31,46,191,0,0,128,191,205,31,46,191,23,12,153,61,28,38,72,63,4,36,125,63,190,53,16,63,135,220,99,190,215,179,93,191,107,160,116,191,2,38,222,190,251,13,187,62,190,77,110,63,229,165,102,63,38,234,150,62,0,0,0,191,224,148,121,191,98,132,83,191,137,158,24,190,7,157,31,63,192,72,127,63,74,169,59,63,243,4,53,63,187,141,36,63,212,208,49,190,215,179,93,191,178,143,112,191,68,29,175,190,0,0,0,63,92,28,124,63,125,27,68,63,126,125,176,37,125,27,68,191,92,28,124,191,0,0,0,191,68,29,175,62,178,143,112,63,215,179,93,63,212,208,49,62,187,141,36,191,0,0,128,191,187,141,36,191,212,208,49,62,215,179,93,63,178,143,112,63,68,29,175,62,0,0,0,191,92,28,124,191,125,27,68,191,195,67,119,38,125,27,68,63,92,28,124,63,0,0,0,63,68,29,175,190,178,143,112,191,215,179,93,191,212,208,49,190,187,141,36,63,0,0,128,63,187,141,36,63,212,208,49,190,215,179,93,191,178,143,112,191,68,29,175,190,0,0,0,63,92,28,124,63,125,27,68,63,138,140,141,165,125,27,68,191,92,28,124,191,0,0,0,191,68,29,175,62,178,143,112,63,215,179,93,63,212,208,49,62,187,141,36,191,0,0,128,191,187,141,36,191,212,208,49,62,215,179,93,63,178,143,112,63,68,29,175,62,0,0,0,191,92,28,124,191,125,27,68,191,243,4,53,63,237,146,26,63,154,171,138,190,190,77,110,191,69,113,90,191,58,234,203,189,74,169,59,63,92,28,124,63,113,148,233,62,2,38,222,190,150,236,122,191,169,241,63,191,23,12,153,61,240,11,87,63,178,143,112,63,38,234,150,62,58,112,21,191,161,235,127,191,7,157,31,191,249,173,124,62,221,229,107,63,215,179,93,63,234,167,254,61,13,67,55,191,4,36,125,191,181,221,244,190,57,148,210,62,224,148,121,63,125,27,68,63,51,43,76,189,98,132,83,191,94,171,114,191,175,16,163,190,190,53,16,63,137,174,127,63,187,141,36,63,135,220,99,190,115,88,105,191,33,211,96,191,137,158,24,190,166,191,50,63,99,3,126,63,0,0,0,63,237,224,198,190,115,21,120,191,28,38,72,191,115,59,204,60,43,219,79,63,107,160,116,63,68,29,175,62,80,228,10,191,192,72,127,191,62,100,41,191,211,230,74,62,229,165,102,63,164,206,99,63,212,208,49,62,205,31,46,191,86,186,126,191,199,124,5,191,251,13,187,62,139,110,118,63,224,16,76,63,243,4,53,63,190,53,16,63,251,13,187,190,224,148,121,191,74,169,59,191,137,158,24,62,229,165,102,63,215,179,93,63,23,12,153,61,28,38,72,191,107,160,116,191,38,234,150,190,7,157,31,63,192,72,127,63,0,0,0,63,2,38,222,190,4,36,125,191,205,31,46,191,135,220,99,62,190,77,110,63,98,132,83,63,8,72,141,166,98,132,83,191,190,77,110,191,135,220,99,190,205,31,46,63,4,36,125,63,2,38,222,62,0,0,0,191,192,72,127,191,7,157,31,191,38,234,150,62,107,160,116,63,28,38,72,63,23,12,153,189,215,179,93,191,229,165,102,191,137,158,24,190,74,169,59,63,224,148,121,63,251,13,187,62,190,53,16,191,0,0,128,191,190,53,16,191,251,13,187,62,224,148,121,63,74,169,59,63,137,158,24,190,229,165,102,191,215,179,93,191,23,12,153,189,28,38,72,63,107,160,116,63,38,234,150,62,7,157,31,191,192,72,127,191,0,0,0,191,2,38,222,62,4,36,125,63,205,31,46,63,135,220,99,190,190,77,110,191,98,132,83,191,243,4,53,63,199,124,5,63,113,148,233,190,192,72,127,191,58,112,21,191,237,224,198,62,4,36,125,63,187,141,36,63,175,16,163,190,224,148,121,191,166,191,50,191,249,173,124,62,107,160,116,63,169,241,63,63,212,208,49,190,190,77,110,191,224,16,76,191,58,234,203,61,229,165,102,63,240,11,87,63,115,59,204,188,215,179,93,191,33,211,96,191,51,43,76,189,98,132,83,63,115,88,105,63,234,167,254,61,28,38,72,191,178,143,112,191,211,230,74,190,74,169,59,63,139,110,118,63,154,171,138,62,205,31,46,191,150,236,122,191,68,29,175,190,7,157,31,63,99,3,126,63,57,148,210,62,190,53,16,191,137,174,127,191,181,221,244,190,0,0,0,63,161,235,127,63,80,228,10,63,2,38,222,190,86,186,126,191,237,146,26,191,251,13,187,62,92,28,124,63,62,100,41,63,38,234,150,190,115,21,120,191,13,67,55,191,135,220,99,62,94,171,114,63,125,27,68,63,137,158,24,190,221,229,107,191,43,219,79,191,23,12,153,61,164,206,99,63,69,113,90,63,243,4,53,63,181,221,244,62,80,228,10,191,192,72,127,191,57,148,210,190,237,146,26,63,4,36,125,63,68,29,175,62,62,100,41,191,224,148,121,191,154,171,138,190,13,67,55,63,107,160,116,63,211,230,74,62,125,27,68,191,190,77,110,191,234,167,254,189,43,219,79,63,229,165,102,63,51,43,76,61,69,113,90,191,215,179,93,191,115,59,204,60,164,206,99,63,98,132,83,63,58,234,203,189,221,229,107,191,28,38,72,191,212,208,49,62,94,171,114,63,74,169,59,63,249,173,124,190,115,21,120,191,205,31,46,191,175,16,163,62,92,28,124,63,7,157,31,63,237,224,198,190,86,186,126,191,190,53,16,191,113,148,233,62,161,235,127,63,0,0,0,63,199,124,5,191,137,174,127,191,2,38,222,190,58,112,21,63,99,3,126,63,251,13,187,62,187,141,36,191,150,236,122,191,38,234,150,190,166,191,50,63,139,110,118,63,135,220,99,62,169,241,63,191,178,143,112,191,137,158,24,190,224,16,76,63,115,88,105,63,23,12,153,61,240,11,87,191,33,211,96,191,243,4,53,63,2,38,222,62,7,157,31,191,224,148,121,191,135,220,99,190,28,38,72,63,229,165,102,63,126,125,176,37,229,165,102,191,28,38,72,191,135,220,99,62,224,148,121,63,7,157,31,63,2,38,222,190,0,0,128,191,2,38,222,190,7,157,31,63,224,148,121,63,135,220,99,62,28,38,72,191,229,165,102,191,15,47,66,167,229,165,102,63,28,38,72,63,135,220,99,190,224,148,121,191,7,157,31,191,2,38,222,62,0,0,128,63,2,38,222,62,7,157,31,191,224,148,121,191,135,220,99,190,28,38,72,63,229,165,102,63,138,140,141,165,229,165,102,191,28,38,72,191,135,220,99,62,224,148,121,63,7,157,31,63,2,38,222,190,0,0,128,191,2,38,222,190,7,157,31,63,224,148,121,63,135,220,99,62,28,38,72,191,229,165,102,191,231,54,141,167,229,165,102,63,28,38,72,63,135,220,99,190,224,148,121,191,7,157,31,191,2,38,222,62,0,0,128,63,2,38,222,62,7,157,31,191,224,148,121,191,135,220,99,190,28,38,72,63,229,165,102,63,243,4,53,63,237,224,198,62,166,191,50,191,190,77,110,191,115,59,204,188,115,88,105,63,74,169,59,63,68,29,175,190,137,174,127,191,2,38,222,190,62,100,41,63,94,171,114,63,23,12,153,61,164,206,99,191,125,27,68,191,38,234,150,62,86,186,126,63,181,221,244,62,7,157,31,191,139,110,118,191,234,167,254,189,215,179,93,63,224,16,76,63,249,173,124,190,4,36,125,191,199,124,5,191,58,112,21,63,224,148,121,63,212,208,49,62,240,11,87,191,98,132,83,191,211,230,74,62,150,236,122,63,190,53,16,63,80,228,10,191,92,28,124,191,135,220,99,190,43,219,79,63,69,113,90,63,137,158,24,190,115,21,120,191,237,146,26,191,0,0,0,63,99,3,126,63,154,171,138,62,28,38,72,191,33,211,96,191,58,234,203,61,107,160,116,63,187,141,36,63,113,148,233,190,192,72,127,191,175,16,163,190,169,241,63,63,229,165,102,63,51,43,76,189,178,143,112,191,205,31,46,191,57,148,210,62,161,235,127,63,251,13,187,62,13,67,55,191,221,229,107,191,243,4,53,63,68,29,175,62,125,27,68,191,215,179,93,191,212,208,49,62,92,28,124,63,0,0,0,63,187,141,36,191,178,143,112,191,23,22,247,165,178,143,112,63,187,141,36,63,0,0,0,191,92,28,124,191,212,208,49,190,215,179,93,63,125,27,68,63,68,29,175,190,0,0,128,191,68,29,175,190,125,27,68,63,215,179,93,63,212,208,49,190,92,28,124,191,0,0,0,191,187,141,36,63,178,143,112,63,222,94,13,166,178,143,112,191,187,141,36,191,0,0,0,63,92,28,124,63,212,208,49,62,215,179,93,191,125,27,68,191,68,29,175,62,0,0,128,63,68,29,175,62,125,27,68,191,215,179,93,191,212,208,49,62,92,28,124,63,0,0,0,63,187,141,36,191,178,143,112,191,231,54,141,167,178,143,112,63,187,141,36,63,0,0,0,191,92,28,124,191,212,208,49,190,215,179,93,63,125,27,68,63,68,29,175,190,0,0,128,191,68,29,175,190,125,27,68,63,215,179,93,63,212,208,49,190,92,28,124,191,0,0,0,191,187,141,36,63,178,143,112,63,243,4,53,63,38,234,150,62,98,132,83,191,28,38,72,191,251,13,187,62,192,72,127,63,135,220,99,62,215,179,93,191,74,169,59,191,2,38,222,62,4,36,125,63,137,158,24,62,229,165,102,191,205,31,46,191,0,0,0,63,224,148,121,63,23,12,153,61,190,77,110,191,7,157,31,191,190,53,16,63,107,160,116,63,34,2,75,39,107,160,116,191,190,53,16,191,7,157,31,63,190,77,110,63,23,12,153,189,224,148,121,191,0,0,0,191,205,31,46,63,229,165,102,63,137,158,24,190,4,36,125,191,2,38,222,190,74,169,59,63,215,179,93,63,135,220,99,190,192,72,127,191,251,13,187,190,28,38,72,63,98,132,83,63,38,234,150,190,0,0,128,191,38,234,150,190,98,132,83,63,28,38,72,63,251,13,187,190,192,72,127,191,135,220,99,190,215,179,93,63,74,169,59,63,2,38,222,190,4,36,125,191,137,158,24,190,229,165,102,63,205,31,46,63,0,0,0,191,224,148,121,191,23,12,153,189,190,77,110,63,7,157,31,63,190,53,16,191,107,160,116,191,243,4,53,63,249,173,124,62,33,211,96,191,205,31,46,191,80,228,10,63,94,171,114,63,23,12,153,189,92,28,124,191,57,148,210,190,28,38,72,63,224,16,76,63,237,224,198,190,4,36,125,191,58,234,203,189,178,143,112,63,190,53,16,63,62,100,41,191,164,206,99,191,135,220,99,62,161,235,127,63,154,171,138,62,215,179,93,191,166,191,50,191,199,124,5,63,107,160,116,63,51,43,76,189,150,236,122,191,2,38,222,190,125,27,68,63,43,219,79,63,251,13,187,190,99,3,126,191,234,167,254,189,190,77,110,63,58,112,21,63,187,141,36,191,229,165,102,191,211,230,74,62,137,174,127,63,38,234,150,62,69,113,90,191,13,67,55,191,0,0,0,63,139,110,118,63,115,59,204,188,224,148,121,191,113,148,233,190,169,241,63,63,98,132,83,63,68,29,175,190,86,186,126,191,137,158,24,190,221,229,107,63,237,146,26,63,7,157,31,191,115,88,105,191,212,208,49,62,192,72,127,63,175,16,163,62,240,11,87,191,74,169,59,191,181,221,244,62,115,21,120,63,243,4,53,63,211,230,74,62,221,229,107,191,190,53,16,191,166,191,50,63,240,11,87,63,251,13,187,190,92,28,124,191,115,59,204,188,224,148,121,63,57,148,210,62,43,219,79,191,74,169,59,191,199,124,5,63,178,143,112,63,137,158,24,190,137,174,127,191,249,173,124,190,229,165,102,63,237,146,26,63,62,100,41,191,215,179,93,191,175,16,163,62,99,3,126,63,23,12,153,61,139,110,118,191,113,148,233,190,28,38,72,63,125,27,68,63,181,221,244,190,107,160,116,191,58,234,203,61,86,186,126,63,38,234,150,62,33,211,96,191,187,141,36,191,7,157,31,63,164,206,99,63,154,171,138,190,192,72,127,191,234,167,254,189,94,171,114,63,0,0,0,63,169,241,63,191,224,16,76,191,2,38,222,62,115,21,120,63,51,43,76,189,4,36,125,191,68,29,175,190,69,113,90,63,205,31,46,63,58,112,21,191,115,88,105,191,135,220,99,62,161,235,127,63,212,208,49,62,190,77,110,191,80,228,10,191,13,67,55,63,98,132,83,63,237,224,198,190,150,236,122,191,243,4,53,63,137,158,24,62,107,160,116,191,2,38,222,190,98,132,83,63,205,31,46,63,7,157,31,191,215,179,93,191,251,13,187,62,224,148,121,63,23,12,153,189,192,72,127,191,135,220,99,190,190,77,110,63,0,0,0,63,28,38,72,191,74,169,59,191,190,53,16,63,229,165,102,63,38,234,150,190,4,36,125,191,42,171,48,38,4,36,125,63,38,234,150,62,229,165,102,191,190,53,16,191,74,169,59,63,28,38,72,63,0,0,0,191,190,77,110,191,135,220,99,62,192,72,127,63,23,12,153,61,224,148,121,191,251,13,187,190,215,179,93,63,7,157,31,63,205,31,46,191,98,132,83,191,2,38,222,62,107,160,116,63,137,158,24,190,0,0,128,191,137,158,24,190,107,160,116,63,2,38,222,62,98,132,83,191,205,31,46,191,7,157,31,63,215,179,93,63,251,13,187,190,224,148,121,191,23,12,153,61,192,72,127,63,135,220,99,62,190,77,110,191,0,0,0,191,28,38,72,63,74,169,59,63,190,53,16,191,229,165,102,191,38,234,150,62,4,36,125,63,243,4,53,63,58,234,203,61,150,236,122,191,38,234,150,190,221,229,107,63,181,221,244,62,98,132,83,191,187,141,36,191,166,191,50,63,28,38,72,63,80,228,10,191,164,206,99,191,251,13,187,62,139,110,118,63,212,208,49,190,192,72,127,191,115,59,204,188,99,3,126,63,135,220,99,62,94,171,114,191,57,148,210,190,215,179,93,63,58,112,21,63,169,241,63,191,74,169,59,191,237,146,26,63,69,113,90,63,2,38,222,190,178,143,112,191,249,173,124,62,4,36,125,63,51,43,76,189,137,174,127,191,137,158,24,190,115,21,120,63,68,29,175,62,229,165,102,191,199,124,5,191,224,16,76,63,205,31,46,63,62,100,41,191,43,219,79,191,0,0,0,63,115,88,105,63,175,16,163,190,224,148,121,191,234,167,254,61,161,235,127,63,23,12,153,61,92,28,124,191,154,171,138,190,190,77,110,63,113,148,233,62,240,11,87,191,7,157,31,191,13,67,55,63,125,27,68,63,190,53,16,191,33,211,96,191,237,224,198,62,107,160,116,63,211,230,74,190,86,186,126,191,243,4,53,63,51,43,76,61,86,186,126,191,137,158,24,190,150,236,122,63,249,173,124,62,107,160,116,191,68,29,175,190,221,229,107,63,2,38,222,62,33,211,96,191,199,124,5,191,98,132,83,63,237,146,26,63,125,27,68,191,205,31,46,191,166,191,50,63,169,241,63,63,7,157,31,191,43,219,79,191,80,228,10,63,215,179,93,63,113,148,233,190,115,88,105,191,251,13,187,62,94,171,114,63,154,171,138,190,224,148,121,191,212,208,49,62,99,3,126,63,23,12,153,189,161,235,127,191,115,59,204,188,192,72,127,63,234,167,254,61,92,28,124,191,135,220,99,190,139,110,118,63,175,16,163,62,190,77,110,191,57,148,210,190,164,206,99,63,0,0,0,63,240,11,87,191,58,112,21,191,28,38,72,63,62,100,41,63,13,67,55,191,74,169,59,191,187,141,36,63,224,16,76,63,190,53,16,191,69,113,90,191,181,221,244,62,229,165,102,63,237,224,198,190,178,143,112,191,38,234,150,62,115,21,120,63,211,230,74,190,4,36,125,191,58,234,203,61,137,174,127,63,243,4,53,63,50,49,141,36,0,0,128,191,202,201,83,165,0,0,128,63,126,125,176,37,0,0,128,191,23,22,247,165,0,0,128,63,88,215,30,38,0,0,128,191,233,136,48,167,0,0,128,63,8,72,141,166,0,0,128,191,15,47,66,167,0,0,128,63,119,247,83,166,0,0,128,191,53,213,83,167,0,0,128,63,222,94,13,166,0,0,128,191,92,123,101,167,0,0,128,63,138,140,141,165,0,0,128,191,130,33,119,167,0,0,128,63,219,176,54,161,0,0,128,191,212,99,132,167,0,0,128,63,217,213,140,37,0,0,128,191,231,54,141,167,0,0,128,63,133,3,13,38,0,0,128,191,250,9,150,167,0,0,128,63,194,57,13,40,0,0,128,191,13,221,158,167,0,0,128,63,91,26,141,38,0,0,128,191,191,159,48,39,0,0,128,63,213,12,22,40,0,0,128,191,52,131,176,167,0,0,128,63,244,178,211,38,0,0,128,191,115,83,13,39,0,0,128,63,232,223,30,40,0,0,128,191,90,41,194,167,0,0,128,63,199,37,13,39,0,0,128,191,243,4,53,63,51,43,76,189,86,186,126,191,137,158,24,62,150,236,122,63,249,173,124,190,107,160,116,191,68,29,175,62,221,229,107,63,2,38,222,190,33,211,96,191,199,124,5,63,98,132,83,63,237,146,26,191,125,27,68,191,205,31,46,63,166,191,50,63,169,241,63,191,7,157,31,191,43,219,79,63,80,228,10,63,215,179,93,191,113,148,233,190,115,88,105,63,251,13,187,62,94,171,114,191,154,171,138,190,224,148,121,63,212,208,49,62,99,3,126,191,23,12,153,189,161,235,127,63,115,59,204,188,192,72,127,191,234,167,254,61,92,28,124,63,135,220,99,190,139,110,118,191,175,16,163,62,190,77,110,63,57,148,210,190,164,206,99,191,0,0,0,63,240,11,87,63,58,112,21,191,28,38,72,191,62,100,41,63,13,67,55,63,74,169,59,191,187,141,36,191,224,16,76,63,190,53,16,63,69,113,90,191,181,221,244,190,229,165,102,63,237,224,198,62,178,143,112,191,38,234,150,190,115,21,120,63,211,230,74,62,4,36,125,191,58,234,203,189,137,174,127,63,243,4,53,63,58,234,203,189,150,236,122,191,38,234,150,62,221,229,107,63,181,221,244,190,98,132,83,191,187,141,36,63,166,191,50,63,28,38,72,191,80,228,10,191,164,206,99,63,251,13,187,62,139,110,118,191,212,208,49,190,192,72,127,63,115,59,204,188,99,3,126,191,135,220,99,62,94,171,114,63,57,148,210,190,215,179,93,191,58,112,21,63,169,241,63,63,74,169,59,191,237,146,26,191,69,113,90,63,2,38,222,62,178,143,112,191,249,173,124,190,4,36,125,63,51,43,76,61,137,174,127,191,137,158,24,62,115,21,120,63,68,29,175,190,229,165,102,191,199,124,5,63,224,16,76,63,205,31,46,191,62,100,41,191,43,219,79,63,0,0,0,63,115,88,105,191,175,16,163,190,224,148,121,63,234,167,254,61,161,235,127,191,23,12,153,61,92,28,124,63,154,171,138,190,190,77,110,191,113,148,233,62,240,11,87,63,7,157,31,191,13,67,55,191,125,27,68,63,190,53,16,63,33,211,96,191,237,224,198,190,107,160,116,63,211,230,74,62,86,186,126,191,243,4,53,63,137,158,24,190,107,160,116,191,2,38,222,62,98,132,83,63,205,31,46,191,7,157,31,191,215,179,93,63,251,13,187,62,224,148,121,191,23,12,153,189,192,72,127,63,135,220,99,190,190,77,110,191,0,0,0,63,28,38,72,63,74,169,59,191,190,53,16,191,229,165,102,63,38,234,150,62,4,36,125,191,82,66,141,39,4,36,125,63,38,234,150,190,229,165,102,191,190,53,16,63,74,169,59,63,28,38,72,191,0,0,0,191,190,77,110,63,135,220,99,62,192,72,127,191,23,12,153,61,224,148,121,63,251,13,187,190,215,179,93,191,7,157,31,63,205,31,46,63,98,132,83,191,2,38,222,190,107,160,116,63,137,158,24,62,0,0,128,191,137,158,24,62,107,160,116,63,2,38,222,190,98,132,83,191,205,31,46,63,7,157,31,63,215,179,93,191,251,13,187,190,224,148,121,63,23,12,153,61,192,72,127,191,135,220,99,62,190,77,110,63,0,0,0,191,28,38,72,191,74,169,59,63,190,53,16,63,229,165,102,191,38,234,150,190,4,36,125,63,243,4,53,63,211,230,74,190,221,229,107,191,190,53,16,63,166,191,50,63,240,11,87,191,251,13,187,190,92,28,124,63,115,59,204,188,224,148,121,191,57,148,210,62,43,219,79,63,74,169,59,191,199,124,5,191,178,143,112,63,137,158,24,62,137,174,127,191,249,173,124,62,229,165,102,63,237,146,26,191,62,100,41,191,215,179,93,63,175,16,163,62,99,3,126,191,23,12,153,61,139,110,118,63,113,148,233,190,28,38,72,191,125,27,68,63,181,221,244,62,107,160,116,191,58,234,203,189,86,186,126,63,38,234,150,190,33,211,96,191,187,141,36,63,7,157,31,63,164,206,99,191,154,171,138,190,192,72,127,63,234,167,254,189,94,171,114,191,0,0,0,63,169,241,63,63,224,16,76,191,2,38,222,190,115,21,120,63,51,43,76,61,4,36,125,191,68,29,175,62,69,113,90,63,205,31,46,191,58,112,21,191,115,88,105,63,135,220,99,62,161,235,127,191,212,208,49,62,190,77,110,63,80,228,10,191,13,67,55,191,98,132,83,63,237,224,198,62,150,236,122,191,243,4,53,63,249,173,124,190,33,211,96,191,205,31,46,63,80,228,10,63,94,171,114,191,23,12,153,189,92,28,124,63,57,148,210,190,28,38,72,191,224,16,76,63,237,224,198,62,4,36,125,191,58,234,203,61,178,143,112,63,190,53,16,191,62,100,41,191,164,206,99,63,135,220,99,62,161,235,127,191,154,171,138,62,215,179,93,63,166,191,50,191,199,124,5,191,107,160,116,63,51,43,76,61,150,236,122,191,2,38,222,62,125,27,68,63,43,219,79,191,251,13,187,190,99,3,126,63,234,167,254,189,190,77,110,191,58,112,21,63,187,141,36,63,229,165,102,191,211,230,74,190,137,174,127,63,38,234,150,190,69,113,90,191,13,67,55,63,0,0,0,63,139,110,118,191,115,59,204,188,224,148,121,63,113,148,233,190,169,241,63,191,98,132,83,63,68,29,175,62,86,186,126,191,137,158,24,62,221,229,107,63,237,146,26,191,7,157,31,191,115,88,105,63,212,208,49,62,192,72,127,191,175,16,163,62,240,11,87,63,74,169,59,191,181,221,244,190,115,21,120,63,243,4,53,63,38,234,150,190,98,132,83,191,28,38,72,63,251,13,187,62,192,72,127,191,135,220,99,62,215,179,93,63,74,169,59,191,2,38,222,190,4,36,125,63,137,158,24,190,229,165,102,191,205,31,46,63,0,0,0,63,224,148,121,191,23,12,153,61,190,77,110,63,7,157,31,191,190,53,16,191,107,160,116,63,138,140,141,165,107,160,116,191,190,53,16,63,7,157,31,63,190,77,110,191,23,12,153,189,224,148,121,63,0,0,0,191,205,31,46,191,229,165,102,63,137,158,24,62,4,36,125,191,2,38,222,62,74,169,59,63,215,179,93,191,135,220,99,190,192,72,127,63,251,13,187,190,28,38,72,191,98,132,83,63,38,234,150,62,0,0,128,191,38,234,150,62,98,132,83,63,28,38,72,191,251,13,187,190,192,72,127,63,135,220,99,190,215,179,93,191,74,169,59,63,2,38,222,62,4,36,125,191,137,158,24,62,229,165,102,63,205,31,46,191,0,0,0,191,224,148,121,63,23,12,153,189,190,77,110,191,7,157,31,63,190,53,16,63,107,160,116,191,243,4,53,63,68,29,175,190,125,27,68,191,215,179,93,63,212,208,49,62,92,28,124,191,0,0,0,63,187,141,36,63,178,143,112,191,46,238,158,38,178,143,112,63,187,141,36,191,0,0,0,191,92,28,124,63,212,208,49,190,215,179,93,191,125,27,68,63,68,29,175,62,0,0,128,191,68,29,175,62,125,27,68,63,215,179,93,191,212,208,49,190,92,28,124,63,0,0,0,191,187,141,36,191,178,143,112,63,217,213,140,37,178,143,112,191,187,141,36,63,0,0,0,63,92,28,124,191,212,208,49,62,215,179,93,63,125,27,68,191,68,29,175,190,0,0,128,63,68,29,175,190,125,27,68,191,215,179,93,63,212,208,49,62,92,28,124,191,0,0,0,63,187,141,36,63,178,143,112,191,115,83,13,39,178,143,112,63,187,141,36,191,0,0,0,191,92,28,124,63,212,208,49,190,215,179,93,191,125,27,68,63,68,29,175,62,0,0,128,191,68,29,175,62,125,27,68,63,215,179,93,191,212,208,49,190,92,28,124,63,0,0,0,191,187,141,36,191,178,143,112,63,243,4,53,63,237,224,198,190,166,191,50,191,190,77,110,63,115,59,204,188,115,88,105,191,74,169,59,63,68,29,175,62,137,174,127,191,2,38,222,62,62,100,41,63,94,171,114,191,23,12,153,61,164,206,99,63,125,27,68,191,38,234,150,190,86,186,126,63,181,221,244,190,7,157,31,191,139,110,118,63,234,167,254,189,215,179,93,191,224,16,76,63,249,173,124,62,4,36,125,191,199,124,5,63,58,112,21,63,224,148,121,191,212,208,49,62,240,11,87,63,98,132,83,191,211,230,74,190,150,236,122,63,190,53,16,191,80,228,10,191,92,28,124,63,135,220,99,190,43,219,79,191,69,113,90,63,137,158,24,62,115,21,120,191,237,146,26,63,0,0,0,63,99,3,126,191,154,171,138,62,28,38,72,63,33,211,96,191,58,234,203,189,107,160,116,63,187,141,36,191,113,148,233,190,192,72,127,63,175,16,163,190,169,241,63,191,229,165,102,63,51,43,76,61,178,143,112,191,205,31,46,63,57,148,210,62,161,235,127,191,251,13,187,62,13,67,55,63,221,229,107,191,243,4,53,63,2,38,222,190,7,157,31,191,224,148,121,63,135,220,99,190,28,38,72,191,229,165,102,63,88,215,30,38,229,165,102,191,28,38,72,63,135,220,99,62,224,148,121,191,7,157,31,63,2,38,222,62,0,0,128,191,2,38,222,62,7,157,31,63,224,148,121,191,135,220,99,62,28,38,72,63,229,165,102,191,130,33,119,167,229,165,102,63,28,38,72,191,135,220,99,190,224,148,121,63,7,157,31,191,2,38,222,190,0,0,128,63,2,38,222,190,7,157,31,191,224,148,121,63,135,220,99,190,28,38,72,191,229,165,102,63,91,26,141,38,229,165,102,191,28,38,72,63,135,220,99,62,224,148,121,191,7,157,31,63,2,38,222,62,0,0,128,191,2,38,222,62,7,157,31,63,224,148,121,191,135,220,99,62,28,38,72,63,229,165,102,191,77,14,212,38,229,165,102,63,28,38,72,191,135,220,99,190,224,148,121,63,7,157,31,191,2,38,222,190,0,0,128,63,2,38,222,190,7,157,31,191,224,148,121,63,135,220,99,190,28,38,72,191,229,165,102,63,243,4,53,63,181,221,244,190,80,228,10,191,192,72,127,63,57,148,210,190,237,146,26,191,4,36,125,63,68,29,175,190,62,100,41,191,224,148,121,63,154,171,138,190,13,67,55,191,107,160,116,63,211,230,74,190,125,27,68,191,190,77,110,63,234,167,254,189,43,219,79,191,229,165,102,63,51,43,76,189,69,113,90,191,215,179,93,63,115,59,204,60,164,206,99,191,98,132,83,63,58,234,203,61,221,229,107,191,28,38,72,63,212,208,49,62,94,171,114,191,74,169,59,63,249,173,124,62,115,21,120,191,205,31,46,63,175,16,163,62,92,28,124,191,7,157,31,63,237,224,198,62,86,186,126,191,190,53,16,63,113,148,233,62,161,235,127,191,0,0,0,63,199,124,5,63,137,174,127,191,2,38,222,62,58,112,21,63,99,3,126,191,251,13,187,62,187,141,36,63,150,236,122,191,38,234,150,62,166,191,50,63,139,110,118,191,135,220,99,62,169,241,63,63,178,143,112,191,137,158,24,62,224,16,76,63,115,88,105,191,23,12,153,61,240,11,87,63,33,211,96,191,243,4,53,63,199,124,5,191,113,148,233,190,192,72,127,63,58,112,21,191,237,224,198,190,4,36,125,63,187,141,36,191,175,16,163,190,224,148,121,63,166,191,50,191,249,173,124,190,107,160,116,63,169,241,63,191,212,208,49,190,190,77,110,63,224,16,76,191,58,234,203,189,229,165,102,63,240,11,87,191,115,59,204,188,215,179,93,63,33,211,96,191,51,43,76,61,98,132,83,63,115,88,105,191,234,167,254,61,28,38,72,63,178,143,112,191,211,230,74,62,74,169,59,63,139,110,118,191,154,171,138,62,205,31,46,63,150,236,122,191,68,29,175,62,7,157,31,63,99,3,126,191,57,148,210,62,190,53,16,63,137,174,127,191,181,221,244,62,0,0,0,63,161,235,127,191,80,228,10,63,2,38,222,62,86,186,126,191,237,146,26,63,251,13,187,62,92,28,124,191,62,100,41,63,38,234,150,62,115,21,120,191,13,67,55,63,135,220,99,62,94,171,114,191,125,27,68,63,137,158,24,62,221,229,107,191,43,219,79,63,23,12,153,61,164,206,99,191,69,113,90,63,243,4,53,63,190,53,16,191,251,13,187,190,224,148,121,63,74,169,59,191,137,158,24,190,229,165,102,63,215,179,93,191,23,12,153,61,28,38,72,63,107,160,116,191,38,234,150,62,7,157,31,63,192,72,127,191,0,0,0,63,2,38,222,62,4,36,125,191,205,31,46,63,135,220,99,62,190,77,110,191,98,132,83,63,219,176,54,161,98,132,83,191,190,77,110,63,135,220,99,190,205,31,46,191,4,36,125,63,2,38,222,190,0,0,0,191,192,72,127,63,7,157,31,191,38,234,150,190,107,160,116,63,28,38,72,191,23,12,153,189,215,179,93,63,229,165,102,191,137,158,24,62,74,169,59,63,224,148,121,191,251,13,187,62,190,53,16,63,0,0,128,191,190,53,16,63,251,13,187,62,224,148,121,191,74,169,59,63,137,158,24,62,229,165,102,191,215,179,93,63,23,12,153,189,28,38,72,191,107,160,116,63,38,234,150,190,7,157,31,191,192,72,127,63,0,0,0,191,2,38,222,190,4,36,125,63,205,31,46,191,135,220,99,190,190,77,110,63,98,132,83,191,243,4,53,63,237,146,26,191,154,171,138,190,190,77,110,63,69,113,90,191,58,234,203,61,74,169,59,63,92,28,124,191,113,148,233,62,2,38,222,62,150,236,122,191,169,241,63,63,23,12,153,61,240,11,87,191,178,143,112,63,38,234,150,190,58,112,21,191,161,235,127,63,7,157,31,191,249,173,124,190,221,229,107,63,215,179,93,191,234,167,254,61,13,67,55,63,4,36,125,191,181,221,244,62,57,148,210,62,224,148,121,191,125,27,68,63,51,43,76,61,98,132,83,191,94,171,114,63,175,16,163,190,190,53,16,191,137,174,127,63,187,141,36,191,135,220,99,190,115,88,105,63,33,211,96,191,137,158,24,62,166,191,50,63,99,3,126,191,0,0,0,63,237,224,198,62,115,21,120,191,28,38,72,63,115,59,204,60,43,219,79,191,107,160,116,63,68,29,175,190,80,228,10,191,192,72,127,63,62,100,41,191,211,230,74,190,229,165,102,63,164,206,99,191,212,208,49,62,205,31,46,63,86,186,126,191,199,124,5,63,251,13,187,62,139,110,118,191,224,16,76,63,243,4,53,63,187,141,36,191,212,208,49,190,215,179,93,63,178,143,112,191,68,29,175,62,0,0,0,63,92,28,124,191,125,27,68,63,8,72,141,166,125,27,68,191,92,28,124,63,0,0,0,191,68,29,175,190,178,143,112,63,215,179,93,191,212,208,49,62,187,141,36,63,0,0,128,191,187,141,36,63,212,208,49,62,215,179,93,191,178,143,112,63,68,29,175,190,0,0,0,191,92,28,124,63,125,27,68,191,12,236,83,39,125,27,68,63,92,28,124,191,0,0,0,63,68,29,175,62,178,143,112,191,215,179,93,63,212,208,49,190,187,141,36,191,0,0,128,63,187,141,36,191,212,208,49,190,215,179,93,63,178,143,112,191,68,29,175,62,0,0,0,63,92,28,124,191,125,27,68,63,10,154,176,167,125,27,68,191,92,28,124,63,0,0,0,191,68,29,175,190,178,143,112,63,215,179,93,191,212,208,49,62,187,141,36,63,0,0,128,191,187,141,36,63,212,208,49,62,215,179,93,191,178,143,112,63,68,29,175,190,0,0,0,191,92,28,124,63,125,27,68,191,243,4,53,63,205,31,46,191,23,12,153,189,28,38,72,63,4,36,125,191,190,53,16,63,135,220,99,62,215,179,93,191,107,160,116,63,2,38,222,190,251,13,187,190,190,77,110,63,229,165,102,191,38,234,150,62,0,0,0,63,224,148,121,191,98,132,83,63,137,158,24,190,7,157,31,191,192,72,127,63,74,169,59,191,88,56,119,39,74,169,59,63,192,72,127,191,7,157,31,63,137,158,24,62,98,132,83,191,224,148,121,63,0,0,0,191,38,234,150,190,229,165,102,63,190,77,110,191,251,13,187,62,2,38,222,62,107,160,116,191,215,179,93,63,135,220,99,190,190,53,16,191,4,36,125,63,28,38,72,191,23,12,153,61,205,31,46,63,0,0,128,191,205,31,46,63,23,12,153,61,28,38,72,191,4,36,125,63,190,53,16,191,135,220,99,190,215,179,93,63,107,160,116,191,2,38,222,62,251,13,187,62,190,77,110,191,229,165,102,63,38,234,150,190,0,0,0,191,224,148,121,63,98,132,83,191,137,158,24,62,7,157,31,63,192,72,127,191,74,169,59,63,243,4,53,63,13,67,55,191,115,59,204,60,205,31,46,63,137,174,127,191,169,241,63,63,23,12,153,189,187,141,36,191,86,186,126,63,28,38,72,191,234,167,254,61,237,146,26,63,4,36,125,191,43,219,79,63,212,208,49,190,190,53,16,191,150,236,122,63,240,11,87,191,135,220,99,62,199,124,5,63,115,21,120,191,215,179,93,63,154,171,138,190,181,221,244,190,107,160,116,63,164,206,99,191,175,16,163,62,2,38,222,62,178,143,112,191,115,88,105,63,251,13,187,190,237,224,198,190,221,229,107,63,190,77,110,191,57,148,210,62,68,29,175,62,229,165,102,191,94,171,114,63,113,148,233,190,38,234,150,190,33,211,96,63,139,110,118,191,0,0,0,63,249,173,124,62,69,113,90,191,224,148,121,63,80,228,10,191,211,230,74,190,98,132,83,63,92,28,124,191,58,112,21,63,137,158,24,62,224,16,76,191,99,3,126,63,7,157,31,191,58,234,203,189,125,27,68,63,192,72,127,191,62,100,41,63,51,43,76,61,74,169,59,191,161,235,127,63,166,191,50,191,243,4,53,63,169,241,63,191,234,167,254,61,190,53,16,63,115,21,120,191,164,206,99,63,251,13,187,190,68,29,175,190,33,211,96,63,224,148,121,191,58,112,21,63,58,234,203,61,74,169,59,191,161,235,127,63,125,27,68,191,137,158,24,62,80,228,10,63,139,110,118,191,229,165,102,63,237,224,198,190,175,16,163,190,215,179,93,63,150,236,122,191,237,146,26,63,23,12,153,61,13,67,55,191,137,174,127,63,28,38,72,191,212,208,49,62,199,124,5,63,107,160,116,191,115,88,105,63,57,148,210,190,38,234,150,190,69,113,90,63,92,28,124,191,7,157,31,63,51,43,76,61,166,191,50,191,192,72,127,63,224,16,76,191,211,230,74,62,0,0,0,63,94,171,114,191,221,229,107,63,2,38,222,190,154,171,138,190,240,11,87,63,4,36,125,191,187,141,36,63,115,59,204,60,205,31,46,191,86,186,126,63,43,219,79,191,135,220,99,62,181,221,244,62,178,143,112,191,190,77,110,63,113,148,233,190,249,173,124,190,98,132,83,63,99,3,126,191,62,100,41,63,243,4,53,63,28,38,72,191,135,220,99,62,2,38,222,62,229,165,102,191,224,148,121,63,7,157,31,191,233,136,48,167,7,157,31,63,224,148,121,191,229,165,102,63,2,38,222,190,135,220,99,190,28,38,72,63,0,0,128,191,28,38,72,63,135,220,99,190,2,38,222,190,229,165,102,63,224,148,121,191,7,157,31,63,217,213,140,37,7,157,31,191,224,148,121,63,229,165,102,191,2,38,222,62,135,220,99,62,28,38,72,191,0,0,128,63,28,38,72,191,135,220,99,62,2,38,222,62,229,165,102,191,224,148,121,63,7,157,31,191,115,83,13,39,7,157,31,63,224,148,121,191,229,165,102,63,2,38,222,190,135,220,99,190,28,38,72,63,0,0,128,191,28,38,72,63,135,220,99,190,2,38,222,190,229,165,102,63,224,148,121,191,7,157,31,63,95,190,83,39,7,157,31,191,224,148,121,63,229,165,102,191,2,38,222,62,135,220,99,62,28,38,72,191,0,0,128,63,28,38,72,191,135,220,99,62,2,38,222,62,229,165,102,191,224,148,121,63,7,157,31,191,243,4,53,63,43,219,79,191,175,16,163,62,38,234,150,62,224,16,76,191,161,235,127,63,98,132,83,191,68,29,175,62,154,171,138,62,28,38,72,191,137,174,127,63,240,11,87,191,251,13,187,62,249,173,124,62,125,27,68,191,192,72,127,63,69,113,90,191,237,224,198,62,135,220,99,62,169,241,63,191,86,186,126,63,215,179,93,191,57,148,210,62,211,230,74,62,74,169,59,191,99,3,126,63,33,211,96,191,2,38,222,62,212,208,49,62,13,67,55,191,4,36,125,63,164,206,99,191,113,148,233,62,137,158,24,62,166,191,50,191,92,28,124,63,229,165,102,191,181,221,244,62,234,167,254,61,205,31,46,191,150,236,122,63,115,88,105,191,0,0,0,63,58,234,203,61,62,100,41,191,224,148,121,63,221,229,107,191,199,124,5,63,23,12,153,61,187,141,36,191,115,21,120,63,190,77,110,191,80,228,10,63,51,43,76,61,7,157,31,191,139,110,118,63,178,143,112,191,190,53,16,63,115,59,204,60,237,146,26,191,107,160,116,63,94,171,114,191,58,112,21,63,243,4,53,63,240,11,87,191,57,148,210,62,137,158,24,62,62,100,41,191,139,110,118,63,107,160,116,191,187,141,36,63,234,167,254,189,2,38,222,190,69,113,90,63,161,235,127,191,98,132,83,63,237,224,198,190,212,208,49,190,205,31,46,63,115,21,120,191,94,171,114,63,7,157,31,191,58,234,203,61,113,148,233,62,215,179,93,191,137,174,127,63,43,219,79,191,251,13,187,62,211,230,74,62,166,191,50,191,224,148,121,63,178,143,112,191,237,146,26,63,23,12,153,189,181,221,244,190,33,211,96,63,192,72,127,191,224,16,76,63,68,29,175,190,135,220,99,190,13,67,55,63,150,236,122,191,190,77,110,63,58,112,21,191,51,43,76,61,0,0,0,63,164,206,99,191,86,186,126,63,28,38,72,191,175,16,163,62,249,173,124,62,74,169,59,191,92,28,124,63,221,229,107,191,190,53,16,63,115,59,204,188,199,124,5,191,229,165,102,63,99,3,126,191,125,27,68,63,38,234,150,190,154,171,138,190,169,241,63,63,4,36,125,191,115,88,105,63,80,228,10,191,243,4,53,63,215,179,93,191,0,0,0,63,126,125,176,37,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,195,67,119,38,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,138,140,141,165,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,50,146,101,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,91,26,141,38,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,115,83,13,39,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,10,154,176,167,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,45,69,13,40,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,172,10,119,39,0,0,0,191,215,179,93,63,0,0,128,191,215,179,93,63,0,0,0,191,45,168,12,166,0,0,0,63,215,179,93,191,0,0,128,63,215,179,93,191,0,0,0,63,243,4,53,63,164,206,99,191,58,112,21,63,137,158,24,190,175,16,163,190,13,67,55,63,107,160,116,191,92,28,124,63,224,16,76,191,2,38,222,62,115,59,204,60,181,221,244,190,98,132,83,63,99,3,126,191,178,143,112,63,205,31,46,191,154,171,138,62,211,230,74,62,7,157,31,191,115,88,105,63,137,174,127,191,215,179,93,63,80,228,10,191,58,234,203,61,251,13,187,62,169,241,63,191,115,21,120,63,224,148,121,191,125,27,68,63,237,224,198,190,23,12,153,189,199,124,5,63,69,113,90,191,192,72,127,63,221,229,107,191,187,141,36,63,135,220,99,190,249,173,124,190,62,100,41,63,190,77,110,191,86,186,126,63,240,11,87,191,0,0,0,63,51,43,76,189,57,148,210,190,28,38,72,63,150,236,122,191,139,110,118,63,74,169,59,191,68,29,175,62,234,167,254,61,190,53,16,191,33,211,96,63,161,235,127,191,229,165,102,63,237,146,26,191,212,208,49,62,38,234,150,62,166,191,50,191,94,171,114,63,4,36,125,191,43,219,79,63,113,148,233,190,243,4,53,63,115,88,105,191,62,100,41,63,38,234,150,190,234,167,254,189,199,124,5,63,98,132,83,191,92,28,124,63,115,21,120,191,28,38,72,63,113,148,233,190,51,43,76,61,251,13,187,62,13,67,55,191,178,143,112,63,192,72,127,191,33,211,96,63,237,146,26,191,135,220,99,62,211,230,74,62,58,112,21,191,215,179,93,63,86,186,126,191,94,171,114,63,74,169,59,191,237,224,198,62,115,59,204,60,2,38,222,190,125,27,68,63,139,110,118,191,4,36,125,63,240,11,87,191,80,228,10,63,137,158,24,190,154,171,138,190,187,141,36,63,229,165,102,191,161,235,127,63,221,229,107,191,205,31,46,63,175,16,163,190,58,234,203,189,0,0,0,63,43,219,79,191,150,236,122,63,224,148,121,191,224,16,76,63,181,221,244,190,23,12,153,61,68,29,175,62,166,191,50,191,190,77,110,63,137,174,127,191,164,206,99,63,7,157,31,191,249,173,124,62,212,208,49,62,190,53,16,191,69,113,90,63,99,3,126,191,107,160,116,63,169,241,63,191,57,148,210,62,243,4,53,63,190,77,110,191,74,169,59,63,2,38,222,190,23,12,153,61,38,234,150,62,7,157,31,191,215,179,93,63,4,36,125,191,224,148,121,63,98,132,83,191,190,53,16,63,135,220,99,190,137,158,24,190,0,0,0,63,28,38,72,191,107,160,116,63,192,72,127,191,229,165,102,63,205,31,46,191,251,13,187,62,56,208,8,40,251,13,187,190,205,31,46,63,229,165,102,191,192,72,127,63,107,160,116,191,28,38,72,63,0,0,0,191,137,158,24,62,135,220,99,62,190,53,16,191,98,132,83,63,224,148,121,191,4,36,125,63,215,179,93,191,7,157,31,63,38,234,150,190,23,12,153,189,2,38,222,62,74,169,59,191,190,77,110,63,0,0,128,191,190,77,110,63,74,169,59,191,2,38,222,62,23,12,153,189,38,234,150,190,7,157,31,63,215,179,93,191,4,36,125,63,224,148,121,191,98,132,83,63,190,53,16,191,135,220,99,62,137,158,24,62,0,0,0,191,28,38,72,63,107,160,116,191,192,72,127,63,229,165,102,191,205,31,46,63,251,13,187,190,243,4,53,63,94,171,114,191,224,16,76,63,190,53,16,191,154,171,138,62,51,43,76,61,251,13,187,190,187,141,36,63,69,113,90,191,224,148,121,63,86,186,126,191,115,88,105,63,74,169,59,191,181,221,244,62,212,208,49,190,137,158,24,190,113,148,233,62,13,67,55,191,229,165,102,63,99,3,126,191,150,236,122,63,215,179,93,191,62,100,41,63,237,224,198,190,23,12,153,61,249,173,124,62,80,228,10,191,28,38,72,63,178,143,112,191,161,235,127,63,107,160,116,191,43,219,79,63,58,112,21,191,38,234,150,62,115,59,204,60,68,29,175,190,7,157,31,63,240,11,87,191,115,21,120,63,192,72,127,191,221,229,107,63,169,241,63,191,0,0,0,63,211,230,74,190,234,167,254,189,2,38,222,62,166,191,50,191,164,206,99,63,4,36,125,191,92,28,124,63,33,211,96,191,205,31,46,63,57,148,210,190,58,234,203,61,135,220,99,62,199,124,5,191,125,27,68,63,190,77,110,191,137,174,127,63,139,110,118,191,98,132,83,63,237,146,26,191,175,16,163,62,243,4,53,63,139,110,118,191,69,113,90,63,205,31,46,191,113,148,233,62,211,230,74,190,23,12,153,189,68,29,175,62,58,112,21,191,28,38,72,63,221,229,107,191,99,3,126,63,4,36,125,191,115,88,105,63,125,27,68,191,190,53,16,63,175,16,163,190,51,43,76,61,135,220,99,62,181,221,244,190,166,191,50,63,215,179,93,191,115,21,120,63,161,235,127,191,107,160,116,63,240,11,87,191,62,100,41,63,2,38,222,190,212,208,49,62,58,234,203,61,251,13,187,190,237,146,26,63,224,16,76,191,190,77,110,63,86,186,126,191,92,28,124,63,229,165,102,191,169,241,63,63,80,228,10,191,38,234,150,62,115,59,204,188,249,173,124,190,0,0,0,63,13,67,55,191,33,211,96,63,224,148,121,191,137,174,127,63,94,171,114,191,98,132,83,63,187,141,36,191,57,148,210,62,137,158,24,190,234,167,254,189,237,224,198,62,7,157,31,191,43,219,79,63,178,143,112,191,192,72,127,63,150,236,122,191,164,206,99,63,74,169,59,191,199,124,5,63,154,171,138,190,243,4,53,63,224,148,121,191,229,165,102,63,28,38,72,191,7,157,31,63,2,38,222,190,135,220,99,62,8,72,141,166,135,220,99,190,2,38,222,62,7,157,31,191,28,38,72,63,229,165,102,191,224,148,121,63,0,0,128,191,224,148,121,63,229,165,102,191,28,38,72,63,7,157,31,191,2,38,222,62,135,220,99,190,250,9,150,167,135,220,99,62,2,38,222,190,7,157,31,63,28,38,72,191,229,165,102,63,224,148,121,191,0,0,128,63,224,148,121,191,229,165,102,63,28,38,72,191,7,157,31,63,2,38,222,190,135,220,99,62,251,178,39,40,135,220,99,190,2,38,222,62,7,157,31,191,28,38,72,63,229,165,102,191,224,148,121,63,0,0,128,191,224,148,121,63,229,165,102,191,28,38,72,63,7,157,31,191,2,38,222,62,135,220,99,190,249,96,4,168,135,220,99,62,2,38,222,190,7,157,31,63,28,38,72,191,229,165,102,63,224,148,121,191,0,0,128,63,224,148,121,191,229,165,102,63,28,38,72,191,7,157,31,63,2,38,222,190,135,220,99,62,243,4,53,63,92,28,124,191,178,143,112,63,215,179,93,191,125,27,68,63,187,141,36,191,0,0,0,63,68,29,175,190,212,208,49,62,34,2,75,39,212,208,49,190,68,29,175,62,0,0,0,191,187,141,36,63,125,27,68,191,215,179,93,63,178,143,112,191,92,28,124,63,0,0,128,191,92,28,124,63,178,143,112,191,215,179,93,63,125,27,68,191,187,141,36,63,0,0,0,191,68,29,175,62,212,208,49,190,52,131,176,167,212,208,49,62,68,29,175,190,0,0,0,63,187,141,36,191,125,27,68,63,215,179,93,191,178,143,112,63,92,28,124,191,0,0,128,63,92,28,124,191,178,143,112,63,215,179,93,191,125,27,68,63,187,141,36,191,0,0,0,63,68,29,175,190,212,208,49,62,172,10,119,39,212,208,49,190,68,29,175,62,0,0,0,191,187,141,36,63,125,27,68,191,215,179,93,63,178,143,112,191,92,28,124,63,0,0,128,191,92,28,124,63,178,143,112,191,215,179,93,63,125,27,68,191,187,141,36,63,0,0,0,191,68,29,175,62,212,208,49,190,243,4,53,63,99,3,126,191,115,21,120,63,190,77,110,191,33,211,96,63,43,219,79,191,74,169,59,63,187,141,36,191,80,228,10,63,2,38,222,190,175,16,163,62,211,230,74,190,23,12,153,61,51,43,76,61,212,208,49,190,38,234,150,62,57,148,210,190,199,124,5,63,7,157,31,191,13,67,55,63,224,16,76,191,215,179,93,63,221,229,107,191,139,110,118,63,4,36,125,191,161,235,127,63,86,186,126,191,224,148,121,63,178,143,112,191,164,206,99,63,98,132,83,191,169,241,63,63,62,100,41,191,190,53,16,63,113,148,233,190,68,29,175,62,135,220,99,190,58,234,203,61,115,59,204,60,137,158,24,190,154,171,138,62,237,224,198,190,0,0,0,63,237,146,26,191,166,191,50,63,28,38,72,191,69,113,90,63,115,88,105,191,107,160,116,63,92,28,124,191,137,174,127,63,192,72,127,191,150,236,122,63,94,171,114,191,229,165,102,63,240,11,87,191,125,27,68,63,205,31,46,191,58,112,21,63,181,221,244,190,251,13,187,62,249,173,124,190,234,167,254,61,243,4,53,63,192,72,127,191,4,36,125,63,224,148,121,191,107,160,116,63,190,77,110,191,229,165,102,63,215,179,93,191,98,132,83,63,28,38,72,191,74,169,59,63,205,31,46,191,7,157,31,63,190,53,16,191,0,0,0,63,2,38,222,190,251,13,187,62,38,234,150,190,135,220,99,62,137,158,24,190,23,12,153,61,194,57,13,40,23,12,153,189,137,158,24,62,135,220,99,190,38,234,150,62,251,13,187,190,2,38,222,62,0,0,0,191,190,53,16,63,7,157,31,191,205,31,46,63,74,169,59,191,28,38,72,63,98,132,83,191,215,179,93,63,229,165,102,191,190,77,110,63,107,160,116,191,224,148,121,63,4,36,125,191,192,72,127,63,0,0,128,191,192,72,127,63,4,36,125,191,224,148,121,63,107,160,116,191,190,77,110,63,229,165,102,191,215,179,93,63,98,132,83,191,28,38,72,63,74,169,59,191,205,31,46,63,7,157,31,191,190,53,16,63,0,0,0,191,2,38,222,62,251,13,187,190,38,234,150,62,135,220,99,190,137,158,24,62,23,12,153,189,243,4,53,63,161,235,127,191,137,174,127,63,192,72,127,191,86,186,126,63,99,3,126,191,4,36,125,63,92,28,124,191,150,236,122,63,224,148,121,191,115,21,120,63,139,110,118,191,107,160,116,63,94,171,114,191,178,143,112,63,190,77,110,191,221,229,107,63,115,88,105,191,229,165,102,63,164,206,99,191,33,211,96,63,215,179,93,191,69,113,90,63,240,11,87,191,98,132,83,63,43,219,79,191,224,16,76,63,28,38,72,191,125,27,68,63,169,241,63,191,74,169,59,63,13,67,55,191,166,191,50,63,205,31,46,191,62,100,41,63,187,141,36,191,7,157,31,63,237,146,26,191,58,112,21,63,190,53,16,191,80,228,10,63,199,124,5,191,0,0,0,63,181,221,244,190,113,148,233,62,2,38,222,190,57,148,210,62,237,224,198,190,251,13,187,62,68,29,175,190,175,16,163,62,38,234,150,190,154,171,138,62,249,173,124,190,135,220,99,62,211,230,74,190,212,208,49,62,137,158,24,190,234,167,254,61,58,234,203,189,23,12,153,61,51,43,76,189,115,59,204,60,243,4,53,63,67,236,127,63,15,177,127,63,109,78,127,63,109,196,126,63,36,19,126,63,172,58,125,63,40,59,124,63,190,20,123,63,157,199,121,63,248,83,120,63,7,186,118,63,11,250,116,63,71,20,115,63,8,9,113,63,158,216,110,63,94,131,108,63,167,9,106,63,216,107,103,63,89,170,100,63,152,197,97,63,5,190,94,63,26,148,91,63,83,72,88,63,49,219,84,63,61,77,81,63,2,159,77,63,18,209,73,63,3,228,69,63,112,216,65,63,249,174,61,63,66,104,57,63,243,4,53,63,187,133,48,63,74,235,43,63,86,54,39,63,153,103,34,63,209,127,29,63,192,127,24,63,42,104,19,63,218,57,14,63,155,245,8,63,61,156,3,63,39,93,252,62,234,90,241,62,117,51,230,62,128,232,218,62,202,123,207,62,21,239,195,62,42,68,184,62,212,124,172,62,229,154,160,62,49,160,148,62,147,142,136,62,204,207,120,62,19,92,96,62,194,197,71,62,162,16,47,62,131,64,22,62,115,178,250,61,54,189,200,61,5,169,150,61,48,251,72,61,176,10,201,60,243,4,53,63,109,78,127,63,172,58,125,63,157,199,121,63,11,250,116,63,158,216,110,63,216,107,103,63,5,190,94,63,49,219,84,63,18,209,73,63,249,174,61,63,187,133,48,63,153,103,34,63,42,104,19,63,61,156,3,63,117,51,230,62,21,239,195,62,229,154,160,62,204,207,120,62,162,16,47,62,54,189,200,61,176,10,201,60,48,251,72,189,115,178,250,189,194,197,71,190,147,142,136,190,212,124,172,190,202,123,207,190,234,90,241,190,155,245,8,191,192,127,24,191,86,54,39,191,243,4,53,191,112,216,65,191,2,159,77,191,83,72,88,191,152,197,97,191,167,9,106,191,8,9,113,191,7,186,118,191,190,20,123,191,36,19,126,191,15,177,127,191,67,236,127,191,109,196,126,191,40,59,124,191,248,83,120,191,71,20,115,191,94,131,108,191,89,170,100,191,26,148,91,191,61,77,81,191,3,228,69,191,66,104,57,191,74,235,43,191,209,127,29,191,218,57,14,191,39,93,252,190,128,232,218,190,42,68,184,190,49,160,148,190,19,92,96,190,131,64,22,190,5,169,150,189,243,4,53,63,36,19,126,63,248,83,120,63,158,216,110,63,152,197,97,63,61,77,81,63,249,174,61,63,86,54,39,63,218,57,14,63,117,51,230,62,212,124,172,62,19,92,96,62,54,189,200,61,176,10,201,188,131,64,22,190,147,142,136,190,21,239,195,190,39,93,252,190,192,127,24,191,187,133,48,191,3,228,69,191,83,72,88,191,216,107,103,191,71,20,115,191,190,20,123,191,109,78,127,191,15,177,127,191,40,59,124,191,11,250,116,191,167,9,106,191,26,148,91,191,18,209,73,191,243,4,53,191,209,127,29,191,61,156,3,191,202,123,207,190,49,160,148,190,162,16,47,190,48,251,72,189,5,169,150,61,194,197,71,62,229,154,160,62,128,232,218,62,155,245,8,63,153,103,34,63,66,104,57,63,2,159,77,63,5,190,94,63,94,131,108,63,7,186,118,63,172,58,125,63,67,236,127,63,109,196,126,63,157,199,121,63,8,9,113,63,89,170,100,63,49,219,84,63,112,216,65,63,74,235,43,63,42,104,19,63,234,90,241,62,42,68,184,62,204,207,120,62,115,178,250,61,243,4,53,63,40,59,124,63,8,9,113,63,5,190,94,63,3,228,69,63,86,54,39,63,61,156,3,63,42,68,184,62,194,197,71,62,176,10,201,60,131,64,22,190,229,154,160,190,234,90,241,190,209,127,29,191,249,174,61,191,83,72,88,191,94,131,108,191,157,199,121,191,15,177,127,191,36,19,126,191,11,250,116,191,89,170,100,191,2,159,77,191,187,133,48,191,218,57,14,191,202,123,207,190,204,207,120,190,5,169,150,189,54,189,200,61,147,142,136,62,128,232,218,62,42,104,19,63,243,4,53,63,61,77,81,63,216,107,103,63,7,186,118,63,109,196,126,63,109,78,127,63,248,83,120,63,167,9,106,63,49,219,84,63,66,104,57,63,192,127,24,63,117,51,230,62,49,160,148,62,115,178,250,61,48,251,72,189,19,92,96,190,21,239,195,190,155,245,8,191,74,235,43,191,18,209,73,191,152,197,97,191,71,20,115,191,172,58,125,191,67,236,127,191,190,20,123,191,158,216,110,191,26,148,91,191,112,216,65,191,153,103,34,191,39,93,252,190,212,124,172,190,162,16,47,190,243,4,53,63,157,199,121,63,216,107,103,63,18,209,73,63,153,103,34,63,117,51,230,62,204,207,120,62,176,10,201,60,194,197,71,190,202,123,207,190,192,127,24,191,112,216,65,191,152,197,97,191,7,186,118,191,15,177,127,191,40,59,124,191,94,131,108,191,61,77,81,191,74,235,43,191,39,93,252,190,49,160,148,190,5,169,150,189,131,64,22,62,42,68,184,62,218,57,14,63,66,104,57,63,26,148,91,63,71,20,115,63,109,196,126,63,36,19,126,63,8,9,113,63,83,72,88,63,243,4,53,63,155,245,8,63,212,124,172,62,115,178,250,61,54,189,200,189,229,154,160,190,61,156,3,191,187,133,48,191,49,219,84,191,158,216,110,191,172,58,125,191,109,78,127,191,11,250,116,191,5,190,94,191,249,174,61,191,42,104,19,191,21,239,195,190,162,16,47,190,48,251,72,61,147,142,136,62,234,90,241,62,86,54,39,63,2,159,77,63,167,9,106,63,190,20,123,63,67,236,127,63,248,83,120,63,89,170,100,63,3,228,69,63,209,127,29,63,128,232,218,62,19,92,96,62,243,4,53,63,7,186,118,63,26,148,91,63,187,133,48,63,234,90,241,62,19,92,96,62,48,251,72,189,229,154,160,190,218,57,14,191,112,216,65,191,216,107,103,191,40,59,124,191,109,196,126,191,158,216,110,191,2,159,77,191,209,127,29,191,21,239,195,190,115,178,250,189,131,64,22,62,202,123,207,62,153,103,34,63,61,77,81,63,8,9,113,63,109,78,127,63,190,20,123,63,89,170,100,63,249,174,61,63,155,245,8,63,49,160,148,62,176,10,201,60,204,207,120,190,39,93,252,190,243,4,53,191,5,190,94,191,248,83,120,191,67,236,127,191,11,250,116,191,83,72,88,191,74,235,43,191,117,51,230,190,194,197,71,190,5,169,150,61,212,124,172,62,42,104,19,63,3,228,69,63,167,9,106,63,172,58,125,63,36,19,126,63,94,131,108,63,18,209,73,63,192,127,24,63,42,68,184,62,54,189,200,61,162,16,47,190,128,232,218,190,86,54,39,191,49,219,84,191,71,20,115,191,15,177,127,191,157,199,121,191,152,197,97,191,66,104,57,191,61,156,3,191,147,142,136,190,243,4,53,63,71,20,115,63,2,159,77,63,42,104,19,63,49,160,148,62,176,10,201,188,212,124,172,190,209,127,29,191,49,219,84,191,7,186,118,191,15,177,127,191,158,216,110,191,3,228,69,191,155,245,8,191,204,207,120,190,5,169,150,61,21,239,195,62,86,54,39,63,26,148,91,63,157,199,121,63,109,196,126,63,167,9,106,63,249,174,61,63,39,93,252,62,194,197,71,62,115,178,250,189,128,232,218,190,187,133,48,191,152,197,97,191,40,59,124,191,172,58,125,191,89,170,100,191,243,4,53,191,117,51,230,190,131,64,22,190,162,16,47,62,234,90,241,62,66,104,57,63,216,107,103,63,36,19,126,63,190,20,123,63,5,190,94,63,74,235,43,63,202,123,207,62,54,189,200,61,19,92,96,190,61,156,3,191,112,216,65,191,94,131,108,191,109,78,127,191,248,83,120,191,83,72,88,191,153,103,34,191,42,68,184,190,48,251,72,189,147,142,136,62,218,57,14,63,18,209,73,63,8,9,113,63,67,236,127,63,11,250,116,63,61,77,81,63,192,127,24,63,229,154,160,62,243,4,53,63,158,216,110,63,249,174,61,63,117,51,230,62,54,189,200,61,147,142,136,190,192,127,24,191,83,72,88,191,190,20,123,191,40,59,124,191,26,148,91,191,209,127,29,191,49,160,148,190,5,169,150,61,128,232,218,62,66,104,57,63,94,131,108,63,67,236,127,63,8,9,113,63,112,216,65,63,234,90,241,62,115,178,250,61,204,207,120,190,42,104,19,191,49,219,84,191,157,199,121,191,172,58,125,191,5,190,94,191,153,103,34,191,229,154,160,190,48,251,72,61,202,123,207,62,243,4,53,63,167,9,106,63,15,177,127,63,71,20,115,63,3,228,69,63,39,93,252,62,131,64,22,62,19,92,96,190,218,57,14,191,61,77,81,191,248,83,120,191,36,19,126,191,152,197,97,191,86,54,39,191,212,124,172,190,176,10,201,60,21,239,195,62,187,133,48,63,216,107,103,63,109,78,127,63,11,250,116,63,18,209,73,63,61,156,3,63,162,16,47,62,194,197,71,190,155,245,8,191,2,159,77,191,7,186,118,191,109,196,126,191,89,170,100,191,74,235,43,191,42,68,184,190,243,4,53,63,167,9,106,63,74,235,43,63,229,154,160,62,54,189,200,189,39,93,252,190,2,159,77,191,157,199,121,191,190,20,123,191,61,77,81,191,61,156,3,191,115,178,250,189,49,160,148,62,86,54,39,63,216,107,103,63,67,236,127,63,94,131,108,63,187,133,48,63,212,124,172,62,5,169,150,189,234,90,241,190,18,209,73,191,248,83,120,191,40,59,124,191,49,219,84,191,155,245,8,191,131,64,22,190,147,142,136,62,153,103,34,63,89,170,100,63,15,177,127,63,158,216,110,63,243,4,53,63,42,68,184,62,48,251,72,189,117,51,230,190,3,228,69,191,7,186,118,191,172,58,125,191,83,72,88,191,218,57,14,191,162,16,47,190,204,207,120,62,209,127,29,63,152,197,97,63,109,78,127,63,8,9,113,63,66,104,57,63,21,239,195,62,176,10,201,188,128,232,218,190,112,216,65,191,11,250,116,191,36,19,126,191,26,148,91,191,42,104,19,191,194,197,71,190,19,92,96,62,192,127,24,63,5,190,94,63,109,196,126,63,71,20,115,63,249,174,61,63,202,123,207,62,243,4,53,63,89,170,100,63,192,127,24,63,162,16,47,62,49,160,148,190,187,133,48,191,8,9,113,191,36,19,126,191,49,219,84,191,39,93,252,190,48,251,72,189,202,123,207,62,3,228,69,63,157,199,121,63,248,83,120,63,112,216,65,63,21,239,195,62,5,169,150,189,61,156,3,191,83,72,88,191,109,196,126,191,158,216,110,191,74,235,43,191,147,142,136,190,194,197,71,62,209,127,29,63,216,107,103,63,67,236,127,63,152,197,97,63,42,104,19,63,131,64,22,62,229,154,160,190,243,4,53,191,71,20,115,191,172,58,125,191,61,77,81,191,234,90,241,190,176,10,201,188,128,232,218,62,18,209,73,63,190,20,123,63,7,186,118,63,249,174,61,63,42,68,184,62,54,189,200,189,155,245,8,191,26,148,91,191,109,78,127,191,94,131,108,191,86,54,39,191,204,207,120,190,19,92,96,62,153,103,34,63,167,9,106,63,15,177,127,63,5,190,94,63,218,57,14,63,115,178,250,61,212,124,172,190,66,104,57,191,11,250,116,191,40,59,124,191,2,159,77,191,117,51,230,190,243,4,53,63,5,190,94,63,61,156,3,63,176,10,201,60,234,90,241,190,83,72,88,191,15,177,127,191,89,170,100,191,218,57,14,191,5,169,150,189,128,232,218,62,61,77,81,63,109,196,126,63,167,9,106,63,192,127,24,63,115,178,250,61,21,239,195,190,18,209,73,191,172,58,125,191,158,216,110,191,153,103,34,191,162,16,47,190,212,124,172,62,112,216,65,63,190,20,123,63,71,20,115,63,74,235,43,63,19,92,96,62,49,160,148,190,66,104,57,191,248,83,120,191,7,186,118,191,243,4,53,191,147,142,136,190,204,207,120,62,187,133,48,63,11,250,116,63,157,199,121,63,249,174,61,63,229,154,160,62,194,197,71,190,86,54,39,191,8,9,113,191,40,59,124,191,3,228,69,191,42,68,184,190,131,64,22,62,209,127,29,63,94,131,108,63,36,19,126,63,2,159,77,63,202,123,207,62,54,189,200,189,42,104,19,191,216,107,103,191,109,78,127,191,49,219,84,191,117,51,230,190,48,251,72,61,155,245,8,63,152,197,97,63,67,236,127,63,26,148,91,63,39,93,252,62,243,4,53,63,83,72,88,63,128,232,218,62,115,178,250,189,153,103,34,191,71,20,115,191,248,83,120,191,187,133,48,191,194,197,71,190,42,68,184,62,2,159,77,63,109,78,127,63,152,197,97,63,39,93,252,62,48,251,72,189,42,104,19,191,94,131,108,191,40,59,124,191,249,174,61,191,147,142,136,190,49,160,148,62,112,216,65,63,172,58,125,63,167,9,106,63,218,57,14,63,176,10,201,60,61,156,3,191,89,170,100,191,109,196,126,191,18,209,73,191,212,124,172,190,19,92,96,62,243,4,53,63,157,199,121,63,8,9,113,63,209,127,29,63,54,189,200,61,117,51,230,190,26,148,91,191,67,236,127,191,49,219,84,191,202,123,207,190,131,64,22,62,86,54,39,63,11,250,116,63,7,186,118,63,74,235,43,63,162,16,47,62,21,239,195,190,61,77,81,191,15,177,127,191,5,190,94,191,234,90,241,190,5,169,150,61,192,127,24,63,158,216,110,63,190,20,123,63,66,104,57,63,204,207,120,62,229,154,160,190,3,228,69,191,36,19,126,191,216,107,103,191,155,245,8,191,243,4,53,63,61,77,81,63,212,124,172,62,147,142,136,190,3,228,69,191,109,78,127,191,26,148,91,191,202,123,207,190,194,197,71,62,66,104,57,63,172,58,125,63,89,170,100,63,234,90,241,62,115,178,250,189,74,235,43,191,157,199,121,191,94,131,108,191,155,245,8,191,48,251,72,61,209,127,29,63,11,250,116,63,71,20,115,63,192,127,24,63,176,10,201,60,218,57,14,191,158,216,110,191,248,83,120,191,86,54,39,191,54,189,200,189,39,93,252,62,216,107,103,63,40,59,124,63,243,4,53,63,162,16,47,62,128,232,218,190,5,190,94,191,109,196,126,191,112,216,65,191,204,207,120,190,42,68,184,62,49,219,84,63,67,236,127,63,2,159,77,63,229,154,160,62,49,160,148,190,18,209,73,191,15,177,127,191,83,72,88,191,21,239,195,190,19,92,96,62,249,174,61,63,36,19,126,63,152,197,97,63,117,51,230,62,131,64,22,190,187,133,48,191,190,20,123,191,167,9,106,191,61,156,3,191,5,169,150,61,153,103,34,63,7,186,118,63,8,9,113,63,42,104,19,63,243,4,53,63,18,209,73,63,204,207,120,62,202,123,207,190,152,197,97,191,40,59,124,191,74,235,43,191,5,169,150,189,218,57,14,63,71,20,115,63,8,9,113,63,155,245,8,63,54,189,200,189,187,133,48,191,172,58,125,191,5,190,94,191,21,239,195,190,147,142,136,62,2,159,77,63,67,236,127,63,3,228,69,63,19,92,96,62,128,232,218,190,89,170,100,191,190,20,123,191,86,54,39,191,48,251,72,189,42,104,19,63,11,250,116,63,158,216,110,63,61,156,3,63,115,178,250,189,243,4,53,191,36,19,126,191,26,148,91,191,42,68,184,190,49,160,148,62,61,77,81,63,15,177,127,63,112,216,65,63,194,197,71,62,117,51,230,190,216,107,103,191,157,199,121,191,153,103,34,191,176,10,201,188,192,127,24,63,7,186,118,63,94,131,108,63,39,93,252,62,131,64,22,190,66,104,57,191,109,196,126,191,83,72,88,191,212,124,172,190,229,154,160,62,49,219,84,63,109,78,127,63,249,174,61,63,162,16,47,62,234,90,241,190,167,9,106,191,248,83,120,191,209,127,29,191,243,4,53,63,112,216,65,63,131,64,22,62,155,245,8,191,11,250,116,191,167,9,106,191,128,232,218,190,147,142,136,62,49,219,84,63,36,19,126,63,74,235,43,63,176,10,201,60,153,103,34,191,40,59,124,191,26,148,91,191,229,154,160,190,21,239,195,62,89,170,100,63,248,83,120,63,42,104,19,63,54,189,200,189,66,104,57,191,15,177,127,191,18,209,73,191,194,197,71,190,39,93,252,62,8,9,113,63,158,216,110,63,234,90,241,62,19,92,96,190,2,159,77,191,109,78,127,191,243,4,53,191,5,169,150,189,192,127,24,63,157,199,121,63,152,197,97,63,42,68,184,62,212,124,172,190,5,190,94,191,190,20,123,191,209,127,29,191,48,251,72,61,187,133,48,63,109,196,126,63,61,77,81,63,204,207,120,62,117,51,230,190,94,131,108,191,71,20,115,191,61,156,3,191,162,16,47,62,3,228,69,63,67,236,127,63,249,174,61,63,115,178,250,61,218,57,14,191,7,186,118,191,216,107,103,191,202,123,207,190,49,160,148,62,83,72,88,63,172,58,125,63,86,54,39,63,243,4,53,63,66,104,57,63,48,251,72,61,86,54,39,191,109,196,126,191,18,209,73,191,131,64,22,190,42,104,19,63,190,20,123,63,83,72,88,63,204,207,120,62,39,93,252,190,11,250,116,191,89,170,100,191,212,124,172,190,202,123,207,62,94,131,108,63,158,216,110,63,128,232,218,62,229,154,160,190,152,197,97,191,7,186,118,191,61,156,3,191,19,92,96,62,49,219,84,63,40,59,124,63,192,127,24,63,115,178,250,189,3,228,69,191,109,78,127,191,74,235,43,191,176,10,201,60,243,4,53,63,67,236,127,63,249,174,61,63,5,169,150,61,153,103,34,191,36,19,126,191,2,159,77,191,162,16,47,190,218,57,14,63,157,199,121,63,26,148,91,63,147,142,136,62,234,90,241,190,71,20,115,191,216,107,103,191,42,68,184,190,21,239,195,62,167,9,106,63,8,9,113,63,117,51,230,62,49,160,148,190,5,190,94,191,248,83,120,191,155,245,8,191,194,197,71,62,61,77,81,63,172,58,125,63,209,127,29,63,54,189,200,189,112,216,65,191,15,177,127,191,187,133,48,191,243,4,53,63,187,133,48,63,48,251,72,189,112,216,65,191,109,196,126,191,209,127,29,191,131,64,22,62,61,77,81,63,190,20,123,63,155,245,8,63,204,207,120,190,5,190,94,191,11,250,116,191,117,51,230,190,212,124,172,62,167,9,106,63,94,131,108,63,42,68,184,62,128,232,218,190,71,20,115,191,152,197,97,191,147,142,136,190,61,156,3,63,157,199,121,63,49,219,84,63,162,16,47,62,192,127,24,191,36,19,126,191,3,228,69,191,5,169,150,189,74,235,43,63,67,236,127,63,243,4,53,63,176,10,201,188,249,174,61,191,109,78,127,191,153,103,34,191,115,178,250,61,2,159,77,63,40,59,124,63,218,57,14,63,19,92,96,190,26,148,91,191,7,186,118,191,234,90,241,190,229,154,160,62,216,107,103,63,158,216,110,63,21,239,195,62,202,123,207,190,8,9,113,191,89,170,100,191,49,160,148,190,39,93,252,62,248,83,120,63,83,72,88,63,194,197,71,62,42,104,19,191,172,58,125,191,18,209,73,191,54,189,200,189,86,54,39,63,15,177,127,63,66,104,57,63,243,4,53,63,86,54,39,63,131,64,22,190,83,72,88,191,11,250,116,191,202,123,207,190,128,232,218,62,7,186,118,63,49,219,84,63,115,178,250,61,74,235,43,191,67,236,127,191,153,103,34,191,162,16,47,62,26,148,91,63,71,20,115,63,21,239,195,62,117,51,230,190,248,83,120,191,61,77,81,191,54,189,200,189,187,133,48,63,15,177,127,63,209,127,29,63,194,197,71,190,5,190,94,191,8,9,113,191,42,68,184,190,234,90,241,62,157,199,121,63,2,159,77,63,5,169,150,61,243,4,53,191,109,78,127,191,192,127,24,191,19,92,96,62,152,197,97,63,158,216,110,63,212,124,172,62,39,93,252,190,190,20,123,191,18,209,73,191,48,251,72,189,66,104,57,63,109,196,126,63,42,104,19,63,204,207,120,190,89,170,100,191,94,131,108,191,229,154,160,190,61,156,3,63,40,59,124,63,3,228,69,63,176,10,201,60,249,174,61,191,36,19,126,191,218,57,14,191,147,142,136,62,216,107,103,63,167,9,106,63,49,160,148,62,155,245,8,191,172,58,125,191,112,216,65,191,243,4,53,63,209,127,29,63,204,207,120,190,167,9,106,191,152,197,97,191,162,16,47,190,74,235,43,63,109,78,127,63,218,57,14,63,229,154,160,190,8,9,113,191,83,72,88,191,54,189,200,189,66,104,57,63,172,58,125,63,39,93,252,62,21,239,195,190,7,186,118,191,2,159,77,191,176,10,201,188,3,228,69,63,157,199,121,63,128,232,218,62,117,51,230,190,190,20,123,191,112,216,65,191,48,251,72,61,61,77,81,63,11,250,116,63,42,68,184,62,61,156,3,191,36,19,126,191,243,4,53,191,115,178,250,61,26,148,91,63,158,216,110,63,49,160,148,62,42,104,19,191,15,177,127,191,86,54,39,191,194,197,71,62,89,170,100,63,216,107,103,63,19,92,96,62,153,103,34,191,67,236,127,191,192,127,24,191,147,142,136,62,94,131,108,63,5,190,94,63,131,64,22,62,187,133,48,191,109,196,126,191,155,245,8,191,212,124,172,62,71,20,115,63,49,219,84,63,5,169,150,61,249,174,61,191,40,59,124,191,234,90,241,190,202,123,207,62,248,83,120,63,18,209,73,63,243,4,53,63,42,104,19,63,212,124,172,190,7,186,118,191,3,228,69,191,5,169,150,61,26,148,91,63,167,9,106,63,194,197,71,62,187,133,48,191,172,58,125,191,117,51,230,190,234,90,241,62,36,19,126,63,74,235,43,63,19,92,96,190,94,131,108,191,83,72,88,191,48,251,72,189,18,209,73,63,11,250,116,63,229,154,160,62,192,127,24,191,67,236,127,191,218,57,14,191,42,68,184,62,248,83,120,63,112,216,65,63,54,189,200,189,5,190,94,191,216,107,103,191,162,16,47,190,243,4,53,63,40,59,124,63,128,232,218,62,39,93,252,190,109,196,126,191,86,54,39,191,204,207,120,62,158,216,110,63,49,219,84,63,176,10,201,60,2,159,77,191,71,20,115,191,49,160,148,190,209,127,29,63,15,177,127,63,155,245,8,63,21,239,195,190,157,199,121,191,249,174,61,191,115,178,250,61,152,197,97,63,89,170,100,63,131,64,22,62,66,104,57,191,190,20,123,191,202,123,207,190,61,156,3,63,109,78,127,63,153,103,34,63,147,142,136,190,8,9,113,191,61,77,81,191,243,4,53,63,155,245,8,63,128,232,218,190,36,19,126,191,153,103,34,191,229,154,160,62,248,83,120,63,66,104,57,63,194,197,71,190,158,216,110,191,2,159,77,191,5,169,150,61,152,197,97,63,5,190,94,63,48,251,72,61,61,77,81,191,94,131,108,191,162,16,47,190,249,174,61,63,7,186,118,63,49,160,148,62,86,54,39,191,172,58,125,191,202,123,207,190,218,57,14,63,67,236,127,63,61,156,3,63,117,51,230,190,109,196,126,191,209,127,29,191,212,124,172,62,157,199,121,63,243,4,53,63,19,92,96,190,8,9,113,191,18,209,73,191,54,189,200,61,89,170,100,63,26,148,91,63,176,10,201,60,49,219,84,191,167,9,106,191,131,64,22,190,112,216,65,63,11,250,116,63,147,142,136,62,74,235,43,191,40,59,124,191,21,239,195,190,42,104,19,63,15,177,127,63,39,93,252,62,234,90,241,190,109,78,127,191,192,127,24,191,42,68,184,62,190,20,123,63,187,133,48,63,204,207,120,190,71,20,115,191,3,228,69,191,115,178,250,61,216,107,103,63,83,72,88,63,243,4,53,63,39,93,252,62,61,156,3,191,67,236,127,191,234,90,241,190,155,245,8,63,15,177,127,63,117,51,230,62,218,57,14,191,109,78,127,191,128,232,218,190,42,104,19,63,109,196,126,63,202,123,207,62,192,127,24,191,36,19,126,191,21,239,195,190,209,127,29,63,172,58,125,63,42,68,184,62,153,103,34,191,40,59,124,191,212,124,172,190,86,54,39,63,190,20,123,63,229,154,160,62,74,235,43,191,157,199,121,191,49,160,148,190,187,133,48,63,248,83,120,63,147,142,136,62,243,4,53,191,7,186,118,191,204,207,120,190,66,104,57,63,11,250,116,63,19,92,96,62,249,174,61,191,71,20,115,191,194,197,71,190,112,216,65,63,8,9,113,63,162,16,47,62,3,228,69,191,158,216,110,191,131,64,22,190,18,209,73,63,94,131,108,63,115,178,250,61,2,159,77,191,167,9,106,191,54,189,200,189,61,77,81,63,216,107,103,63,5,169,150,61,49,219,84,191,89,170,100,191,48,251,72,189,83,72,88,63,152,197,97,63,176,10,201,60,26,148,91,191,5,190,94,191,243,4,53,63,117,51,230,62,192,127,24,191,40,59,124,191,49,160,148,190,66,104,57,63,8,9,113,63,115,178,250,61,49,219,84,191,5,190,94,191,48,251,72,61,167,9,106,63,3,228,69,63,19,92,96,190,248,83,120,191,86,54,39,191,21,239,195,62,109,78,127,63,61,156,3,63,155,245,8,191,109,196,126,191,42,68,184,190,74,235,43,63,7,186,118,63,194,197,71,62,18,209,73,191,216,107,103,191,176,10,201,188,152,197,97,63,61,77,81,63,131,64,22,190,71,20,115,191,243,4,53,191,229,154,160,62,172,58,125,63,42,104,19,63,234,90,241,190,67,236,127,191,128,232,218,190,209,127,29,63,190,20,123,63,147,142,136,62,249,174,61,191,158,216,110,191,54,189,200,189,83,72,88,63,26,148,91,63,5,169,150,189,94,131,108,191,112,216,65,191,204,207,120,62,157,199,121,63,153,103,34,63,202,123,207,190,15,177,127,191,39,93,252,190,218,57,14,63,36,19,126,63,212,124,172,62,187,133,48,191,11,250,116,191,162,16,47,190,2,159,77,63,89,170,100,63,243,4,53,63,202,123,207,62,74,235,43,191,71,20,115,191,54,189,200,189,5,190,94,63,2,159,77,63,19,92,96,190,190,20,123,191,42,104,19,191,61,156,3,63,36,19,126,63,49,160,148,62,112,216,65,191,216,107,103,191,176,10,201,60,94,131,108,63,66,104,57,63,212,124,172,190,109,78,127,191,234,90,241,190,209,127,29,63,248,83,120,63,162,16,47,62,49,219,84,191,83,72,88,191,131,64,22,62,7,186,118,63,153,103,34,63,117,51,230,190,15,177,127,191,42,68,184,190,243,4,53,63,158,216,110,63,48,251,72,61,89,170,100,191,3,228,69,191,147,142,136,62,172,58,125,63,155,245,8,63,218,57,14,191,40,59,124,191,204,207,120,190,18,209,73,63,152,197,97,63,5,169,150,189,8,9,113,191,187,133,48,191,21,239,195,62,67,236,127,63,128,232,218,62,86,54,39,191,11,250,116,191,115,178,250,189,26,148,91,63,61,77,81,63,194,197,71,190,157,199,121,191,192,127,24,191,39,93,252,62,109,196,126,63,229,154,160,62,249,174,61,191,167,9,106,191,243,4,53,63,42,68,184,62,249,174,61,191,89,170,100,191,54,189,200,61,7,186,118,63,192,127,24,63,155,245,8,191,190,20,123,191,162,16,47,190,26,148,91,63,18,209,73,63,49,160,148,190,109,78,127,191,128,232,218,190,187,133,48,63,94,131,108,63,176,10,201,188,8,9,113,191,86,54,39,191,234,90,241,62,36,19,126,63,204,207,120,62,61,77,81,191,49,219,84,191,19,92,96,62,172,58,125,63,39,93,252,62,153,103,34,191,71,20,115,191,48,251,72,189,167,9,106,63,243,4,53,63,202,123,207,190,15,177,127,191,229,154,160,190,3,228,69,63,5,190,94,63,131,64,22,190,157,199,121,191,218,57,14,191,42,104,19,63,248,83,120,63,115,178,250,61,152,197,97,191,112,216,65,191,212,124,172,62,67,236,127,63,21,239,195,62,66,104,57,191,216,107,103,191,5,169,150,61,11,250,116,63,209,127,29,63,61,156,3,191,40,59,124,191,194,197,71,190,83,72,88,63,2,159,77,63,147,142,136,190,109,196,126,191,117,51,230,190,74,235,43,63,158,216,110,63,243,4,53,63,229,154,160,62,2,159,77,191,61,77,81,191,49,160,148,62,67,236,127,63,212,124,172,62,18,209,73,191,49,219,84,191,147,142,136,62,15,177,127,63,42,68,184,62,3,228,69,191,83,72,88,191,204,207,120,62,109,78,127,63,21,239,195,62,112,216,65,191,26,148,91,191,19,92,96,62,109,196,126,63,202,123,207,62,249,174,61,191,5,190,94,191,194,197,71,62,36,19,126,63,128,232,218,62,66,104,57,191,152,197,97,191,162,16,47,62,172,58,125,63,117,51,230,62,243,4,53,191,89,170,100,191,131,64,22,62,40,59,124,63,234,90,241,62,187,133,48,191,216,107,103,191,115,178,250,61,190,20,123,63,39,93,252,62,74,235,43,191,167,9,106,191,54,189,200,61,157,199,121,63,61,156,3,63,86,54,39,191,94,131,108,191,5,169,150,61,248,83,120,63,155,245,8,63,153,103,34,191,158,216,110,191,48,251,72,61,7,186,118,63,218,57,14,63,209,127,29,191,8,9,113,191,176,10,201,60,11,250,116,63,42,104,19,63,192,127,24,191,71,20,115,191,243,4,53,63,147,142,136,62,26,148,91,191,66,104,57,191,234,90,241,62,157,199,121,63,48,251,72,61,71,20,115,191,218,57,14,191,86,54,39,63,216,107,103,63,162,16,47,190,109,196,126,191,42,68,184,190,2,159,77,63,18,209,73,63,21,239,195,190,36,19,126,191,131,64,22,190,167,9,106,63,153,103,34,63,42,104,19,191,8,9,113,191,5,169,150,61,190,20,123,63,117,51,230,62,249,174,61,191,83,72,88,191,49,160,148,62,67,236,127,63,204,207,120,62,5,190,94,191,243,4,53,191,39,93,252,62,248,83,120,63,176,10,201,60,11,250,116,191,155,245,8,191,74,235,43,63,89,170,100,63,194,197,71,190,109,78,127,191,212,124,172,190,61,77,81,63,3,228,69,63,202,123,207,190,172,58,125,191,115,178,250,189,94,131,108,63,209,127,29,63,192,127,24,191,158,216,110,191,54,189,200,61,40,59,124,63,128,232,218,62,112,216,65,191,49,219,84,191,229,154,160,62,15,177,127,63,19,92,96,62,152,197,97,191,187,133,48,191,61,156,3,63,7,186,118,63,243,4,53,63,19,92,96,62,216,107,103,191,209,127,29,191,153,103,34,63,89,170,100,63,204,207,120,190,67,236,127,191,194,197,71,190,167,9,106,63,192,127,24,63,86,54,39,191,152,197,97,191,147,142,136,62,15,177,127,63,162,16,47,62,94,131,108,191,42,104,19,191,74,235,43,63,5,190,94,63,49,160,148,190,109,78,127,191,131,64,22,190,158,216,110,63,218,57,14,63,187,133,48,191,26,148,91,191,229,154,160,62,109,196,126,63,115,178,250,61,8,9,113,191,155,245,8,191,243,4,53,63,83,72,88,63,212,124,172,190,36,19,126,191,54,189,200,189,71,20,115,63,61,156,3,63,66,104,57,191,49,219,84,191,42,68,184,62,172,58,125,63,5,169,150,61,11,250,116,191,39,93,252,190,249,174,61,63,61,77,81,63,21,239,195,190,40,59,124,191,48,251,72,189,7,186,118,63,234,90,241,62,112,216,65,191,2,159,77,191,202,123,207,62,190,20,123,63,176,10,201,60,248,83,120,191,117,51,230,190,3,228,69,63,18,209,73,63,128,232,218,190,157,199,121,191,243,4,53,63,162,16,47,62,8,9,113,191,39,93,252,190,3,228,69,63,112,216,65,63,61,156,3,191,158,216,110,191,194,197,71,62,67,236,127,63,131,64,22,62,71,20,115,191,234,90,241,190,18,209,73,63,249,174,61,63,155,245,8,191,94,131,108,191,19,92,96,62,15,177,127,63,115,178,250,61,11,250,116,191,117,51,230,190,2,159,77,63,66,104,57,63,218,57,14,191,167,9,106,191,204,207,120,62,109,78,127,63,54,189,200,61,7,186,118,191,128,232,218,190,61,77,81,63,243,4,53,63,42,104,19,191,216,107,103,191,147,142,136,62,109,196,126,63,5,169,150,61,248,83,120,191,202,123,207,190,49,219,84,63,187,133,48,63,192,127,24,191,89,170,100,191,49,160,148,62,36,19,126,63,48,251,72,61,157,199,121,191,21,239,195,190,83,72,88,63,74,235,43,63,209,127,29,191,152,197,97,191,229,154,160,62,172,58,125,63,176,10,201,60,190,20,123,191,42,68,184,190,26,148,91,63,86,54,39,63,153,103,34,191,5,190,94,191,212,124,172,62,40,59,124,63,243,4,53,63,115,178,250,61,248,83,120,191,42,68,184,190,152,197,97,63,42,104,19,63,249,174,61,191,112,216,65,191,218,57,14,63,89,170,100,63,212,124,172,190,157,199,121,191,54,189,200,61,67,236,127,63,131,64,22,62,7,186,118,191,21,239,195,190,5,190,94,63,192,127,24,63,66,104,57,191,3,228,69,191,155,245,8,63,216,107,103,63,229,154,160,190,190,20,123,191,5,169,150,61,15,177,127,63,162,16,47,62,11,250,116,191,202,123,207,190,26,148,91,63,209,127,29,63,243,4,53,191,18,209,73,191,61,156,3,63,167,9,106,63,49,160,148,190,40,59,124,191,48,251,72,61,109,78,127,63,194,197,71,62,71,20,115,191,128,232,218,190,83,72,88,63,153,103,34,63,187,133,48,191,2,159,77,191,39,93,252,62,94,131,108,63,147,142,136,190,172,58,125,191,176,10,201,60,109,196,126,63,19,92,96,62,8,9,113,191,117,51,230,190,49,219,84,63,86,54,39,63,74,235,43,191,61,77,81,191,234,90,241,62,158,216,110,63,204,207,120,190,36,19,126,191,243,4,53,63,5,169,150,61,172,58,125,191,19,92,96,190,11,250,116,63,42,68,184,62,216,107,103,191,39,93,252,190,49,219,84,63,209,127,29,63,249,174,61,191,66,104,57,191,153,103,34,63,61,77,81,63,61,156,3,191,89,170,100,191,21,239,195,62,71,20,115,63,204,207,120,190,40,59,124,191,54,189,200,61,67,236,127,63,48,251,72,61,36,19,126,191,194,197,71,190,7,186,118,63,212,124,172,62,167,9,106,191,234,90,241,190,83,72,88,63,192,127,24,63,112,216,65,191,243,4,53,191,86,54,39,63,2,159,77,63,155,245,8,191,152,197,97,191,202,123,207,62,8,9,113,63,147,142,136,190,190,20,123,191,115,178,250,61,15,177,127,63,176,10,201,60,109,196,126,191,162,16,47,190,248,83,120,63,229,154,160,62,94,131,108,191,117,51,230,190,26,148,91,63,42,104,19,63,3,228,69,191,187,133,48,191,74,235,43,63,18,209,73,63,218,57,14,191,5,190,94,191,128,232,218,62,158,216,110,63,49,160,148,190,157,199,121,191,131,64,22,62,109,78,127,63,243,4,53,63,176,10,201,60,15,177,127,191,5,169,150,189,109,196,126,63,115,178,250,61,172,58,125,191,162,16,47,190,190,20,123,63,19,92,96,62,248,83,120,191,147,142,136,190,11,250,116,63,229,154,160,62,8,9,113,191,42,68,184,190,94,131,108,63,202,123,207,62,216,107,103,191,117,51,230,190,152,197,97,63,39,93,252,62,26,148,91,191,155,245,8,191,49,219,84,63,42,104,19,63,2,159,77,191,209,127,29,191,3,228,69,63,86,54,39,63,249,174,61,191,187,133,48,191,243,4,53,63,66,104,57,63,74,235,43,191,112,216,65,191,153,103,34,63,18,209,73,63,192,127,24,191,61,77,81,191,218,57,14,63,83,72,88,63,61,156,3,191,5,190,94,191,234,90,241,62,89,170,100,63,128,232,218,190,167,9,106,191,21,239,195,62,158,216,110,63,212,124,172,190,71,20,115,191,49,160,148,62,7,186,118,63,204,207,120,190,157,199,121,191,194,197,71,62,40,59,124,63,131,64,22,190,36,19,126,191,54,189,200,61,109,78,127,63,48,251,72,189,67,236,127,191,243,4,53,63,176,10,201,188,15,177,127,191,5,169,150,61,109,196,126,63,115,178,250,189,172,58,125,191,162,16,47,62,190,20,123,63,19,92,96,190,248,83,120,191,147,142,136,62,11,250,116,63,229,154,160,190,8,9,113,191,42,68,184,62,94,131,108,63,202,123,207,190,216,107,103,191,117,51,230,62,152,197,97,63,39,93,252,190,26,148,91,191,155,245,8,63,49,219,84,63,42,104,19,191,2,159,77,191,209,127,29,63,3,228,69,63,86,54,39,191,249,174,61,191,187,133,48,63,243,4,53,63,66,104,57,191,74,235,43,191,112,216,65,63,153,103,34,63,18,209,73,191,192,127,24,191,61,77,81,63,218,57,14,63,83,72,88,191,61,156,3,191,5,190,94,63,234,90,241,62,89,170,100,191,128,232,218,190,167,9,106,63,21,239,195,62,158,216,110,191,212,124,172,190,71,20,115,63,49,160,148,62,7,186,118,191,204,207,120,190,157,199,121,63,194,197,71,62,40,59,124,191,131,64,22,190,36,19,126,63,54,189,200,61,109,78,127,191,48,251,72,189,67,236,127,63,243,4,53,63,5,169,150,189,172,58,125,191,19,92,96,62,11,250,116,63,42,68,184,190,216,107,103,191,39,93,252,62,49,219,84,63,209,127,29,191,249,174,61,191,66,104,57,63,153,103,34,63,61,77,81,191,61,156,3,191,89,170,100,63,21,239,195,62,71,20,115,191,204,207,120,190,40,59,124,63,54,189,200,61,67,236,127,191,48,251,72,61,36,19,126,63,194,197,71,190,7,186,118,191,212,124,172,62,167,9,106,63,234,90,241,190,83,72,88,191,192,127,24,63,112,216,65,63,243,4,53,191,86,54,39,191,2,159,77,63,155,245,8,63,152,197,97,191,202,123,207,190,8,9,113,63,147,142,136,62,190,20,123,191,115,178,250,189,15,177,127,63,176,10,201,188,109,196,126,191,162,16,47,62,248,83,120,63,229,154,160,190,94,131,108,191,117,51,230,62,26,148,91,63,42,104,19,191,3,228,69,191,187,133,48,63,74,235,43,63,18,209,73,191,218,57,14,191,5,190,94,63,128,232,218,62,158,216,110,191,49,160,148,190,157,199,121,63,131,64,22,62,109,78,127,191,243,4,53,63,115,178,250,189,248,83,120,191,42,68,184,62,152,197,97,63,42,104,19,191,249,174,61,191,112,216,65,63,218,57,14,63,89,170,100,191,212,124,172,190,157,199,121,63,54,189,200,61,67,236,127,191,131,64,22,62,7,186,118,63,21,239,195,190,5,190,94,191,192,127,24,63,66,104,57,63,3,228,69,191,155,245,8,191,216,107,103,63,229,154,160,62,190,20,123,191,5,169,150,189,15,177,127,63,162,16,47,190,11,250,116,191,202,123,207,62,26,148,91,63,209,127,29,191,243,4,53,191,18,209,73,63,61,156,3,63,167,9,106,191,49,160,148,190,40,59,124,63,48,251,72,61,109,78,127,191,194,197,71,62,71,20,115,63,128,232,218,190,83,72,88,191,153,103,34,63,187,133,48,63,2,159,77,191,39,93,252,190,94,131,108,63,147,142,136,62,172,58,125,191,176,10,201,188,109,196,126,63,19,92,96,190,8,9,113,191,117,51,230,62,49,219,84,63,86,54,39,191,74,235,43,191,61,77,81,63,234,90,241,62,158,216,110,191,204,207,120,190,36,19,126,63,243,4,53,63,162,16,47,190,8,9,113,191,39,93,252,62,3,228,69,63,112,216,65,191,61,156,3,191,158,216,110,63,194,197,71,62,67,236,127,191,131,64,22,62,71,20,115,63,234,90,241,190,18,209,73,191,249,174,61,63,155,245,8,63,94,131,108,191,19,92,96,190,15,177,127,63,115,178,250,189,11,250,116,191,117,51,230,62,2,159,77,63,66,104,57,191,218,57,14,191,167,9,106,63,204,207,120,62,109,78,127,191,54,189,200,61,7,186,118,63,128,232,218,190,61,77,81,191,243,4,53,63,42,104,19,63,216,107,103,191,147,142,136,190,109,196,126,63,5,169,150,189,248,83,120,191,202,123,207,62,49,219,84,63,187,133,48,191,192,127,24,191,89,170,100,63,49,160,148,62,36,19,126,191,48,251,72,61,157,199,121,63,21,239,195,190,83,72,88,191,74,235,43,63,209,127,29,63,152,197,97,191,229,154,160,190,172,58,125,63,176,10,201,188,190,20,123,191,42,68,184,62,26,148,91,63,86,54,39,191,153,103,34,191,5,190,94,63,212,124,172,62,40,59,124,191,243,4,53,63,19,92,96,190,216,107,103,191,209,127,29,63,153,103,34,63,89,170,100,191,204,207,120,190,67,236,127,63,194,197,71,190,167,9,106,191,192,127,24,63,86,54,39,63,152,197,97,191,147,142,136,190,15,177,127,63,162,16,47,190,94,131,108,191,42,104,19,63,74,235,43,63,5,190,94,191,49,160,148,190,109,78,127,63,131,64,22,190,158,216,110,191,218,57,14,63,187,133,48,63,26,148,91,191,229,154,160,190,109,196,126,63,115,178,250,189,8,9,113,191,155,245,8,63,243,4,53,63,83,72,88,191,212,124,172,190,36,19,126,63,54,189,200,189,71,20,115,191,61,156,3,63,66,104,57,63,49,219,84,191,42,68,184,190,172,58,125,63,5,169,150,189,11,250,116,191,39,93,252,62,249,174,61,63,61,77,81,191,21,239,195,190,40,59,124,63,48,251,72,189,7,186,118,191,234,90,241,62,112,216,65,63,2,159,77,191,202,123,207,190,190,20,123,63,176,10,201,188,248,83,120,191,117,51,230,62,3,228,69,63,18,209,73,191,128,232,218,190,157,199,121,63,243,4,53,63,147,142,136,190,26,148,91,191,66,104,57,63,234,90,241,62,157,199,121,191,48,251,72,61,71,20,115,63,218,57,14,191,86,54,39,191,216,107,103,63,162,16,47,62,109,196,126,191,42,68,184,62,2,159,77,63,18,209,73,191,21,239,195,190,36,19,126,63,131,64,22,190,167,9,106,191,153,103,34,63,42,104,19,63,8,9,113,191,5,169,150,189,190,20,123,63,117,51,230,190,249,174,61,191,83,72,88,63,49,160,148,62,67,236,127,191,204,207,120,62,5,190,94,63,243,4,53,191,39,93,252,190,248,83,120,63,176,10,201,188,11,250,116,191,155,245,8,63,74,235,43,63,89,170,100,191,194,197,71,190,109,78,127,63,212,124,172,190,61,77,81,191,3,228,69,63,202,123,207,62,172,58,125,191,115,178,250,61,94,131,108,63,209,127,29,191,192,127,24,191,158,216,110,63,54,189,200,61,40,59,124,191,128,232,218,62,112,216,65,63,49,219,84,191,229,154,160,190,15,177,127,63,19,92,96,190,152,197,97,191,187,133,48,63,61,156,3,63,7,186,118,191,243,4,53,63,229,154,160,190,2,159,77,191,61,77,81,63,49,160,148,62,67,236,127,191,212,124,172,62,18,209,73,63,49,219,84,191,147,142,136,190,15,177,127,63,42,68,184,190,3,228,69,191,83,72,88,63,204,207,120,62,109,78,127,191,21,239,195,62,112,216,65,63,26,148,91,191,19,92,96,190,109,196,126,63,202,123,207,190,249,174,61,191,5,190,94,63,194,197,71,62,36,19,126,191,128,232,218,62,66,104,57,63,152,197,97,191,162,16,47,190,172,58,125,63,117,51,230,190,243,4,53,191,89,170,100,63,131,64,22,62,40,59,124,191,234,90,241,62,187,133,48,63,216,107,103,191,115,178,250,189,190,20,123,63,39,93,252,190,74,235,43,191,167,9,106,63,54,189,200,61,157,199,121,191,61,156,3,63,86,54,39,63,94,131,108,191,5,169,150,189,248,83,120,63,155,245,8,191,153,103,34,191,158,216,110,63,48,251,72,61,7,186,118,191,218,57,14,63,209,127,29,63,8,9,113,191,176,10,201,188,11,250,116,63,42,104,19,191,192,127,24,191,71,20,115,63,243,4,53,63,42,68,184,190,249,174,61,191,89,170,100,63,54,189,200,61,7,186,118,191,192,127,24,63,155,245,8,63,190,20,123,191,162,16,47,62,26,148,91,63,18,209,73,191,49,160,148,190,109,78,127,63,128,232,218,190,187,133,48,191,94,131,108,63,176,10,201,60,8,9,113,191,86,54,39,63,234,90,241,62,36,19,126,191,204,207,120,62,61,77,81,63,49,219,84,191,19,92,96,190,172,58,125,63,39,93,252,190,153,103,34,191,71,20,115,63,48,251,72,189,167,9,106,191,243,4,53,63,202,123,207,62,15,177,127,191,229,154,160,62,3,228,69,63,5,190,94,191,131,64,22,190,157,199,121,63,218,57,14,191,42,104,19,191,248,83,120,63,115,178,250,189,152,197,97,191,112,216,65,63,212,124,172,62,67,236,127,191,21,239,195,62,66,104,57,63,216,107,103,191,5,169,150,189,11,250,116,63,209,127,29,191,61,156,3,191,40,59,124,63,194,197,71,190,83,72,88,191,2,159,77,63,147,142,136,62,109,196,126,191,117,51,230,62,74,235,43,63,158,216,110,191,243,4,53,63,202,123,207,190,74,235,43,191,71,20,115,63,54,189,200,189,5,190,94,191,2,159,77,63,19,92,96,62,190,20,123,191,42,104,19,63,61,156,3,63,36,19,126,191,49,160,148,62,112,216,65,63,216,107,103,191,176,10,201,188,94,131,108,63,66,104,57,191,212,124,172,190,109,78,127,63,234,90,241,190,209,127,29,191,248,83,120,63,162,16,47,190,49,219,84,191,83,72,88,63,131,64,22,62,7,186,118,191,153,103,34,63,117,51,230,62,15,177,127,191,42,68,184,62,243,4,53,63,158,216,110,191,48,251,72,61,89,170,100,63,3,228,69,191,147,142,136,190,172,58,125,63,155,245,8,191,218,57,14,191,40,59,124,63,204,207,120,190,18,209,73,191,152,197,97,63,5,169,150,61,8,9,113,191,187,133,48,63,21,239,195,62,67,236,127,191,128,232,218,62,86,54,39,63,11,250,116,191,115,178,250,61,26,148,91,63,61,77,81,191,194,197,71,190,157,199,121,63,192,127,24,191,39,93,252,190,109,196,126,63,229,154,160,190,249,174,61,191,167,9,106,63,243,4,53,63,117,51,230,190,192,127,24,191,40,59,124,63,49,160,148,190,66,104,57,191,8,9,113,63,115,178,250,189,49,219,84,191,5,190,94,63,48,251,72,61,167,9,106,191,3,228,69,63,19,92,96,62,248,83,120,191,86,54,39,63,21,239,195,62,109,78,127,191,61,156,3,63,155,245,8,63,109,196,126,191,42,68,184,62,74,235,43,63,7,186,118,191,194,197,71,62,18,209,73,63,216,107,103,191,176,10,201,60,152,197,97,63,61,77,81,191,131,64,22,190,71,20,115,63,243,4,53,191,229,154,160,190,172,58,125,63,42,104,19,191,234,90,241,190,67,236,127,63,128,232,218,190,209,127,29,191,190,20,123,63,147,142,136,190,249,174,61,191,158,216,110,63,54,189,200,189,83,72,88,191,26,148,91,63,5,169,150,61,94,131,108,191,112,216,65,63,204,207,120,62,157,199,121,191,153,103,34,63,202,123,207,62,15,177,127,191,39,93,252,62,218,57,14,63,36,19,126,191,212,124,172,62,187,133,48,63,11,250,116,191,162,16,47,62,2,159,77,63,89,170,100,191,243,4,53,63,39,93,252,190,61,156,3,191,67,236,127,63,234,90,241,190,155,245,8,191,15,177,127,63,117,51,230,190,218,57,14,191,109,78,127,63,128,232,218,190,42,104,19,191,109,196,126,63,202,123,207,190,192,127,24,191,36,19,126,63,21,239,195,190,209,127,29,191,172,58,125,63,42,68,184,190,153,103,34,191,40,59,124,63,212,124,172,190,86,54,39,191,190,20,123,63,229,154,160,190,74,235,43,191,157,199,121,63,49,160,148,190,187,133,48,191,248,83,120,63,147,142,136,190,243,4,53,191,7,186,118,63,204,207,120,190,66,104,57,191,11,250,116,63,19,92,96,190,249,174,61,191,71,20,115,63,194,197,71,190,112,216,65,191,8,9,113,63,162,16,47,190,3,228,69,191,158,216,110,63,131,64,22,190,18,209,73,191,94,131,108,63,115,178,250,189,2,159,77,191,167,9,106,63,54,189,200,189,61,77,81,191,216,107,103,63,5,169,150,189,49,219,84,191,89,170,100,63,48,251,72,189,83,72,88,191,152,197,97,63,176,10,201,188,26,148,91,191,5,190,94,63,243,4,53,63,155,245,8,191,128,232,218,190,36,19,126,63,153,103,34,191,229,154,160,190,248,83,120,63,66,104,57,191,194,197,71,190,158,216,110,63,2,159,77,191,5,169,150,189,152,197,97,63,5,190,94,191,48,251,72,61,61,77,81,63,94,131,108,191,162,16,47,62,249,174,61,63,7,186,118,191,49,160,148,62,86,54,39,63,172,58,125,191,202,123,207,62,218,57,14,63,67,236,127,191,61,156,3,63,117,51,230,62,109,196,126,191,209,127,29,63,212,124,172,62,157,199,121,191,243,4,53,63,19,92,96,62,8,9,113,191,18,209,73,63,54,189,200,61,89,170,100,191,26,148,91,63,176,10,201,188,49,219,84,191,167,9,106,63,131,64,22,190,112,216,65,191,11,250,116,63,147,142,136,190,74,235,43,191,40,59,124,63,21,239,195,190,42,104,19,191,15,177,127,63,39,93,252,190,234,90,241,190,109,78,127,63,192,127,24,191,42,68,184,190,190,20,123,63,187,133,48,191,204,207,120,190,71,20,115,63,3,228,69,191,115,178,250,189,216,107,103,63,83,72,88,191,243,4,53,63,42,104,19,191,212,124,172,190,7,186,118,63,3,228,69,191,5,169,150,189,26,148,91,63,167,9,106,191,194,197,71,62,187,133,48,63,172,58,125,191,117,51,230,62,234,90,241,62,36,19,126,191,74,235,43,63,19,92,96,62,94,131,108,191,83,72,88,63,48,251,72,189,18,209,73,191,11,250,116,63,229,154,160,190,192,127,24,191,67,236,127,63,218,57,14,191,42,68,184,190,248,83,120,63,112,216,65,191,54,189,200,189,5,190,94,63,216,107,103,191,162,16,47,62,243,4,53,63,40,59,124,191,128,232,218,62,39,93,252,62,109,196,126,191,86,54,39,63,204,207,120,62,158,216,110,191,49,219,84,63,176,10,201,188,2,159,77,191,71,20,115,63,49,160,148,190,209,127,29,191,15,177,127,63,155,245,8,191,21,239,195,190,157,199,121,63,249,174,61,191,115,178,250,189,152,197,97,63,89,170,100,191,131,64,22,62,66,104,57,63,190,20,123,191,202,123,207,62,61,156,3,63,109,78,127,191,153,103,34,63,147,142,136,62,8,9,113,191,61,77,81,63,243,4,53,63,209,127,29,191,204,207,120,190,167,9,106,63,152,197,97,191,162,16,47,62,74,235,43,63,109,78,127,191,218,57,14,63,229,154,160,62,8,9,113,191,83,72,88,63,54,189,200,189,66,104,57,191,172,58,125,63,39,93,252,190,21,239,195,190,7,186,118,63,2,159,77,191,176,10,201,60,3,228,69,63,157,199,121,191,128,232,218,62,117,51,230,62,190,20,123,191,112,216,65,63,48,251,72,61,61,77,81,191,11,250,116,63,42,68,184,190,61,156,3,191,36,19,126,63,243,4,53,191,115,178,250,189,26,148,91,63,158,216,110,191,49,160,148,62,42,104,19,63,15,177,127,191,86,54,39,63,194,197,71,62,89,170,100,191,216,107,103,63,19,92,96,190,153,103,34,191,67,236,127,63,192,127,24,191,147,142,136,190,94,131,108,63,5,190,94,191,131,64,22,62,187,133,48,63,109,196,126,191,155,245,8,63,212,124,172,62,71,20,115,191,49,219,84,63,5,169,150,189,249,174,61,191,40,59,124,63,234,90,241,190,202,123,207,190,248,83,120,63,18,209,73,191,243,4,53,63,86,54,39,191,131,64,22,190,83,72,88,63,11,250,116,191,202,123,207,62,128,232,218,62,7,186,118,191,49,219,84,63,115,178,250,189,74,235,43,191,67,236,127,63,153,103,34,191,162,16,47,190,26,148,91,63,71,20,115,191,21,239,195,62,117,51,230,62,248,83,120,191,61,77,81,63,54,189,200,189,187,133,48,191,15,177,127,63,209,127,29,191,194,197,71,190,5,190,94,63,8,9,113,191,42,68,184,62,234,90,241,62,157,199,121,191,2,159,77,63,5,169,150,189,243,4,53,191,109,78,127,63,192,127,24,191,19,92,96,190,152,197,97,63,158,216,110,191,212,124,172,62,39,93,252,62,190,20,123,191,18,209,73,63,48,251,72,189,66,104,57,191,109,196,126,63,42,104,19,191,204,207,120,190,89,170,100,63,94,131,108,191,229,154,160,62,61,156,3,63,40,59,124,191,3,228,69,63,176,10,201,188,249,174,61,191,36,19,126,63,218,57,14,191,147,142,136,190,216,107,103,63,167,9,106,191,49,160,148,62,155,245,8,63,172,58,125,191,112,216,65,63,243,4,53,63,187,133,48,191,48,251,72,189,112,216,65,63,109,196,126,191,209,127,29,63,131,64,22,62,61,77,81,191,190,20,123,63,155,245,8,191,204,207,120,190,5,190,94,63,11,250,116,191,117,51,230,62,212,124,172,62,167,9,106,191,94,131,108,63,42,68,184,190,128,232,218,190,71,20,115,63,152,197,97,191,147,142,136,62,61,156,3,63,157,199,121,191,49,219,84,63,162,16,47,190,192,127,24,191,36,19,126,63,3,228,69,191,5,169,150,61,74,235,43,63,67,236,127,191,243,4,53,63,176,10,201,60,249,174,61,191,109,78,127,63,153,103,34,191,115,178,250,189,2,159,77,63,40,59,124,191,218,57,14,63,19,92,96,62,26,148,91,191,7,186,118,63,234,90,241,190,229,154,160,190,216,107,103,63,158,216,110,191,21,239,195,62,202,123,207,62,8,9,113,191,89,170,100,63,49,160,148,190,39,93,252,190,248,83,120,63,83,72,88,191,194,197,71,62,42,104,19,63,172,58,125,191,18,209,73,63,54,189,200,189,86,54,39,191,15,177,127,63,66,104,57,191,243,4,53,63,66,104,57,191,48,251,72,61,86,54,39,63,109,196,126,191,18,209,73,63,131,64,22,190,42,104,19,191,190,20,123,63,83,72,88,191,204,207,120,62,39,93,252,62,11,250,116,191,89,170,100,63,212,124,172,190,202,123,207,190,94,131,108,63,158,216,110,191,128,232,218,62,229,154,160,62,152,197,97,191,7,186,118,63,61,156,3,191,19,92,96,190,49,219,84,63,40,59,124,191,192,127,24,63,115,178,250,61,3,228,69,191,109,78,127,63,74,235,43,191,176,10,201,188,243,4,53,63,67,236,127,191,249,174,61,63,5,169,150,189,153,103,34,191,36,19,126,63,2,159,77,191,162,16,47,62,218,57,14,63,157,199,121,191,26,148,91,63,147,142,136,190,234,90,241,190,71,20,115,63,216,107,103,191,42,68,184,62,21,239,195,62,167,9,106,191,8,9,113,63,117,51,230,190,49,160,148,190,5,190,94,63,248,83,120,191,155,245,8,63,194,197,71,62,61,77,81,191,172,58,125,63,209,127,29,191,54,189,200,189,112,216,65,63,15,177,127,191,187,133,48,63,243,4,53,63,112,216,65,191,131,64,22,62,155,245,8,63,11,250,116,191,167,9,106,63,128,232,218,190,147,142,136,190,49,219,84,63,36,19,126,191,74,235,43,63,176,10,201,188,153,103,34,191,40,59,124,63,26,148,91,191,229,154,160,62,21,239,195,62,89,170,100,191,248,83,120,63,42,104,19,191,54,189,200,189,66,104,57,63,15,177,127,191,18,209,73,63,194,197,71,190,39,93,252,190,8,9,113,63,158,216,110,191,234,90,241,62,19,92,96,62,2,159,77,191,109,78,127,63,243,4,53,191,5,169,150,61,192,127,24,63,157,199,121,191,152,197,97,63,42,68,184,190,212,124,172,190,5,190,94,63,190,20,123,191,209,127,29,63,48,251,72,61,187,133,48,191,109,196,126,63,61,77,81,191,204,207,120,62,117,51,230,62,94,131,108,191,71,20,115,63,61,156,3,191,162,16,47,190,3,228,69,63,67,236,127,191,249,174,61,63,115,178,250,189,218,57,14,191,7,186,118,63,216,107,103,191,202,123,207,62,49,160,148,62,83,72,88,191,172,58,125,63,86,54,39,191,243,4,53,63,18,209,73,191,204,207,120,62,202,123,207,62,152,197,97,191,40,59,124,63,74,235,43,191,5,169,150,61,218,57,14,63,71,20,115,191,8,9,113,63,155,245,8,191,54,189,200,189,187,133,48,63,172,58,125,191,5,190,94,63,21,239,195,190,147,142,136,190,2,159,77,63,67,236,127,191,3,228,69,63,19,92,96,190,128,232,218,190,89,170,100,63,190,20,123,191,86,54,39,63,48,251,72,189,42,104,19,191,11,250,116,63,158,216,110,191,61,156,3,63,115,178,250,61,243,4,53,191,36,19,126,63,26,148,91,191,42,68,184,62,49,160,148,62,61,77,81,191,15,177,127,63,112,216,65,191,194,197,71,62,117,51,230,62,216,107,103,191,157,199,121,63,153,103,34,191,176,10,201,60,192,127,24,63,7,186,118,191,94,131,108,63,39,93,252,190,131,64,22,190,66,104,57,63,109,196,126,191,83,72,88,63,212,124,172,190,229,154,160,190,49,219,84,63,109,78,127,191,249,174,61,63,162,16,47,190,234,90,241,190,167,9,106,63,248,83,120,191,209,127,29,63,243,4,53,63,61,77,81,191,212,124,172,62,147,142,136,62,3,228,69,191,109,78,127,63,26,148,91,191,202,123,207,62,194,197,71,62,66,104,57,191,172,58,125,63,89,170,100,191,234,90,241,62,115,178,250,61,74,235,43,191,157,199,121,63,94,131,108,191,155,245,8,63,48,251,72,61,209,127,29,191,11,250,116,63,71,20,115,191,192,127,24,63,176,10,201,188,218,57,14,191,158,216,110,63,248,83,120,191,86,54,39,63,54,189,200,189,39,93,252,190,216,107,103,63,40,59,124,191,243,4,53,63,162,16,47,190,128,232,218,190,5,190,94,63,109,196,126,191,112,216,65,63,204,207,120,190,42,68,184,190,49,219,84,63,67,236,127,191,2,159,77,63,229,154,160,190,49,160,148,190,18,209,73,63,15,177,127,191,83,72,88,63,21,239,195,190,19,92,96,190,249,174,61,63,36,19,126,191,152,197,97,63,117,51,230,190,131,64,22,190,187,133,48,63,190,20,123,191,167,9,106,63,61,156,3,191,5,169,150,189,153,103,34,63,7,186,118,191,8,9,113,63,42,104,19,191,243,4,53,63,83,72,88,191,128,232,218,62,115,178,250,61,153,103,34,191,71,20,115,63,248,83,120,191,187,133,48,63,194,197,71,190,42,68,184,190,2,159,77,63,109,78,127,191,152,197,97,63,39,93,252,190,48,251,72,189,42,104,19,63,94,131,108,191,40,59,124,63,249,174,61,191,147,142,136,62,49,160,148,62,112,216,65,191,172,58,125,63,167,9,106,191,218,57,14,63,176,10,201,188,61,156,3,191,89,170,100,63,109,196,126,191,18,209,73,63,212,124,172,190,19,92,96,190,243,4,53,63,157,199,121,191,8,9,113,63,209,127,29,191,54,189,200,61,117,51,230,62,26,148,91,191,67,236,127,63,49,219,84,191,202,123,207,62,131,64,22,62,86,54,39,191,11,250,116,63,7,186,118,191,74,235,43,63,162,16,47,190,21,239,195,190,61,77,81,63,15,177,127,191,5,190,94,63,234,90,241,190,5,169,150,189,192,127,24,63,158,216,110,191,190,20,123,63,66,104,57,191,204,207,120,62,229,154,160,62,3,228,69,191,36,19,126,63,216,107,103,191,155,245,8,63,243,4,53,63,5,190,94,191,61,156,3,63,176,10,201,188,234,90,241,190,83,72,88,63,15,177,127,191,89,170,100,63,218,57,14,191,5,169,150,61,128,232,218,62,61,77,81,191,109,196,126,63,167,9,106,191,192,127,24,63,115,178,250,189,21,239,195,190,18,209,73,63,172,58,125,191,158,216,110,63,153,103,34,191,162,16,47,62,212,124,172,62,112,216,65,191,190,20,123,63,71,20,115,191,74,235,43,63,19,92,96,190,49,160,148,190,66,104,57,63,248,83,120,191,7,186,118,63,243,4,53,191,147,142,136,62,204,207,120,62,187,133,48,191,11,250,116,63,157,199,121,191,249,174,61,63,229,154,160,190,194,197,71,190,86,54,39,63,8,9,113,191,40,59,124,63,3,228,69,191,42,68,184,62,131,64,22,62,209,127,29,191,94,131,108,63,36,19,126,191,2,159,77,63,202,123,207,190,54,189,200,189,42,104,19,63,216,107,103,191,109,78,127,63,49,219,84,191,117,51,230,62,48,251,72,61,155,245,8,191,152,197,97,63,67,236,127,191,26,148,91,63,39,93,252,190,243,4,53,63,89,170,100,191,192,127,24,63,162,16,47,190,49,160,148,190,187,133,48,63,8,9,113,191,36,19,126,63,49,219,84,191,39,93,252,62,48,251,72,189,202,123,207,190,3,228,69,63,157,199,121,191,248,83,120,63,112,216,65,191,21,239,195,62,5,169,150,61,61,156,3,191,83,72,88,63,109,196,126,191,158,216,110,63,74,235,43,191,147,142,136,62,194,197,71,62,209,127,29,191,216,107,103,63,67,236,127,191,152,197,97,63,42,104,19,191,131,64,22,62,229,154,160,62,243,4,53,191,71,20,115,63,172,58,125,191,61,77,81,63,234,90,241,190,176,10,201,60,128,232,218,62,18,209,73,191,190,20,123,63,7,186,118,191,249,174,61,63,42,68,184,190,54,189,200,189,155,245,8,63,26,148,91,191,109,78,127,63,94,131,108,191,86,54,39,63,204,207,120,190,19,92,96,190,153,103,34,63,167,9,106,191,15,177,127,63,5,190,94,191,218,57,14,63,115,178,250,189,212,124,172,190,66,104,57,63,11,250,116,191,40,59,124,63,2,159,77,191,117,51,230,62,243,4,53,63,167,9,106,191,74,235,43,63,229,154,160,190,54,189,200,189,39,93,252,62,2,159,77,191,157,199,121,63,190,20,123,191,61,77,81,63,61,156,3,191,115,178,250,61,49,160,148,62,86,54,39,191,216,107,103,63,67,236,127,191,94,131,108,63,187,133,48,191,212,124,172,62,5,169,150,61,234,90,241,190,18,209,73,63,248,83,120,191,40,59,124,63,49,219,84,191,155,245,8,63,131,64,22,190,147,142,136,190,153,103,34,63,89,170,100,191,15,177,127,63,158,216,110,191,243,4,53,63,42,68,184,190,48,251,72,189,117,51,230,62,3,228,69,191,7,186,118,63,172,58,125,191,83,72,88,63,218,57,14,191,162,16,47,62,204,207,120,62,209,127,29,191,152,197,97,63,109,78,127,191,8,9,113,63,66,104,57,191,21,239,195,62,176,10,201,60,128,232,218,190,112,216,65,63,11,250,116,191,36,19,126,63,26,148,91,191,42,104,19,63,194,197,71,190,19,92,96,190,192,127,24,63,5,190,94,191,109,196,126,63,71,20,115,191,249,174,61,63,202,123,207,190,243,4,53,63,158,216,110,191,249,174,61,63,117,51,230,190,54,189,200,61,147,142,136,62,192,127,24,191,83,72,88,63,190,20,123,191,40,59,124,63,26,148,91,191,209,127,29,63,49,160,148,190,5,169,150,189,128,232,218,62,66,104,57,191,94,131,108,63,67,236,127,191,8,9,113,63,112,216,65,191,234,90,241,62,115,178,250,189,204,207,120,190,42,104,19,63,49,219,84,191,157,199,121,63,172,58,125,191,5,190,94,63,153,103,34,191,229,154,160,62,48,251,72,61,202,123,207,190,243,4,53,63,167,9,106,191,15,177,127,63,71,20,115,191,3,228,69,63,39,93,252,190,131,64,22,62,19,92,96,62,218,57,14,191,61,77,81,63,248,83,120,191,36,19,126,63,152,197,97,191,86,54,39,63,212,124,172,190,176,10,201,188,21,239,195,62,187,133,48,191,216,107,103,63,109,78,127,191,11,250,116,63,18,209,73,191,61,156,3,63,162,16,47,190,194,197,71,190,155,245,8,63,2,159,77,191,7,186,118,63,109,196,126,191,89,170,100,63,74,235,43,191,42,68,184,62,243,4,53,63,71,20,115,191,2,159,77,63,42,104,19,191,49,160,148,62,176,10,201,60,212,124,172,190,209,127,29,63,49,219,84,191,7,186,118,63,15,177,127,191,158,216,110,63,3,228,69,191,155,245,8,63,204,207,120,190,5,169,150,189,21,239,195,62,86,54,39,191,26,148,91,63,157,199,121,191,109,196,126,63,167,9,106,191,249,174,61,63,39,93,252,190,194,197,71,62,115,178,250,61,128,232,218,190,187,133,48,63,152,197,97,191,40,59,124,63,172,58,125,191,89,170,100,63,243,4,53,191,117,51,230,62,131,64,22,190,162,16,47,190,234,90,241,62,66,104,57,191,216,107,103,63,36,19,126,191,190,20,123,63,5,190,94,191,74,235,43,63,202,123,207,190,54,189,200,61,19,92,96,62,61,156,3,191,112,216,65,63,94,131,108,191,109,78,127,63,248,83,120,191,83,72,88,63,153,103,34,191,42,68,184,62,48,251,72,189,147,142,136,190,218,57,14,63,18,209,73,191,8,9,113,63,67,236,127,191,11,250,116,63,61,77,81,191,192,127,24,63,229,154,160,190,243,4,53,63,7,186,118,191,26,148,91,63,187,133,48,191,234,90,241,62,19,92,96,190,48,251,72,189,229,154,160,62,218,57,14,191,112,216,65,63,216,107,103,191,40,59,124,63,109,196,126,191,158,216,110,63,2,159,77,191,209,127,29,63,21,239,195,190,115,178,250,61,131,64,22,62,202,123,207,190,153,103,34,63,61,77,81,191,8,9,113,63,109,78,127,191,190,20,123,63,89,170,100,191,249,174,61,63,155,245,8,191,49,160,148,62,176,10,201,188,204,207,120,190,39,93,252,62,243,4,53,191,5,190,94,63,248,83,120,191,67,236,127,63,11,250,116,191,83,72,88,63,74,235,43,191,117,51,230,62,194,197,71,190,5,169,150,189,212,124,172,62,42,104,19,191,3,228,69,63,167,9,106,191,172,58,125,63,36,19,126,191,94,131,108,63,18,209,73,191,192,127,24,63,42,68,184,190,54,189,200,61,162,16,47,62,128,232,218,190,86,54,39,63,49,219,84,191,71,20,115,63,15,177,127,191,157,199,121,63,152,197,97,191,66,104,57,63,61,156,3,191,147,142,136,62,243,4,53,63,157,199,121,191,216,107,103,63,18,209,73,191,153,103,34,63,117,51,230,190,204,207,120,62,176,10,201,188,194,197,71,190,202,123,207,62,192,127,24,191,112,216,65,63,152,197,97,191,7,186,118,63,15,177,127,191,40,59,124,63,94,131,108,191,61,77,81,63,74,235,43,191,39,93,252,62,49,160,148,190,5,169,150,61,131,64,22,62,42,68,184,190,218,57,14,63,66,104,57,191,26,148,91,63,71,20,115,191,109,196,126,63,36,19,126,191,8,9,113,63,83,72,88,191,243,4,53,63,155,245,8,191,212,124,172,62,115,178,250,189,54,189,200,189,229,154,160,62,61,156,3,191,187,133,48,63,49,219,84,191,158,216,110,63,172,58,125,191,109,78,127,63,11,250,116,191,5,190,94,63,249,174,61,191,42,104,19,63,21,239,195,190,162,16,47,62,48,251,72,61,147,142,136,190,234,90,241,62,86,54,39,191,2,159,77,63,167,9,106,191,190,20,123,63,67,236,127,191,248,83,120,63,89,170,100,191,3,228,69,63,209,127,29,191,128,232,218,62,19,92,96,190,243,4,53,63,40,59,124,191,8,9,113,63,5,190,94,191,3,228,69,63,86,54,39,191,61,156,3,63,42,68,184,190,194,197,71,62,176,10,201,188,131,64,22,190,229,154,160,62,234,90,241,190,209,127,29,63,249,174,61,191,83,72,88,63,94,131,108,191,157,199,121,63,15,177,127,191,36,19,126,63,11,250,116,191,89,170,100,63,2,159,77,191,187,133,48,63,218,57,14,191,202,123,207,62,204,207,120,190,5,169,150,61,54,189,200,61,147,142,136,190,128,232,218,62,42,104,19,191,243,4,53,63,61,77,81,191,216,107,103,63,7,186,118,191,109,196,126,63,109,78,127,191,248,83,120,63,167,9,106,191,49,219,84,63,66,104,57,191,192,127,24,63,117,51,230,190,49,160,148,62,115,178,250,189,48,251,72,189,19,92,96,62,21,239,195,190,155,245,8,63,74,235,43,191,18,209,73,63,152,197,97,191,71,20,115,63,172,58,125,191,67,236,127,63,190,20,123,191,158,216,110,63,26,148,91,191,112,216,65,63,153,103,34,191,39,93,252,62,212,124,172,190,162,16,47,62,243,4,53,63,36,19,126,191,248,83,120,63,158,216,110,191,152,197,97,63,61,77,81,191,249,174,61,63,86,54,39,191,218,57,14,63,117,51,230,190,212,124,172,62,19,92,96,190,54,189,200,61,176,10,201,60,131,64,22,190,147,142,136,62,21,239,195,190,39,93,252,62,192,127,24,191,187,133,48,63,3,228,69,191,83,72,88,63,216,107,103,191,71,20,115,63,190,20,123,191,109,78,127,63,15,177,127,191,40,59,124,63,11,250,116,191,167,9,106,63,26,148,91,191,18,209,73,63,243,4,53,191,209,127,29,63,61,156,3,191,202,123,207,62,49,160,148,190,162,16,47,62,48,251,72,189,5,169,150,189,194,197,71,62,229,154,160,190,128,232,218,62,155,245,8,191,153,103,34,63,66,104,57,191,2,159,77,63,5,190,94,191,94,131,108,63,7,186,118,191,172,58,125,63,67,236,127,191,109,196,126,63,157,199,121,191,8,9,113,63,89,170,100,191,49,219,84,63,112,216,65,191,74,235,43,63,42,104,19,191,234,90,241,62,42,68,184,190,204,207,120,62,115,178,250,189,243,4,53,63,109,78,127,191,172,58,125,63,157,199,121,191,11,250,116,63,158,216,110,191,216,107,103,63,5,190,94,191,49,219,84,63,18,209,73,191,249,174,61,63,187,133,48,191,153,103,34,63,42,104,19,191,61,156,3,63,117,51,230,190,21,239,195,62,229,154,160,190,204,207,120,62,162,16,47,190,54,189,200,61,176,10,201,188,48,251,72,189,115,178,250,61,194,197,71,190,147,142,136,62,212,124,172,190,202,123,207,62,234,90,241,190,155,245,8,63,192,127,24,191,86,54,39,63,243,4,53,191,112,216,65,63,2,159,77,191,83,72,88,63,152,197,97,191,167,9,106,63,8,9,113,191,7,186,118,63,190,20,123,191,36,19,126,63,15,177,127,191,67,236,127,63,109,196,126,191,40,59,124,63,248,83,120,191,71,20,115,63,94,131,108,191,89,170,100,63,26,148,91,191,61,77,81,63,3,228,69,191,66,104,57,63,74,235,43,191,209,127,29,63,218,57,14,191,39,93,252,62,128,232,218,190,42,68,184,62,49,160,148,190,19,92,96,62,131,64,22,190,5,169,150,61,243,4,53,63,67,236,127,191,15,177,127,63,109,78,127,191,109,196,126,63,36,19,126,191,172,58,125,63,40,59,124,191,190,20,123,63,157,199,121,191,248,83,120,63,7,186,118,191,11,250,116,63,71,20,115,191,8,9,113,63,158,216,110,191,94,131,108,63,167,9,106,191,216,107,103,63,89,170,100,191,152,197,97,63,5,190,94,191,26,148,91,63,83,72,88,191,49,219,84,63,61,77,81,191,2,159,77,63,18,209,73,191,3,228,69,63,112,216,65,191,249,174,61,63,66,104,57,191,243,4,53,63,187,133,48,191,74,235,43,63,86,54,39,191,153,103,34,63,209,127,29,191,192,127,24,63,42,104,19,191,218,57,14,63,155,245,8,191,61,156,3,63,39,93,252,190,234,90,241,62,117,51,230,190,128,232,218,62,202,123,207,190,21,239,195,62,42,68,184,190,212,124,172,62,229,154,160,190,49,160,148,62,147,142,136,190,204,207,120,62,19,92,96,190,194,197,71,62,162,16,47,190,131,64,22,62,115,178,250,189,54,189,200,61,5,169,150,189,48,251,72,61,176,10,201,188,32,30,28,26,24,21,19,17,15,13,11,9,7,5,2,0,254,251,249,247,245,243,241,239,237,235,232,230,228,226,224,226,228,230,232,235,237,239,241,243,245,247,249,251,254,0,2,5,7,9,11,13,15,17,19,21,24,26,28,30,32,97,110,103,108,101,32,60,32,48,0,47,115,114,99,47,68,101,99,111,100,101,95,49,95,48,95,98,97,107,47,101,110,99,111,100,101,47,102,106,119,68,101,99,111,100,101,99,47,112,114,101,95,112,114,111,99,101,115,115,47,112,114,101,100,105,99,116,79,98,106,47,112,114,101,100,105,99,116,79,98,106,46,99,0,112,114,101,95,97,110,103,117,108,97,114,0,32,30,28,26,24,21,19,17,15,13,11,9,7,5,2,0,254,251,249,247,245,243,241,239,237,235,232,230,228,226,224,226,228,230,232,235,237,239,241,243,245,247,249,251,254,0,2,5,7,9,11,13,15,17,19,21,24,26,28,30,32,112,105,99,95,114,111,119,58,32,37,100,32,37,100,32,37,100,10,0,108,101,102,116,80,114,101,116,121,112,101,58,32,37,100,32,117,112,80,114,101,116,121,112,101,58,32,37,100,10,0,108,101,102,116,95,98,97,115,101,58,32,37,100,32,117,112,95,98,97,115,101,58,32,37,100,10,0,99,97,110,100,105,58,32,0,112,114,101,116,121,112,101,40,73,110,41,58,32,37,100,10,0,112,114,101,116,121,112,101,40,78,111,116,73,110,41,58,32,37,100,10,0,109,111,100,101,95,98,97,115,101,58,32,37,100,32,109,111,100,101,95,111,102,102,58,32,37,100,10,0,102,105,110,97,108,112,114,101,116,121,112,101,58,32,37,100,10,0,99,104,97,110,110,101,108,58,32,37,100,10,0,103,101,116,95,114,40,116,114,97,110,115,107,105,112,102,108,97,103,41,58,32,37,100,32,37,100,10,0,108,101,110,58,32,37,100,10,0,98,97,115,101,111,102,102,58,32,37,100,32,115,105,103,84,97,98,108,101,73,100,120,58,32,37,100,10,0,103,101,116,95,114,40,103,114,101,97,116,101,114,50,70,108,97,103,41,58,32,37,100,32,37,100,10,0,115,105,103,110,58,32,0,114,101,109,97,105,110,58,32,37,100,10,0,103,101,116,95,114,40,89,32,103,114,101,97,116,101,114,49,41,58,32,37,100,10,0,103,101,116,95,114,40,67,98,67,114,32,103,114,101,97,116,101,114,49,41,58,32,37,100,32,37,100,10,0,103,101,116,95,114,40,105,115,100,99,32,115,105,103,41,58,32,37,100,10,0,103,101,116,95,114,40,110,111,116,32,100,99,32,115,105,103,41,58,32,37,100,10,0,103,101,116,95,114,40,99,115,98,102,41,58,32,37,100,10,0,100,101,99,111,100,101,76,97,115,116,80,111,115,58,32,0,32,95,95,32,37,100,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,176,208,240,128,167,197,227,128,158,187,216,123,150,178,205,116,142,169,195,111,135,160,185,105,128,152,175,100,122,144,166,95,116,137,158,90,110,130,150,85,104,123,142,81,99,117,135,77,94,111,128,73,89,105,122,69,85,100,116,66,80,95,110,62,76,90,104,59,72,86,99,56,69,81,94,53,65,77,89,51,62,73,85,48,59,69,80,46,56,66,76,43,53,63,72,41,50,59,69,39,48,56,65,37,45,54,62,35,43,51,59,33,41,48,56,32,39,46,53,30,37,43,50,29,35,41,48,27,33,39,45,26,31,37,43,24,30,35,41,23,28,33,39,22,27,32,37,21,26,30,35,20,24,29,33,19,23,27,31,18,22,26,30,17,21,25,28,16,20,23,27,15,19,22,25,14,18,21,24,14,17,20,23,13,16,19,22,12,15,18,21,12,14,17,20,11,14,16,19,11,13,15,18,10,12,15,17,10,12,14,16,9,11,13,15,9,11,12,14,8,10,12,14,8,9,11,13,7,9,11,12,7,9,10,12,7,8,10,11,6,8,9,11,6,7,9,10,6,7,8,9,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,62,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,4,4,5,6,7,8,9,9,11,11,12,13,13,15,15,16,16,18,18,19,19,21,21,22,22,23,24,24,25,26,26,27,27,28,29,29,30,30,30,31,32,32,33,33,33,34,34,35,35,35,36,36,36,37,37,37,38,38,63,107,139,126,107,139,126,139,141,157,197,185,201,197,185,201,154,154,154,197,185,201,197,185,201,154,154,154,197,185,201,197,185,201,154,154,154,154,110,154,154,110,154,154,110,154,154,110,154,154,110,154,154,110,154,137,122,154,154,139,154,154,154,139,154,154,184,154,154,154,134,149,154,183,154,184,152,139,152,139,63,139,154,154,154,154,154,154,154,154,154,95,79,63,31,31,95,79,63,31,31,154,154,154,154,154,153,153,153,153,154,154,169,198,140,198,154,154,154,153,111,149,92,167,154,154,154,154,153,111,149,107,167,154,154,154,154,111,141,94,138,182,154,154,154,154,224,167,122,0,0,0,0,154,124,138,94,0,0,0,0,154,153,138,138,0,0,0,0,79,79,154,121,140,61,154,121,140,61,154,91,171,134,141,170,154,139,153,139,123,123,63,124,166,183,140,136,153,154,166,183,140,136,153,154,166,183,140,136,153,154,170,153,138,138,122,121,122,121,167,151,183,140,151,183,140,155,154,139,153,139,123,123,63,153,166,183,140,136,153,154,166,183,140,136,153,154,166,183,140,136,153,154,170,153,123,123,107,121,107,121,167,151,183,140,151,183,140,111,111,125,110,110,94,124,108,124,107,125,141,179,153,125,107,125,141,179,153,125,107,125,141,179,153,125,140,139,182,182,152,136,152,136,153,136,139,111,136,139,111,125,110,124,110,95,94,125,111,111,79,125,126,111,111,79,108,123,93,125,110,94,110,95,79,125,111,110,78,110,111,111,95,94,108,123,108,110,110,124,125,140,153,125,127,140,109,111,143,127,111,79,108,123,63,154,196,167,167,154,152,167,182,182,134,149,136,153,121,136,122,169,208,166,167,154,152,167,182,154,196,196,167,154,152,167,182,182,134,149,136,153,121,136,137,169,194,166,167,154,167,137,182,140,92,137,138,140,152,138,139,153,74,149,92,139,107,122,152,140,179,166,182,140,227,122,197,107,167,91,107,107,167,107,167,91,122,107,167,138,153,136,167,152,152,168,168,154,153,153,153,160,185,200,139,139,139,139,139,139,154,154,154,154,153,111,149,92,167,154,154,154,154,154,154,154,153,111,149,107,167,154,154,154,154,154,154,154,111,141,94,138,182,154,154,154,154,154,154,125,110,124,110,95,94,125,111,111,79,125,126,125,110,94,110,95,79,125,111,110,78,110,111,110,110,124,125,140,153,125,127,140,109,111,143,121,140,61,154,121,140,61,154,121,140,61,154,121,140,61,154,91,171,134,141,91,171,134,141,170,154,139,153,139,123,123,63,124,166,183,140,136,153,154,166,183,140,136,153,154,166,183,140,136,153,154,170,153,138,138,122,121,122,121,167,151,183,140,151,183,140,155,154,139,153,139,123,123,63,153,166,183,140,136,153,154,166,183,140,136,153,154,166,183,140,136,153,154,170,153,123,123,107,121,107,121,167,151,183,140,151,183,140,111,111,125,110,110,94,124,108,124,107,125,141,179,153,125,107,125,141,179,153,125,107,125,141,179,153,125,140,139,182,182,152,136,152,136,153,136,139,111,136,139,111,154,196,167,167,154,152,167,182,182,134,149,136,153,121,136,122,169,208,166,167,154,152,167,182,154,196,196,167,154,152,167,182,182,134,149,136,153,121,136,137,169,194,166,167,154,167,137,182,140,92,137,138,140,152,138,139,153,74,149,92,139,107,122,152,140,179,166,182,140,227,122,197,107,167,91,107,107,167,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,167,91,122,107,167,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,153,136,167,152,152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,116,117,32,112,111,115,105,116,105,111,110,58,32,37,108,108,100,32,99,116,117,95,114,111,119,58,32,37,100,32,99,116,117,95,99,111,108,58,32,37,100,10,0,100,101,99,111,100,101,32,99,117,32,115,112,108,105,116,70,108,97,103,58,32,37,100,32,112,111,115,58,32,37,100,32,37,100,32,37,100,10,0,100,101,99,111,100,101,32,99,117,32,112,114,101,116,121,112,101,58,32,37,100,10,0,100,101,99,111,100,101,32,99,117,32,112,114,101,73,100,120,58,32,37,100,32,112,114,101,116,121,112,101,58,32,37,100,40,99,104,114,111,109,97,41,10,0,100,101,99,111,100,101,32,99,117,32,115,109,111,111,116,104,70,108,97,103,58,32,37,100,10,0,100,101,99,111,100,101,32,99,117,32,115,109,111,111,116,104,70,108,97,103,40,99,104,114,111,109,97,41,58,32,37,100,10,0,100,101,99,111,100,101,32,98,111,114,100,101,114,32,124,32,112,114,101,116,121,112,101,32,48,95,49,10,0,100,101,99,111,100,101,32,99,117,32,99,111,101,102,102,32,102,111,114,32,115,109,111,111,116,104,10,0,100,101,99,111,100,101,32,99,117,32,99,111,101,102,102,32,102,111,114,32,116,104,114,101,101,112,97,114,116,10,0,100,101,99,111,100,101,32,99,117,32,99,111,101,102,102,32,70,111,114,32,115,109,111,111,116,104,40,99,104,114,111,109,97,41,10,0,100,101,99,111,100,101,32,99,117,32,99,111,101,102,102,32,70,111,114,32,116,104,114,101,101,32,112,97,114,116,40,99,104,114,111,109,97,41,10,0,100,101,99,111,100,101,32,99,117,32,98,111,114,100,101,114,32,115,116,97,114,116,32,124,32,112,114,101,116,121,112,101,32,50,45,50,54,10,0,100,101,99,111,100,101,32,99,117,32,99,111,101,102,102,32,70,111,114,32,115,109,111,111,116,104,10,0,100,101,99,111,100,101,32,99,117,32,99,111,101,102,102,32,70,111,114,32,116,104,114,101,101,112,97,114,116,10,0,100,101,99,111,100,101,32,99,117,32,70,111,114,32,115,109,111,111,116,104,40,99,104,114,111,109,97,41,10,0,100,101,99,111,100,101,32,99,117,32,99,111,101,102,102,32,70,111,114,32,116,104,114,101,101,112,97,114,116,40,99,104,114,111,109,97,41,10,0,115,116,97,114,116,58,32,37,100,10,0,103,101,116,95,98,40,116,117,95,115,109,111,111,116,104,102,108,97,103,95,99,104,114,111,109,97,41,58,32,37,100,10,0,103,101,116,95,114,40,116,117,95,115,107,105,112,95,99,104,114,111,109,97,41,58,32,37,100,10,0,105,113,117,97,110,116,105,32,111,110,101,32,112,97,114,116,40,99,104,114,111,109,97,41,58,32,32,32,95,95,112,111,115,58,32,37,100,32,37,100,32,37,100,10,0,37,46,102,32,0,42,32,0,105,122,105,103,122,97,103,32,105,113,117,97,110,116,105,32,105,100,99,116,32,111,110,101,32,112,97,114,116,40,99,104,114,111,109,97,41,58,32,32,32,95,95,112,111,115,58,32,37,100,32,37,100,32,37,100,10,0,100,101,99,111,100,101,32,78,120,78,40,99,104,114,111,109,97,41,58,32,10,0,37,100,32,0,105,113,117,97,110,116,105,40,99,104,114,111,109,97,41,58,32,32,32,95,95,112,111,115,58,32,37,100,32,37,100,32,37,100,10,0,105,113,117,97,110,116,105,32,105,100,99,116,40,99,104,114,111,109,97,41,58,32,32,32,95,95,112,111,115,58,32,37,100,32,37,100,32,37,100,10,0,103,101,116,95,114,40,116,117,95,115,107,105,112,70,108,97,103,41,58,32,37,100,10,0,103,101,116,95,98,40,116,117,95,102,108,97,116,116,121,112,101,41,58,32,37,100,10,0,103,101,116,95,114,40,116,117,115,107,105,112,70,108,97,103,41,58,32,37,100,10,0,100,101,99,111,100,101,32,100,105,102,102,58,32,10,0,105,113,117,97,110,116,105,32,111,110,101,32,112,97,114,116,58,32,32,32,95,95,112,111,115,58,32,37,100,32,37,100,32,37,100,10,0,105,113,117,97,110,116,105,32,111,110,101,112,97,114,116,58,32,10,0,105,100,99,116,32,105,122,105,103,122,97,103,32,111,110,101,112,97,114,116,58,32,10,0,105,122,105,103,122,97,103,32,105,113,117,97,110,116,105,32,105,100,99,116,32,111,110,101,32,112,97,114,116,58,32,32,32,95,95,112,111,115,58,32,37,100,32,37,100,32,37,100,10,0,105,113,117,97,110,116,105,32,100,105,102,102,78,120,78,58,32,32,95,95,112,111,115,58,32,37,100,32,37,100,32,37,100,10,0,105,113,117,97,110,116,105,32,78,88,78,58,32,10,0,105,113,117,97,110,116,105,32,105,100,99,116,40,78,88,78,41,58,32,10,0,105,113,117,97,110,116,105,32,105,100,99,116,32,100,105,102,102,78,120,78,58,32,32,32,95,95,112,111,115,58,32,37,100,32,37,100,32,37,100,10,0,103,101,116,95,114,40,116,117,95,115,107,105,112,102,108,97,103,41,58,32,37,100,10,0,100,101,108,116,97,58,32,0,115,116,97,114,116,58,32,37,100,32,119,105,100,116,104,58,32,37,100,10,0,111,114,105,95,100,101,108,116,97,58,32,0,115,104,97,112,101,70,108,97,116,49,58,32,10,0,115,104,97,112,101,69,100,103,101,58,32,10,0,115,104,97,112,101,70,108,97,116,50,58,32,10,0,37,100,0,10,0,102,105,108,101,58,32,37,115,32,108,105,110,101,58,32,37,100,32,102,117,110,99,58,32,37,115,32,104,97,115,32,97,110,32,101,120,99,101,112,116,105,111,110,10,0,47,115,114,99,47,68,101,99,111,100,101,95,49,95,48,95,98,97,107,47,101,110,99,111,100,101,47,102,106,119,68,101,99,111,100,101,99,47,72,69,86,67,95,68,67,84,95,81,85,65,78,84,73,90,65,84,73,79,78,47,114,101,103,117,108,97,114,84,114,97,110,115,102,111,114,109,46,99,0,114,101,103,117,108,97,114,73,68,67,84,0,118,111,105,100,0,98,111,111,108,0,99,104,97,114,0,115,105,103,110,101,100,32,99,104,97,114,0,117,110,115,105,103,110,101,100,32,99,104,97,114,0,115,104,111,114,116,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,105,110,116,0,117,110,115,105,103,110,101,100,32,105,110,116,0,108,111,110,103,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,102,108,111,97,116,0,100,111,117,98,108,101,0,115,116,100,58,58,115,116,114,105,110,103,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,115,116,100,58,58,119,115,116,114,105,110,103,0,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,105,103,110,101,100,32,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,104,111,114,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,115,104,111,114,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,105,110,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,108,111,110,103,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,49,54,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,49,54,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,51,50,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,51,50,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,102,108,111,97,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,100,111,117,98,108,101,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,32,100,111,117,98,108,101,62,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,101,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,100,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,102,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,109,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,108,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,106,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,105,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,116,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,115,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,104,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,97,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,99,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,51,118,97,108,69,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,119,69,69,69,69,0,78,83,116,51,95,95,49,50,49,95,95,98,97,115,105,99,95,115,116,114,105,110,103,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,104,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,104,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,118,0,98,0,99,0,104,0,97,0,115,0,116,0,105,0,106,0,108,0,109,0,102,0,100,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);





/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  
  
  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }var embind_charCodes=undefined;function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
  
  
  var awaitingDependencies={};
  
  var registeredTypes={};
  
  var typeDependencies={};
  
  
  
  
  
  
  var char_0=48;
  
  var char_9=57;function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;
  
          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };
  
      return errorClass;
    }var BindingError=undefined;function throwBindingError(message) {
      throw new BindingError(message);
    }
  
  
  
  var InternalError=undefined;function throwInternalError(message) {
      throw new InternalError(message);
    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });
  
      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }
  
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }function registerType(rawType, registeredInstance, options) {
      options = options || {};
  
      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }
  
      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }
  
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
  
      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  
  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _abort() {
      Module['abort']();
    }

  
  function _free() {
  }
  Module["_free"] = _free;
  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;
  
  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }
  
              function getTAElement(ta, index) {
                  return ta[index];
              }
              function getStringElement(string, index) {
                  return string.charCodeAt(index);
              }
              var getElement;
              if (value instanceof Uint8Array) {
                  getElement = getTAElement;
              } else if (value instanceof Int8Array) {
                  getElement = getTAElement;
              } else if (typeof value === 'string') {
                  getElement = getStringElement;
              } else {
                  throwBindingError('Cannot pass non-string to std::string');
              }
  
              // assumes 4-byte alignment
              var length = value.length;
              var ptr = _malloc(4 + length);
              HEAPU32[ptr >> 2] = length;
              for (var i = 0; i < length; ++i) {
                  var charCode = getElement(value, i);
                  if (charCode > 255) {
                      _free(ptr);
                      throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                  }
                  HEAPU8[ptr + 4 + i] = charCode;
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_std_wstring(rawType, charSize, name) {
      // nb. do not cache HEAPU16 and HEAPU32, they may be destroyed by enlargeMemory().
      name = readLatin1String(name);
      var getHeap, shift;
      if (charSize === 2) {
          getHeap = function() { return HEAPU16; };
          shift = 1;
      } else if (charSize === 4) {
          getHeap = function() { return HEAPU32; };
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var HEAP = getHeap();
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              var start = (value + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAP[start + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              // assumes 4-byte alignment
              var HEAP = getHeap();
              var length = value.length;
              var ptr = _malloc(4 + length * charSize);
              HEAPU32[ptr >> 2] = length;
              var start = (ptr + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  HEAP[start + i] = value.charCodeAt(i);
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function ___lock() {}

  function ___unlock() {}

   
  Module["_i64Add"] = _i64Add;

  function _clock() {
      if (_clock.start === undefined) _clock.start = Date.now();
      return ((Date.now() - _clock.start) * (1000000 / 1000))|0;
    }

  var _sqrt=Math_sqrt;

  
  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }
  
  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }
  
      var shift = getShiftFromSize(size);
      
      var fromWireType = function(value) {
          return value;
      };
      
      if (minRange === 0) {
          var bitshift = 32 - 8*size;
          fromWireType = function(value) {
              return (value << bitshift) >>> bitshift;
          };
      }
  
      registerType(primitiveType, {
          name: name,
          'fromWireType': fromWireType,
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return value | 0;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  
  
  var emval_free_list=[];
  
  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }
  
  
  
  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }
  
  function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }function __emval_register(value) {
  
      switch(value){
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;
  
          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor
  
          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }

  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    }
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        flags &= ~0100000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readdir:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readlink:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 0777, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        console.error('emscripten_set_main_loop_timing: Cannot set timing mode for main loop since a main loop does not exist! Call emscripten_set_main_loop first to set one up.');
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {
        if (!window['setImmediate']) {
          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)
          var setImmediates = [];
          var emscriptenMainLoopMessageId = '__emcc';
          function Browser_setImmediate_messageHandler(event) {
            if (event.source === window && event.data === emscriptenMainLoopMessageId) {
              event.stopPropagation();
              setImmediates.shift()();
            }
          }
          window.addEventListener("message", Browser_setImmediate_messageHandler, true);
          window['setImmediate'] = function Browser_emulated_setImmediate(func) {
            setImmediates.push(func);
            window.postMessage(emscriptenMainLoopMessageId, "*");
          }
        }
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {
          window['setImmediate'](Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'immediate';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          assert(typeof url == 'string', 'createObjectURL must return a url as a string');
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            assert(typeof url == 'string', 'createObjectURL must return a url as a string');
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          // If this assert lands, it's likely because the browser doesn't support scrollX or pageXOffset
          // and we have no viable fallback.
          assert((typeof scrollX !== 'undefined') && (typeof scrollY !== 'undefined'), 'Unable to retrieve scroll position, mouse positions likely broken.');
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              var last = Browser.touches[touch.identifier];
              if (!last) last = coords;
              Browser.lastTouches[touch.identifier] = last;
              Browser.touches[touch.identifier] = coords;
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  
  var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
        ret = ret.slice(0, Math.max(0, bufsize));
        writeStringToMemory(ret, buf, true);
        return ret.length;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21506: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  
  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  var _BDtoIHigh=true;

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

  var _BItoD=true;

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];
  
      var TA = typeMapping[dataTypeIndex];
  
      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(heap['buffer'], data, size);
      }
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function _pthread_self() {
      //FIXME: assumes only a single thread
      return 0;
    }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }
embind_init_charCodes()
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');
init_emval();
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity, "byteLength": byteLength };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_ii": nullFunc_ii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_viiii": nullFunc_viiii, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiii": invoke_viiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "floatReadValueFromPointer": floatReadValueFromPointer, "simpleReadValueFromPointer": simpleReadValueFromPointer, "integerReadValueFromPointer": integerReadValueFromPointer, "__embind_register_memory_view": __embind_register_memory_view, "throwInternalError": throwInternalError, "get_first_emval": get_first_emval, "_abort": _abort, "___setErrNo": ___setErrNo, "__embind_register_integer": __embind_register_integer, "extendError": extendError, "___assert_fail": ___assert_fail, "__embind_register_void": __embind_register_void, "getShiftFromSize": getShiftFromSize, "embind_init_charCodes": embind_init_charCodes, "throwBindingError": throwBindingError, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "__emval_register": __emval_register, "_sbrk": _sbrk, "__embind_register_std_wstring": __embind_register_std_wstring, "_emscripten_memcpy_big": _emscripten_memcpy_big, "__embind_register_bool": __embind_register_bool, "_sysconf": _sysconf, "_embind_repr": _embind_repr, "__embind_register_std_string": __embind_register_std_string, "_clock": _clock, "createNamedFunction": createNamedFunction, "__embind_register_emval": __embind_register_emval, "readLatin1String": readLatin1String, "_pthread_self": _pthread_self, "__emval_decref": __emval_decref, "_sqrt": _sqrt, "__embind_register_float": __embind_register_float, "makeLegalFunctionName": makeLegalFunctionName, "___syscall54": ___syscall54, "___unlock": ___unlock, "init_emval": init_emval, "whenDependentTypesAreResolved": whenDependentTypesAreResolved, "_emscripten_set_main_loop": _emscripten_set_main_loop, "registerType": registerType, "__exit": __exit, "___lock": ___lock, "___syscall6": ___syscall6, "_pthread_cleanup_push": _pthread_cleanup_push, "count_emval_handles": count_emval_handles, "_time": _time, "___syscall140": ___syscall140, "_exit": _exit, "___syscall146": ___syscall146, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var Int8View = global.Int8Array;
  var Int16View = global.Int16Array;
  var Int32View = global.Int32Array;
  var Uint8View = global.Uint8Array;
  var Uint16View = global.Uint16Array;
  var Uint32View = global.Uint32Array;
  var Float32View = global.Float32Array;
  var Float64View = global.Float64Array;
  var HEAP8 = new Int8View(buffer);
  var HEAP16 = new Int16View(buffer);
  var HEAP32 = new Int32View(buffer);
  var HEAPU8 = new Uint8View(buffer);
  var HEAPU16 = new Uint16View(buffer);
  var HEAPU32 = new Uint32View(buffer);
  var HEAPF32 = new Float32View(buffer);
  var HEAPF64 = new Float64View(buffer);
  var byteLength = global.byteLength;


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var floatReadValueFromPointer=env.floatReadValueFromPointer;
  var simpleReadValueFromPointer=env.simpleReadValueFromPointer;
  var integerReadValueFromPointer=env.integerReadValueFromPointer;
  var __embind_register_memory_view=env.__embind_register_memory_view;
  var throwInternalError=env.throwInternalError;
  var get_first_emval=env.get_first_emval;
  var _abort=env._abort;
  var ___setErrNo=env.___setErrNo;
  var __embind_register_integer=env.__embind_register_integer;
  var extendError=env.extendError;
  var ___assert_fail=env.___assert_fail;
  var __embind_register_void=env.__embind_register_void;
  var getShiftFromSize=env.getShiftFromSize;
  var embind_init_charCodes=env.embind_init_charCodes;
  var throwBindingError=env.throwBindingError;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var __emval_register=env.__emval_register;
  var _sbrk=env._sbrk;
  var __embind_register_std_wstring=env.__embind_register_std_wstring;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var __embind_register_bool=env.__embind_register_bool;
  var _sysconf=env._sysconf;
  var _embind_repr=env._embind_repr;
  var __embind_register_std_string=env.__embind_register_std_string;
  var _clock=env._clock;
  var createNamedFunction=env.createNamedFunction;
  var __embind_register_emval=env.__embind_register_emval;
  var readLatin1String=env.readLatin1String;
  var _pthread_self=env._pthread_self;
  var __emval_decref=env.__emval_decref;
  var _sqrt=env._sqrt;
  var __embind_register_float=env.__embind_register_float;
  var makeLegalFunctionName=env.makeLegalFunctionName;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var init_emval=env.init_emval;
  var whenDependentTypesAreResolved=env.whenDependentTypesAreResolved;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var registerType=env.registerType;
  var __exit=env.__exit;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var count_emval_handles=env.count_emval_handles;
  var _time=env._time;
  var ___syscall140=env.___syscall140;
  var _exit=env._exit;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

function _emscripten_replace_memory(newBuffer) {
  if ((byteLength(newBuffer) & 0xffffff || byteLength(newBuffer) <= 0xffffff) || byteLength(newBuffer) > 0x80000000) return false;
  HEAP8 = new Int8View(newBuffer);
  HEAP16 = new Int16View(newBuffer);
  HEAP32 = new Int32View(newBuffer);
  HEAPU8 = new Uint8View(newBuffer);
  HEAPU16 = new Uint16View(newBuffer);
  HEAPU32 = new Uint32View(newBuffer);
  HEAPF32 = new Float32View(newBuffer);
  HEAPF64 = new Float64View(newBuffer);
  buffer = newBuffer;
  return true;
}

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _DecodeDestroy($decode) {
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $decode;
 $1 = $0;
 _DestroyAllCU($1);
 $2 = $0;
 _DestroyIDCTContext($2);
 $3 = $0;
 $4 = HEAP32[$3>>2]|0;
 _Destroy_decode_reconimage($4);
 $5 = $0;
 _DestroyContext($5);
 $6 = $0;
 $7 = ((($6)) + 164|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 _free($9);
 $10 = $0;
 $11 = ((($10)) + 164|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 _free($14);
 $15 = $0;
 $16 = ((($15)) + 164|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 _free($19);
 $20 = $0;
 $21 = ((($20)) + 164|0);
 $22 = HEAP32[$21>>2]|0;
 _free($22);
 $23 = $0;
 _free($23);
 STACKTOP = sp;return;
}
function _DestroyAllCU($decode) {
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $num = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $decode;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 184|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4|0) / 64)&-1;
 $6 = (($5) + 1)|0;
 $num = $6;
 $i = 0;
 while(1) {
  $7 = $i;
  $8 = $num;
  $9 = ($7|0)<($8|0);
  if (!($9)) {
   break;
  }
  $10 = $i;
  $11 = $0;
  $12 = ((($11)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($13) + ($10<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  _DestroyCu($15);
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 $18 = $0;
 $19 = ((($18)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 _DestroyCu($20);
 $21 = $0;
 $22 = ((($21)) + 4|0);
 $23 = HEAP32[$22>>2]|0;
 _free($23);
 STACKTOP = sp;return;
}
function _DestroyIDCTContext($decode) {
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $decode;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 _free($3);
 STACKTOP = sp;return;
}
function _Destroy_decode_reconimage($context) {
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $0;
 $2 = ((($1)) + 96|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 _free($4);
 $5 = $0;
 $6 = ((($5)) + 96|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 _free($9);
 $10 = $0;
 $11 = ((($10)) + 96|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 _free($14);
 $15 = $0;
 $16 = ((($15)) + 96|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 _free($19);
 $20 = $0;
 $21 = ((($20)) + 96|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($22)) + 16|0);
 $24 = HEAP32[$23>>2]|0;
 _free($24);
 $25 = $0;
 $26 = ((($25)) + 96|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($27)) + 20|0);
 $29 = HEAP32[$28>>2]|0;
 _free($29);
 $30 = $0;
 $31 = ((($30)) + 96|0);
 $32 = HEAP32[$31>>2]|0;
 _free($32);
 STACKTOP = sp;return;
}
function _DestroyContext($decode) {
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $decode;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 104|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 _free($5);
 $6 = $0;
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 104|0);
 $9 = HEAP32[$8>>2]|0;
 _free($9);
 $10 = $0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 60|0);
 $13 = HEAP32[$12>>2]|0;
 _free($13);
 $14 = $0;
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 64|0);
 $17 = HEAP32[$16>>2]|0;
 _free($17);
 $18 = $0;
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($19)) + 100|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($21)) + 12|0);
 $23 = HEAP32[$22>>2]|0;
 _free($23);
 $24 = $0;
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($25)) + 100|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($27)) + 8|0);
 $29 = HEAP32[$28>>2]|0;
 _free($29);
 $30 = $0;
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($31)) + 100|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ((($33)) + 20|0);
 $35 = HEAP32[$34>>2]|0;
 _free($35);
 $36 = $0;
 $37 = HEAP32[$36>>2]|0;
 $38 = ((($37)) + 100|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 16|0);
 $41 = HEAP32[$40>>2]|0;
 _free($41);
 $42 = $0;
 $43 = HEAP32[$42>>2]|0;
 $44 = ((($43)) + 100|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ((($45)) + 4|0);
 $47 = HEAP32[$46>>2]|0;
 _free($47);
 $48 = $0;
 $49 = HEAP32[$48>>2]|0;
 $50 = ((($49)) + 100|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = HEAP32[$51>>2]|0;
 _free($52);
 $53 = $0;
 $54 = HEAP32[$53>>2]|0;
 $55 = ((($54)) + 100|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = ((($56)) + 56|0);
 $58 = HEAP32[$57>>2]|0;
 _free($58);
 $59 = $0;
 $60 = HEAP32[$59>>2]|0;
 $61 = ((($60)) + 100|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = ((($62)) + 60|0);
 $64 = HEAP32[$63>>2]|0;
 _free($64);
 $65 = $0;
 $66 = HEAP32[$65>>2]|0;
 $67 = ((($66)) + 100|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = ((($68)) + 64|0);
 $70 = HEAP32[$69>>2]|0;
 _free($70);
 $71 = $0;
 $72 = HEAP32[$71>>2]|0;
 $73 = ((($72)) + 100|0);
 $74 = HEAP32[$73>>2]|0;
 $75 = ((($74)) + 68|0);
 $76 = HEAP32[$75>>2]|0;
 _free($76);
 $77 = $0;
 $78 = HEAP32[$77>>2]|0;
 $79 = ((($78)) + 100|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = ((($80)) + 48|0);
 $82 = HEAP32[$81>>2]|0;
 _free($82);
 $83 = $0;
 $84 = HEAP32[$83>>2]|0;
 $85 = ((($84)) + 100|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = ((($86)) + 52|0);
 $88 = HEAP32[$87>>2]|0;
 _free($88);
 $89 = $0;
 $90 = HEAP32[$89>>2]|0;
 $91 = ((($90)) + 100|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = ((($92)) + 28|0);
 $94 = HEAP32[$93>>2]|0;
 _free($94);
 $95 = $0;
 $96 = HEAP32[$95>>2]|0;
 $97 = ((($96)) + 100|0);
 $98 = HEAP32[$97>>2]|0;
 $99 = ((($98)) + 24|0);
 $100 = HEAP32[$99>>2]|0;
 _free($100);
 $101 = $0;
 $102 = HEAP32[$101>>2]|0;
 $103 = ((($102)) + 100|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ((($104)) + 32|0);
 $106 = HEAP32[$105>>2]|0;
 _free($106);
 $107 = $0;
 $108 = HEAP32[$107>>2]|0;
 $109 = ((($108)) + 100|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = ((($110)) + 36|0);
 $112 = HEAP32[$111>>2]|0;
 _free($112);
 $113 = $0;
 $114 = HEAP32[$113>>2]|0;
 $115 = ((($114)) + 100|0);
 $116 = HEAP32[$115>>2]|0;
 $117 = ((($116)) + 40|0);
 $118 = HEAP32[$117>>2]|0;
 _free($118);
 $119 = $0;
 $120 = HEAP32[$119>>2]|0;
 $121 = ((($120)) + 100|0);
 $122 = HEAP32[$121>>2]|0;
 $123 = ((($122)) + 44|0);
 $124 = HEAP32[$123>>2]|0;
 _free($124);
 $125 = $0;
 $126 = HEAP32[$125>>2]|0;
 $127 = ((($126)) + 100|0);
 $128 = HEAP32[$127>>2]|0;
 _free($128);
 $129 = $0;
 $130 = HEAP32[$129>>2]|0;
 $131 = ((($130)) + 88|0);
 $132 = HEAP32[$131>>2]|0;
 $133 = HEAP32[$132>>2]|0;
 $134 = ((($133)) + 16|0);
 $135 = HEAP32[$134>>2]|0;
 _free($135);
 $136 = $0;
 $137 = HEAP32[$136>>2]|0;
 $138 = ((($137)) + 88|0);
 $139 = HEAP32[$138>>2]|0;
 $140 = HEAP32[$139>>2]|0;
 $141 = ((($140)) + 4|0);
 $142 = HEAP32[$141>>2]|0;
 _free($142);
 $143 = $0;
 $144 = HEAP32[$143>>2]|0;
 $145 = ((($144)) + 88|0);
 $146 = HEAP32[$145>>2]|0;
 $147 = HEAP32[$146>>2]|0;
 $148 = ((($147)) + 12|0);
 $149 = HEAP32[$148>>2]|0;
 _free($149);
 $150 = $0;
 $151 = HEAP32[$150>>2]|0;
 $152 = ((($151)) + 88|0);
 $153 = HEAP32[$152>>2]|0;
 $154 = HEAP32[$153>>2]|0;
 $155 = HEAP32[$154>>2]|0;
 _free($155);
 $156 = $0;
 $157 = HEAP32[$156>>2]|0;
 $158 = ((($157)) + 88|0);
 $159 = HEAP32[$158>>2]|0;
 $160 = HEAP32[$159>>2]|0;
 $161 = ((($160)) + 8|0);
 $162 = HEAP32[$161>>2]|0;
 _free($162);
 $163 = $0;
 $164 = HEAP32[$163>>2]|0;
 $165 = ((($164)) + 88|0);
 $166 = HEAP32[$165>>2]|0;
 $167 = HEAP32[$166>>2]|0;
 _free($167);
 $168 = $0;
 $169 = HEAP32[$168>>2]|0;
 $170 = ((($169)) + 88|0);
 $171 = HEAP32[$170>>2]|0;
 $172 = ((($171)) + 4|0);
 $173 = HEAP32[$172>>2]|0;
 $174 = ((($173)) + 16|0);
 $175 = HEAP32[$174>>2]|0;
 _free($175);
 $176 = $0;
 $177 = HEAP32[$176>>2]|0;
 $178 = ((($177)) + 88|0);
 $179 = HEAP32[$178>>2]|0;
 $180 = ((($179)) + 4|0);
 $181 = HEAP32[$180>>2]|0;
 $182 = ((($181)) + 4|0);
 $183 = HEAP32[$182>>2]|0;
 _free($183);
 $184 = $0;
 $185 = HEAP32[$184>>2]|0;
 $186 = ((($185)) + 88|0);
 $187 = HEAP32[$186>>2]|0;
 $188 = ((($187)) + 4|0);
 $189 = HEAP32[$188>>2]|0;
 $190 = ((($189)) + 12|0);
 $191 = HEAP32[$190>>2]|0;
 _free($191);
 $192 = $0;
 $193 = HEAP32[$192>>2]|0;
 $194 = ((($193)) + 88|0);
 $195 = HEAP32[$194>>2]|0;
 $196 = ((($195)) + 4|0);
 $197 = HEAP32[$196>>2]|0;
 $198 = HEAP32[$197>>2]|0;
 _free($198);
 $199 = $0;
 $200 = HEAP32[$199>>2]|0;
 $201 = ((($200)) + 88|0);
 $202 = HEAP32[$201>>2]|0;
 $203 = ((($202)) + 4|0);
 $204 = HEAP32[$203>>2]|0;
 $205 = ((($204)) + 8|0);
 $206 = HEAP32[$205>>2]|0;
 _free($206);
 $207 = $0;
 $208 = HEAP32[$207>>2]|0;
 $209 = ((($208)) + 88|0);
 $210 = HEAP32[$209>>2]|0;
 $211 = ((($210)) + 4|0);
 $212 = HEAP32[$211>>2]|0;
 _free($212);
 $213 = $0;
 $214 = HEAP32[$213>>2]|0;
 $215 = ((($214)) + 88|0);
 $216 = HEAP32[$215>>2]|0;
 _free($216);
 $217 = $0;
 $218 = HEAP32[$217>>2]|0;
 $219 = ((($218)) + 412|0);
 $220 = HEAP32[$219>>2]|0;
 _free($220);
 $221 = $0;
 $222 = HEAP32[$221>>2]|0;
 _free($222);
 STACKTOP = sp;return;
}
function _DestroyCu($cudata) {
 $cudata = $cudata|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $cudata;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 _free($3);
 $4 = $0;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 _free($6);
 $7 = $0;
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 _free($9);
 $10 = $0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 _free($12);
 $13 = $0;
 $14 = ((($13)) + 24|0);
 $15 = HEAP32[$14>>2]|0;
 _free($15);
 $16 = $0;
 $17 = ((($16)) + 32|0);
 $18 = HEAP32[$17>>2]|0;
 _free($18);
 $19 = $0;
 $20 = ((($19)) + 80|0);
 $21 = HEAP32[$20>>2]|0;
 _free($21);
 $22 = $0;
 $23 = ((($22)) + 84|0);
 $24 = HEAP32[$23>>2]|0;
 _free($24);
 $25 = $0;
 $26 = ((($25)) + 88|0);
 $27 = HEAP32[$26>>2]|0;
 _free($27);
 $28 = $0;
 $29 = ((($28)) + 180|0);
 $30 = HEAP32[$29>>2]|0;
 _free($30);
 $31 = $0;
 $32 = ((($31)) + 76|0);
 $33 = HEAP32[$32>>2]|0;
 _free($33);
 $34 = $0;
 $35 = ((($34)) + 92|0);
 $36 = HEAP32[$35>>2]|0;
 _free($36);
 $37 = $0;
 $38 = ((($37)) + 96|0);
 $39 = HEAP32[$38>>2]|0;
 _free($39);
 $40 = $0;
 $41 = ((($40)) + 100|0);
 $42 = HEAP32[$41>>2]|0;
 _free($42);
 $43 = $0;
 $44 = ((($43)) + 188|0);
 $45 = HEAP32[$44>>2]|0;
 _free($45);
 $46 = $0;
 $47 = ((($46)) + 184|0);
 $48 = HEAP32[$47>>2]|0;
 _free($48);
 $49 = $0;
 $50 = ((($49)) + 192|0);
 $51 = HEAP32[$50>>2]|0;
 _free($51);
 $52 = $0;
 $53 = ((($52)) + 196|0);
 $54 = HEAP32[$53>>2]|0;
 _free($54);
 $55 = $0;
 $56 = ((($55)) + 200|0);
 $57 = HEAP32[$56>>2]|0;
 _free($57);
 $58 = $0;
 _free($58);
 STACKTOP = sp;return;
}
function _get_delta($cudata,$pos,$delta,$direction) {
 $cudata = $cudata|0;
 $pos = $pos|0;
 $delta = $delta|0;
 $direction = $direction|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $length = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $cudata;
 $1 = $delta;
 $2 = $direction;
 $i = 0;
 $length = 0;
 $3 = $2;
 $4 = ($3|0)==(1);
 $i = 0;
 L1: do {
  if ($4) {
   while(1) {
    $5 = $i;
    $6 = ((($pos)) + 8|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($5|0)<($7|0);
    if (!($8)) {
     break L1;
    }
    $9 = $i;
    $10 = HEAP32[$pos>>2]|0;
    $11 = (($9) + ($10))|0;
    $12 = (($11|0) / 4)&-1;
    $13 = $12<<4;
    $14 = ((($pos)) + 4|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = (($15|0) / 4)&-1;
    $17 = (($13) + ($16))|0;
    $18 = $17<<2;
    $19 = $i;
    $20 = HEAP32[$pos>>2]|0;
    $21 = (($19) + ($20))|0;
    $22 = (($21|0) % 4)&-1;
    $23 = (($18) + ($22))|0;
    $24 = $0;
    $25 = ((($24)) + 80|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + ($23<<1)|0);
    $28 = HEAP16[$27>>1]|0;
    $29 = $length;
    $30 = (($29) + 1)|0;
    $length = $30;
    $31 = $1;
    $32 = (($31) + ($29<<1)|0);
    HEAP16[$32>>1] = $28;
    $33 = $i;
    $34 = (($33) + 1)|0;
    $i = $34;
   }
  } else {
   while(1) {
    $35 = $i;
    $36 = ((($pos)) + 8|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($35|0)<($37|0);
    if (!($38)) {
     break L1;
    }
    $39 = HEAP32[$pos>>2]|0;
    $40 = (($39|0) / 4)&-1;
    $41 = $40<<4;
    $42 = $i;
    $43 = ((($pos)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (($42) + ($44))|0;
    $46 = (($45|0) / 4)&-1;
    $47 = (($41) + ($46))|0;
    $48 = $47<<2;
    $49 = $i;
    $50 = ((($pos)) + 4|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (($49) + ($51))|0;
    $53 = (($52|0) % 4)&-1;
    $54 = (($48) + ($53))|0;
    $55 = $0;
    $56 = ((($55)) + 80|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = (($57) + ($54<<1)|0);
    $59 = HEAP16[$58>>1]|0;
    $60 = $length;
    $61 = (($60) + 1)|0;
    $length = $61;
    $62 = $1;
    $63 = (($62) + ($60<<1)|0);
    HEAP16[$63>>1] = $59;
    $64 = $i;
    $65 = (($64) + 1)|0;
    $i = $65;
   }
  }
 } while(0);
 $66 = $length;
 $67 = (($66) - 1)|0;
 $i = $67;
 while(1) {
  $68 = $i;
  $69 = ($68|0)>(0);
  if (!($69)) {
   break;
  }
  $70 = $i;
  $71 = $1;
  $72 = (($71) + ($70<<1)|0);
  $73 = HEAP16[$72>>1]|0;
  $74 = $73 << 16 >> 16;
  $75 = $i;
  $76 = (($75) - 1)|0;
  $77 = $1;
  $78 = (($77) + ($76<<1)|0);
  $79 = HEAP16[$78>>1]|0;
  $80 = $79 << 16 >> 16;
  $81 = (($74) - ($80))|0;
  $82 = $81&65535;
  $83 = $i;
  $84 = $1;
  $85 = (($84) + ($83<<1)|0);
  HEAP16[$85>>1] = $82;
  $86 = $i;
  $87 = (($86) + -1)|0;
  $i = $87;
 }
 $i = 1;
 while(1) {
  $88 = $i;
  $89 = $length;
  $90 = ($88|0)<($89|0);
  if (!($90)) {
   break;
  }
  $91 = $i;
  $92 = (($91) - 1)|0;
  $93 = $1;
  $94 = (($93) + ($92<<1)|0);
  $95 = HEAP16[$94>>1]|0;
  $96 = $95 << 16 >> 16;
  $97 = $i;
  $98 = $1;
  $99 = (($98) + ($97<<1)|0);
  $100 = HEAP16[$99>>1]|0;
  $101 = $100 << 16 >> 16;
  $102 = (($101) + ($96))|0;
  $103 = $102&65535;
  HEAP16[$99>>1] = $103;
  $104 = $i;
  $105 = (($104) + 1)|0;
  $i = $105;
 }
 $i = 0;
 while(1) {
  $106 = $i;
  $107 = $length;
  $108 = ($106|0)<($107|0);
  if (!($108)) {
   break;
  }
  $109 = $i;
  $110 = $1;
  $111 = (($110) + ($109<<1)|0);
  $112 = HEAP16[$111>>1]|0;
  $113 = $112 << 16 >> 16;
  $114 = ((($pos)) + 8|0);
  $115 = HEAP32[$114>>2]|0;
  $116 = $115<<5;
  $117 = (($113) + ($116))|0;
  $118 = $117&65535;
  $119 = $i;
  $120 = $1;
  $121 = (($120) + ($119<<1)|0);
  HEAP16[$121>>1] = $118;
  $122 = $i;
  $123 = (($122) + 1)|0;
  $i = $123;
 }
 $124 = $length;
 STACKTOP = sp;return ($124|0);
}
function _DecodeInit($data) {
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $decode = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = (_malloc(172)|0);
 $decode = $1;
 $2 = $decode;
 _InitIDCTContext($2);
 $3 = $decode;
 $4 = $0;
 _InitContext($3,$4);
 $5 = $decode;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 172|0);
 $8 = $decode;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 184|0);
 $11 = $decode;
 $12 = ((($11)) + 168|0);
 $13 = $decode;
 $14 = HEAP32[$13>>2]|0;
 _decodeFrameHeadInfo($7,$10,$12,$14);
 $15 = $decode;
 $16 = ((($15)) + 168|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $decode;
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($19)) + 16|0);
 $21 = ((($20)) + 20|0);
 HEAP32[$21>>2] = $17;
 $22 = $decode;
 $23 = HEAP32[$22>>2]|0;
 $24 = $decode;
 $25 = ((($24)) + 168|0);
 $26 = HEAP32[$25>>2]|0;
 _resetEntropyCtxTable($23,2,$26);
 $27 = $decode;
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($28)) + 172|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = $decode;
 $32 = HEAP32[$31>>2]|0;
 $33 = ((($32)) + 176|0);
 HEAP32[$33>>2] = $30;
 $34 = $decode;
 $35 = HEAP32[$34>>2]|0;
 $36 = ((($35)) + 184|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = $decode;
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 180|0);
 HEAP32[$40>>2] = $37;
 $41 = $decode;
 $42 = HEAP32[$41>>2]|0;
 _init_decode_reconimage($42);
 $43 = $decode;
 $44 = $decode;
 $45 = HEAP32[$44>>2]|0;
 $46 = ((($45)) + 172|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = $decode;
 $49 = HEAP32[$48>>2]|0;
 $50 = ((($49)) + 184|0);
 $51 = HEAP32[$50>>2]|0;
 _InitCU($43,$47,$51);
 $52 = (_malloc(24)|0);
 $53 = $decode;
 $54 = ((($53)) + 164|0);
 HEAP32[$54>>2] = $52;
 $55 = $decode;
 $56 = HEAP32[$55>>2]|0;
 $57 = ((($56)) + 176|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = $decode;
 $60 = HEAP32[$59>>2]|0;
 $61 = ((($60)) + 180|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = Math_imul($58, $62)|0;
 $64 = $63;
 $65 = (_malloc($64)|0);
 $66 = $decode;
 $67 = ((($66)) + 164|0);
 $68 = HEAP32[$67>>2]|0;
 HEAP32[$68>>2] = $65;
 $69 = $decode;
 $70 = HEAP32[$69>>2]|0;
 $71 = ((($70)) + 176|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = $decode;
 $74 = HEAP32[$73>>2]|0;
 $75 = ((($74)) + 180|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = Math_imul($72, $76)|0;
 $78 = $77;
 $79 = (_malloc($78)|0);
 $80 = $decode;
 $81 = ((($80)) + 164|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = ((($82)) + 4|0);
 HEAP32[$83>>2] = $79;
 $84 = $decode;
 $85 = HEAP32[$84>>2]|0;
 $86 = ((($85)) + 176|0);
 $87 = HEAP32[$86>>2]|0;
 $88 = $decode;
 $89 = HEAP32[$88>>2]|0;
 $90 = ((($89)) + 180|0);
 $91 = HEAP32[$90>>2]|0;
 $92 = Math_imul($87, $91)|0;
 $93 = $92;
 $94 = (_malloc($93)|0);
 $95 = $decode;
 $96 = ((($95)) + 164|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = ((($97)) + 8|0);
 HEAP32[$98>>2] = $94;
 $99 = $decode;
 STACKTOP = sp;return ($99|0);
}
function _InitIDCTContext($decode) {
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $str = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $decode;
 $1 = (_malloc(408708)|0);
 $2 = $0;
 $3 = ((($2)) + 12|0);
 HEAP32[$3>>2] = $1;
 $str = 20634;
 $4 = $str;
 $5 = $0;
 $6 = ((($5)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 _initShapeIdctContext($4,$7);
 STACKTOP = sp;return;
}
function _InitContext($decode,$data) {
 $decode = $decode|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0.0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $test = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $test = sp + 8|0;
 $0 = $decode;
 $1 = $data;
 $2 = (_malloc(480)|0);
 $3 = $0;
 HEAP32[$3>>2] = $2;
 $4 = (_malloc(4)|0);
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 104|0);
 HEAP32[$7>>2] = $4;
 $8 = $0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 104|0);
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$11>>2] = 0;
 $12 = (_malloc(48)|0);
 $13 = $0;
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($14)) + 60|0);
 HEAP32[$15>>2] = $12;
 $16 = (_malloc(48)|0);
 $17 = $0;
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($18)) + 64|0);
 HEAP32[$19>>2] = $16;
 (_cabac_tableinit()|0);
 $20 = $0;
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($21)) + 60|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $1;
 _init_cabac_decoder($23,$24,2550000);
 $25 = (_malloc(72)|0);
 $26 = $0;
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($27)) + 100|0);
 HEAP32[$28>>2] = $25;
 $29 = (_malloc(130)|0);
 $30 = $0;
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($31)) + 100|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ((($33)) + 52|0);
 HEAP32[$34>>2] = $29;
 $35 = (_malloc(130)|0);
 $36 = $0;
 $37 = HEAP32[$36>>2]|0;
 $38 = ((($37)) + 100|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 48|0);
 HEAP32[$40>>2] = $35;
 $41 = (_malloc(65)|0);
 $42 = $0;
 $43 = HEAP32[$42>>2]|0;
 $44 = ((($43)) + 100|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ((($45)) + 60|0);
 HEAP32[$46>>2] = $41;
 $47 = (_malloc(65)|0);
 $48 = $0;
 $49 = HEAP32[$48>>2]|0;
 $50 = ((($49)) + 100|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = ((($51)) + 56|0);
 HEAP32[$52>>2] = $47;
 $53 = (_malloc(65)|0);
 $54 = $0;
 $55 = HEAP32[$54>>2]|0;
 $56 = ((($55)) + 100|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ((($57)) + 68|0);
 HEAP32[$58>>2] = $53;
 $59 = (_malloc(65)|0);
 $60 = $0;
 $61 = HEAP32[$60>>2]|0;
 $62 = ((($61)) + 100|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = ((($63)) + 64|0);
 HEAP32[$64>>2] = $59;
 $65 = (_malloc(192)|0);
 $66 = $0;
 $67 = HEAP32[$66>>2]|0;
 $68 = ((($67)) + 100|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = ((($69)) + 4|0);
 HEAP32[$70>>2] = $65;
 $71 = (_malloc(192)|0);
 $72 = $0;
 $73 = HEAP32[$72>>2]|0;
 $74 = ((($73)) + 100|0);
 $75 = HEAP32[$74>>2]|0;
 HEAP32[$75>>2] = $71;
 $76 = (_malloc(192)|0);
 $77 = $0;
 $78 = HEAP32[$77>>2]|0;
 $79 = ((($78)) + 100|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = ((($80)) + 8|0);
 HEAP32[$81>>2] = $76;
 $82 = (_malloc(192)|0);
 $83 = $0;
 $84 = HEAP32[$83>>2]|0;
 $85 = ((($84)) + 100|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = ((($86)) + 12|0);
 HEAP32[$87>>2] = $82;
 $88 = (_malloc(192)|0);
 $89 = $0;
 $90 = HEAP32[$89>>2]|0;
 $91 = ((($90)) + 100|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = ((($92)) + 16|0);
 HEAP32[$93>>2] = $88;
 $94 = (_malloc(192)|0);
 $95 = $0;
 $96 = HEAP32[$95>>2]|0;
 $97 = ((($96)) + 100|0);
 $98 = HEAP32[$97>>2]|0;
 $99 = ((($98)) + 20|0);
 HEAP32[$99>>2] = $94;
 $100 = (_malloc(192)|0);
 $101 = $0;
 $102 = HEAP32[$101>>2]|0;
 $103 = ((($102)) + 100|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ((($104)) + 28|0);
 HEAP32[$105>>2] = $100;
 $106 = (_malloc(192)|0);
 $107 = $0;
 $108 = HEAP32[$107>>2]|0;
 $109 = ((($108)) + 100|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = ((($110)) + 24|0);
 HEAP32[$111>>2] = $106;
 $112 = (_malloc(192)|0);
 $113 = $0;
 $114 = HEAP32[$113>>2]|0;
 $115 = ((($114)) + 100|0);
 $116 = HEAP32[$115>>2]|0;
 $117 = ((($116)) + 32|0);
 HEAP32[$117>>2] = $112;
 $118 = (_malloc(192)|0);
 $119 = $0;
 $120 = HEAP32[$119>>2]|0;
 $121 = ((($120)) + 100|0);
 $122 = HEAP32[$121>>2]|0;
 $123 = ((($122)) + 36|0);
 HEAP32[$123>>2] = $118;
 $124 = (_malloc(192)|0);
 $125 = $0;
 $126 = HEAP32[$125>>2]|0;
 $127 = ((($126)) + 100|0);
 $128 = HEAP32[$127>>2]|0;
 $129 = ((($128)) + 40|0);
 HEAP32[$129>>2] = $124;
 $130 = (_malloc(192)|0);
 $131 = $0;
 $132 = HEAP32[$131>>2]|0;
 $133 = ((($132)) + 100|0);
 $134 = HEAP32[$133>>2]|0;
 $135 = ((($134)) + 44|0);
 HEAP32[$135>>2] = $130;
 $136 = (_malloc(8)|0);
 $137 = $0;
 $138 = HEAP32[$137>>2]|0;
 $139 = ((($138)) + 88|0);
 HEAP32[$139>>2] = $136;
 $140 = (_malloc(20)|0);
 $141 = $0;
 $142 = HEAP32[$141>>2]|0;
 $143 = ((($142)) + 88|0);
 $144 = HEAP32[$143>>2]|0;
 HEAP32[$144>>2] = $140;
 $145 = (_malloc(16384)|0);
 $146 = $0;
 $147 = HEAP32[$146>>2]|0;
 $148 = ((($147)) + 88|0);
 $149 = HEAP32[$148>>2]|0;
 $150 = HEAP32[$149>>2]|0;
 $151 = ((($150)) + 16|0);
 HEAP32[$151>>2] = $145;
 $152 = (_malloc(4096)|0);
 $153 = $0;
 $154 = HEAP32[$153>>2]|0;
 $155 = ((($154)) + 88|0);
 $156 = HEAP32[$155>>2]|0;
 $157 = HEAP32[$156>>2]|0;
 $158 = ((($157)) + 4|0);
 HEAP32[$158>>2] = $152;
 $159 = (_malloc(16384)|0);
 $160 = $0;
 $161 = HEAP32[$160>>2]|0;
 $162 = ((($161)) + 88|0);
 $163 = HEAP32[$162>>2]|0;
 $164 = HEAP32[$163>>2]|0;
 $165 = ((($164)) + 12|0);
 HEAP32[$165>>2] = $159;
 $166 = (_malloc(16384)|0);
 $167 = $0;
 $168 = HEAP32[$167>>2]|0;
 $169 = ((($168)) + 88|0);
 $170 = HEAP32[$169>>2]|0;
 $171 = HEAP32[$170>>2]|0;
 HEAP32[$171>>2] = $166;
 $172 = (_malloc(16384)|0);
 $173 = $0;
 $174 = HEAP32[$173>>2]|0;
 $175 = ((($174)) + 88|0);
 $176 = HEAP32[$175>>2]|0;
 $177 = HEAP32[$176>>2]|0;
 $178 = ((($177)) + 8|0);
 HEAP32[$178>>2] = $172;
 $179 = (_malloc(20)|0);
 $180 = $0;
 $181 = HEAP32[$180>>2]|0;
 $182 = ((($181)) + 88|0);
 $183 = HEAP32[$182>>2]|0;
 $184 = ((($183)) + 4|0);
 HEAP32[$184>>2] = $179;
 $185 = (_malloc(16384)|0);
 $186 = $0;
 $187 = HEAP32[$186>>2]|0;
 $188 = ((($187)) + 88|0);
 $189 = HEAP32[$188>>2]|0;
 $190 = ((($189)) + 4|0);
 $191 = HEAP32[$190>>2]|0;
 $192 = ((($191)) + 16|0);
 HEAP32[$192>>2] = $185;
 $193 = (_malloc(4096)|0);
 $194 = $0;
 $195 = HEAP32[$194>>2]|0;
 $196 = ((($195)) + 88|0);
 $197 = HEAP32[$196>>2]|0;
 $198 = ((($197)) + 4|0);
 $199 = HEAP32[$198>>2]|0;
 $200 = ((($199)) + 4|0);
 HEAP32[$200>>2] = $193;
 $201 = (_malloc(16384)|0);
 $202 = $0;
 $203 = HEAP32[$202>>2]|0;
 $204 = ((($203)) + 88|0);
 $205 = HEAP32[$204>>2]|0;
 $206 = ((($205)) + 4|0);
 $207 = HEAP32[$206>>2]|0;
 $208 = ((($207)) + 12|0);
 HEAP32[$208>>2] = $201;
 $209 = (_malloc(16384)|0);
 $210 = $0;
 $211 = HEAP32[$210>>2]|0;
 $212 = ((($211)) + 88|0);
 $213 = HEAP32[$212>>2]|0;
 $214 = ((($213)) + 4|0);
 $215 = HEAP32[$214>>2]|0;
 HEAP32[$215>>2] = $209;
 $216 = (_malloc(16384)|0);
 $217 = $0;
 $218 = HEAP32[$217>>2]|0;
 $219 = ((($218)) + 88|0);
 $220 = HEAP32[$219>>2]|0;
 $221 = ((($220)) + 4|0);
 $222 = HEAP32[$221>>2]|0;
 $223 = ((($222)) + 8|0);
 HEAP32[$223>>2] = $216;
 $224 = $0;
 $225 = ((($224)) + 12|0);
 $226 = HEAP32[$225>>2]|0;
 $227 = $0;
 $228 = HEAP32[$227>>2]|0;
 $229 = ((($228)) + 72|0);
 HEAP32[$229>>2] = $226;
 $230 = (_malloc(20)|0);
 $231 = $0;
 $232 = HEAP32[$231>>2]|0;
 $233 = ((($232)) + 412|0);
 HEAP32[$233>>2] = $230;
 $234 = $0;
 $235 = HEAP32[$234>>2]|0;
 $236 = ((($235)) + 412|0);
 $237 = HEAP32[$236>>2]|0;
 HEAP32[$237>>2] = 0;
 $238 = $0;
 $239 = HEAP32[$238>>2]|0;
 $240 = ((($239)) + 412|0);
 $241 = HEAP32[$240>>2]|0;
 $242 = ((($241)) + 4|0);
 HEAP32[$242>>2] = 47;
 $243 = $0;
 $244 = HEAP32[$243>>2]|0;
 $245 = ((($244)) + 412|0);
 $246 = HEAP32[$245>>2]|0;
 $247 = ((($246)) + 8|0);
 HEAP32[$247>>2] = 17;
 $248 = $0;
 $249 = HEAP32[$248>>2]|0;
 $250 = ((($249)) + 412|0);
 $251 = HEAP32[$250>>2]|0;
 $252 = ((($251)) + 12|0);
 HEAP32[$252>>2] = 1;
 $253 = $0;
 $254 = HEAP32[$253>>2]|0;
 $255 = ((($254)) + 412|0);
 $256 = HEAP32[$255>>2]|0;
 $257 = ((($256)) + 16|0);
 HEAP32[$257>>2] = 255;
 _memcpy(($test|0),(384|0),208)|0;
 $i = 0;
 while(1) {
  $258 = $i;
  $259 = ($258|0)<(52);
  if (!($259)) {
   break;
  }
  $260 = $i;
  $261 = (($test) + ($260<<2)|0);
  $262 = +HEAPF32[$261>>2];
  $263 = $i;
  $264 = $0;
  $265 = HEAP32[$264>>2]|0;
  $266 = ((($265)) + 192|0);
  $267 = (($266) + ($263<<2)|0);
  HEAPF32[$267>>2] = $262;
  $268 = $i;
  $269 = (($268) + 1)|0;
  $i = $269;
 }
 STACKTOP = sp;return;
}
function _init_decode_reconimage($context) {
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $col = 0, $row = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $0;
 $2 = ((($1)) + 176|0);
 $3 = HEAP32[$2>>2]|0;
 $row = $3;
 $4 = $0;
 $5 = ((($4)) + 180|0);
 $6 = HEAP32[$5>>2]|0;
 $col = $6;
 $7 = (_malloc(24)|0);
 $8 = $0;
 $9 = ((($8)) + 96|0);
 HEAP32[$9>>2] = $7;
 $10 = $row;
 $11 = $10;
 $12 = $col;
 $13 = Math_imul($11, $12)|0;
 $14 = (_malloc($13)|0);
 $15 = $0;
 $16 = ((($15)) + 96|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + 4|0);
 HEAP32[$18>>2] = $14;
 $19 = $row;
 $20 = $19;
 $21 = $col;
 $22 = Math_imul($20, $21)|0;
 $23 = (_malloc($22)|0);
 $24 = $0;
 $25 = ((($24)) + 96|0);
 $26 = HEAP32[$25>>2]|0;
 HEAP32[$26>>2] = $23;
 $27 = $row;
 $28 = $27;
 $29 = $col;
 $30 = Math_imul($28, $29)|0;
 $31 = (_malloc($30)|0);
 $32 = $0;
 $33 = ((($32)) + 96|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 8|0);
 HEAP32[$35>>2] = $31;
 $36 = $row;
 $37 = $36;
 $38 = $col;
 $39 = Math_imul($37, $38)|0;
 $40 = (_malloc($39)|0);
 $41 = $0;
 $42 = ((($41)) + 96|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = ((($43)) + 12|0);
 HEAP32[$44>>2] = $40;
 $45 = $0;
 $46 = ((($45)) + 96|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ((($47)) + 12|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = $row;
 $51 = $50;
 $52 = $col;
 $53 = Math_imul($51, $52)|0;
 _memset(($49|0),0,($53|0))|0;
 $54 = $row;
 $55 = $54;
 $56 = (($55>>>0) / 2)&-1;
 $57 = $col;
 $58 = Math_imul($56, $57)|0;
 $59 = (($58>>>0) / 2)&-1;
 $60 = (_malloc($59)|0);
 $61 = $0;
 $62 = ((($61)) + 96|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = ((($63)) + 16|0);
 HEAP32[$64>>2] = $60;
 $65 = $0;
 $66 = ((($65)) + 96|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = ((($67)) + 16|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = $row;
 $71 = $70;
 $72 = (($71>>>0) / 2)&-1;
 $73 = $col;
 $74 = Math_imul($72, $73)|0;
 $75 = (($74>>>0) / 2)&-1;
 _memset(($69|0),0,($75|0))|0;
 $76 = $row;
 $77 = $76;
 $78 = (($77>>>0) / 2)&-1;
 $79 = $col;
 $80 = Math_imul($78, $79)|0;
 $81 = (($80>>>0) / 2)&-1;
 $82 = (_malloc($81)|0);
 $83 = $0;
 $84 = ((($83)) + 96|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = ((($85)) + 20|0);
 HEAP32[$86>>2] = $82;
 $87 = $0;
 $88 = ((($87)) + 96|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ((($89)) + 20|0);
 $91 = HEAP32[$90>>2]|0;
 $92 = $row;
 $93 = $92;
 $94 = (($93>>>0) / 2)&-1;
 $95 = $col;
 $96 = Math_imul($94, $95)|0;
 $97 = (($96>>>0) / 2)&-1;
 _memset(($91|0),0,($97|0))|0;
 STACKTOP = sp;return;
}
function _InitCU($decode,$row,$col) {
 $decode = $decode|0;
 $row = $row|0;
 $col = $col|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $num = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $decode;
 $1 = $row;
 $2 = $col;
 $3 = $2;
 $4 = (($3|0) / 64)&-1;
 $5 = (($4) + 1)|0;
 $num = $5;
 $6 = $num;
 $7 = $6<<2;
 $8 = (_malloc($7)|0);
 $9 = $0;
 $10 = ((($9)) + 4|0);
 HEAP32[$10>>2] = $8;
 $11 = (_malloc(208)|0);
 $12 = $0;
 $13 = ((($12)) + 8|0);
 HEAP32[$13>>2] = $11;
 $i = 0;
 while(1) {
  $14 = $i;
  $15 = $num;
  $16 = ($14|0)<($15|0);
  if (!($16)) {
   break;
  }
  $17 = (_malloc(208)|0);
  $18 = $i;
  $19 = $0;
  $20 = ((($19)) + 4|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (($21) + ($18<<2)|0);
  HEAP32[$22>>2] = $17;
  $23 = $i;
  $24 = $0;
  $25 = ((($24)) + 4|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (($26) + ($23<<2)|0);
  $28 = HEAP32[$27>>2]|0;
  _InitOneCU($28);
  $29 = $i;
  $30 = (($29) + 1)|0;
  $i = $30;
 }
 $31 = $0;
 $32 = ((($31)) + 8|0);
 $33 = HEAP32[$32>>2]|0;
 _InitOneCU($33);
 STACKTOP = sp;return;
}
function _InitOneCU($cu) {
 $cu = $cu|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $i = 0, $i13 = 0, $i14 = 0, $i15 = 0, $j = 0, $j1 = 0, $j10 = 0, $j11 = 0, $j12 = 0, $j2 = 0, $j3 = 0, $j4 = 0, $j5 = 0, $j6 = 0, $j7 = 0, $j8 = 0, $j9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $cu;
 $1 = (_malloc(256)|0);
 $2 = $0;
 $3 = ((($2)) + 8|0);
 HEAP32[$3>>2] = $1;
 $j = 0;
 while(1) {
  $4 = $j;
  $5 = ($4|0)<(256);
  if (!($5)) {
   break;
  }
  $6 = $j;
  $7 = $0;
  $8 = ((($7)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + ($6)|0);
  HEAP8[$10>>0] = -1;
  $11 = $j;
  $12 = (($11) + 1)|0;
  $j = $12;
 }
 $13 = (_malloc(256)|0);
 $14 = $0;
 $15 = ((($14)) + 12|0);
 HEAP32[$15>>2] = $13;
 $j1 = 0;
 while(1) {
  $16 = $j1;
  $17 = ($16|0)<(256);
  if (!($17)) {
   break;
  }
  $18 = $j1;
  $19 = $0;
  $20 = ((($19)) + 12|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (($21) + ($18)|0);
  HEAP8[$22>>0] = -1;
  $23 = $j1;
  $24 = (($23) + 1)|0;
  $j1 = $24;
 }
 $25 = (_malloc(256)|0);
 $26 = $0;
 $27 = ((($26)) + 16|0);
 HEAP32[$27>>2] = $25;
 $j2 = 0;
 while(1) {
  $28 = $j2;
  $29 = ($28|0)<(256);
  if (!($29)) {
   break;
  }
  $30 = $j2;
  $31 = $0;
  $32 = ((($31)) + 16|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = (($33) + ($30)|0);
  HEAP8[$34>>0] = -1;
  $35 = $j2;
  $36 = (($35) + 1)|0;
  $j2 = $36;
 }
 $37 = (_malloc(256)|0);
 $38 = $0;
 $39 = ((($38)) + 20|0);
 HEAP32[$39>>2] = $37;
 $j3 = 0;
 while(1) {
  $40 = $j3;
  $41 = ($40|0)<(256);
  if (!($41)) {
   break;
  }
  $42 = $j3;
  $43 = $0;
  $44 = ((($43)) + 20|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = (($45) + ($42)|0);
  HEAP8[$46>>0] = -1;
  $47 = $j3;
  $48 = (($47) + 1)|0;
  $j3 = $48;
 }
 $49 = (_malloc(256)|0);
 $50 = $0;
 $51 = ((($50)) + 24|0);
 HEAP32[$51>>2] = $49;
 $j4 = 0;
 while(1) {
  $52 = $j4;
  $53 = ($52|0)<(256);
  if (!($53)) {
   break;
  }
  $54 = $j4;
  $55 = $0;
  $56 = ((($55)) + 24|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = (($57) + ($54)|0);
  HEAP8[$58>>0] = -1;
  $59 = $j4;
  $60 = (($59) + 1)|0;
  $j4 = $60;
 }
 $61 = (_malloc(256)|0);
 $62 = $0;
 $63 = ((($62)) + 32|0);
 HEAP32[$63>>2] = $61;
 $j5 = 0;
 while(1) {
  $64 = $j5;
  $65 = ($64|0)<(256);
  if (!($65)) {
   break;
  }
  $66 = $j5;
  $67 = $0;
  $68 = ((($67)) + 32|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = (($69) + ($66)|0);
  HEAP8[$70>>0] = -1;
  $71 = $j5;
  $72 = (($71) + 1)|0;
  $j5 = $72;
 }
 $73 = (_malloc(2048)|0);
 $74 = $0;
 $75 = ((($74)) + 80|0);
 HEAP32[$75>>2] = $73;
 $j6 = 0;
 while(1) {
  $76 = $j6;
  $77 = ($76|0)<(256);
  if (!($77)) {
   break;
  }
  $78 = $j6;
  $79 = $0;
  $80 = ((($79)) + 80|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = (($81) + ($78<<1)|0);
  HEAP16[$82>>1] = 32767;
  $83 = $j6;
  $84 = (($83) + 1)|0;
  $j6 = $84;
 }
 $85 = (_malloc(1024)|0);
 $86 = $0;
 $87 = ((($86)) + 84|0);
 HEAP32[$87>>2] = $85;
 $j7 = 0;
 while(1) {
  $88 = $j7;
  $89 = ($88|0)<(256);
  if (!($89)) {
   break;
  }
  $90 = $j7;
  $91 = $0;
  $92 = ((($91)) + 84|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = (($93) + ($90<<1)|0);
  HEAP16[$94>>1] = 32767;
  $95 = $j7;
  $96 = (($95) + 1)|0;
  $j7 = $96;
 }
 $97 = (_malloc(1024)|0);
 $98 = $0;
 $99 = ((($98)) + 88|0);
 HEAP32[$99>>2] = $97;
 $j8 = 0;
 while(1) {
  $100 = $j8;
  $101 = ($100|0)<(256);
  if (!($101)) {
   break;
  }
  $102 = $j8;
  $103 = $0;
  $104 = ((($103)) + 88|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = (($105) + ($102<<1)|0);
  HEAP16[$106>>1] = 32767;
  $107 = $j8;
  $108 = (($107) + 1)|0;
  $j8 = $108;
 }
 $109 = (_malloc(256)|0);
 $110 = $0;
 $111 = ((($110)) + 180|0);
 HEAP32[$111>>2] = $109;
 $j9 = 0;
 while(1) {
  $112 = $j9;
  $113 = ($112|0)<(256);
  if (!($113)) {
   break;
  }
  $114 = $j9;
  $115 = $0;
  $116 = ((($115)) + 180|0);
  $117 = HEAP32[$116>>2]|0;
  $118 = (($117) + ($114)|0);
  HEAP8[$118>>0] = 127;
  $119 = $j9;
  $120 = (($119) + 1)|0;
  $j9 = $120;
 }
 $121 = (_malloc(256)|0);
 $122 = $0;
 $123 = ((($122)) + 76|0);
 HEAP32[$123>>2] = $121;
 $j10 = 0;
 while(1) {
  $124 = $j10;
  $125 = ($124|0)<(256);
  if (!($125)) {
   break;
  }
  $126 = $j10;
  $127 = $0;
  $128 = ((($127)) + 76|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = (($129) + ($126)|0);
  HEAP8[$130>>0] = -1;
  $131 = $j10;
  $132 = (($131) + 1)|0;
  $j10 = $132;
 }
 $133 = (_malloc(16384)|0);
 $134 = $0;
 $135 = ((($134)) + 92|0);
 HEAP32[$135>>2] = $133;
 $136 = (_malloc(16384)|0);
 $137 = $0;
 $138 = ((($137)) + 96|0);
 HEAP32[$138>>2] = $136;
 $139 = (_malloc(16384)|0);
 $140 = $0;
 $141 = ((($140)) + 100|0);
 HEAP32[$141>>2] = $139;
 $j11 = 0;
 while(1) {
  $142 = $j11;
  $143 = ($142|0)<(256);
  if (!($143)) {
   break;
  }
  $144 = $j11;
  $145 = $0;
  $146 = ((($145)) + 92|0);
  $147 = HEAP32[$146>>2]|0;
  $148 = (($147) + ($144<<2)|0);
  HEAPF32[$148>>2] = 256.0;
  $149 = $j11;
  $150 = $0;
  $151 = ((($150)) + 96|0);
  $152 = HEAP32[$151>>2]|0;
  $153 = (($152) + ($149<<2)|0);
  HEAPF32[$153>>2] = 256.0;
  $154 = $j11;
  $155 = $0;
  $156 = ((($155)) + 100|0);
  $157 = HEAP32[$156>>2]|0;
  $158 = (($157) + ($154<<2)|0);
  HEAPF32[$158>>2] = 256.0;
  $159 = $j11;
  $160 = (($159) + 1)|0;
  $j11 = $160;
 }
 $161 = (_malloc(256)|0);
 $162 = $0;
 $163 = ((($162)) + 188|0);
 HEAP32[$163>>2] = $161;
 $j12 = 0;
 while(1) {
  $164 = $j12;
  $165 = ($164|0)<(256);
  if (!($165)) {
   break;
  }
  $166 = $j12;
  $167 = $0;
  $168 = ((($167)) + 188|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = (($169) + ($166)|0);
  HEAP8[$170>>0] = -1;
  $171 = $j12;
  $172 = (($171) + 1)|0;
  $j12 = $172;
 }
 $173 = (_malloc(256)|0);
 $174 = $0;
 $175 = ((($174)) + 184|0);
 HEAP32[$175>>2] = $173;
 $i = 0;
 while(1) {
  $176 = $i;
  $177 = ($176|0)<(256);
  if (!($177)) {
   break;
  }
  $178 = $i;
  $179 = $0;
  $180 = ((($179)) + 184|0);
  $181 = HEAP32[$180>>2]|0;
  $182 = (($181) + ($178)|0);
  HEAP8[$182>>0] = -1;
  $183 = $i;
  $184 = (($183) + 1)|0;
  $i = $184;
 }
 $185 = (_malloc(256)|0);
 $186 = $0;
 $187 = ((($186)) + 192|0);
 HEAP32[$187>>2] = $185;
 $i13 = 0;
 while(1) {
  $188 = $i13;
  $189 = ($188|0)<(256);
  if (!($189)) {
   break;
  }
  $190 = $i13;
  $191 = $0;
  $192 = ((($191)) + 192|0);
  $193 = HEAP32[$192>>2]|0;
  $194 = (($193) + ($190)|0);
  HEAP8[$194>>0] = -1;
  $195 = $i13;
  $196 = (($195) + 1)|0;
  $i13 = $196;
 }
 $197 = (_malloc(256)|0);
 $198 = $0;
 $199 = ((($198)) + 196|0);
 HEAP32[$199>>2] = $197;
 $i14 = 0;
 while(1) {
  $200 = $i14;
  $201 = ($200|0)<(256);
  if (!($201)) {
   break;
  }
  $202 = $i14;
  $203 = $0;
  $204 = ((($203)) + 196|0);
  $205 = HEAP32[$204>>2]|0;
  $206 = (($205) + ($202)|0);
  HEAP8[$206>>0] = -1;
  $207 = $i14;
  $208 = (($207) + 1)|0;
  $i14 = $208;
 }
 $209 = (_malloc(256)|0);
 $210 = $0;
 $211 = ((($210)) + 200|0);
 HEAP32[$211>>2] = $209;
 $i15 = 0;
 while(1) {
  $212 = $i15;
  $213 = ($212|0)<(256);
  if (!($213)) {
   break;
  }
  $214 = $i15;
  $215 = $0;
  $216 = ((($215)) + 200|0);
  $217 = HEAP32[$216>>2]|0;
  $218 = (($217) + ($214)|0);
  HEAP8[$218>>0] = -1;
  $219 = $i15;
  $220 = (($219) + 1)|0;
  $i15 = $220;
 }
 STACKTOP = sp;return;
}
function _tu_decoder_decode($arr,$arr_len,$rgba_img,$buf) {
 $arr = $arr|0;
 $arr_len = $arr_len|0;
 $rgba_img = $rgba_img|0;
 $buf = $buf|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0.0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0;
 var $170 = 0.0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $decode = 0, $h = 0, $i = 0, $w = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $arr;
 $1 = $arr_len;
 $2 = $rgba_img;
 $3 = $buf;
 $4 = $0;
 $5 = (_DecodeInit($4)|0);
 $decode = $5;
 $6 = $decode;
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 184|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $3;
 HEAP32[$10>>2] = $9;
 $w = $9;
 $11 = $decode;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 172|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 $16 = ((($15)) + 4|0);
 HEAP32[$16>>2] = $14;
 $h = $14;
 $17 = $0;
 $18 = $decode;
 _decode_process($17,$18);
 $i = 0;
 while(1) {
  $19 = $i;
  $20 = $3;
  $21 = HEAP32[$20>>2]|0;
  $22 = $3;
  $23 = ((($22)) + 4|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = Math_imul($21, $24)|0;
  $26 = ($19|0)<($25|0);
  if (!($26)) {
   break;
  }
  $27 = $i;
  $28 = $decode;
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($29)) + 96|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = HEAP32[$31>>2]|0;
  $33 = (($32) + ($27)|0);
  $34 = HEAP8[$33>>0]|0;
  $35 = $34&255;
  $36 = (+($35|0));
  $37 = $i;
  $38 = $w;
  $39 = (($37|0) / ($38|0))&-1;
  $40 = (($39|0) / 2)&-1;
  $41 = $w;
  $42 = Math_imul($40, $41)|0;
  $43 = (($42|0) / 2)&-1;
  $44 = $i;
  $45 = $w;
  $46 = (($44|0) % ($45|0))&-1;
  $47 = (($46|0) / 2)&-1;
  $48 = (($43) + ($47))|0;
  $49 = $decode;
  $50 = HEAP32[$49>>2]|0;
  $51 = ((($50)) + 96|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ((($52)) + 8|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = (($54) + ($48)|0);
  $56 = HEAP8[$55>>0]|0;
  $57 = $56&255;
  $58 = (($57) - 128)|0;
  $59 = (+($58|0));
  $60 = 1.5700000000000001 * $59;
  $61 = $36 + $60;
  $62 = $61;
  $63 = (_control_range($62)|0);
  $64 = $i;
  $65 = $64<<2;
  $66 = $2;
  $67 = (($66) + ($65)|0);
  HEAP8[$67>>0] = $63;
  $68 = $i;
  $69 = $decode;
  $70 = HEAP32[$69>>2]|0;
  $71 = ((($70)) + 96|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = HEAP32[$72>>2]|0;
  $74 = (($73) + ($68)|0);
  $75 = HEAP8[$74>>0]|0;
  $76 = $75&255;
  $77 = (+($76|0));
  $78 = $i;
  $79 = $w;
  $80 = (($78|0) / ($79|0))&-1;
  $81 = (($80|0) / 2)&-1;
  $82 = $w;
  $83 = Math_imul($81, $82)|0;
  $84 = (($83|0) / 2)&-1;
  $85 = $i;
  $86 = $w;
  $87 = (($85|0) % ($86|0))&-1;
  $88 = (($87|0) / 2)&-1;
  $89 = (($84) + ($88))|0;
  $90 = $decode;
  $91 = HEAP32[$90>>2]|0;
  $92 = ((($91)) + 96|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = ((($93)) + 8|0);
  $95 = HEAP32[$94>>2]|0;
  $96 = (($95) + ($89)|0);
  $97 = HEAP8[$96>>0]|0;
  $98 = $97&255;
  $99 = (($98) - 128)|0;
  $100 = (+($99|0));
  $101 = 0.46700000000000003 * $100;
  $102 = $77 - $101;
  $103 = $i;
  $104 = $w;
  $105 = (($103|0) / ($104|0))&-1;
  $106 = (($105|0) / 2)&-1;
  $107 = $w;
  $108 = Math_imul($106, $107)|0;
  $109 = (($108|0) / 2)&-1;
  $110 = $i;
  $111 = $w;
  $112 = (($110|0) % ($111|0))&-1;
  $113 = (($112|0) / 2)&-1;
  $114 = (($109) + ($113))|0;
  $115 = $decode;
  $116 = HEAP32[$115>>2]|0;
  $117 = ((($116)) + 96|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = ((($118)) + 4|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = (($120) + ($114)|0);
  $122 = HEAP8[$121>>0]|0;
  $123 = $122&255;
  $124 = (($123) - 128)|0;
  $125 = (+($124|0));
  $126 = 0.187 * $125;
  $127 = $102 - $126;
  $128 = $127;
  $129 = (_control_range($128)|0);
  $130 = $i;
  $131 = $130<<2;
  $132 = (($131) + 1)|0;
  $133 = $2;
  $134 = (($133) + ($132)|0);
  HEAP8[$134>>0] = $129;
  $135 = $i;
  $136 = $decode;
  $137 = HEAP32[$136>>2]|0;
  $138 = ((($137)) + 96|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = HEAP32[$139>>2]|0;
  $141 = (($140) + ($135)|0);
  $142 = HEAP8[$141>>0]|0;
  $143 = $142&255;
  $144 = (+($143|0));
  $145 = $i;
  $146 = $w;
  $147 = (($145|0) / ($146|0))&-1;
  $148 = (($147|0) / 2)&-1;
  $149 = $w;
  $150 = Math_imul($148, $149)|0;
  $151 = (($150|0) / 2)&-1;
  $152 = $i;
  $153 = $w;
  $154 = (($152|0) % ($153|0))&-1;
  $155 = (($154|0) / 2)&-1;
  $156 = (($151) + ($155))|0;
  $157 = $decode;
  $158 = HEAP32[$157>>2]|0;
  $159 = ((($158)) + 96|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = ((($160)) + 4|0);
  $162 = HEAP32[$161>>2]|0;
  $163 = (($162) + ($156)|0);
  $164 = HEAP8[$163>>0]|0;
  $165 = $164&255;
  $166 = (($165) - 128)|0;
  $167 = (+($166|0));
  $168 = 1.8560000000000001 * $167;
  $169 = $144 + $168;
  $170 = $169;
  $171 = (_control_range($170)|0);
  $172 = $i;
  $173 = $172<<2;
  $174 = (($173) + 2)|0;
  $175 = $2;
  $176 = (($175) + ($174)|0);
  HEAP8[$176>>0] = $171;
  $177 = $i;
  $178 = $177<<2;
  $179 = (($178) + 3)|0;
  $180 = $2;
  $181 = (($180) + ($179)|0);
  HEAP8[$181>>0] = -1;
  $182 = $i;
  $183 = (($182) + 1)|0;
  $i = $183;
 }
 $184 = $decode;
 _DecodeDestroy($184);
 STACKTOP = sp;return 0;
}
function _decode_process($input,$decode) {
 $input = $input|0;
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $col = 0, $cur_diff_pos = 0, $end = 0, $i = 0, $j = 0, $k = 0, $pos = 0, $pos$byval_copy = 0, $position = 0, $row = 0, $start = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pos$byval_copy = sp + 60|0;
 $vararg_buffer = sp;
 $pos = sp + 40|0;
 $cur_diff_pos = sp + 28|0;
 $0 = $input;
 $1 = $decode;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 176|0);
 $5 = HEAP32[$4>>2]|0;
 $row = $5;
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 180|0);
 $9 = HEAP32[$8>>2]|0;
 $col = $9;
 HEAP32[$cur_diff_pos>>2] = 0;
 $i = 0;
 $j = 0;
 $k = 0;
 $position = 0;
 $10 = (_clock()|0);
 $start = $10;
 $11 = (_clock()|0);
 $end = $11;
 HEAP32[$pos>>2] = 0;
 $12 = ((($pos)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($pos)) + 8|0);
 HEAP32[$13>>2] = 64;
 $i = 0;
 while(1) {
  $14 = $i;
  $15 = $row;
  $16 = ($14|0)<($15|0);
  if (!($16)) {
   label = 15;
   break;
  }
  $j = 0;
  while(1) {
   $17 = $j;
   $18 = $col;
   $19 = ($17|0)<($18|0);
   if (!($19)) {
    break;
   }
   $20 = $1;
   $21 = ((($20)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   _resetDecodeCu($22);
   $23 = $i;
   $24 = ($23|0)==(0);
   $25 = $1;
   $26 = ((($25)) + 8|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = ((($27)) + 121|0);
   if ($24) {
    HEAP8[$28>>0] = 0;
    $29 = $1;
    $30 = ((($29)) + 8|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ((($31)) + 128|0);
    HEAP32[$32>>2] = 0;
   } else {
    HEAP8[$28>>0] = 1;
    $33 = $j;
    $34 = (($33|0) / 64)&-1;
    $35 = $1;
    $36 = ((($35)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (($37) + ($34<<2)|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = $1;
    $41 = ((($40)) + 8|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = ((($42)) + 128|0);
    HEAP32[$43>>2] = $39;
   }
   $44 = $j;
   $45 = ($44|0)==(0);
   $46 = $1;
   $47 = ((($46)) + 8|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($48)) + 120|0);
   if ($45) {
    HEAP8[$49>>0] = 0;
    $50 = $1;
    $51 = ((($50)) + 8|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = ((($52)) + 124|0);
    HEAP32[$53>>2] = 0;
   } else {
    HEAP8[$49>>0] = 1;
    $54 = $j;
    $55 = (($54|0) / 64)&-1;
    $56 = (($55) - 1)|0;
    $57 = $1;
    $58 = ((($57)) + 4|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (($59) + ($56<<2)|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = $1;
    $63 = ((($62)) + 8|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = ((($64)) + 124|0);
    HEAP32[$65>>2] = $61;
   }
   $66 = $1;
   $67 = ((($66)) + 168|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = $68&255;
   $70 = $1;
   $71 = ((($70)) + 8|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($72)) + 64|0);
   HEAP8[$73>>0] = $69;
   $74 = $position;
   $75 = ($74|0)<(0);
   $76 = $75 << 31 >> 31;
   $77 = $1;
   $78 = ((($77)) + 8|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = $79;
   $81 = $80;
   HEAP32[$81>>2] = $74;
   $82 = (($80) + 4)|0;
   $83 = $82;
   HEAP32[$83>>2] = $76;
   $84 = $1;
   $85 = ((($84)) + 8|0);
   $86 = HEAP32[$85>>2]|0;
   $87 = $1;
   $88 = HEAP32[$87>>2]|0;
   _cabacCtuDecode($86,$88);
   HEAP32[$cur_diff_pos>>2] = 0;
   $89 = $1;
   $90 = ((($89)) + 16|0);
   HEAP32[$90>>2] = 0;
   $91 = $1;
   $92 = ((($91)) + 20|0);
   HEAP32[$92>>2] = 0;
   $93 = $1;
   $94 = ((($93)) + 24|0);
   HEAP32[$94>>2] = 0;
   $95 = $1;
   $96 = ((($95)) + 8|0);
   $97 = HEAP32[$96>>2]|0;
   $98 = ((($97)) + 64|0);
   $99 = HEAP8[$98>>0]|0;
   $100 = $1;
   $101 = ((($100)) + 8|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = ((($102)) + 65|0);
   HEAP8[$103>>0] = $99;
   $104 = $1;
   $105 = HEAP32[$104>>2]|0;
   $106 = ((($105)) + 16|0);
   $107 = $1;
   $108 = ((($107)) + 8|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = ((($109)) + 64|0);
   $111 = HEAP8[$110>>0]|0;
   $112 = $111&255;
   _setQP($106,$112);
   $113 = $1;
   $114 = ((($113)) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = $i;
   $117 = $j;
   $118 = $1;
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($119)) + 96|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = $1;
   ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
   _getImageFromCU($115,$cur_diff_pos,$pos$byval_copy,$116,$117,$121,$122);
   $123 = $position;
   $124 = (($123) + 1)|0;
   $position = $124;
   $125 = $position;
   $126 = ($125|0)==(1000);
   if ($126) {
    break;
   }
   $127 = $j;
   $128 = (($127|0) / 64)&-1;
   $129 = $1;
   $130 = ((($129)) + 4|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = (($131) + ($128<<2)|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = $1;
   $135 = ((($134)) + 8|0);
   $136 = HEAP32[$135>>2]|0;
   _CopyCu($133,$136);
   $137 = $j;
   $138 = (($137) + 64)|0;
   $j = $138;
  }
  $139 = $position;
  $140 = ($139|0)==(1000);
  if ($140) {
   label = 15;
   break;
  }
  $141 = $i;
  $142 = (($141) + 64)|0;
  $i = $142;
 }
 if ((label|0) == 15) {
  $143 = HEAP32[592>>2]|0;
  HEAP32[$vararg_buffer>>2] = $143;
  (_printf(20645,$vararg_buffer)|0);
  STACKTOP = sp;return;
 }
}
function _resetDecodeCu($cu) {
 $cu = $cu|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $j = 0, $j1 = 0, $j10 = 0, $j11 = 0, $j12 = 0, $j13 = 0, $j14 = 0, $j2 = 0, $j3 = 0, $j4 = 0, $j5 = 0, $j6 = 0, $j7 = 0, $j8 = 0;
 var $j9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $cu;
 $j = 0;
 while(1) {
  $1 = $j;
  $2 = ($1|0)<(256);
  if (!($2)) {
   break;
  }
  $3 = $j;
  $4 = $0;
  $5 = ((($4)) + 180|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($6) + ($3)|0);
  HEAP8[$7>>0] = 127;
  $8 = $j;
  $9 = (($8) + 1)|0;
  $j = $9;
 }
 $j1 = 0;
 while(1) {
  $10 = $j1;
  $11 = ($10|0)<(256);
  if (!($11)) {
   break;
  }
  $12 = $j1;
  $13 = $0;
  $14 = ((($13)) + 76|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($15) + ($12)|0);
  HEAP8[$16>>0] = -1;
  $17 = $j1;
  $18 = (($17) + 1)|0;
  $j1 = $18;
 }
 $j2 = 0;
 while(1) {
  $19 = $j2;
  $20 = ($19|0)<(256);
  if (!($20)) {
   break;
  }
  $21 = $j2;
  $22 = $0;
  $23 = ((($22)) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (($24) + ($21)|0);
  HEAP8[$25>>0] = -1;
  $26 = $j2;
  $27 = (($26) + 1)|0;
  $j2 = $27;
 }
 $j3 = 0;
 while(1) {
  $28 = $j3;
  $29 = ($28|0)<(256);
  if (!($29)) {
   break;
  }
  $30 = $j3;
  $31 = $0;
  $32 = ((($31)) + 12|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = (($33) + ($30)|0);
  HEAP8[$34>>0] = -1;
  $35 = $j3;
  $36 = (($35) + 1)|0;
  $j3 = $36;
 }
 $j4 = 0;
 while(1) {
  $37 = $j4;
  $38 = ($37|0)<(256);
  if (!($38)) {
   break;
  }
  $39 = $j4;
  $40 = $0;
  $41 = ((($40)) + 16|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) + ($39)|0);
  HEAP8[$43>>0] = -1;
  $44 = $j4;
  $45 = (($44) + 1)|0;
  $j4 = $45;
 }
 $j5 = 0;
 while(1) {
  $46 = $j5;
  $47 = ($46|0)<(256);
  if (!($47)) {
   break;
  }
  $48 = $j5;
  $49 = $0;
  $50 = ((($49)) + 20|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = (($51) + ($48)|0);
  HEAP8[$52>>0] = -1;
  $53 = $j5;
  $54 = (($53) + 1)|0;
  $j5 = $54;
 }
 $j6 = 0;
 while(1) {
  $55 = $j6;
  $56 = ($55|0)<(256);
  if (!($56)) {
   break;
  }
  $57 = $j6;
  $58 = $0;
  $59 = ((($58)) + 24|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = (($60) + ($57)|0);
  HEAP8[$61>>0] = -1;
  $62 = $j6;
  $63 = (($62) + 1)|0;
  $j6 = $63;
 }
 $j7 = 0;
 while(1) {
  $64 = $j7;
  $65 = ($64|0)<(256);
  if (!($65)) {
   break;
  }
  $66 = $j7;
  $67 = $0;
  $68 = ((($67)) + 32|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = (($69) + ($66)|0);
  HEAP8[$70>>0] = -1;
  $71 = $j7;
  $72 = (($71) + 1)|0;
  $j7 = $72;
 }
 $j8 = 0;
 while(1) {
  $73 = $j8;
  $74 = ($73|0)<(256);
  if (!($74)) {
   break;
  }
  $75 = $j8;
  $76 = $0;
  $77 = ((($76)) + 80|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (($78) + ($75<<1)|0);
  HEAP16[$79>>1] = 32767;
  $80 = $j8;
  $81 = (($80) + 1)|0;
  $j8 = $81;
 }
 $j9 = 0;
 while(1) {
  $82 = $j9;
  $83 = ($82|0)<(256);
  if (!($83)) {
   break;
  }
  $84 = $j9;
  $85 = $0;
  $86 = ((($85)) + 84|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = (($87) + ($84<<1)|0);
  HEAP16[$88>>1] = 32767;
  $89 = $j9;
  $90 = (($89) + 1)|0;
  $j9 = $90;
 }
 $j10 = 0;
 while(1) {
  $91 = $j10;
  $92 = ($91|0)<(256);
  if (!($92)) {
   break;
  }
  $93 = $j10;
  $94 = $0;
  $95 = ((($94)) + 88|0);
  $96 = HEAP32[$95>>2]|0;
  $97 = (($96) + ($93<<1)|0);
  HEAP16[$97>>1] = 32767;
  $98 = $j10;
  $99 = (($98) + 1)|0;
  $j10 = $99;
 }
 $j11 = 0;
 while(1) {
  $100 = $j11;
  $101 = ($100|0)<(256);
  if (!($101)) {
   break;
  }
  $102 = $j11;
  $103 = $0;
  $104 = ((($103)) + 188|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = (($105) + ($102)|0);
  HEAP8[$106>>0] = -1;
  $107 = $j11;
  $108 = (($107) + 1)|0;
  $j11 = $108;
 }
 $j12 = 0;
 while(1) {
  $109 = $j12;
  $110 = ($109|0)<(256);
  if (!($110)) {
   break;
  }
  $111 = $j12;
  $112 = $0;
  $113 = ((($112)) + 184|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = (($114) + ($111)|0);
  HEAP8[$115>>0] = -1;
  $116 = $j12;
  $117 = (($116) + 1)|0;
  $j12 = $117;
 }
 $j13 = 0;
 while(1) {
  $118 = $j13;
  $119 = ($118|0)<(256);
  if (!($119)) {
   break;
  }
  $120 = $j13;
  $121 = $0;
  $122 = ((($121)) + 192|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = (($123) + ($120)|0);
  HEAP8[$124>>0] = -1;
  $125 = $j13;
  $126 = (($125) + 1)|0;
  $j13 = $126;
 }
 $j14 = 0;
 while(1) {
  $127 = $j14;
  $128 = ($127|0)<(4096);
  if (!($128)) {
   break;
  }
  $129 = $j14;
  $130 = $0;
  $131 = ((($130)) + 92|0);
  $132 = HEAP32[$131>>2]|0;
  $133 = (($132) + ($129<<2)|0);
  HEAPF32[$133>>2] = 256.0;
  $134 = $j14;
  $135 = $0;
  $136 = ((($135)) + 96|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = (($137) + ($134<<2)|0);
  HEAPF32[$138>>2] = 256.0;
  $139 = $j14;
  $140 = $0;
  $141 = ((($140)) + 100|0);
  $142 = HEAP32[$141>>2]|0;
  $143 = (($142) + ($139<<2)|0);
  HEAPF32[$143>>2] = 256.0;
  $144 = $j14;
  $145 = (($144) + 1)|0;
  $j14 = $145;
 }
 STACKTOP = sp;return;
}
function _getImageFromCU($cu,$cur_diff_pos,$pos,$x,$y,$image_recons,$decode) {
 $cu = $cu|0;
 $cur_diff_pos = $cur_diff_pos|0;
 $pos = $pos|0;
 $x = $x|0;
 $y = $y|0;
 $image_recons = $image_recons|0;
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ctu_size = 0, $i = 0, $i1 = 0, $j = 0, $num_border = 0, $num_flat1 = 0, $num_flat2 = 0, $pos$byval_copy = 0, $pos$byval_copy1 = 0;
 var $pos$byval_copy2 = 0, $pos$byval_copy3 = 0, $pos$byval_copy4 = 0, $pos$byval_copy5 = 0, $pos$byval_copy6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pos$byval_copy6 = sp + 124|0;
 $pos$byval_copy5 = sp + 112|0;
 $pos$byval_copy4 = sp + 100|0;
 $pos$byval_copy3 = sp + 88|0;
 $pos$byval_copy2 = sp + 76|0;
 $pos$byval_copy1 = sp + 64|0;
 $pos$byval_copy = sp + 52|0;
 $0 = $cu;
 $1 = $cur_diff_pos;
 $2 = $x;
 $3 = $y;
 $4 = $image_recons;
 $5 = $decode;
 $ctu_size = 64;
 $i = 0;
 $j = 0;
 $num_flat1 = 0;
 $num_flat2 = 0;
 $num_border = 0;
 $6 = HEAP32[$pos>>2]|0;
 $7 = (($6|0) / 4)&-1;
 $8 = $7<<4;
 $9 = ((($pos)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10|0) / 4)&-1;
 $12 = (($8) + ($11))|0;
 $13 = $0;
 $14 = ((($13)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15) + ($12)|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = ($18|0)==(255);
 if ($19) {
  STACKTOP = sp;return;
 }
 $i1 = 0;
 while(1) {
  $20 = $i1;
  $21 = HEAP32[$pos>>2]|0;
  $22 = (($21|0) / 4)&-1;
  $23 = $22<<4;
  $24 = ((($pos)) + 4|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = (($25|0) / 4)&-1;
  $27 = (($23) + ($26))|0;
  $28 = $0;
  $29 = ((($28)) + 8|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = (($30) + ($27)|0);
  $32 = HEAP8[$31>>0]|0;
  $33 = $32&255;
  $34 = ($20|0)<($33|0);
  if (!($34)) {
   break;
  }
  $35 = $ctu_size;
  $36 = (($35|0) / 2)&-1;
  $ctu_size = $36;
  $37 = $i1;
  $38 = (($37) + 1)|0;
  $i1 = $38;
 }
 $39 = ((($pos)) + 8|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = $ctu_size;
 $42 = ($40|0)>($41|0);
 if ($42) {
  $43 = ((($pos)) + 8|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = (($44|0) / 2)&-1;
  $46 = ((($pos)) + 8|0);
  HEAP32[$46>>2] = $45;
  $47 = $0;
  $48 = $1;
  $49 = $2;
  $50 = $3;
  $51 = $4;
  $52 = $5;
  ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
  _getImageFromCU($47,$48,$pos$byval_copy,$49,$50,$51,$52);
  $53 = ((($pos)) + 8|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = ((($pos)) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (($56) + ($54))|0;
  HEAP32[$55>>2] = $57;
  $58 = $0;
  $59 = $1;
  $60 = $2;
  $61 = $3;
  $62 = $4;
  $63 = $5;
  ;HEAP32[$pos$byval_copy1>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy1+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy1+8>>2]=HEAP32[$pos+8>>2]|0;
  _getImageFromCU($58,$59,$pos$byval_copy1,$60,$61,$62,$63);
  $64 = ((($pos)) + 8|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = ((($pos)) + 4|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = (($67) - ($65))|0;
  HEAP32[$66>>2] = $68;
  $69 = ((($pos)) + 8|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = HEAP32[$pos>>2]|0;
  $72 = (($71) + ($70))|0;
  HEAP32[$pos>>2] = $72;
  $73 = $0;
  $74 = $1;
  $75 = $2;
  $76 = $3;
  $77 = $4;
  $78 = $5;
  ;HEAP32[$pos$byval_copy2>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy2+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy2+8>>2]=HEAP32[$pos+8>>2]|0;
  _getImageFromCU($73,$74,$pos$byval_copy2,$75,$76,$77,$78);
  $79 = ((($pos)) + 8|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = ((($pos)) + 4|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (($82) + ($80))|0;
  HEAP32[$81>>2] = $83;
  $84 = $0;
  $85 = $1;
  $86 = $2;
  $87 = $3;
  $88 = $4;
  $89 = $5;
  ;HEAP32[$pos$byval_copy3>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy3+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy3+8>>2]=HEAP32[$pos+8>>2]|0;
  _getImageFromCU($84,$85,$pos$byval_copy3,$86,$87,$88,$89);
  STACKTOP = sp;return;
 } else {
  $90 = $5;
  $91 = HEAP32[$90>>2]|0;
  $92 = ((($91)) + 476|0);
  HEAP8[$92>>0] = 0;
  $93 = $0;
  $94 = $2;
  $95 = $3;
  $96 = $4;
  $97 = $5;
  ;HEAP32[$pos$byval_copy4>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy4+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy4+8>>2]=HEAP32[$pos+8>>2]|0;
  _decode_Y($93,$pos$byval_copy4,$94,$95,$96,$97);
  $98 = $5;
  $99 = HEAP32[$98>>2]|0;
  $100 = ((($99)) + 476|0);
  HEAP8[$100>>0] = 1;
  $101 = $0;
  $102 = $2;
  $103 = $3;
  $104 = $4;
  $105 = $5;
  ;HEAP32[$pos$byval_copy5>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy5+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy5+8>>2]=HEAP32[$pos+8>>2]|0;
  _decode_Cb($101,$pos$byval_copy5,$102,$103,$104,$105);
  $106 = $0;
  $107 = $2;
  $108 = $3;
  $109 = $4;
  $110 = $5;
  ;HEAP32[$pos$byval_copy6>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy6+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy6+8>>2]=HEAP32[$pos+8>>2]|0;
  _decode_Cr($106,$pos$byval_copy6,$107,$108,$109,$110);
  STACKTOP = sp;return;
 }
}
function _CopyCu($dst,$src) {
 $dst = $dst|0;
 $src = $src|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $dst;
 $1 = $src;
 $2 = $1;
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $0;
 $10 = $9;
 $11 = $10;
 HEAP32[$11>>2] = $5;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = $1;
 $15 = ((($14)) + 64|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $0;
 $18 = ((($17)) + 64|0);
 HEAP8[$18>>0] = $16;
 $19 = $1;
 $20 = ((($19)) + 65|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $0;
 $23 = ((($22)) + 65|0);
 HEAP8[$23>>0] = $21;
 $24 = $1;
 $25 = ((($24)) + 121|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = $0;
 $28 = ((($27)) + 120|0);
 HEAP8[$28>>0] = $26;
 $29 = $1;
 $30 = ((($29)) + 121|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $0;
 $33 = ((($32)) + 121|0);
 HEAP8[$33>>0] = $31;
 $34 = $0;
 $35 = ((($34)) + 180|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = $1;
 $38 = ((($37)) + 180|0);
 $39 = HEAP32[$38>>2]|0;
 _memcpy(($36|0),($39|0),256)|0;
 $40 = $0;
 $41 = ((($40)) + 76|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = $1;
 $44 = ((($43)) + 76|0);
 $45 = HEAP32[$44>>2]|0;
 _memcpy(($42|0),($45|0),256)|0;
 $46 = $0;
 $47 = ((($46)) + 8|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = $1;
 $50 = ((($49)) + 8|0);
 $51 = HEAP32[$50>>2]|0;
 _memcpy(($48|0),($51|0),256)|0;
 $52 = $0;
 $53 = ((($52)) + 12|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = $1;
 $56 = ((($55)) + 12|0);
 $57 = HEAP32[$56>>2]|0;
 _memcpy(($54|0),($57|0),256)|0;
 $58 = $0;
 $59 = ((($58)) + 16|0);
 $60 = HEAP32[$59>>2]|0;
 $61 = $1;
 $62 = ((($61)) + 16|0);
 $63 = HEAP32[$62>>2]|0;
 _memcpy(($60|0),($63|0),256)|0;
 $64 = $0;
 $65 = ((($64)) + 20|0);
 $66 = HEAP32[$65>>2]|0;
 $67 = $1;
 $68 = ((($67)) + 20|0);
 $69 = HEAP32[$68>>2]|0;
 _memcpy(($66|0),($69|0),256)|0;
 $70 = $0;
 $71 = ((($70)) + 24|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = $1;
 $74 = ((($73)) + 24|0);
 $75 = HEAP32[$74>>2]|0;
 _memcpy(($72|0),($75|0),256)|0;
 $76 = $0;
 $77 = ((($76)) + 32|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = $1;
 $80 = ((($79)) + 32|0);
 $81 = HEAP32[$80>>2]|0;
 _memcpy(($78|0),($81|0),256)|0;
 $82 = $0;
 $83 = ((($82)) + 80|0);
 $84 = HEAP32[$83>>2]|0;
 $85 = $1;
 $86 = ((($85)) + 80|0);
 $87 = HEAP32[$86>>2]|0;
 _memcpy(($84|0),($87|0),2048)|0;
 $88 = $0;
 $89 = ((($88)) + 84|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $1;
 $92 = ((($91)) + 84|0);
 $93 = HEAP32[$92>>2]|0;
 _memcpy(($90|0),($93|0),1024)|0;
 $94 = $0;
 $95 = ((($94)) + 88|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = $1;
 $98 = ((($97)) + 88|0);
 $99 = HEAP32[$98>>2]|0;
 _memcpy(($96|0),($99|0),1024)|0;
 $100 = $0;
 $101 = ((($100)) + 188|0);
 $102 = HEAP32[$101>>2]|0;
 $103 = $1;
 $104 = ((($103)) + 188|0);
 $105 = HEAP32[$104>>2]|0;
 _memcpy(($102|0),($105|0),256)|0;
 $106 = $0;
 $107 = ((($106)) + 184|0);
 $108 = HEAP32[$107>>2]|0;
 $109 = $1;
 $110 = ((($109)) + 184|0);
 $111 = HEAP32[$110>>2]|0;
 _memcpy(($108|0),($111|0),256)|0;
 $112 = $0;
 $113 = ((($112)) + 192|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = $1;
 $116 = ((($115)) + 192|0);
 $117 = HEAP32[$116>>2]|0;
 _memcpy(($114|0),($117|0),256)|0;
 $118 = $0;
 $119 = ((($118)) + 196|0);
 $120 = HEAP32[$119>>2]|0;
 $121 = $1;
 $122 = ((($121)) + 196|0);
 $123 = HEAP32[$122>>2]|0;
 _memcpy(($120|0),($123|0),256)|0;
 $124 = $0;
 $125 = ((($124)) + 200|0);
 $126 = HEAP32[$125>>2]|0;
 $127 = $1;
 $128 = ((($127)) + 200|0);
 $129 = HEAP32[$128>>2]|0;
 _memcpy(($126|0),($129|0),256)|0;
 $130 = $0;
 $131 = ((($130)) + 92|0);
 $132 = HEAP32[$131>>2]|0;
 $133 = $1;
 $134 = ((($133)) + 92|0);
 $135 = HEAP32[$134>>2]|0;
 _memcpy(($132|0),($135|0),16384)|0;
 $136 = $0;
 $137 = ((($136)) + 96|0);
 $138 = HEAP32[$137>>2]|0;
 $139 = $1;
 $140 = ((($139)) + 96|0);
 $141 = HEAP32[$140>>2]|0;
 _memcpy(($138|0),($141|0),16384)|0;
 $142 = $0;
 $143 = ((($142)) + 100|0);
 $144 = HEAP32[$143>>2]|0;
 $145 = $1;
 $146 = ((($145)) + 100|0);
 $147 = HEAP32[$146>>2]|0;
 _memcpy(($144|0),($147|0),16384)|0;
 STACKTOP = sp;return;
}
function _decode_Y($cu,$pos,$x,$y,$image_recons,$decode) {
 $cu = $cu|0;
 $pos = $pos|0;
 $x = $x|0;
 $y = $y|0;
 $image_recons = $image_recons|0;
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0.0, $227 = 0.0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $ctuPos = 0, $end = 0, $i = 0, $insertNum = 0, $is_top = 0, $j = 0, $or$cond = 0, $or$cond3 = 0, $pos$byval_copy = 0, $pos$byval_copy4 = 0, $st = 0, $tem = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pos$byval_copy4 = sp + 64|0;
 $pos$byval_copy = sp + 52|0;
 $0 = $cu;
 $1 = $x;
 $2 = $y;
 $3 = $image_recons;
 $4 = $decode;
 $5 = HEAP32[$pos>>2]|0;
 $6 = (($5|0) / 4)&-1;
 $7 = $6<<4;
 $8 = ((($pos)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9|0) / 4)&-1;
 $11 = (($7) + ($10))|0;
 $ctuPos = $11;
 $is_top = 0;
 $insertNum = 0;
 $12 = ((($pos)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $1;
 $15 = $2;
 $16 = HEAP32[$pos>>2]|0;
 $17 = ((($pos)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = $4;
 $20 = HEAP32[$19>>2]|0;
 _get_top_and_left_border($13,$14,$15,$16,$18,$20);
 $21 = ((($pos)) + 8|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(8);
 if ($23) {
  label = 4;
 } else {
  $24 = ((($pos)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ($25|0)==(16);
  if ($26) {
   label = 4;
  } else {
   $27 = ((($pos)) + 8|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($28|0)==(32);
   if ($29) {
    label = 4;
   }
  }
 }
 if ((label|0) == 4) {
  $30 = $4;
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($31)) + 100|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ((($33)) + 24|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ((($pos)) + 8|0);
  $37 = HEAP32[$36>>2]|0;
  _weak_filter_reference($35,$37);
  $38 = $4;
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($39)) + 100|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($41)) + 28|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($pos)) + 8|0);
  $45 = HEAP32[$44>>2]|0;
  _weak_filter_reference($43,$45);
 }
 $46 = ((($pos)) + 8|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ($47|0)==(32);
 if ($48) {
  label = 7;
 } else {
  $49 = ((($pos)) + 8|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($50|0)==(64);
  if ($51) {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $52 = $4;
  $53 = HEAP32[$52>>2]|0;
  $54 = ((($53)) + 100|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ((($55)) + 24|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = $4;
  $59 = HEAP32[$58>>2]|0;
  $60 = ((($59)) + 100|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = ((($61)) + 28|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = ((($pos)) + 8|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = (_judge_strong_filter($57,$63,$65)|0);
  $67 = $66&255;
  $68 = ($67|0)==(1);
  if ($68) {
   $69 = $4;
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($70)) + 100|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($72)) + 24|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ((($pos)) + 8|0);
   $76 = HEAP32[$75>>2]|0;
   _strong_filter_reference($74,$76);
   $77 = $4;
   $78 = HEAP32[$77>>2]|0;
   $79 = ((($78)) + 100|0);
   $80 = HEAP32[$79>>2]|0;
   $81 = ((($80)) + 28|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = ((($pos)) + 8|0);
   $84 = HEAP32[$83>>2]|0;
   _strong_filter_reference($82,$84);
  }
 }
 $85 = HEAP32[$pos>>2]|0;
 $86 = ($85|0)==(0);
 if ($86) {
  $87 = ((($pos)) + 4|0);
  $88 = HEAP32[$87>>2]|0;
  $89 = ($88|0)==(52);
  if ($89) {
   $90 = ((($pos)) + 8|0);
   $91 = HEAP32[$90>>2]|0;
   $92 = ($91|0)==(4);
   $93 = $1;
   $94 = ($93|0)==(0);
   $or$cond = $92 & $94;
   $95 = $2;
   $96 = ($95|0)==(0);
   $or$cond3 = $or$cond & $96;
   if ($or$cond3) {
    $tem = 0;
   }
  }
 }
 $97 = $ctuPos;
 $98 = $0;
 $99 = ((($98)) + 24|0);
 $100 = HEAP32[$99>>2]|0;
 $101 = (($100) + ($97)|0);
 $102 = HEAP8[$101>>0]|0;
 $103 = $102&255;
 $104 = ($103|0)<(2);
 $105 = $ctuPos;
 $106 = $0;
 $107 = ((($106)) + 24|0);
 $108 = HEAP32[$107>>2]|0;
 $109 = (($108) + ($105)|0);
 $110 = HEAP8[$109>>0]|0;
 $111 = $110&255;
 do {
  if ($104) {
   $112 = ($111|0)==(0);
   $113 = $0;
   $114 = $4;
   $115 = ((($114)) + 36|0);
   if ($112) {
    ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
    (_get_delta($113,$pos$byval_copy,$115,1)|0);
    $116 = $4;
    $117 = HEAP32[$116>>2]|0;
    $118 = ((($117)) + 100|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = HEAP32[$119>>2]|0;
    $121 = $4;
    $122 = HEAP32[$121>>2]|0;
    $123 = ((($122)) + 100|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ((($124)) + 4|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ((($pos)) + 8|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = $4;
    $130 = ((($129)) + 36|0);
    $131 = $4;
    $132 = HEAP32[$131>>2]|0;
    $133 = ((($132)) + 88|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = HEAP32[$134>>2]|0;
    $136 = ((($135)) + 4|0);
    $137 = HEAP32[$136>>2]|0;
    _getPredictFromDeltaTop_v2($120,$126,$128,$130,$137,31);
    break;
   } else {
    ;HEAP32[$pos$byval_copy4>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy4+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy4+8>>2]=HEAP32[$pos+8>>2]|0;
    (_get_delta($113,$pos$byval_copy4,$115,0)|0);
    $138 = $4;
    $139 = HEAP32[$138>>2]|0;
    $140 = ((($139)) + 100|0);
    $141 = HEAP32[$140>>2]|0;
    $142 = HEAP32[$141>>2]|0;
    $143 = $4;
    $144 = HEAP32[$143>>2]|0;
    $145 = ((($144)) + 100|0);
    $146 = HEAP32[$145>>2]|0;
    $147 = ((($146)) + 4|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = ((($pos)) + 8|0);
    $150 = HEAP32[$149>>2]|0;
    $151 = $4;
    $152 = ((($151)) + 36|0);
    $153 = $4;
    $154 = HEAP32[$153>>2]|0;
    $155 = ((($154)) + 88|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = HEAP32[$156>>2]|0;
    $158 = ((($157)) + 4|0);
    $159 = HEAP32[$158>>2]|0;
    _getPredictFromDeltaLeft_v2($142,$148,$150,$152,$159,31);
    break;
   }
  } else {
   $160 = (($111) - 2)|0;
   $161 = ((($pos)) + 8|0);
   $162 = HEAP32[$161>>2]|0;
   $163 = $4;
   $164 = HEAP32[$163>>2]|0;
   _predict_block_border($160,$162,$164,0);
  }
 } while(0);
 $165 = (_clock()|0);
 $st = $165;
 $i = 0;
 while(1) {
  $166 = $i;
  $167 = ((($pos)) + 8|0);
  $168 = HEAP32[$167>>2]|0;
  $169 = ($166|0)<($168|0);
  if (!($169)) {
   break;
  }
  $j = 0;
  while(1) {
   $170 = $j;
   $171 = ((($pos)) + 8|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ($170|0)<($172|0);
   if (!($173)) {
    break;
   }
   $174 = $1;
   $175 = HEAP32[$pos>>2]|0;
   $176 = (($174) + ($175))|0;
   $177 = $i;
   $178 = (($176) + ($177))|0;
   $179 = $4;
   $180 = HEAP32[$179>>2]|0;
   $181 = ((($180)) + 176|0);
   $182 = HEAP32[$181>>2]|0;
   $183 = ($178|0)<($182|0);
   if ($183) {
    $184 = $2;
    $185 = ((($pos)) + 4|0);
    $186 = HEAP32[$185>>2]|0;
    $187 = (($184) + ($186))|0;
    $188 = $j;
    $189 = (($187) + ($188))|0;
    $190 = $4;
    $191 = HEAP32[$190>>2]|0;
    $192 = ((($191)) + 180|0);
    $193 = HEAP32[$192>>2]|0;
    $194 = ($189|0)<($193|0);
    if ($194) {
     $195 = $i;
     $196 = ((($pos)) + 8|0);
     $197 = HEAP32[$196>>2]|0;
     $198 = Math_imul($195, $197)|0;
     $199 = $j;
     $200 = (($198) + ($199))|0;
     $201 = $4;
     $202 = HEAP32[$201>>2]|0;
     $203 = ((($202)) + 88|0);
     $204 = HEAP32[$203>>2]|0;
     $205 = HEAP32[$204>>2]|0;
     $206 = ((($205)) + 4|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = (($207) + ($200)|0);
     $209 = HEAP8[$208>>0]|0;
     $210 = (+($209&255));
     $211 = (+_round($210));
     $212 = $211;
     $213 = HEAP32[$pos>>2]|0;
     $214 = $i;
     $215 = (($213) + ($214))|0;
     $216 = $215<<6;
     $217 = ((($pos)) + 4|0);
     $218 = HEAP32[$217>>2]|0;
     $219 = (($216) + ($218))|0;
     $220 = $j;
     $221 = (($219) + ($220))|0;
     $222 = $0;
     $223 = ((($222)) + 92|0);
     $224 = HEAP32[$223>>2]|0;
     $225 = (($224) + ($221<<2)|0);
     $226 = +HEAPF32[$225>>2];
     $227 = $212 + $226;
     $228 = (_control_range($227)|0);
     $229 = $1;
     $230 = HEAP32[$pos>>2]|0;
     $231 = (($229) + ($230))|0;
     $232 = $i;
     $233 = (($231) + ($232))|0;
     $234 = $4;
     $235 = HEAP32[$234>>2]|0;
     $236 = ((($235)) + 180|0);
     $237 = HEAP32[$236>>2]|0;
     $238 = Math_imul($233, $237)|0;
     $239 = $2;
     $240 = ((($pos)) + 4|0);
     $241 = HEAP32[$240>>2]|0;
     $242 = (($239) + ($241))|0;
     $243 = $j;
     $244 = (($242) + ($243))|0;
     $245 = (($238) + ($244))|0;
     $246 = $3;
     $247 = HEAP32[$246>>2]|0;
     $248 = (($247) + ($245)|0);
     HEAP8[$248>>0] = $228;
     $249 = $1;
     $250 = HEAP32[$pos>>2]|0;
     $251 = (($249) + ($250))|0;
     $252 = $i;
     $253 = (($251) + ($252))|0;
     $254 = $4;
     $255 = HEAP32[$254>>2]|0;
     $256 = ((($255)) + 180|0);
     $257 = HEAP32[$256>>2]|0;
     $258 = Math_imul($253, $257)|0;
     $259 = $2;
     $260 = ((($pos)) + 4|0);
     $261 = HEAP32[$260>>2]|0;
     $262 = (($259) + ($261))|0;
     $263 = $j;
     $264 = (($262) + ($263))|0;
     $265 = (($258) + ($264))|0;
     $266 = $4;
     $267 = HEAP32[$266>>2]|0;
     $268 = ((($267)) + 96|0);
     $269 = HEAP32[$268>>2]|0;
     $270 = ((($269)) + 12|0);
     $271 = HEAP32[$270>>2]|0;
     $272 = (($271) + ($265)|0);
     HEAP8[$272>>0] = 1;
    }
   }
   $273 = $j;
   $274 = (($273) + 1)|0;
   $j = $274;
  }
  $275 = $i;
  $276 = (($275) + 1)|0;
  $i = $276;
 }
 $277 = (_clock()|0);
 $end = $277;
 $278 = HEAP32[592>>2]|0;
 $279 = $end;
 $280 = (($278) + ($279))|0;
 $281 = $st;
 $282 = (($280) - ($281))|0;
 HEAP32[592>>2] = $282;
 STACKTOP = sp;return;
}
function _decode_Cb($cu,$pos,$x,$y,$image_recons,$decode) {
 $cu = $cu|0;
 $pos = $pos|0;
 $x = $x|0;
 $y = $y|0;
 $image_recons = $image_recons|0;
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0.0, $379 = 0.0, $38 = 0, $380 = 0.0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0.0, $396 = 0.0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $best_predict_type = 0, $ctuPos = 0, $i = 0, $insertNum = 0, $is_top = 0, $j = 0, $pos$byval_copy = 0, $pos$byval_copy1 = 0, $pos_tem = 0, $tem = 0, $tem1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pos$byval_copy1 = sp + 76|0;
 $pos$byval_copy = sp + 64|0;
 $pos_tem = sp + 24|0;
 $0 = $cu;
 $1 = $x;
 $2 = $y;
 $3 = $image_recons;
 $4 = $decode;
 ;HEAP32[$pos_tem>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos_tem+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos_tem+8>>2]=HEAP32[$pos+8>>2]|0;
 $5 = HEAP32[$pos>>2]|0;
 $6 = (($5|0) / 4)&-1;
 $7 = $6<<4;
 $8 = ((($pos)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9|0) / 4)&-1;
 $11 = (($7) + ($10))|0;
 $ctuPos = $11;
 $best_predict_type = 0;
 $is_top = 0;
 $insertNum = 0;
 $12 = HEAP32[$pos>>2]|0;
 $13 = (($12|0) / 2)&-1;
 HEAP32[$pos_tem>>2] = $13;
 $14 = ((($pos)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15|0) / 2)&-1;
 $17 = ((($pos_tem)) + 4|0);
 HEAP32[$17>>2] = $16;
 $18 = ((($pos)) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($19|0) / 2)&-1;
 $21 = ((($pos_tem)) + 8|0);
 HEAP32[$21>>2] = $20;
 $22 = $ctuPos;
 $23 = $0;
 $24 = ((($23)) + 24|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = (($25) + ($22)|0);
 $27 = HEAP8[$26>>0]|0;
 $28 = $27&255;
 $best_predict_type = $28;
 $29 = ((($pos_tem)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = $1;
 $32 = (($31|0) / 2)&-1;
 $33 = $2;
 $34 = (($33|0) / 2)&-1;
 $35 = HEAP32[$pos_tem>>2]|0;
 $36 = ((($pos_tem)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = $4;
 $39 = HEAP32[$38>>2]|0;
 _get_top_and_left_Cb_border($30,$32,$34,$35,$37,$39);
 $40 = $best_predict_type;
 $41 = $4;
 $42 = HEAP32[$41>>2]|0;
 _get_CbCr_predict_info($40,$42);
 $43 = HEAP32[$pos>>2]|0;
 $44 = ($43|0)==(8);
 if ($44) {
  $45 = ((($pos)) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = ($46|0)==(16);
  if ($47) {
   $48 = ((($pos)) + 8|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = ($49|0)==(8);
   if ($50) {
    $tem = 0;
   }
  }
 }
 $51 = ((($pos)) + 8|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ($52|0)==(16);
 if ($53) {
  label = 8;
 } else {
  $54 = ((($pos)) + 8|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ($55|0)==(32);
  if ($56) {
   label = 8;
  } else {
   $57 = ((($pos)) + 8|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ($58|0)==(64);
   if ($59) {
    label = 8;
   }
  }
 }
 if ((label|0) == 8) {
  $60 = $4;
  $61 = HEAP32[$60>>2]|0;
  $62 = ((($61)) + 100|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = ((($63)) + 32|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = ((($pos)) + 8|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = (($67|0) / 2)&-1;
  _weak_filter_reference($65,$68);
  $69 = $4;
  $70 = HEAP32[$69>>2]|0;
  $71 = ((($70)) + 100|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = ((($72)) + 36|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ((($pos)) + 8|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = (($76|0) / 2)&-1;
  _weak_filter_reference($74,$77);
 }
 $78 = ((($pos)) + 8|0);
 $79 = HEAP32[$78>>2]|0;
 $80 = ($79|0)==(64);
 if ($80) {
  $81 = $4;
  $82 = HEAP32[$81>>2]|0;
  $83 = ((($82)) + 100|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ((($84)) + 32|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = $4;
  $88 = HEAP32[$87>>2]|0;
  $89 = ((($88)) + 100|0);
  $90 = HEAP32[$89>>2]|0;
  $91 = ((($90)) + 36|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = ((($pos)) + 8|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (($94|0) / 2)&-1;
  $96 = (_judge_strong_filter($86,$92,$95)|0);
  $97 = $96&255;
  $98 = ($97|0)==(1);
  if ($98) {
   $99 = $4;
   $100 = HEAP32[$99>>2]|0;
   $101 = ((($100)) + 100|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = ((($102)) + 32|0);
   $104 = HEAP32[$103>>2]|0;
   $105 = ((($pos)) + 8|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = (($106|0) / 2)&-1;
   _strong_filter_reference($104,$107);
   $108 = $4;
   $109 = HEAP32[$108>>2]|0;
   $110 = ((($109)) + 100|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = ((($pos)) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = (($115|0) / 2)&-1;
   _strong_filter_reference($113,$116);
  }
 }
 $117 = $ctuPos;
 $118 = $0;
 $119 = ((($118)) + 32|0);
 $120 = HEAP32[$119>>2]|0;
 $121 = (($120) + ($117)|0);
 $122 = HEAP8[$121>>0]|0;
 $123 = $122&255;
 $124 = ($123|0)==(4);
 $125 = $ctuPos;
 $126 = $0;
 $127 = ((($126)) + 32|0);
 $128 = HEAP32[$127>>2]|0;
 $129 = (($128) + ($125)|0);
 $130 = HEAP8[$129>>0]|0;
 $131 = $130&255;
 $132 = $4;
 $133 = HEAP32[$132>>2]|0;
 $134 = ((($133)) + 412|0);
 $135 = HEAP32[$134>>2]|0;
 $136 = (($135) + ($131<<2)|0);
 $137 = HEAP32[$136>>2]|0;
 L16: do {
  if ($124) {
   $138 = ($137|0)==(0);
   if ($138) {
    $139 = $0;
    $140 = $4;
    $141 = ((($140)) + 36|0);
    ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
    (_get_delta($139,$pos$byval_copy,$141,1)|0);
    $142 = $4;
    $143 = HEAP32[$142>>2]|0;
    $144 = ((($143)) + 100|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = ((($145)) + 8|0);
    $147 = HEAP32[$146>>2]|0;
    $148 = ((($pos)) + 8|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = $4;
    $151 = ((($150)) + 36|0);
    $152 = $4;
    $153 = HEAP32[$152>>2]|0;
    $154 = ((($153)) + 88|0);
    $155 = HEAP32[$154>>2]|0;
    $156 = HEAP32[$155>>2]|0;
    $157 = ((($156)) + 4|0);
    $158 = HEAP32[$157>>2]|0;
    _getPredictFromDeltaTop($147,$149,$151,$158,31);
    $159 = $4;
    $160 = HEAP32[$159>>2]|0;
    $161 = ((($160)) + 100|0);
    $162 = HEAP32[$161>>2]|0;
    $163 = ((($162)) + 8|0);
    $164 = HEAP32[$163>>2]|0;
    $165 = $4;
    $166 = HEAP32[$165>>2]|0;
    $167 = ((($166)) + 100|0);
    $168 = HEAP32[$167>>2]|0;
    $169 = ((($168)) + 12|0);
    $170 = HEAP32[$169>>2]|0;
    $171 = ((($pos)) + 8|0);
    $172 = HEAP32[$171>>2]|0;
    $173 = $4;
    $174 = ((($173)) + 36|0);
    $175 = $4;
    $176 = HEAP32[$175>>2]|0;
    $177 = ((($176)) + 88|0);
    $178 = HEAP32[$177>>2]|0;
    $179 = HEAP32[$178>>2]|0;
    $180 = ((($179)) + 4|0);
    $181 = HEAP32[$180>>2]|0;
    _getPredictFromDeltaTop_v2($164,$170,$172,$174,$181,31);
    $i = 0;
    while(1) {
     $182 = $i;
     $183 = ((($pos_tem)) + 8|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($182|0)<($184|0);
     if (!($185)) {
      break L16;
     }
     $j = 0;
     while(1) {
      $186 = $j;
      $187 = ((($pos_tem)) + 8|0);
      $188 = HEAP32[$187>>2]|0;
      $189 = ($186|0)<($188|0);
      $190 = $i;
      if (!($189)) {
       break;
      }
      $191 = $190<<1;
      $192 = ((($pos_tem)) + 8|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = Math_imul($191, $193)|0;
      $195 = $194<<1;
      $196 = $j;
      $197 = $196<<1;
      $198 = (($195) + ($197))|0;
      $199 = $4;
      $200 = HEAP32[$199>>2]|0;
      $201 = ((($200)) + 88|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = HEAP32[$202>>2]|0;
      $204 = ((($203)) + 4|0);
      $205 = HEAP32[$204>>2]|0;
      $206 = (($205) + ($198)|0);
      $207 = HEAP8[$206>>0]|0;
      $208 = $i;
      $209 = ((($pos_tem)) + 8|0);
      $210 = HEAP32[$209>>2]|0;
      $211 = Math_imul($208, $210)|0;
      $212 = $j;
      $213 = (($211) + ($212))|0;
      $214 = $4;
      $215 = HEAP32[$214>>2]|0;
      $216 = ((($215)) + 88|0);
      $217 = HEAP32[$216>>2]|0;
      $218 = HEAP32[$217>>2]|0;
      $219 = ((($218)) + 4|0);
      $220 = HEAP32[$219>>2]|0;
      $221 = (($220) + ($213)|0);
      HEAP8[$221>>0] = $207;
      $222 = $j;
      $223 = (($222) + 1)|0;
      $j = $223;
     }
     $224 = (($190) + 1)|0;
     $i = $224;
    }
   }
   $225 = $ctuPos;
   $226 = $0;
   $227 = ((($226)) + 32|0);
   $228 = HEAP32[$227>>2]|0;
   $229 = (($228) + ($225)|0);
   $230 = HEAP8[$229>>0]|0;
   $231 = $230&255;
   $232 = $4;
   $233 = HEAP32[$232>>2]|0;
   $234 = ((($233)) + 412|0);
   $235 = HEAP32[$234>>2]|0;
   $236 = (($235) + ($231<<2)|0);
   $237 = HEAP32[$236>>2]|0;
   $238 = ($237|0)==(1);
   if (!($238)) {
    $308 = $ctuPos;
    $309 = $0;
    $310 = ((($309)) + 32|0);
    $311 = HEAP32[$310>>2]|0;
    $312 = (($311) + ($308)|0);
    $313 = HEAP8[$312>>0]|0;
    $314 = $313&255;
    $315 = $4;
    $316 = HEAP32[$315>>2]|0;
    $317 = ((($316)) + 412|0);
    $318 = HEAP32[$317>>2]|0;
    $319 = (($318) + ($314<<2)|0);
    $320 = HEAP32[$319>>2]|0;
    $321 = (($320) - 2)|0;
    $322 = ((($pos_tem)) + 8|0);
    $323 = HEAP32[$322>>2]|0;
    $324 = $4;
    $325 = HEAP32[$324>>2]|0;
    _predict_block_border_Cb($321,$323,$325,0);
    break;
   }
   $239 = $0;
   $240 = $4;
   $241 = ((($240)) + 36|0);
   ;HEAP32[$pos$byval_copy1>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy1+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy1+8>>2]=HEAP32[$pos+8>>2]|0;
   (_get_delta($239,$pos$byval_copy1,$241,0)|0);
   $242 = $4;
   $243 = HEAP32[$242>>2]|0;
   $244 = ((($243)) + 100|0);
   $245 = HEAP32[$244>>2]|0;
   $246 = ((($245)) + 8|0);
   $247 = HEAP32[$246>>2]|0;
   $248 = $4;
   $249 = HEAP32[$248>>2]|0;
   $250 = ((($249)) + 100|0);
   $251 = HEAP32[$250>>2]|0;
   $252 = ((($251)) + 12|0);
   $253 = HEAP32[$252>>2]|0;
   $254 = ((($pos)) + 8|0);
   $255 = HEAP32[$254>>2]|0;
   $256 = $4;
   $257 = ((($256)) + 36|0);
   $258 = $4;
   $259 = HEAP32[$258>>2]|0;
   $260 = ((($259)) + 88|0);
   $261 = HEAP32[$260>>2]|0;
   $262 = HEAP32[$261>>2]|0;
   $263 = ((($262)) + 4|0);
   $264 = HEAP32[$263>>2]|0;
   _getPredictFromDeltaLeft_v2($247,$253,$255,$257,$264,31);
   $i = 0;
   while(1) {
    $265 = $i;
    $266 = ((($pos_tem)) + 8|0);
    $267 = HEAP32[$266>>2]|0;
    $268 = ($265|0)<($267|0);
    if (!($268)) {
     break L16;
    }
    $j = 0;
    while(1) {
     $269 = $j;
     $270 = ((($pos_tem)) + 8|0);
     $271 = HEAP32[$270>>2]|0;
     $272 = ($269|0)<($271|0);
     $273 = $i;
     if (!($272)) {
      break;
     }
     $274 = $273<<1;
     $275 = ((($pos_tem)) + 8|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = Math_imul($274, $276)|0;
     $278 = $277<<1;
     $279 = $j;
     $280 = $279<<1;
     $281 = (($278) + ($280))|0;
     $282 = $4;
     $283 = HEAP32[$282>>2]|0;
     $284 = ((($283)) + 88|0);
     $285 = HEAP32[$284>>2]|0;
     $286 = HEAP32[$285>>2]|0;
     $287 = ((($286)) + 4|0);
     $288 = HEAP32[$287>>2]|0;
     $289 = (($288) + ($281)|0);
     $290 = HEAP8[$289>>0]|0;
     $291 = $i;
     $292 = ((($pos_tem)) + 8|0);
     $293 = HEAP32[$292>>2]|0;
     $294 = Math_imul($291, $293)|0;
     $295 = $j;
     $296 = (($294) + ($295))|0;
     $297 = $4;
     $298 = HEAP32[$297>>2]|0;
     $299 = ((($298)) + 88|0);
     $300 = HEAP32[$299>>2]|0;
     $301 = HEAP32[$300>>2]|0;
     $302 = ((($301)) + 4|0);
     $303 = HEAP32[$302>>2]|0;
     $304 = (($303) + ($296)|0);
     HEAP8[$304>>0] = $290;
     $305 = $j;
     $306 = (($305) + 1)|0;
     $j = $306;
    }
    $307 = (($273) + 1)|0;
    $i = $307;
   }
  } else {
   $326 = ((($pos_tem)) + 8|0);
   $327 = HEAP32[$326>>2]|0;
   $328 = $4;
   $329 = HEAP32[$328>>2]|0;
   _predict_block_border_Cb($137,$327,$329,0);
  }
 } while(0);
 $i = 0;
 while(1) {
  $330 = $i;
  $331 = ((($pos_tem)) + 8|0);
  $332 = HEAP32[$331>>2]|0;
  $333 = ($330|0)<($332|0);
  if (!($333)) {
   break;
  }
  $j = 0;
  while(1) {
   $334 = $j;
   $335 = ((($pos_tem)) + 8|0);
   $336 = HEAP32[$335>>2]|0;
   $337 = ($334|0)<($336|0);
   if (!($337)) {
    break;
   }
   $338 = $1;
   $339 = (($338|0) / 2)&-1;
   $340 = HEAP32[$pos_tem>>2]|0;
   $341 = (($339) + ($340))|0;
   $342 = $i;
   $343 = (($341) + ($342))|0;
   $344 = $4;
   $345 = HEAP32[$344>>2]|0;
   $346 = ((($345)) + 176|0);
   $347 = HEAP32[$346>>2]|0;
   $348 = (($347|0) / 2)&-1;
   $349 = ($343|0)<($348|0);
   if ($349) {
    $350 = $2;
    $351 = (($350|0) / 2)&-1;
    $352 = ((($pos_tem)) + 4|0);
    $353 = HEAP32[$352>>2]|0;
    $354 = (($351) + ($353))|0;
    $355 = $j;
    $356 = (($354) + ($355))|0;
    $357 = $4;
    $358 = HEAP32[$357>>2]|0;
    $359 = ((($358)) + 180|0);
    $360 = HEAP32[$359>>2]|0;
    $361 = (($360|0) / 2)&-1;
    $362 = ($356|0)<($361|0);
    if ($362) {
     $363 = $i;
     $364 = ((($pos_tem)) + 8|0);
     $365 = HEAP32[$364>>2]|0;
     $366 = Math_imul($363, $365)|0;
     $367 = $j;
     $368 = (($366) + ($367))|0;
     $369 = $4;
     $370 = HEAP32[$369>>2]|0;
     $371 = ((($370)) + 88|0);
     $372 = HEAP32[$371>>2]|0;
     $373 = HEAP32[$372>>2]|0;
     $374 = ((($373)) + 4|0);
     $375 = HEAP32[$374>>2]|0;
     $376 = (($375) + ($368)|0);
     $377 = HEAP8[$376>>0]|0;
     $378 = (+($377&255));
     $379 = (+_round($378));
     $380 = $379;
     $381 = HEAP32[$pos_tem>>2]|0;
     $382 = $i;
     $383 = (($381) + ($382))|0;
     $384 = $383<<6;
     $385 = (($384|0) / 2)&-1;
     $386 = ((($pos_tem)) + 4|0);
     $387 = HEAP32[$386>>2]|0;
     $388 = (($385) + ($387))|0;
     $389 = $j;
     $390 = (($388) + ($389))|0;
     $391 = $0;
     $392 = ((($391)) + 96|0);
     $393 = HEAP32[$392>>2]|0;
     $394 = (($393) + ($390<<2)|0);
     $395 = +HEAPF32[$394>>2];
     $396 = $380 + $395;
     $397 = (_control_range($396)|0);
     $398 = $1;
     $399 = (($398|0) / 2)&-1;
     $400 = HEAP32[$pos_tem>>2]|0;
     $401 = (($399) + ($400))|0;
     $402 = $i;
     $403 = (($401) + ($402))|0;
     $404 = $4;
     $405 = HEAP32[$404>>2]|0;
     $406 = ((($405)) + 180|0);
     $407 = HEAP32[$406>>2]|0;
     $408 = Math_imul($403, $407)|0;
     $409 = (($408|0) / 2)&-1;
     $410 = $2;
     $411 = (($410|0) / 2)&-1;
     $412 = ((($pos_tem)) + 4|0);
     $413 = HEAP32[$412>>2]|0;
     $414 = (($411) + ($413))|0;
     $415 = $j;
     $416 = (($414) + ($415))|0;
     $417 = (($409) + ($416))|0;
     $418 = $3;
     $419 = ((($418)) + 4|0);
     $420 = HEAP32[$419>>2]|0;
     $421 = (($420) + ($417)|0);
     HEAP8[$421>>0] = $397;
     $422 = $1;
     $423 = (($422|0) / 2)&-1;
     $424 = HEAP32[$pos_tem>>2]|0;
     $425 = (($423) + ($424))|0;
     $426 = $i;
     $427 = (($425) + ($426))|0;
     $428 = $4;
     $429 = HEAP32[$428>>2]|0;
     $430 = ((($429)) + 180|0);
     $431 = HEAP32[$430>>2]|0;
     $432 = Math_imul($427, $431)|0;
     $433 = (($432|0) / 2)&-1;
     $434 = $2;
     $435 = (($434|0) / 2)&-1;
     $436 = ((($pos_tem)) + 4|0);
     $437 = HEAP32[$436>>2]|0;
     $438 = (($435) + ($437))|0;
     $439 = $j;
     $440 = (($438) + ($439))|0;
     $441 = (($433) + ($440))|0;
     $442 = $4;
     $443 = HEAP32[$442>>2]|0;
     $444 = ((($443)) + 96|0);
     $445 = HEAP32[$444>>2]|0;
     $446 = ((($445)) + 16|0);
     $447 = HEAP32[$446>>2]|0;
     $448 = (($447) + ($441)|0);
     HEAP8[$448>>0] = 1;
     $449 = $1;
     $450 = (($449|0) / 2)&-1;
     $451 = HEAP32[$pos_tem>>2]|0;
     $452 = (($450) + ($451))|0;
     $453 = $i;
     $454 = (($452) + ($453))|0;
     $455 = $4;
     $456 = HEAP32[$455>>2]|0;
     $457 = ((($456)) + 180|0);
     $458 = HEAP32[$457>>2]|0;
     $459 = Math_imul($454, $458)|0;
     $460 = (($459|0) / 2)&-1;
     $461 = $2;
     $462 = (($461|0) / 2)&-1;
     $463 = ((($pos_tem)) + 4|0);
     $464 = HEAP32[$463>>2]|0;
     $465 = (($462) + ($464))|0;
     $466 = $j;
     $467 = (($465) + ($466))|0;
     $468 = (($460) + ($467))|0;
     $469 = $4;
     $470 = ((($469)) + 164|0);
     $471 = HEAP32[$470>>2]|0;
     $472 = ((($471)) + 4|0);
     $473 = HEAP32[$472>>2]|0;
     $474 = (($473) + ($468)|0);
     $475 = HEAP8[$474>>0]|0;
     $476 = $475&255;
     $477 = $1;
     $478 = (($477|0) / 2)&-1;
     $479 = HEAP32[$pos_tem>>2]|0;
     $480 = (($478) + ($479))|0;
     $481 = $i;
     $482 = (($480) + ($481))|0;
     $483 = $4;
     $484 = HEAP32[$483>>2]|0;
     $485 = ((($484)) + 180|0);
     $486 = HEAP32[$485>>2]|0;
     $487 = Math_imul($482, $486)|0;
     $488 = (($487|0) / 2)&-1;
     $489 = $2;
     $490 = (($489|0) / 2)&-1;
     $491 = ((($pos_tem)) + 4|0);
     $492 = HEAP32[$491>>2]|0;
     $493 = (($490) + ($492))|0;
     $494 = $j;
     $495 = (($493) + ($494))|0;
     $496 = (($488) + ($495))|0;
     $497 = $3;
     $498 = ((($497)) + 4|0);
     $499 = HEAP32[$498>>2]|0;
     $500 = (($499) + ($496)|0);
     $501 = HEAP8[$500>>0]|0;
     $502 = $501&255;
     $503 = ($476|0)!=($502|0);
     if ($503) {
      $tem1 = 10;
     }
    }
   }
   $504 = $j;
   $505 = (($504) + 1)|0;
   $j = $505;
  }
  $506 = $i;
  $507 = (($506) + 1)|0;
  $i = $507;
 }
 STACKTOP = sp;return;
}
function _decode_Cr($cu,$pos,$x,$y,$image_recons,$decode) {
 $cu = $cu|0;
 $pos = $pos|0;
 $x = $x|0;
 $y = $y|0;
 $image_recons = $image_recons|0;
 $decode = $decode|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0.0, $366 = 0.0, $367 = 0.0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0.0, $383 = 0.0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $best_predict_type = 0, $ctuPos = 0, $i = 0, $insertNum = 0, $is_top = 0;
 var $j = 0, $or$cond = 0, $or$cond3 = 0, $pos$byval_copy = 0, $pos$byval_copy4 = 0, $pos_tem = 0, $tem = 0, $tem1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pos$byval_copy4 = sp + 76|0;
 $pos$byval_copy = sp + 64|0;
 $pos_tem = sp + 24|0;
 $0 = $cu;
 $1 = $x;
 $2 = $y;
 $3 = $image_recons;
 $4 = $decode;
 ;HEAP32[$pos_tem>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos_tem+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos_tem+8>>2]=HEAP32[$pos+8>>2]|0;
 $5 = HEAP32[$pos>>2]|0;
 $6 = (($5|0) / 4)&-1;
 $7 = $6<<4;
 $8 = ((($pos)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9|0) / 4)&-1;
 $11 = (($7) + ($10))|0;
 $ctuPos = $11;
 $best_predict_type = 0;
 $is_top = 0;
 $insertNum = 0;
 $12 = HEAP32[$pos>>2]|0;
 $13 = (($12|0) / 2)&-1;
 HEAP32[$pos_tem>>2] = $13;
 $14 = ((($pos)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15|0) / 2)&-1;
 $17 = ((($pos_tem)) + 4|0);
 HEAP32[$17>>2] = $16;
 $18 = ((($pos)) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($19|0) / 2)&-1;
 $21 = ((($pos_tem)) + 8|0);
 HEAP32[$21>>2] = $20;
 $22 = $ctuPos;
 $23 = $0;
 $24 = ((($23)) + 24|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = (($25) + ($22)|0);
 $27 = HEAP8[$26>>0]|0;
 $28 = $27&255;
 $best_predict_type = $28;
 $29 = ((($pos_tem)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = $1;
 $32 = (($31|0) / 2)&-1;
 $33 = $2;
 $34 = (($33|0) / 2)&-1;
 $35 = HEAP32[$pos_tem>>2]|0;
 $36 = ((($pos_tem)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = $4;
 $39 = HEAP32[$38>>2]|0;
 _get_top_and_left_Cr_border($30,$32,$34,$35,$37,$39);
 $40 = $best_predict_type;
 $41 = $4;
 $42 = HEAP32[$41>>2]|0;
 _get_CbCr_predict_info($40,$42);
 $43 = ((($pos)) + 8|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ($44|0)==(16);
 if ($45) {
  label = 4;
 } else {
  $46 = ((($pos)) + 8|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = ($47|0)==(32);
  if ($48) {
   label = 4;
  } else {
   $49 = ((($pos)) + 8|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($50|0)==(64);
   if ($51) {
    label = 4;
   }
  }
 }
 if ((label|0) == 4) {
  $52 = $4;
  $53 = HEAP32[$52>>2]|0;
  $54 = ((($53)) + 100|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ((($55)) + 40|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ((($pos)) + 8|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = (($59|0) / 2)&-1;
  _weak_filter_reference($57,$60);
  $61 = $4;
  $62 = HEAP32[$61>>2]|0;
  $63 = ((($62)) + 100|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = ((($64)) + 44|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($pos)) + 8|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = (($68|0) / 2)&-1;
  _weak_filter_reference($66,$69);
 }
 $70 = ((($pos)) + 8|0);
 $71 = HEAP32[$70>>2]|0;
 $72 = ($71|0)==(64);
 if ($72) {
  $73 = $4;
  $74 = HEAP32[$73>>2]|0;
  $75 = ((($74)) + 100|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($76)) + 40|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = $4;
  $80 = HEAP32[$79>>2]|0;
  $81 = ((($80)) + 100|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = ((($82)) + 44|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ((($pos)) + 8|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = (($86|0) / 2)&-1;
  $88 = (_judge_strong_filter($78,$84,$87)|0);
  $89 = $88&255;
  $90 = ($89|0)==(1);
  if ($90) {
   $91 = $4;
   $92 = HEAP32[$91>>2]|0;
   $93 = ((($92)) + 100|0);
   $94 = HEAP32[$93>>2]|0;
   $95 = ((($94)) + 40|0);
   $96 = HEAP32[$95>>2]|0;
   $97 = ((($pos)) + 8|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = (($98|0) / 2)&-1;
   _strong_filter_reference($96,$99);
   $100 = $4;
   $101 = HEAP32[$100>>2]|0;
   $102 = ((($101)) + 100|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = ((($103)) + 44|0);
   $105 = HEAP32[$104>>2]|0;
   $106 = ((($pos)) + 8|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (($107|0) / 2)&-1;
   _strong_filter_reference($105,$108);
  }
 }
 $109 = HEAP32[$pos>>2]|0;
 $110 = ($109|0)==(4);
 if ($110) {
  $111 = ((($pos)) + 4|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ($112|0)==(16);
  if ($113) {
   $114 = ((($pos)) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = ($115|0)==(4);
   $117 = $1;
   $118 = ($117|0)==(128);
   $or$cond = $116 & $118;
   $119 = $2;
   $120 = ($119|0)==(256);
   $or$cond3 = $or$cond & $120;
   if ($or$cond3) {
    $tem = 10;
   }
  }
 }
 $121 = $ctuPos;
 $122 = $0;
 $123 = ((($122)) + 32|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = (($124) + ($121)|0);
 $126 = HEAP8[$125>>0]|0;
 $127 = $126&255;
 $128 = ($127|0)==(4);
 $129 = $ctuPos;
 $130 = $0;
 $131 = ((($130)) + 32|0);
 $132 = HEAP32[$131>>2]|0;
 $133 = (($132) + ($129)|0);
 $134 = HEAP8[$133>>0]|0;
 $135 = $134&255;
 $136 = $4;
 $137 = HEAP32[$136>>2]|0;
 $138 = ((($137)) + 412|0);
 $139 = HEAP32[$138>>2]|0;
 $140 = (($139) + ($135<<2)|0);
 $141 = HEAP32[$140>>2]|0;
 L16: do {
  if ($128) {
   $142 = ($141|0)==(0);
   if ($142) {
    $143 = $0;
    $144 = $4;
    $145 = ((($144)) + 36|0);
    ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
    (_get_delta($143,$pos$byval_copy,$145,1)|0);
    $146 = $4;
    $147 = HEAP32[$146>>2]|0;
    $148 = ((($147)) + 100|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ((($149)) + 16|0);
    $151 = HEAP32[$150>>2]|0;
    $152 = $4;
    $153 = HEAP32[$152>>2]|0;
    $154 = ((($153)) + 100|0);
    $155 = HEAP32[$154>>2]|0;
    $156 = ((($155)) + 20|0);
    $157 = HEAP32[$156>>2]|0;
    $158 = ((($pos)) + 8|0);
    $159 = HEAP32[$158>>2]|0;
    $160 = $4;
    $161 = ((($160)) + 36|0);
    $162 = $4;
    $163 = HEAP32[$162>>2]|0;
    $164 = ((($163)) + 88|0);
    $165 = HEAP32[$164>>2]|0;
    $166 = HEAP32[$165>>2]|0;
    $167 = ((($166)) + 4|0);
    $168 = HEAP32[$167>>2]|0;
    _getPredictFromDeltaTop_v2($151,$157,$159,$161,$168,31);
    $i = 0;
    while(1) {
     $169 = $i;
     $170 = ((($pos_tem)) + 8|0);
     $171 = HEAP32[$170>>2]|0;
     $172 = ($169|0)<($171|0);
     if (!($172)) {
      break L16;
     }
     $j = 0;
     while(1) {
      $173 = $j;
      $174 = ((($pos_tem)) + 8|0);
      $175 = HEAP32[$174>>2]|0;
      $176 = ($173|0)<($175|0);
      $177 = $i;
      if (!($176)) {
       break;
      }
      $178 = $177<<1;
      $179 = ((($pos_tem)) + 8|0);
      $180 = HEAP32[$179>>2]|0;
      $181 = Math_imul($178, $180)|0;
      $182 = $181<<1;
      $183 = $j;
      $184 = $183<<1;
      $185 = (($182) + ($184))|0;
      $186 = $4;
      $187 = HEAP32[$186>>2]|0;
      $188 = ((($187)) + 88|0);
      $189 = HEAP32[$188>>2]|0;
      $190 = HEAP32[$189>>2]|0;
      $191 = ((($190)) + 4|0);
      $192 = HEAP32[$191>>2]|0;
      $193 = (($192) + ($185)|0);
      $194 = HEAP8[$193>>0]|0;
      $195 = $i;
      $196 = ((($pos_tem)) + 8|0);
      $197 = HEAP32[$196>>2]|0;
      $198 = Math_imul($195, $197)|0;
      $199 = $j;
      $200 = (($198) + ($199))|0;
      $201 = $4;
      $202 = HEAP32[$201>>2]|0;
      $203 = ((($202)) + 88|0);
      $204 = HEAP32[$203>>2]|0;
      $205 = HEAP32[$204>>2]|0;
      $206 = ((($205)) + 4|0);
      $207 = HEAP32[$206>>2]|0;
      $208 = (($207) + ($200)|0);
      HEAP8[$208>>0] = $194;
      $209 = $j;
      $210 = (($209) + 1)|0;
      $j = $210;
     }
     $211 = (($177) + 1)|0;
     $i = $211;
    }
   }
   $212 = $ctuPos;
   $213 = $0;
   $214 = ((($213)) + 32|0);
   $215 = HEAP32[$214>>2]|0;
   $216 = (($215) + ($212)|0);
   $217 = HEAP8[$216>>0]|0;
   $218 = $217&255;
   $219 = $4;
   $220 = HEAP32[$219>>2]|0;
   $221 = ((($220)) + 412|0);
   $222 = HEAP32[$221>>2]|0;
   $223 = (($222) + ($218<<2)|0);
   $224 = HEAP32[$223>>2]|0;
   $225 = ($224|0)==(1);
   if (!($225)) {
    $295 = $ctuPos;
    $296 = $0;
    $297 = ((($296)) + 32|0);
    $298 = HEAP32[$297>>2]|0;
    $299 = (($298) + ($295)|0);
    $300 = HEAP8[$299>>0]|0;
    $301 = $300&255;
    $302 = $4;
    $303 = HEAP32[$302>>2]|0;
    $304 = ((($303)) + 412|0);
    $305 = HEAP32[$304>>2]|0;
    $306 = (($305) + ($301<<2)|0);
    $307 = HEAP32[$306>>2]|0;
    $308 = (($307) - 2)|0;
    $309 = ((($pos_tem)) + 8|0);
    $310 = HEAP32[$309>>2]|0;
    $311 = $4;
    $312 = HEAP32[$311>>2]|0;
    _predict_block_border_Cr($308,$310,$312,0);
    break;
   }
   $226 = $0;
   $227 = $4;
   $228 = ((($227)) + 36|0);
   ;HEAP32[$pos$byval_copy4>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy4+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy4+8>>2]=HEAP32[$pos+8>>2]|0;
   (_get_delta($226,$pos$byval_copy4,$228,0)|0);
   $229 = $4;
   $230 = HEAP32[$229>>2]|0;
   $231 = ((($230)) + 100|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = ((($232)) + 16|0);
   $234 = HEAP32[$233>>2]|0;
   $235 = $4;
   $236 = HEAP32[$235>>2]|0;
   $237 = ((($236)) + 100|0);
   $238 = HEAP32[$237>>2]|0;
   $239 = ((($238)) + 20|0);
   $240 = HEAP32[$239>>2]|0;
   $241 = ((($pos)) + 8|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = $4;
   $244 = ((($243)) + 36|0);
   $245 = $4;
   $246 = HEAP32[$245>>2]|0;
   $247 = ((($246)) + 88|0);
   $248 = HEAP32[$247>>2]|0;
   $249 = HEAP32[$248>>2]|0;
   $250 = ((($249)) + 4|0);
   $251 = HEAP32[$250>>2]|0;
   _getPredictFromDeltaLeft_v2($234,$240,$242,$244,$251,31);
   $i = 0;
   while(1) {
    $252 = $i;
    $253 = ((($pos_tem)) + 8|0);
    $254 = HEAP32[$253>>2]|0;
    $255 = ($252|0)<($254|0);
    if (!($255)) {
     break L16;
    }
    $j = 0;
    while(1) {
     $256 = $j;
     $257 = ((($pos_tem)) + 8|0);
     $258 = HEAP32[$257>>2]|0;
     $259 = ($256|0)<($258|0);
     $260 = $i;
     if (!($259)) {
      break;
     }
     $261 = $260<<1;
     $262 = ((($pos_tem)) + 8|0);
     $263 = HEAP32[$262>>2]|0;
     $264 = Math_imul($261, $263)|0;
     $265 = $264<<1;
     $266 = $j;
     $267 = $266<<1;
     $268 = (($265) + ($267))|0;
     $269 = $4;
     $270 = HEAP32[$269>>2]|0;
     $271 = ((($270)) + 88|0);
     $272 = HEAP32[$271>>2]|0;
     $273 = HEAP32[$272>>2]|0;
     $274 = ((($273)) + 4|0);
     $275 = HEAP32[$274>>2]|0;
     $276 = (($275) + ($268)|0);
     $277 = HEAP8[$276>>0]|0;
     $278 = $i;
     $279 = ((($pos_tem)) + 8|0);
     $280 = HEAP32[$279>>2]|0;
     $281 = Math_imul($278, $280)|0;
     $282 = $j;
     $283 = (($281) + ($282))|0;
     $284 = $4;
     $285 = HEAP32[$284>>2]|0;
     $286 = ((($285)) + 88|0);
     $287 = HEAP32[$286>>2]|0;
     $288 = HEAP32[$287>>2]|0;
     $289 = ((($288)) + 4|0);
     $290 = HEAP32[$289>>2]|0;
     $291 = (($290) + ($283)|0);
     HEAP8[$291>>0] = $277;
     $292 = $j;
     $293 = (($292) + 1)|0;
     $j = $293;
    }
    $294 = (($260) + 1)|0;
    $i = $294;
   }
  } else {
   $313 = ((($pos_tem)) + 8|0);
   $314 = HEAP32[$313>>2]|0;
   $315 = $4;
   $316 = HEAP32[$315>>2]|0;
   _predict_block_border_Cr($141,$314,$316,0);
  }
 } while(0);
 $i = 0;
 while(1) {
  $317 = $i;
  $318 = ((($pos_tem)) + 8|0);
  $319 = HEAP32[$318>>2]|0;
  $320 = ($317|0)<($319|0);
  if (!($320)) {
   break;
  }
  $j = 0;
  while(1) {
   $321 = $j;
   $322 = ((($pos_tem)) + 8|0);
   $323 = HEAP32[$322>>2]|0;
   $324 = ($321|0)<($323|0);
   if (!($324)) {
    break;
   }
   $325 = $1;
   $326 = (($325|0) / 2)&-1;
   $327 = HEAP32[$pos_tem>>2]|0;
   $328 = (($326) + ($327))|0;
   $329 = $i;
   $330 = (($328) + ($329))|0;
   $331 = $4;
   $332 = HEAP32[$331>>2]|0;
   $333 = ((($332)) + 176|0);
   $334 = HEAP32[$333>>2]|0;
   $335 = (($334|0) / 2)&-1;
   $336 = ($330|0)<($335|0);
   if ($336) {
    $337 = $2;
    $338 = (($337|0) / 2)&-1;
    $339 = ((($pos_tem)) + 4|0);
    $340 = HEAP32[$339>>2]|0;
    $341 = (($338) + ($340))|0;
    $342 = $j;
    $343 = (($341) + ($342))|0;
    $344 = $4;
    $345 = HEAP32[$344>>2]|0;
    $346 = ((($345)) + 180|0);
    $347 = HEAP32[$346>>2]|0;
    $348 = (($347|0) / 2)&-1;
    $349 = ($343|0)<($348|0);
    if ($349) {
     $350 = $i;
     $351 = ((($pos_tem)) + 8|0);
     $352 = HEAP32[$351>>2]|0;
     $353 = Math_imul($350, $352)|0;
     $354 = $j;
     $355 = (($353) + ($354))|0;
     $356 = $4;
     $357 = HEAP32[$356>>2]|0;
     $358 = ((($357)) + 88|0);
     $359 = HEAP32[$358>>2]|0;
     $360 = HEAP32[$359>>2]|0;
     $361 = ((($360)) + 4|0);
     $362 = HEAP32[$361>>2]|0;
     $363 = (($362) + ($355)|0);
     $364 = HEAP8[$363>>0]|0;
     $365 = (+($364&255));
     $366 = (+_round($365));
     $367 = $366;
     $368 = HEAP32[$pos_tem>>2]|0;
     $369 = $i;
     $370 = (($368) + ($369))|0;
     $371 = $370<<6;
     $372 = (($371|0) / 2)&-1;
     $373 = ((($pos_tem)) + 4|0);
     $374 = HEAP32[$373>>2]|0;
     $375 = (($372) + ($374))|0;
     $376 = $j;
     $377 = (($375) + ($376))|0;
     $378 = $0;
     $379 = ((($378)) + 100|0);
     $380 = HEAP32[$379>>2]|0;
     $381 = (($380) + ($377<<2)|0);
     $382 = +HEAPF32[$381>>2];
     $383 = $367 + $382;
     $384 = (_control_range($383)|0);
     $385 = $1;
     $386 = (($385|0) / 2)&-1;
     $387 = HEAP32[$pos_tem>>2]|0;
     $388 = (($386) + ($387))|0;
     $389 = $i;
     $390 = (($388) + ($389))|0;
     $391 = $4;
     $392 = HEAP32[$391>>2]|0;
     $393 = ((($392)) + 180|0);
     $394 = HEAP32[$393>>2]|0;
     $395 = Math_imul($390, $394)|0;
     $396 = (($395|0) / 2)&-1;
     $397 = $2;
     $398 = (($397|0) / 2)&-1;
     $399 = ((($pos_tem)) + 4|0);
     $400 = HEAP32[$399>>2]|0;
     $401 = (($398) + ($400))|0;
     $402 = $j;
     $403 = (($401) + ($402))|0;
     $404 = (($396) + ($403))|0;
     $405 = $3;
     $406 = ((($405)) + 8|0);
     $407 = HEAP32[$406>>2]|0;
     $408 = (($407) + ($404)|0);
     HEAP8[$408>>0] = $384;
     $409 = $1;
     $410 = (($409|0) / 2)&-1;
     $411 = HEAP32[$pos_tem>>2]|0;
     $412 = (($410) + ($411))|0;
     $413 = $i;
     $414 = (($412) + ($413))|0;
     $415 = $4;
     $416 = HEAP32[$415>>2]|0;
     $417 = ((($416)) + 180|0);
     $418 = HEAP32[$417>>2]|0;
     $419 = Math_imul($414, $418)|0;
     $420 = (($419|0) / 2)&-1;
     $421 = $2;
     $422 = (($421|0) / 2)&-1;
     $423 = ((($pos_tem)) + 4|0);
     $424 = HEAP32[$423>>2]|0;
     $425 = (($422) + ($424))|0;
     $426 = $j;
     $427 = (($425) + ($426))|0;
     $428 = (($420) + ($427))|0;
     $429 = $4;
     $430 = HEAP32[$429>>2]|0;
     $431 = ((($430)) + 96|0);
     $432 = HEAP32[$431>>2]|0;
     $433 = ((($432)) + 20|0);
     $434 = HEAP32[$433>>2]|0;
     $435 = (($434) + ($428)|0);
     HEAP8[$435>>0] = 1;
     $436 = $1;
     $437 = (($436|0) / 2)&-1;
     $438 = HEAP32[$pos_tem>>2]|0;
     $439 = (($437) + ($438))|0;
     $440 = $i;
     $441 = (($439) + ($440))|0;
     $442 = $4;
     $443 = HEAP32[$442>>2]|0;
     $444 = ((($443)) + 180|0);
     $445 = HEAP32[$444>>2]|0;
     $446 = Math_imul($441, $445)|0;
     $447 = (($446|0) / 2)&-1;
     $448 = $2;
     $449 = (($448|0) / 2)&-1;
     $450 = ((($pos_tem)) + 4|0);
     $451 = HEAP32[$450>>2]|0;
     $452 = (($449) + ($451))|0;
     $453 = $j;
     $454 = (($452) + ($453))|0;
     $455 = (($447) + ($454))|0;
     $456 = $4;
     $457 = ((($456)) + 164|0);
     $458 = HEAP32[$457>>2]|0;
     $459 = ((($458)) + 8|0);
     $460 = HEAP32[$459>>2]|0;
     $461 = (($460) + ($455)|0);
     $462 = HEAP8[$461>>0]|0;
     $463 = $462&255;
     $464 = $1;
     $465 = (($464|0) / 2)&-1;
     $466 = HEAP32[$pos_tem>>2]|0;
     $467 = (($465) + ($466))|0;
     $468 = $i;
     $469 = (($467) + ($468))|0;
     $470 = $4;
     $471 = HEAP32[$470>>2]|0;
     $472 = ((($471)) + 180|0);
     $473 = HEAP32[$472>>2]|0;
     $474 = Math_imul($469, $473)|0;
     $475 = (($474|0) / 2)&-1;
     $476 = $2;
     $477 = (($476|0) / 2)&-1;
     $478 = ((($pos_tem)) + 4|0);
     $479 = HEAP32[$478>>2]|0;
     $480 = (($477) + ($479))|0;
     $481 = $j;
     $482 = (($480) + ($481))|0;
     $483 = (($475) + ($482))|0;
     $484 = $3;
     $485 = ((($484)) + 8|0);
     $486 = HEAP32[$485>>2]|0;
     $487 = (($486) + ($483)|0);
     $488 = HEAP8[$487>>0]|0;
     $489 = $488&255;
     $490 = ($463|0)!=($489|0);
     if ($490) {
      $tem1 = 10;
     }
    }
   }
   $491 = $j;
   $492 = (($491) + 1)|0;
   $j = $492;
  }
  $493 = $i;
  $494 = (($493) + 1)|0;
  $i = $494;
 }
 STACKTOP = sp;return;
}
function _tu_decoder_get_info($data,$buf) {
 $data = $data|0;
 $buf = $buf|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $decode = 0, $qp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $qp = sp;
 $0 = $data;
 $1 = $buf;
 $2 = (_malloc(172)|0);
 $decode = $2;
 $3 = $decode;
 $4 = $0;
 _InitContext($3,$4);
 $5 = $1;
 $6 = ((($5)) + 4|0);
 $7 = $1;
 $8 = $decode;
 $9 = HEAP32[$8>>2]|0;
 _decodeFrameHeadInfo($6,$7,$qp,$9);
 $10 = $decode;
 _DestroyContext($10);
 $11 = $decode;
 _free($11);
 STACKTOP = sp;return;
}
function _initShapeIdctContext($str,$context) {
 $str = $str|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $str;
 $1 = $context;
 $2 = $0;
 $3 = $1;
 _initIDctContext($2,$3);
 STACKTOP = sp;return;
}
function _shapeIdctOneChannel($context,$src_y,$shape,$x_stride,$y_stride,$output_y) {
 $context = $context|0;
 $src_y = $src_y|0;
 $shape = $shape|0;
 $x_stride = $x_stride|0;
 $y_stride = $y_stride|0;
 $output_y = $output_y|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0.0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0;
 var $j = 0, $k = 0, $row_base = 0, $row_max = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $src_y;
 $2 = $shape;
 $3 = $x_stride;
 $4 = $y_stride;
 $5 = $output_y;
 $6 = $3;
 $7 = $4;
 $8 = Math_imul($6, $7)|0;
 $row_max = $8;
 $j = 0;
 while(1) {
  $9 = $j;
  $10 = $3;
  $11 = ($9|0)<($10|0);
  $i = 0;
  if (!($11)) {
   break;
  }
  $k = 0;
  $row_base = 0;
  while(1) {
   $12 = $i;
   $13 = $row_max;
   $14 = ($12|0)<($13|0);
   if (!($14)) {
    break;
   }
   $15 = $5;
   $16 = $i;
   $17 = (($15) + ($16<<2)|0);
   $18 = $j;
   $19 = (($17) + ($18<<2)|0);
   HEAPF32[$19>>2] = 0.0;
   $20 = $0;
   $21 = ((($20)) + 374148|0);
   $22 = $i;
   $23 = (($21) + ($22<<2)|0);
   $24 = $j;
   $25 = (($23) + ($24<<2)|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ($26|0)!=(0);
   if ($27) {
    $28 = $1;
    $29 = $row_base;
    $30 = (($28) + ($29<<2)|0);
    $31 = $j;
    $32 = (($30) + ($31<<2)|0);
    $33 = +HEAPF32[$32>>2];
    $34 = $0;
    $35 = ((($34)) + 357760|0);
    $36 = $row_base;
    $37 = (($35) + ($36<<2)|0);
    $38 = $j;
    $39 = (($37) + ($38<<2)|0);
    $40 = +HEAPF32[$39>>2];
    $41 = $33 / $40;
    $42 = $0;
    $43 = ((($42)) + 406916|0);
    $44 = $k;
    $45 = (($43) + ($44<<2)|0);
    HEAPF32[$45>>2] = $41;
    $46 = $3;
    $47 = $row_base;
    $48 = (($47) + ($46))|0;
    $row_base = $48;
    $49 = $k;
    $50 = (($49) + 1)|0;
    $k = $50;
   }
   $51 = $3;
   $52 = $i;
   $53 = (($52) + ($51))|0;
   $i = $53;
  }
  $54 = $0;
  $55 = $k;
  $56 = $3;
  $57 = $5;
  $58 = $j;
  $59 = (($57) + ($58<<2)|0);
  _idctOneChannel($54,$55,$56,$59);
  $60 = $3;
  $61 = $i;
  $62 = (($61) - ($60))|0;
  $i = $62;
  $63 = $3;
  $64 = $row_base;
  $65 = (($64) - ($63))|0;
  $row_base = $65;
  while(1) {
   $66 = $row_base;
   $67 = ($66|0)>=(0);
   if (!($67)) {
    break;
   }
   $68 = $0;
   $69 = ((($68)) + 374148|0);
   $70 = $i;
   $71 = (($69) + ($70<<2)|0);
   $72 = $j;
   $73 = (($71) + ($72<<2)|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($74|0)!=(0);
   if ($75) {
    $76 = $row_base;
    $77 = $i;
    $78 = ($76|0)!=($77|0);
    if ($78) {
     $79 = $5;
     $80 = $row_base;
     $81 = (($79) + ($80<<2)|0);
     $82 = $j;
     $83 = (($81) + ($82<<2)|0);
     $84 = +HEAPF32[$83>>2];
     $85 = $5;
     $86 = $i;
     $87 = (($85) + ($86<<2)|0);
     $88 = $j;
     $89 = (($87) + ($88<<2)|0);
     HEAPF32[$89>>2] = $84;
     $90 = $5;
     $91 = $row_base;
     $92 = (($90) + ($91<<2)|0);
     $93 = $j;
     $94 = (($92) + ($93<<2)|0);
     HEAPF32[$94>>2] = 0.0;
    }
    $95 = $3;
    $96 = $row_base;
    $97 = (($96) - ($95))|0;
    $row_base = $97;
   }
   $98 = $3;
   $99 = $i;
   $100 = (($99) - ($98))|0;
   $i = $100;
  }
  $101 = $j;
  $102 = (($101) + 1)|0;
  $j = $102;
 }
 while(1) {
  $103 = $i;
  $104 = $row_max;
  $105 = ($103|0)<($104|0);
  if (!($105)) {
   break;
  }
  $j = 0;
  $k = 0;
  while(1) {
   $106 = $j;
   $107 = $3;
   $108 = ($106|0)<($107|0);
   $109 = $0;
   if (!($108)) {
    break;
   }
   $110 = ((($109)) + 374148|0);
   $111 = $i;
   $112 = (($110) + ($111<<2)|0);
   $113 = $j;
   $114 = (($112) + ($113<<2)|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = ($115|0)!=(0);
   if ($116) {
    $117 = $5;
    $118 = $i;
    $119 = (($117) + ($118<<2)|0);
    $120 = $j;
    $121 = (($119) + ($120<<2)|0);
    $122 = +HEAPF32[$121>>2];
    $123 = $0;
    $124 = ((($123)) + 406916|0);
    $125 = $k;
    $126 = (($124) + ($125<<2)|0);
    HEAPF32[$126>>2] = $122;
    $127 = $5;
    $128 = $i;
    $129 = (($127) + ($128<<2)|0);
    $130 = $j;
    $131 = (($129) + ($130<<2)|0);
    HEAPF32[$131>>2] = 0.0;
    $132 = $k;
    $133 = (($132) + 1)|0;
    $k = $133;
   }
   $134 = $j;
   $135 = (($134) + 1)|0;
   $j = $135;
  }
  $136 = $k;
  $137 = $5;
  $138 = $i;
  $139 = (($137) + ($138<<2)|0);
  _idctOneChannel($109,$136,1,$139);
  $140 = $j;
  $141 = (($140) - 1)|0;
  $j = $141;
  $142 = $k;
  $143 = (($142) - 1)|0;
  $k = $143;
  while(1) {
   $144 = $j;
   $145 = ($144|0)>=(0);
   if (!($145)) {
    break;
   }
   $146 = $2;
   $147 = $i;
   $148 = (($146) + ($147<<2)|0);
   $149 = $j;
   $150 = (($148) + ($149<<2)|0);
   $151 = HEAP32[$150>>2]|0;
   $152 = ($151|0)!=(0);
   if ($152) {
    $153 = $k;
    $154 = $j;
    $155 = ($153|0)!=($154|0);
    if ($155) {
     $156 = $5;
     $157 = $i;
     $158 = (($156) + ($157<<2)|0);
     $159 = $k;
     $160 = (($158) + ($159<<2)|0);
     $161 = +HEAPF32[$160>>2];
     $162 = $5;
     $163 = $i;
     $164 = (($162) + ($163<<2)|0);
     $165 = $j;
     $166 = (($164) + ($165<<2)|0);
     HEAPF32[$166>>2] = $161;
     $167 = $5;
     $168 = $i;
     $169 = (($167) + ($168<<2)|0);
     $170 = $k;
     $171 = (($169) + ($170<<2)|0);
     HEAPF32[$171>>2] = 0.0;
    }
    $172 = $k;
    $173 = (($172) + -1)|0;
    $k = $173;
   }
   $174 = $j;
   $175 = (($174) + -1)|0;
   $j = $175;
  }
  $176 = $3;
  $177 = $i;
  $178 = (($177) + ($176))|0;
  $i = $178;
 }
 STACKTOP = sp;return;
}
function _initIDctContext($src,$context) {
 $src = $src|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $i = 0, $index = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $src;
 $1 = $context;
 $index = 0;
 $2 = $1;
 $3 = HEAP32[596>>2]|0;
 $4 = $3;
 _memcpy(($2|0),(20649|0),($4|0))|0;
 $i = 0;
 while(1) {
  $5 = $i;
  $6 = ($5|0)<(64);
  if (!($6)) {
   break;
  }
  $7 = $i;
  $8 = $i;
  $9 = Math_imul($7, $8)|0;
  $10 = $index;
  $11 = (($10) + ($9))|0;
  $index = $11;
  $12 = $index;
  $13 = $i;
  $14 = $1;
  $15 = ((($14)) + 408452|0);
  $16 = (($15) + ($13<<2)|0);
  HEAP32[$16>>2] = $12;
  $17 = $i;
  $18 = (($17) + 1)|0;
  $i = $18;
 }
 $19 = $1;
 $20 = ((($19)) + 374144|0);
 HEAPF32[$20>>2] = 1.0;
 STACKTOP = sp;return;
}
function _idctOneChannel($context,$length,$stride,$data_y) {
 $context = $context|0;
 $length = $length|0;
 $stride = $stride|0;
 $data_y = $data_y|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0, $114 = 0.0, $115 = 0.0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0;
 var $134 = 0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $19 = 0.0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0, $i = 0, $idctTable = 0, $index = 0, $j = 0, $ne1 = 0, $pe1 = 0, $rowBase = 0, $row_max = 0, $sqrt_2 = 0.0, $tem_y = 0.0, $tempCount = 0, $temp_y = 0.0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $length;
 $2 = $stride;
 $3 = $data_y;
 $4 = $1;
 $5 = ($4|0)==(0);
 if ($5) {
  STACKTOP = sp;return;
 }
 $6 = $1;
 $7 = (($6) - 1)|0;
 $8 = $0;
 $9 = ((($8)) + 408452|0);
 $10 = (($9) + ($7<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $index = $11;
 $12 = $index;
 $13 = $0;
 $14 = (($13) + ($12<<2)|0);
 $idctTable = $14;
 $ne1 = 0;
 $15 = $2;
 $16 = $1;
 $17 = Math_imul($15, $16)|0;
 $row_max = $17;
 $18 = (+Math_sqrt(2.0));
 $19 = $18;
 $sqrt_2 = $19;
 $tempCount = 0;
 $ne1 = 0;
 $pe1 = 0;
 $rowBase = 0;
 $20 = $0;
 $21 = ((($20)) + 406916|0);
 $22 = +HEAPF32[$21>>2];
 $23 = $0;
 $24 = ((($23)) + 374144|0);
 $25 = +HEAPF32[$24>>2];
 $26 = $22 * $25;
 $27 = $sqrt_2;
 $28 = $26 / $27;
 $temp_y = $28;
 $i = 1;
 while(1) {
  $29 = $i;
  $30 = $1;
  $31 = ($29|0)<($30|0);
  if (!($31)) {
   break;
  }
  $32 = $i;
  $33 = $0;
  $34 = ((($33)) + 406916|0);
  $35 = (($34) + ($32<<2)|0);
  $36 = +HEAPF32[$35>>2];
  $37 = $36 != 0.0;
  do {
   if ($37) {
    $38 = $i;
    $39 = $0;
    $40 = ((($39)) + 406916|0);
    $41 = (($40) + ($38<<2)|0);
    $42 = +HEAPF32[$41>>2];
    $43 = $42 == 1.0;
    $44 = $i;
    if ($43) {
     $45 = $pe1;
     $46 = $0;
     $47 = ((($46)) + 407940|0);
     $48 = (($47) + ($45<<2)|0);
     HEAP32[$48>>2] = $44;
     $49 = $pe1;
     $50 = (($49) + 1)|0;
     $pe1 = $50;
     break;
    }
    $51 = $0;
    $52 = ((($51)) + 406916|0);
    $53 = (($52) + ($44<<2)|0);
    $54 = +HEAPF32[$53>>2];
    $55 = $54 == -1.0;
    $56 = $i;
    if ($55) {
     $57 = $ne1;
     $58 = $0;
     $59 = ((($58)) + 408196|0);
     $60 = (($59) + ($57<<2)|0);
     HEAP32[$60>>2] = $56;
     $61 = $ne1;
     $62 = (($61) + 1)|0;
     $ne1 = $62;
     break;
    } else {
     $63 = $tempCount;
     $64 = $0;
     $65 = ((($64)) + 407684|0);
     $66 = (($65) + ($63<<2)|0);
     HEAP32[$66>>2] = $56;
     $67 = $tempCount;
     $68 = (($67) + 1)|0;
     $tempCount = $68;
     break;
    }
   }
  } while(0);
  $69 = $i;
  $70 = (($69) + 1)|0;
  $i = $70;
 }
 $i = 0;
 while(1) {
  $71 = $i;
  $72 = $row_max;
  $73 = ($71|0)<($72|0);
  if (!($73)) {
   break;
  }
  $tem_y = 0.0;
  $j = 0;
  while(1) {
   $74 = $j;
   $75 = $tempCount;
   $76 = ($74|0)<($75|0);
   if (!($76)) {
    break;
   }
   $77 = $j;
   $78 = $0;
   $79 = ((($78)) + 407684|0);
   $80 = (($79) + ($77<<2)|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = $0;
   $83 = ((($82)) + 406916|0);
   $84 = (($83) + ($81<<2)|0);
   $85 = +HEAPF32[$84>>2];
   $86 = $rowBase;
   $87 = $j;
   $88 = $0;
   $89 = ((($88)) + 407684|0);
   $90 = (($89) + ($87<<2)|0);
   $91 = HEAP32[$90>>2]|0;
   $92 = (($86) + ($91))|0;
   $93 = $idctTable;
   $94 = (($93) + ($92<<2)|0);
   $95 = +HEAPF32[$94>>2];
   $96 = $85 * $95;
   $97 = $tem_y;
   $98 = $97 + $96;
   $tem_y = $98;
   $99 = $j;
   $100 = (($99) + 1)|0;
   $j = $100;
  }
  $j = 0;
  while(1) {
   $101 = $j;
   $102 = $pe1;
   $103 = ($101|0)<($102|0);
   if (!($103)) {
    break;
   }
   $104 = $rowBase;
   $105 = $j;
   $106 = $0;
   $107 = ((($106)) + 407940|0);
   $108 = (($107) + ($105<<2)|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = (($104) + ($109))|0;
   $111 = $idctTable;
   $112 = (($111) + ($110<<2)|0);
   $113 = +HEAPF32[$112>>2];
   $114 = $tem_y;
   $115 = $114 + $113;
   $tem_y = $115;
   $116 = $j;
   $117 = (($116) + 1)|0;
   $j = $117;
  }
  $j = 0;
  while(1) {
   $118 = $j;
   $119 = $ne1;
   $120 = ($118|0)<($119|0);
   if (!($120)) {
    break;
   }
   $121 = $rowBase;
   $122 = $j;
   $123 = $0;
   $124 = ((($123)) + 408196|0);
   $125 = (($124) + ($122<<2)|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = (($121) + ($126))|0;
   $128 = $idctTable;
   $129 = (($128) + ($127<<2)|0);
   $130 = +HEAPF32[$129>>2];
   $131 = $tem_y;
   $132 = $131 - $130;
   $tem_y = $132;
   $133 = $j;
   $134 = (($133) + 1)|0;
   $j = $134;
  }
  $135 = $tem_y;
  $136 = $temp_y;
  $137 = $135 + $136;
  $138 = $3;
  $139 = $i;
  $140 = (($138) + ($139<<2)|0);
  HEAPF32[$140>>2] = $137;
  $141 = $1;
  $142 = $rowBase;
  $143 = (($142) + ($141))|0;
  $rowBase = $143;
  $144 = $2;
  $145 = $i;
  $146 = (($145) + ($144))|0;
  $i = $146;
 }
 STACKTOP = sp;return;
}
function _regularIdctOneChannel($context,$src_y,$x_stride,$y_stride,$output_y) {
 $context = $context|0;
 $src_y = $src_y|0;
 $x_stride = $x_stride|0;
 $y_stride = $y_stride|0;
 $output_y = $output_y|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0;
 var $27 = 0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0.0, $i = 0, $j = 0, $k = 0, $row_max = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $src_y;
 $2 = $x_stride;
 $3 = $y_stride;
 $4 = $output_y;
 $5 = $2;
 $6 = $3;
 $7 = Math_imul($5, $6)|0;
 $row_max = $7;
 $8 = $row_max;
 $9 = (+($8|0));
 $10 = (+Math_sqrt((+$9)));
 $11 = $10;
 $12 = $0;
 $13 = ((($12)) + 357760|0);
 HEAPF32[$13>>2] = $11;
 $j = 0;
 while(1) {
  $14 = $j;
  $15 = $2;
  $16 = ($14|0)<($15|0);
  $i = 0;
  if (!($16)) {
   break;
  }
  $k = 0;
  while(1) {
   $17 = $i;
   $18 = $row_max;
   $19 = ($17|0)<($18|0);
   if (!($19)) {
    break;
   }
   $20 = $1;
   $21 = $i;
   $22 = (($20) + ($21<<2)|0);
   $23 = $j;
   $24 = (($22) + ($23<<2)|0);
   $25 = +HEAPF32[$24>>2];
   $26 = $0;
   $27 = ((($26)) + 357760|0);
   $28 = +HEAPF32[$27>>2];
   $29 = $25 / $28;
   $30 = $0;
   $31 = ((($30)) + 406916|0);
   $32 = $k;
   $33 = (($31) + ($32<<2)|0);
   HEAPF32[$33>>2] = $29;
   $34 = $k;
   $35 = (($34) + 1)|0;
   $k = $35;
   $36 = $2;
   $37 = $i;
   $38 = (($37) + ($36))|0;
   $i = $38;
  }
  $39 = $0;
  $40 = $k;
  $41 = $2;
  $42 = $4;
  $43 = $j;
  $44 = (($42) + ($43<<2)|0);
  _idctOneChannel($39,$40,$41,$44);
  $45 = $j;
  $46 = (($45) + 1)|0;
  $j = $46;
 }
 while(1) {
  $47 = $i;
  $48 = $row_max;
  $49 = ($47|0)<($48|0);
  if (!($49)) {
   break;
  }
  $j = 0;
  $k = 0;
  while(1) {
   $50 = $j;
   $51 = $2;
   $52 = ($50|0)<($51|0);
   if (!($52)) {
    break;
   }
   $53 = $4;
   $54 = $i;
   $55 = (($53) + ($54<<2)|0);
   $56 = $j;
   $57 = (($55) + ($56<<2)|0);
   $58 = +HEAPF32[$57>>2];
   $59 = $0;
   $60 = ((($59)) + 406916|0);
   $61 = $j;
   $62 = (($60) + ($61<<2)|0);
   HEAPF32[$62>>2] = $58;
   $63 = $j;
   $64 = (($63) + 1)|0;
   $j = $64;
  }
  $65 = $0;
  $66 = $j;
  $67 = $4;
  $68 = $i;
  $69 = (($67) + ($68<<2)|0);
  _idctOneChannel($65,$66,1,$69);
  $70 = $2;
  $71 = $i;
  $72 = (($71) + ($70))|0;
  $i = $72;
 }
 STACKTOP = sp;return;
}
function _shape_initial($context,$shape,$x_stride,$y_stride) {
 $context = $context|0;
 $shape = $shape|0;
 $x_stride = $x_stride|0;
 $y_stride = $y_stride|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0.0, $133 = 0.0;
 var $134 = 0.0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0;
 var $i = 0, $j = 0, $k = 0, $row_max = 0, $t = 0, $v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $shape;
 $2 = $x_stride;
 $3 = $y_stride;
 $4 = $3;
 $5 = $2;
 $6 = Math_imul($4, $5)|0;
 $row_max = $6;
 $i = 0;
 while(1) {
  $7 = $i;
  $8 = $row_max;
  $9 = ($7|0)<($8|0);
  $j = 0;
  if (!($9)) {
   break;
  }
  $k = 0;
  while(1) {
   $10 = $j;
   $11 = $2;
   $12 = ($10|0)<($11|0);
   if (!($12)) {
    break;
   }
   $13 = $0;
   $14 = ((($13)) + 374148|0);
   $15 = $i;
   $16 = (($14) + ($15<<2)|0);
   $17 = $j;
   $18 = (($16) + ($17<<2)|0);
   HEAP32[$18>>2] = 0;
   $19 = $0;
   $20 = ((($19)) + 357760|0);
   $21 = $i;
   $22 = (($20) + ($21<<2)|0);
   $23 = $j;
   $24 = (($22) + ($23<<2)|0);
   HEAPF32[$24>>2] = 1.0;
   $25 = $1;
   $26 = $i;
   $27 = (($25) + ($26<<2)|0);
   $28 = $j;
   $29 = (($27) + ($28<<2)|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($30|0)!=(0);
   if ($31) {
    $32 = $0;
    $33 = ((($32)) + 374148|0);
    $34 = $i;
    $35 = (($33) + ($34<<2)|0);
    $36 = $k;
    $37 = (($35) + ($36<<2)|0);
    HEAP32[$37>>2] = 1;
    $38 = $k;
    $39 = (($38) + 1)|0;
    $k = $39;
   }
   $40 = $j;
   $41 = (($40) + 1)|0;
   $j = $41;
  }
  $t = 0;
  while(1) {
   $42 = $t;
   $43 = $k;
   $44 = ($42|0)<($43|0);
   if (!($44)) {
    break;
   }
   $45 = $k;
   $46 = (+($45|0));
   $47 = (+Math_sqrt((+$46)));
   $48 = $0;
   $49 = ((($48)) + 357760|0);
   $50 = $i;
   $51 = (($49) + ($50<<2)|0);
   $52 = $t;
   $53 = (($51) + ($52<<2)|0);
   $54 = +HEAPF32[$53>>2];
   $55 = $54;
   $56 = $55 * $47;
   $57 = $56;
   HEAPF32[$53>>2] = $57;
   $58 = $t;
   $59 = (($58) + 1)|0;
   $t = $59;
  }
  $60 = $2;
  $61 = $i;
  $62 = (($61) + ($60))|0;
  $i = $62;
 }
 while(1) {
  $63 = $j;
  $64 = $2;
  $65 = ($63|0)<($64|0);
  if (!($65)) {
   break;
  }
  $i = 0;
  $k = 0;
  $t = 0;
  while(1) {
   $66 = $i;
   $67 = $row_max;
   $68 = ($66|0)<($67|0);
   if (!($68)) {
    break;
   }
   $69 = $0;
   $70 = ((($69)) + 390532|0);
   $71 = $i;
   $72 = (($70) + ($71<<2)|0);
   $73 = $j;
   $74 = (($72) + ($73<<2)|0);
   HEAP32[$74>>2] = 0;
   $75 = $0;
   $76 = ((($75)) + 374148|0);
   $77 = $i;
   $78 = (($76) + ($77<<2)|0);
   $79 = $j;
   $80 = (($78) + ($79<<2)|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = ($81|0)!=(0);
   if ($82) {
    $83 = $0;
    $84 = ((($83)) + 390532|0);
    $85 = $k;
    $86 = (($84) + ($85<<2)|0);
    $87 = $j;
    $88 = (($86) + ($87<<2)|0);
    HEAP32[$88>>2] = 1;
    $89 = $i;
    $90 = $k;
    $91 = ($89|0)!=($90|0);
    if ($91) {
     $92 = $0;
     $93 = ((($92)) + 357760|0);
     $94 = $i;
     $95 = (($93) + ($94<<2)|0);
     $96 = $j;
     $97 = (($95) + ($96<<2)|0);
     $98 = +HEAPF32[$97>>2];
     $99 = $0;
     $100 = ((($99)) + 357760|0);
     $101 = $k;
     $102 = (($100) + ($101<<2)|0);
     $103 = $j;
     $104 = (($102) + ($103<<2)|0);
     HEAPF32[$104>>2] = $98;
     $105 = $0;
     $106 = ((($105)) + 357760|0);
     $107 = $i;
     $108 = (($106) + ($107<<2)|0);
     $109 = $j;
     $110 = (($108) + ($109<<2)|0);
     HEAPF32[$110>>2] = 1.0;
    }
    $111 = $2;
    $112 = $k;
    $113 = (($112) + ($111))|0;
    $k = $113;
    $114 = $t;
    $115 = (($114) + 1)|0;
    $t = $115;
   }
   $116 = $2;
   $117 = $i;
   $118 = (($117) + ($116))|0;
   $i = $118;
  }
  $v = 0;
  while(1) {
   $119 = $v;
   $120 = $k;
   $121 = ($119|0)<($120|0);
   if (!($121)) {
    break;
   }
   $122 = $t;
   $123 = (+($122|0));
   $124 = (+Math_sqrt((+$123)));
   $125 = $0;
   $126 = ((($125)) + 357760|0);
   $127 = $v;
   $128 = (($126) + ($127<<2)|0);
   $129 = $j;
   $130 = (($128) + ($129<<2)|0);
   $131 = +HEAPF32[$130>>2];
   $132 = $131;
   $133 = $132 * $124;
   $134 = $133;
   HEAPF32[$130>>2] = $134;
   $135 = $2;
   $136 = $v;
   $137 = (($136) + ($135))|0;
   $v = $137;
  }
  $138 = $j;
  $139 = (($138) + 1)|0;
  $j = $139;
 }
 STACKTOP = sp;return;
}
function _izigzagOneChannel($context,$src,$shape,$length,$x_stride,$y_stride,$output) {
 $context = $context|0;
 $src = $src|0;
 $shape = $shape|0;
 $length = $length|0;
 $x_stride = $x_stride|0;
 $y_stride = $y_stride|0;
 $output = $output|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $index = 0, $j = 0, $k = 0, $row_max = 0, $seg_num = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $src;
 $2 = $shape;
 $3 = $length;
 $4 = $x_stride;
 $5 = $y_stride;
 $6 = $output;
 $7 = $5;
 $8 = $4;
 $9 = Math_imul($7, $8)|0;
 $row_max = $9;
 $10 = $4;
 $11 = $5;
 $12 = (($10) + ($11))|0;
 $13 = (($12) - 1)|0;
 $seg_num = $13;
 $index = 0;
 $14 = $0;
 $15 = $2;
 $16 = $4;
 $17 = $5;
 _shape_initial($14,$15,$16,$17);
 $k = 0;
 $j = 0;
 $i = 0;
 while(1) {
  $18 = $k;
  $19 = $seg_num;
  $20 = ($18|0)<($19|0);
  if (!($20)) {
   break;
  }
  $21 = $k;
  $22 = $21 & 1;
  $23 = ($22|0)!=(0);
  if ($23) {
   while(1) {
    $24 = $j;
    $25 = ($24|0)>=(0);
    if (!($25)) {
     break;
    }
    $26 = $i;
    $27 = $row_max;
    $28 = ($26|0)<($27|0);
    if (!($28)) {
     break;
    }
    $29 = $0;
    $30 = ((($29)) + 390532|0);
    $31 = $i;
    $32 = (($30) + ($31<<2)|0);
    $33 = $j;
    $34 = (($32) + ($33<<2)|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($35|0)!=(0);
    if ($36) {
     $37 = $1;
     $38 = $index;
     $39 = (($37) + ($38<<2)|0);
     $40 = +HEAPF32[$39>>2];
     $41 = $6;
     $42 = $i;
     $43 = (($41) + ($42<<2)|0);
     $44 = $j;
     $45 = (($43) + ($44<<2)|0);
     HEAPF32[$45>>2] = $40;
     $46 = $index;
     $47 = (($46) + 1)|0;
     $index = $47;
    }
    $48 = $j;
    $49 = (($48) + -1)|0;
    $j = $49;
    $50 = $4;
    $51 = $i;
    $52 = (($51) + ($50))|0;
    $i = $52;
   }
   $53 = $i;
   $54 = $row_max;
   $55 = ($53|0)==($54|0);
   if ($55) {
    $56 = $j;
    $57 = (($56) + 1)|0;
    $j = $57;
    $58 = $4;
    $59 = $i;
    $60 = (($59) - ($58))|0;
    $i = $60;
   }
   $61 = $j;
   $62 = (($61) + 1)|0;
   $j = $62;
  } else {
   while(1) {
    $63 = $i;
    $64 = ($63|0)>=(0);
    if (!($64)) {
     break;
    }
    $65 = $j;
    $66 = $4;
    $67 = ($65|0)<($66|0);
    if (!($67)) {
     break;
    }
    $68 = $0;
    $69 = ((($68)) + 390532|0);
    $70 = $i;
    $71 = (($69) + ($70<<2)|0);
    $72 = $j;
    $73 = (($71) + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($74|0)!=(0);
    if ($75) {
     $76 = $1;
     $77 = $index;
     $78 = (($76) + ($77<<2)|0);
     $79 = +HEAPF32[$78>>2];
     $80 = $6;
     $81 = $i;
     $82 = (($80) + ($81<<2)|0);
     $83 = $j;
     $84 = (($82) + ($83<<2)|0);
     HEAPF32[$84>>2] = $79;
     $85 = $index;
     $86 = (($85) + 1)|0;
     $index = $86;
    }
    $87 = $j;
    $88 = (($87) + 1)|0;
    $j = $88;
    $89 = $4;
    $90 = $i;
    $91 = (($90) - ($89))|0;
    $i = $91;
   }
   $92 = $j;
   $93 = $4;
   $94 = ($92|0)==($93|0);
   if ($94) {
    $95 = $4;
    $96 = $i;
    $97 = (($96) + ($95))|0;
    $i = $97;
    $98 = $j;
    $99 = (($98) + -1)|0;
    $j = $99;
   }
   $100 = $4;
   $101 = $i;
   $102 = (($101) + ($100))|0;
   $i = $102;
  }
  $103 = $k;
  $104 = (($103) + 1)|0;
  $k = $104;
 }
 STACKTOP = sp;return;
}
function _get_top_and_left_border($size,$x,$y,$block_x,$block_y,$context) {
 $size = $size|0;
 $x = $x|0;
 $y = $y|0;
 $block_x = $block_x|0;
 $block_y = $block_y|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $col = 0, $i = 0, $i1 = 0, $i2 = 0, $left_flag = 0, $left_num = 0;
 var $or$cond = 0, $or$cond3 = 0, $row = 0, $top_flag = 0, $top_num = 0, $x_real = 0, $xx_real = 0, $y_real = 0, $yy_real = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $size;
 $1 = $x;
 $2 = $y;
 $3 = $block_x;
 $4 = $block_y;
 $5 = $context;
 $6 = $5;
 $7 = ((($6)) + 172|0);
 $8 = HEAP32[$7>>2]|0;
 $row = $8;
 $9 = $5;
 $10 = ((($9)) + 184|0);
 $11 = HEAP32[$10>>2]|0;
 $col = $11;
 $12 = $1;
 $13 = $3;
 $14 = (($12) + ($13))|0;
 $15 = (($14) - 1)|0;
 $xx_real = $15;
 $16 = $2;
 $17 = $4;
 $18 = (($16) + ($17))|0;
 $19 = (($18) - 1)|0;
 $yy_real = $19;
 $left_num = 0;
 $top_num = 0;
 $left_flag = 0;
 $top_flag = 0;
 $20 = $xx_real;
 $21 = ($20|0)<(0);
 if ($21) {
  label = 5;
 } else {
  $22 = $xx_real;
  $23 = $row;
  $24 = ($22|0)>=($23|0);
  $25 = $yy_real;
  $26 = ($25|0)<(0);
  $or$cond = $24 | $26;
  if ($or$cond) {
   label = 5;
  } else {
   $27 = $yy_real;
   $28 = $col;
   $29 = ($27|0)>=($28|0);
   if ($29) {
    label = 5;
   } else {
    $30 = $xx_real;
    $31 = $col;
    $32 = Math_imul($30, $31)|0;
    $33 = $yy_real;
    $34 = (($32) + ($33))|0;
    $35 = $5;
    $36 = ((($35)) + 96|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ((($37)) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (($39) + ($34)|0);
    $41 = HEAP8[$40>>0]|0;
    $42 = $41 << 24 >> 24;
    $43 = ($42|0)!=(1);
    if ($43) {
     label = 5;
    } else {
     $239 = $xx_real;
     $240 = $col;
     $241 = Math_imul($239, $240)|0;
     $242 = $yy_real;
     $243 = (($241) + ($242))|0;
     $244 = $5;
     $245 = ((($244)) + 96|0);
     $246 = HEAP32[$245>>2]|0;
     $247 = HEAP32[$246>>2]|0;
     $248 = (($247) + ($243)|0);
     $249 = HEAP8[$248>>0]|0;
     $250 = $0;
     $251 = (($250) - 1)|0;
     $252 = $5;
     $253 = ((($252)) + 100|0);
     $254 = HEAP32[$253>>2]|0;
     $255 = HEAP32[$254>>2]|0;
     $256 = (($255) + ($251)|0);
     HEAP8[$256>>0] = $249;
     $257 = $xx_real;
     $258 = $col;
     $259 = Math_imul($257, $258)|0;
     $260 = $yy_real;
     $261 = (($259) + ($260))|0;
     $262 = $5;
     $263 = ((($262)) + 96|0);
     $264 = HEAP32[$263>>2]|0;
     $265 = HEAP32[$264>>2]|0;
     $266 = (($265) + ($261)|0);
     $267 = HEAP8[$266>>0]|0;
     $268 = $0;
     $269 = (($268) - 1)|0;
     $270 = $5;
     $271 = ((($270)) + 100|0);
     $272 = HEAP32[$271>>2]|0;
     $273 = ((($272)) + 4|0);
     $274 = HEAP32[$273>>2]|0;
     $275 = (($274) + ($269)|0);
     HEAP8[$275>>0] = $267;
     $left_flag = 1;
     $top_flag = 1;
     $276 = $xx_real;
     $277 = $col;
     $278 = Math_imul($276, $277)|0;
     $279 = $yy_real;
     $280 = (($278) + ($279))|0;
     $281 = $5;
     $282 = ((($281)) + 96|0);
     $283 = HEAP32[$282>>2]|0;
     $284 = HEAP32[$283>>2]|0;
     $285 = (($284) + ($280)|0);
     $286 = HEAP8[$285>>0]|0;
     $left_num = $286;
     $287 = $xx_real;
     $288 = $col;
     $289 = Math_imul($287, $288)|0;
     $290 = $yy_real;
     $291 = (($289) + ($290))|0;
     $292 = $5;
     $293 = ((($292)) + 96|0);
     $294 = HEAP32[$293>>2]|0;
     $295 = HEAP32[$294>>2]|0;
     $296 = (($295) + ($291)|0);
     $297 = HEAP8[$296>>0]|0;
     $top_num = $297;
    }
   }
  }
 }
 do {
  if ((label|0) == 5) {
   $44 = $xx_real;
   $45 = (($44) + 1)|0;
   $46 = ($45|0)>=(0);
   if ($46) {
    $47 = $xx_real;
    $48 = (($47) + 1)|0;
    $49 = $row;
    $50 = ($48|0)<($49|0);
    $51 = $yy_real;
    $52 = ($51|0)>=(0);
    $or$cond3 = $50 & $52;
    if ($or$cond3) {
     $53 = $yy_real;
     $54 = $col;
     $55 = ($53|0)<($54|0);
     if ($55) {
      $56 = $xx_real;
      $57 = (($56) + 1)|0;
      $58 = $col;
      $59 = Math_imul($57, $58)|0;
      $60 = $yy_real;
      $61 = (($59) + ($60))|0;
      $62 = $5;
      $63 = ((($62)) + 96|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ((($64)) + 12|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = (($66) + ($61)|0);
      $68 = HEAP8[$67>>0]|0;
      $69 = $68 << 24 >> 24;
      $70 = ($69|0)==(1);
      if ($70) {
       $71 = $xx_real;
       $72 = (($71) + 1)|0;
       $73 = $col;
       $74 = Math_imul($72, $73)|0;
       $75 = $yy_real;
       $76 = (($74) + ($75))|0;
       $77 = $5;
       $78 = ((($77)) + 96|0);
       $79 = HEAP32[$78>>2]|0;
       $80 = HEAP32[$79>>2]|0;
       $81 = (($80) + ($76)|0);
       $82 = HEAP8[$81>>0]|0;
       $83 = $0;
       $84 = (($83) - 1)|0;
       $85 = $5;
       $86 = ((($85)) + 100|0);
       $87 = HEAP32[$86>>2]|0;
       $88 = HEAP32[$87>>2]|0;
       $89 = (($88) + ($84)|0);
       HEAP8[$89>>0] = $82;
       $90 = $xx_real;
       $91 = (($90) + 1)|0;
       $92 = $col;
       $93 = Math_imul($91, $92)|0;
       $94 = $yy_real;
       $95 = (($93) + ($94))|0;
       $96 = $5;
       $97 = ((($96)) + 96|0);
       $98 = HEAP32[$97>>2]|0;
       $99 = HEAP32[$98>>2]|0;
       $100 = (($99) + ($95)|0);
       $101 = HEAP8[$100>>0]|0;
       $102 = $0;
       $103 = (($102) - 1)|0;
       $104 = $5;
       $105 = ((($104)) + 100|0);
       $106 = HEAP32[$105>>2]|0;
       $107 = ((($106)) + 4|0);
       $108 = HEAP32[$107>>2]|0;
       $109 = (($108) + ($103)|0);
       HEAP8[$109>>0] = $101;
       $110 = $xx_real;
       $111 = (($110) + 1)|0;
       $112 = $col;
       $113 = Math_imul($111, $112)|0;
       $114 = $yy_real;
       $115 = (($113) + ($114))|0;
       $116 = $5;
       $117 = ((($116)) + 96|0);
       $118 = HEAP32[$117>>2]|0;
       $119 = HEAP32[$118>>2]|0;
       $120 = (($119) + ($115)|0);
       $121 = HEAP8[$120>>0]|0;
       $left_num = $121;
       $122 = $xx_real;
       $123 = (($122) + 1)|0;
       $124 = $col;
       $125 = Math_imul($123, $124)|0;
       $126 = $yy_real;
       $127 = (($125) + ($126))|0;
       $128 = $5;
       $129 = ((($128)) + 96|0);
       $130 = HEAP32[$129>>2]|0;
       $131 = HEAP32[$130>>2]|0;
       $132 = (($131) + ($127)|0);
       $133 = HEAP8[$132>>0]|0;
       $top_num = $133;
       $left_flag = 1;
       $top_flag = 1;
       break;
      }
     }
    }
   }
   $134 = $xx_real;
   $135 = ($134|0)>=(0);
   if ($135) {
    $136 = $xx_real;
    $137 = $row;
    $138 = ($136|0)<($137|0);
    if ($138) {
     $139 = $yy_real;
     $140 = (($139) + 1)|0;
     $141 = ($140|0)>=(0);
     if ($141) {
      $142 = $yy_real;
      $143 = (($142) + 1)|0;
      $144 = $col;
      $145 = ($143|0)<($144|0);
      if ($145) {
       $146 = $xx_real;
       $147 = $col;
       $148 = Math_imul($146, $147)|0;
       $149 = $yy_real;
       $150 = (($149) + 1)|0;
       $151 = (($148) + ($150))|0;
       $152 = $5;
       $153 = ((($152)) + 96|0);
       $154 = HEAP32[$153>>2]|0;
       $155 = ((($154)) + 12|0);
       $156 = HEAP32[$155>>2]|0;
       $157 = (($156) + ($151)|0);
       $158 = HEAP8[$157>>0]|0;
       $159 = $158 << 24 >> 24;
       $160 = ($159|0)==(1);
       if ($160) {
        $161 = $xx_real;
        $162 = $col;
        $163 = Math_imul($161, $162)|0;
        $164 = $yy_real;
        $165 = (($164) + 1)|0;
        $166 = (($163) + ($165))|0;
        $167 = $5;
        $168 = ((($167)) + 96|0);
        $169 = HEAP32[$168>>2]|0;
        $170 = HEAP32[$169>>2]|0;
        $171 = (($170) + ($166)|0);
        $172 = HEAP8[$171>>0]|0;
        $173 = $0;
        $174 = (($173) - 1)|0;
        $175 = $5;
        $176 = ((($175)) + 100|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = HEAP32[$177>>2]|0;
        $179 = (($178) + ($174)|0);
        HEAP8[$179>>0] = $172;
        $180 = $xx_real;
        $181 = $col;
        $182 = Math_imul($180, $181)|0;
        $183 = $yy_real;
        $184 = (($183) + 1)|0;
        $185 = (($182) + ($184))|0;
        $186 = $5;
        $187 = ((($186)) + 96|0);
        $188 = HEAP32[$187>>2]|0;
        $189 = HEAP32[$188>>2]|0;
        $190 = (($189) + ($185)|0);
        $191 = HEAP8[$190>>0]|0;
        $192 = $0;
        $193 = (($192) - 1)|0;
        $194 = $5;
        $195 = ((($194)) + 100|0);
        $196 = HEAP32[$195>>2]|0;
        $197 = ((($196)) + 4|0);
        $198 = HEAP32[$197>>2]|0;
        $199 = (($198) + ($193)|0);
        HEAP8[$199>>0] = $191;
        $200 = $xx_real;
        $201 = $col;
        $202 = Math_imul($200, $201)|0;
        $203 = $yy_real;
        $204 = (($203) + 1)|0;
        $205 = (($202) + ($204))|0;
        $206 = $5;
        $207 = ((($206)) + 96|0);
        $208 = HEAP32[$207>>2]|0;
        $209 = HEAP32[$208>>2]|0;
        $210 = (($209) + ($205)|0);
        $211 = HEAP8[$210>>0]|0;
        $left_num = $211;
        $212 = $xx_real;
        $213 = $col;
        $214 = Math_imul($212, $213)|0;
        $215 = $yy_real;
        $216 = (($215) + 1)|0;
        $217 = (($214) + ($216))|0;
        $218 = $5;
        $219 = ((($218)) + 96|0);
        $220 = HEAP32[$219>>2]|0;
        $221 = HEAP32[$220>>2]|0;
        $222 = (($221) + ($217)|0);
        $223 = HEAP8[$222>>0]|0;
        $top_num = $223;
        $left_flag = 1;
        $top_flag = 1;
        break;
       }
      }
     }
    }
   }
   $224 = $0;
   $225 = (($224) - 1)|0;
   $226 = $5;
   $227 = ((($226)) + 100|0);
   $228 = HEAP32[$227>>2]|0;
   $229 = HEAP32[$228>>2]|0;
   $230 = (($229) + ($225)|0);
   HEAP8[$230>>0] = -128;
   $231 = $0;
   $232 = (($231) - 1)|0;
   $233 = $5;
   $234 = ((($233)) + 100|0);
   $235 = HEAP32[$234>>2]|0;
   $236 = ((($235)) + 4|0);
   $237 = HEAP32[$236>>2]|0;
   $238 = (($237) + ($232)|0);
   HEAP8[$238>>0] = -128;
  }
 } while(0);
 $i = 0;
 while(1) {
  $298 = $i;
  $299 = $0;
  $300 = ($299*3)|0;
  $301 = ($298|0)<($300|0);
  if (!($301)) {
   break;
  }
  $302 = $i;
  $303 = $0;
  $304 = (($303) - 1)|0;
  $305 = ($302|0)==($304|0);
  do {
   if (!($305)) {
    $306 = $i;
    $307 = $2;
    $308 = (($306) + ($307))|0;
    $309 = $4;
    $310 = (($308) + ($309))|0;
    $311 = $0;
    $312 = (($310) - ($311))|0;
    $y_real = $312;
    $313 = $y_real;
    $314 = ($313|0)>=(0);
    if ($314) {
     $315 = $y_real;
     $316 = $col;
     $317 = ($315|0)<($316|0);
     if ($317) {
      $318 = $1;
      $319 = $3;
      $320 = (($318) + ($319))|0;
      $321 = (($320) - 1)|0;
      $322 = ($321|0)>=(0);
      if ($322) {
       $323 = $1;
       $324 = $3;
       $325 = (($323) + ($324))|0;
       $326 = (($325) - 1)|0;
       $327 = $row;
       $328 = ($326|0)<($327|0);
       if ($328) {
        $329 = $5;
        $330 = ((($329)) + 96|0);
        $331 = HEAP32[$330>>2]|0;
        $332 = ((($331)) + 12|0);
        $333 = HEAP32[$332>>2]|0;
        $334 = $1;
        $335 = $3;
        $336 = (($334) + ($335))|0;
        $337 = (($336) - 1)|0;
        $338 = $col;
        $339 = Math_imul($337, $338)|0;
        $340 = (($333) + ($339)|0);
        $341 = $y_real;
        $342 = (($340) + ($341)|0);
        $343 = HEAP8[$342>>0]|0;
        $344 = $343 << 24 >> 24;
        $345 = ($344|0)==(1);
        if ($345) {
         $346 = $5;
         $347 = ((($346)) + 96|0);
         $348 = HEAP32[$347>>2]|0;
         $349 = HEAP32[$348>>2]|0;
         $350 = $1;
         $351 = $3;
         $352 = (($350) + ($351))|0;
         $353 = (($352) - 1)|0;
         $354 = $col;
         $355 = Math_imul($353, $354)|0;
         $356 = (($349) + ($355)|0);
         $357 = $y_real;
         $358 = (($356) + ($357)|0);
         $359 = HEAP8[$358>>0]|0;
         $360 = $i;
         $361 = $5;
         $362 = ((($361)) + 100|0);
         $363 = HEAP32[$362>>2]|0;
         $364 = HEAP32[$363>>2]|0;
         $365 = (($364) + ($360)|0);
         HEAP8[$365>>0] = $359;
         $366 = $1;
         $367 = $3;
         $368 = (($366) + ($367))|0;
         $369 = (($368) - 1)|0;
         $370 = $col;
         $371 = Math_imul($369, $370)|0;
         $372 = $y_real;
         $373 = (($371) + ($372))|0;
         $374 = $5;
         $375 = ((($374)) + 96|0);
         $376 = HEAP32[$375>>2]|0;
         $377 = HEAP32[$376>>2]|0;
         $378 = (($377) + ($373)|0);
         $379 = HEAP8[$378>>0]|0;
         $top_num = $379;
         $top_flag = 1;
         break;
        }
       }
      }
     }
    }
    $380 = $top_flag;
    $381 = ($380|0)==(1);
    if ($381) {
     $382 = $top_num;
     $383 = $i;
     $384 = $5;
     $385 = ((($384)) + 100|0);
     $386 = HEAP32[$385>>2]|0;
     $387 = HEAP32[$386>>2]|0;
     $388 = (($387) + ($383)|0);
     HEAP8[$388>>0] = $382;
     break;
    } else {
     $389 = $i;
     $390 = $5;
     $391 = ((($390)) + 100|0);
     $392 = HEAP32[$391>>2]|0;
     $393 = HEAP32[$392>>2]|0;
     $394 = (($393) + ($389)|0);
     HEAP8[$394>>0] = -128;
     break;
    }
   }
  } while(0);
  $395 = $i;
  $396 = (($395) + 1)|0;
  $i = $396;
 }
 $i1 = 0;
 while(1) {
  $397 = $i1;
  $398 = $0;
  $399 = ($398*3)|0;
  $400 = ($397|0)<($399|0);
  if (!($400)) {
   break;
  }
  $401 = $i1;
  $402 = $0;
  $403 = (($402) - 1)|0;
  $404 = ($401|0)==($403|0);
  do {
   if (!($404)) {
    $405 = $i1;
    $406 = $1;
    $407 = (($405) + ($406))|0;
    $408 = $3;
    $409 = (($407) + ($408))|0;
    $410 = $0;
    $411 = (($409) - ($410))|0;
    $x_real = $411;
    $412 = $x_real;
    $413 = ($412|0)>=(0);
    if ($413) {
     $414 = $x_real;
     $415 = $row;
     $416 = ($414|0)<($415|0);
     if ($416) {
      $417 = $2;
      $418 = $4;
      $419 = (($417) + ($418))|0;
      $420 = (($419) - 1)|0;
      $421 = ($420|0)>=(0);
      if ($421) {
       $422 = $2;
       $423 = $4;
       $424 = (($422) + ($423))|0;
       $425 = (($424) - 1)|0;
       $426 = $col;
       $427 = ($425|0)<($426|0);
       if ($427) {
        $428 = $5;
        $429 = ((($428)) + 96|0);
        $430 = HEAP32[$429>>2]|0;
        $431 = ((($430)) + 12|0);
        $432 = HEAP32[$431>>2]|0;
        $433 = $x_real;
        $434 = $col;
        $435 = Math_imul($433, $434)|0;
        $436 = (($432) + ($435)|0);
        $437 = $2;
        $438 = (($436) + ($437)|0);
        $439 = $4;
        $440 = (($438) + ($439)|0);
        $441 = ((($440)) + -1|0);
        $442 = HEAP8[$441>>0]|0;
        $443 = $442 << 24 >> 24;
        $444 = ($443|0)==(1);
        if ($444) {
         $445 = $5;
         $446 = ((($445)) + 96|0);
         $447 = HEAP32[$446>>2]|0;
         $448 = HEAP32[$447>>2]|0;
         $449 = $x_real;
         $450 = $col;
         $451 = Math_imul($449, $450)|0;
         $452 = (($448) + ($451)|0);
         $453 = $2;
         $454 = (($452) + ($453)|0);
         $455 = $4;
         $456 = (($454) + ($455)|0);
         $457 = ((($456)) + -1|0);
         $458 = HEAP8[$457>>0]|0;
         $459 = $i1;
         $460 = $5;
         $461 = ((($460)) + 100|0);
         $462 = HEAP32[$461>>2]|0;
         $463 = ((($462)) + 4|0);
         $464 = HEAP32[$463>>2]|0;
         $465 = (($464) + ($459)|0);
         HEAP8[$465>>0] = $458;
         $466 = $x_real;
         $467 = $col;
         $468 = Math_imul($466, $467)|0;
         $469 = $2;
         $470 = (($468) + ($469))|0;
         $471 = $4;
         $472 = (($470) + ($471))|0;
         $473 = (($472) - 1)|0;
         $474 = $5;
         $475 = ((($474)) + 96|0);
         $476 = HEAP32[$475>>2]|0;
         $477 = HEAP32[$476>>2]|0;
         $478 = (($477) + ($473)|0);
         $479 = HEAP8[$478>>0]|0;
         $left_num = $479;
         $left_flag = 1;
         break;
        }
       }
      }
     }
    }
    $480 = $left_flag;
    $481 = ($480|0)==(1);
    if ($481) {
     $482 = $left_num;
     $483 = $i1;
     $484 = $5;
     $485 = ((($484)) + 100|0);
     $486 = HEAP32[$485>>2]|0;
     $487 = ((($486)) + 4|0);
     $488 = HEAP32[$487>>2]|0;
     $489 = (($488) + ($483)|0);
     HEAP8[$489>>0] = $482;
     break;
    } else {
     $490 = $i1;
     $491 = $5;
     $492 = ((($491)) + 100|0);
     $493 = HEAP32[$492>>2]|0;
     $494 = ((($493)) + 4|0);
     $495 = HEAP32[$494>>2]|0;
     $496 = (($495) + ($490)|0);
     HEAP8[$496>>0] = -128;
     break;
    }
   }
  } while(0);
  $497 = $i1;
  $498 = (($497) + 1)|0;
  $i1 = $498;
 }
 $i2 = 0;
 while(1) {
  $499 = $i2;
  $500 = $0;
  $501 = ($500*3)|0;
  $502 = ($499|0)<($501|0);
  if (!($502)) {
   break;
  }
  $503 = $i2;
  $504 = $5;
  $505 = ((($504)) + 100|0);
  $506 = HEAP32[$505>>2]|0;
  $507 = HEAP32[$506>>2]|0;
  $508 = (($507) + ($503)|0);
  $509 = HEAP8[$508>>0]|0;
  $510 = $i2;
  $511 = $5;
  $512 = ((($511)) + 100|0);
  $513 = HEAP32[$512>>2]|0;
  $514 = ((($513)) + 24|0);
  $515 = HEAP32[$514>>2]|0;
  $516 = (($515) + ($510)|0);
  HEAP8[$516>>0] = $509;
  $517 = $i2;
  $518 = $5;
  $519 = ((($518)) + 100|0);
  $520 = HEAP32[$519>>2]|0;
  $521 = ((($520)) + 4|0);
  $522 = HEAP32[$521>>2]|0;
  $523 = (($522) + ($517)|0);
  $524 = HEAP8[$523>>0]|0;
  $525 = $i2;
  $526 = $5;
  $527 = ((($526)) + 100|0);
  $528 = HEAP32[$527>>2]|0;
  $529 = ((($528)) + 28|0);
  $530 = HEAP32[$529>>2]|0;
  $531 = (($530) + ($525)|0);
  HEAP8[$531>>0] = $524;
  $532 = $i2;
  $533 = (($532) + 1)|0;
  $i2 = $533;
 }
 STACKTOP = sp;return;
}
function _get_top_and_left_Cb_border($size,$x,$y,$block_x,$block_y,$context) {
 $size = $size|0;
 $x = $x|0;
 $y = $y|0;
 $block_x = $block_x|0;
 $block_y = $block_y|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $col = 0, $i = 0;
 var $i1 = 0, $i2 = 0, $i3 = 0, $i4 = 0, $left_flag = 0, $left_num = 0, $or$cond = 0, $or$cond3 = 0, $row = 0, $top_flag = 0, $top_num = 0, $x_real = 0, $xx_real = 0, $y_real = 0, $yy_real = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $size;
 $1 = $x;
 $2 = $y;
 $3 = $block_x;
 $4 = $block_y;
 $5 = $context;
 $6 = $5;
 $7 = ((($6)) + 172|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8|0) / 2)&-1;
 $row = $9;
 $10 = $5;
 $11 = ((($10)) + 184|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12|0) / 2)&-1;
 $col = $13;
 $14 = $1;
 $15 = $3;
 $16 = (($14) + ($15))|0;
 $17 = (($16) - 1)|0;
 $xx_real = $17;
 $18 = $2;
 $19 = $4;
 $20 = (($18) + ($19))|0;
 $21 = (($20) - 1)|0;
 $yy_real = $21;
 $left_num = 0;
 $top_num = 0;
 $left_flag = 0;
 $top_flag = 0;
 $22 = $xx_real;
 $23 = ($22|0)<(0);
 if ($23) {
  label = 5;
 } else {
  $24 = $xx_real;
  $25 = $row;
  $26 = ($24|0)>=($25|0);
  $27 = $yy_real;
  $28 = ($27|0)<(0);
  $or$cond = $26 | $28;
  if ($or$cond) {
   label = 5;
  } else {
   $29 = $yy_real;
   $30 = $col;
   $31 = ($29|0)>=($30|0);
   if ($31) {
    label = 5;
   } else {
    $32 = $xx_real;
    $33 = $col;
    $34 = Math_imul($32, $33)|0;
    $35 = $yy_real;
    $36 = (($34) + ($35))|0;
    $37 = $5;
    $38 = ((($37)) + 96|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($39)) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (($41) + ($36)|0);
    $43 = HEAP8[$42>>0]|0;
    $44 = $43 << 24 >> 24;
    $45 = ($44|0)!=(1);
    if ($45) {
     label = 5;
    } else {
     $252 = $xx_real;
     $253 = $col;
     $254 = Math_imul($252, $253)|0;
     $255 = $yy_real;
     $256 = (($254) + ($255))|0;
     $257 = $5;
     $258 = ((($257)) + 96|0);
     $259 = HEAP32[$258>>2]|0;
     $260 = ((($259)) + 4|0);
     $261 = HEAP32[$260>>2]|0;
     $262 = (($261) + ($256)|0);
     $263 = HEAP8[$262>>0]|0;
     $264 = $0;
     $265 = (($264) - 1)|0;
     $266 = $5;
     $267 = ((($266)) + 100|0);
     $268 = HEAP32[$267>>2]|0;
     $269 = ((($268)) + 8|0);
     $270 = HEAP32[$269>>2]|0;
     $271 = (($270) + ($265)|0);
     HEAP8[$271>>0] = $263;
     $272 = $xx_real;
     $273 = $col;
     $274 = Math_imul($272, $273)|0;
     $275 = $yy_real;
     $276 = (($274) + ($275))|0;
     $277 = $5;
     $278 = ((($277)) + 96|0);
     $279 = HEAP32[$278>>2]|0;
     $280 = ((($279)) + 4|0);
     $281 = HEAP32[$280>>2]|0;
     $282 = (($281) + ($276)|0);
     $283 = HEAP8[$282>>0]|0;
     $284 = $0;
     $285 = (($284) - 1)|0;
     $286 = $5;
     $287 = ((($286)) + 100|0);
     $288 = HEAP32[$287>>2]|0;
     $289 = ((($288)) + 12|0);
     $290 = HEAP32[$289>>2]|0;
     $291 = (($290) + ($285)|0);
     HEAP8[$291>>0] = $283;
     $left_flag = 1;
     $top_flag = 1;
     $292 = $xx_real;
     $293 = $col;
     $294 = Math_imul($292, $293)|0;
     $295 = $yy_real;
     $296 = (($294) + ($295))|0;
     $297 = $5;
     $298 = ((($297)) + 96|0);
     $299 = HEAP32[$298>>2]|0;
     $300 = ((($299)) + 4|0);
     $301 = HEAP32[$300>>2]|0;
     $302 = (($301) + ($296)|0);
     $303 = HEAP8[$302>>0]|0;
     $left_num = $303;
     $304 = $xx_real;
     $305 = $col;
     $306 = Math_imul($304, $305)|0;
     $307 = $yy_real;
     $308 = (($306) + ($307))|0;
     $309 = $5;
     $310 = ((($309)) + 96|0);
     $311 = HEAP32[$310>>2]|0;
     $312 = ((($311)) + 4|0);
     $313 = HEAP32[$312>>2]|0;
     $314 = (($313) + ($308)|0);
     $315 = HEAP8[$314>>0]|0;
     $top_num = $315;
    }
   }
  }
 }
 do {
  if ((label|0) == 5) {
   $46 = $xx_real;
   $47 = (($46) + 1)|0;
   $48 = ($47|0)>=(0);
   if ($48) {
    $49 = $xx_real;
    $50 = (($49) + 1)|0;
    $51 = $row;
    $52 = ($50|0)<($51|0);
    $53 = $yy_real;
    $54 = ($53|0)>=(0);
    $or$cond3 = $52 & $54;
    if ($or$cond3) {
     $55 = $yy_real;
     $56 = $col;
     $57 = ($55|0)<($56|0);
     if ($57) {
      $58 = $xx_real;
      $59 = (($58) + 1)|0;
      $60 = $col;
      $61 = Math_imul($59, $60)|0;
      $62 = $yy_real;
      $63 = (($61) + ($62))|0;
      $64 = $5;
      $65 = ((($64)) + 96|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ((($66)) + 16|0);
      $68 = HEAP32[$67>>2]|0;
      $69 = (($68) + ($63)|0);
      $70 = HEAP8[$69>>0]|0;
      $71 = $70 << 24 >> 24;
      $72 = ($71|0)==(1);
      if ($72) {
       $73 = $xx_real;
       $74 = (($73) + 1)|0;
       $75 = $col;
       $76 = Math_imul($74, $75)|0;
       $77 = $yy_real;
       $78 = (($76) + ($77))|0;
       $79 = $5;
       $80 = ((($79)) + 96|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ((($81)) + 4|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = (($83) + ($78)|0);
       $85 = HEAP8[$84>>0]|0;
       $86 = $0;
       $87 = (($86) - 1)|0;
       $88 = $5;
       $89 = ((($88)) + 100|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ((($90)) + 8|0);
       $92 = HEAP32[$91>>2]|0;
       $93 = (($92) + ($87)|0);
       HEAP8[$93>>0] = $85;
       $94 = $xx_real;
       $95 = (($94) + 1)|0;
       $96 = $col;
       $97 = Math_imul($95, $96)|0;
       $98 = $yy_real;
       $99 = (($97) + ($98))|0;
       $100 = $5;
       $101 = ((($100)) + 96|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = ((($102)) + 4|0);
       $104 = HEAP32[$103>>2]|0;
       $105 = (($104) + ($99)|0);
       $106 = HEAP8[$105>>0]|0;
       $107 = $0;
       $108 = (($107) - 1)|0;
       $109 = $5;
       $110 = ((($109)) + 100|0);
       $111 = HEAP32[$110>>2]|0;
       $112 = ((($111)) + 12|0);
       $113 = HEAP32[$112>>2]|0;
       $114 = (($113) + ($108)|0);
       HEAP8[$114>>0] = $106;
       $115 = $xx_real;
       $116 = (($115) + 1)|0;
       $117 = $col;
       $118 = Math_imul($116, $117)|0;
       $119 = $yy_real;
       $120 = (($118) + ($119))|0;
       $121 = $5;
       $122 = ((($121)) + 96|0);
       $123 = HEAP32[$122>>2]|0;
       $124 = ((($123)) + 4|0);
       $125 = HEAP32[$124>>2]|0;
       $126 = (($125) + ($120)|0);
       $127 = HEAP8[$126>>0]|0;
       $left_num = $127;
       $128 = $xx_real;
       $129 = (($128) + 1)|0;
       $130 = $col;
       $131 = Math_imul($129, $130)|0;
       $132 = $yy_real;
       $133 = (($131) + ($132))|0;
       $134 = $5;
       $135 = ((($134)) + 96|0);
       $136 = HEAP32[$135>>2]|0;
       $137 = ((($136)) + 4|0);
       $138 = HEAP32[$137>>2]|0;
       $139 = (($138) + ($133)|0);
       $140 = HEAP8[$139>>0]|0;
       $top_num = $140;
       $left_flag = 1;
       $top_flag = 1;
       break;
      }
     }
    }
   }
   $141 = $xx_real;
   $142 = ($141|0)>=(0);
   if ($142) {
    $143 = $xx_real;
    $144 = $row;
    $145 = ($143|0)<($144|0);
    if ($145) {
     $146 = $yy_real;
     $147 = (($146) + 1)|0;
     $148 = ($147|0)>=(0);
     if ($148) {
      $149 = $yy_real;
      $150 = (($149) + 1)|0;
      $151 = $col;
      $152 = ($150|0)<($151|0);
      if ($152) {
       $153 = $xx_real;
       $154 = $col;
       $155 = Math_imul($153, $154)|0;
       $156 = $yy_real;
       $157 = (($156) + 1)|0;
       $158 = (($155) + ($157))|0;
       $159 = $5;
       $160 = ((($159)) + 96|0);
       $161 = HEAP32[$160>>2]|0;
       $162 = ((($161)) + 16|0);
       $163 = HEAP32[$162>>2]|0;
       $164 = (($163) + ($158)|0);
       $165 = HEAP8[$164>>0]|0;
       $166 = $165 << 24 >> 24;
       $167 = ($166|0)==(1);
       if ($167) {
        $168 = $xx_real;
        $169 = $col;
        $170 = Math_imul($168, $169)|0;
        $171 = $yy_real;
        $172 = (($171) + 1)|0;
        $173 = (($170) + ($172))|0;
        $174 = $5;
        $175 = ((($174)) + 96|0);
        $176 = HEAP32[$175>>2]|0;
        $177 = ((($176)) + 4|0);
        $178 = HEAP32[$177>>2]|0;
        $179 = (($178) + ($173)|0);
        $180 = HEAP8[$179>>0]|0;
        $181 = $0;
        $182 = (($181) - 1)|0;
        $183 = $5;
        $184 = ((($183)) + 100|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ((($185)) + 8|0);
        $187 = HEAP32[$186>>2]|0;
        $188 = (($187) + ($182)|0);
        HEAP8[$188>>0] = $180;
        $189 = $xx_real;
        $190 = $col;
        $191 = Math_imul($189, $190)|0;
        $192 = $yy_real;
        $193 = (($192) + 1)|0;
        $194 = (($191) + ($193))|0;
        $195 = $5;
        $196 = ((($195)) + 96|0);
        $197 = HEAP32[$196>>2]|0;
        $198 = ((($197)) + 4|0);
        $199 = HEAP32[$198>>2]|0;
        $200 = (($199) + ($194)|0);
        $201 = HEAP8[$200>>0]|0;
        $202 = $0;
        $203 = (($202) - 1)|0;
        $204 = $5;
        $205 = ((($204)) + 100|0);
        $206 = HEAP32[$205>>2]|0;
        $207 = ((($206)) + 12|0);
        $208 = HEAP32[$207>>2]|0;
        $209 = (($208) + ($203)|0);
        HEAP8[$209>>0] = $201;
        $210 = $xx_real;
        $211 = $col;
        $212 = Math_imul($210, $211)|0;
        $213 = $yy_real;
        $214 = (($213) + 1)|0;
        $215 = (($212) + ($214))|0;
        $216 = $5;
        $217 = ((($216)) + 96|0);
        $218 = HEAP32[$217>>2]|0;
        $219 = ((($218)) + 4|0);
        $220 = HEAP32[$219>>2]|0;
        $221 = (($220) + ($215)|0);
        $222 = HEAP8[$221>>0]|0;
        $left_num = $222;
        $223 = $xx_real;
        $224 = $col;
        $225 = Math_imul($223, $224)|0;
        $226 = $yy_real;
        $227 = (($226) + 1)|0;
        $228 = (($225) + ($227))|0;
        $229 = $5;
        $230 = ((($229)) + 96|0);
        $231 = HEAP32[$230>>2]|0;
        $232 = ((($231)) + 4|0);
        $233 = HEAP32[$232>>2]|0;
        $234 = (($233) + ($228)|0);
        $235 = HEAP8[$234>>0]|0;
        $top_num = $235;
        $left_flag = 1;
        $top_flag = 1;
        break;
       }
      }
     }
    }
   }
   $236 = $0;
   $237 = (($236) - 1)|0;
   $238 = $5;
   $239 = ((($238)) + 100|0);
   $240 = HEAP32[$239>>2]|0;
   $241 = ((($240)) + 8|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = (($242) + ($237)|0);
   HEAP8[$243>>0] = -128;
   $244 = $0;
   $245 = (($244) - 1)|0;
   $246 = $5;
   $247 = ((($246)) + 100|0);
   $248 = HEAP32[$247>>2]|0;
   $249 = ((($248)) + 12|0);
   $250 = HEAP32[$249>>2]|0;
   $251 = (($250) + ($245)|0);
   HEAP8[$251>>0] = -128;
  }
 } while(0);
 $i = 0;
 while(1) {
  $316 = $i;
  $317 = $0;
  $318 = ($317*3)|0;
  $319 = ($316|0)<($318|0);
  if (!($319)) {
   break;
  }
  $320 = $i;
  $321 = $0;
  $322 = (($321) - 1)|0;
  $323 = ($320|0)==($322|0);
  do {
   if (!($323)) {
    $324 = $i;
    $325 = $2;
    $326 = (($324) + ($325))|0;
    $327 = $4;
    $328 = (($326) + ($327))|0;
    $329 = $0;
    $330 = (($328) - ($329))|0;
    $y_real = $330;
    $331 = $y_real;
    $332 = ($331|0)>=(0);
    if ($332) {
     $333 = $y_real;
     $334 = $col;
     $335 = ($333|0)<($334|0);
     if ($335) {
      $336 = $1;
      $337 = $3;
      $338 = (($336) + ($337))|0;
      $339 = (($338) - 1)|0;
      $340 = ($339|0)>=(0);
      if ($340) {
       $341 = $1;
       $342 = $3;
       $343 = (($341) + ($342))|0;
       $344 = (($343) + 1)|0;
       $345 = $row;
       $346 = ($344|0)<($345|0);
       if ($346) {
        $347 = $5;
        $348 = ((($347)) + 96|0);
        $349 = HEAP32[$348>>2]|0;
        $350 = ((($349)) + 16|0);
        $351 = HEAP32[$350>>2]|0;
        $352 = $1;
        $353 = $3;
        $354 = (($352) + ($353))|0;
        $355 = (($354) - 1)|0;
        $356 = $col;
        $357 = Math_imul($355, $356)|0;
        $358 = (($351) + ($357)|0);
        $359 = $y_real;
        $360 = (($358) + ($359)|0);
        $361 = HEAP8[$360>>0]|0;
        $362 = $361 << 24 >> 24;
        $363 = ($362|0)==(1);
        if ($363) {
         $364 = $5;
         $365 = ((($364)) + 96|0);
         $366 = HEAP32[$365>>2]|0;
         $367 = ((($366)) + 4|0);
         $368 = HEAP32[$367>>2]|0;
         $369 = $1;
         $370 = $3;
         $371 = (($369) + ($370))|0;
         $372 = (($371) - 1)|0;
         $373 = $col;
         $374 = Math_imul($372, $373)|0;
         $375 = (($368) + ($374)|0);
         $376 = $y_real;
         $377 = (($375) + ($376)|0);
         $378 = HEAP8[$377>>0]|0;
         $379 = $5;
         $380 = ((($379)) + 100|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ((($381)) + 8|0);
         $383 = HEAP32[$382>>2]|0;
         $384 = $i;
         $385 = (($383) + ($384)|0);
         HEAP8[$385>>0] = $378;
         $386 = $1;
         $387 = $3;
         $388 = (($386) + ($387))|0;
         $389 = (($388) - 1)|0;
         $390 = $col;
         $391 = Math_imul($389, $390)|0;
         $392 = $y_real;
         $393 = (($391) + ($392))|0;
         $394 = $5;
         $395 = ((($394)) + 96|0);
         $396 = HEAP32[$395>>2]|0;
         $397 = ((($396)) + 4|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = (($398) + ($393)|0);
         $400 = HEAP8[$399>>0]|0;
         $top_num = $400;
         $top_flag = 1;
         break;
        }
       }
      }
     }
    }
    $401 = $top_flag;
    $402 = ($401|0)==(1);
    if ($402) {
     $403 = $top_num;
     $404 = $i;
     $405 = $5;
     $406 = ((($405)) + 100|0);
     $407 = HEAP32[$406>>2]|0;
     $408 = ((($407)) + 8|0);
     $409 = HEAP32[$408>>2]|0;
     $410 = (($409) + ($404)|0);
     HEAP8[$410>>0] = $403;
     break;
    } else {
     $411 = $i;
     $412 = $5;
     $413 = ((($412)) + 100|0);
     $414 = HEAP32[$413>>2]|0;
     $415 = ((($414)) + 8|0);
     $416 = HEAP32[$415>>2]|0;
     $417 = (($416) + ($411)|0);
     HEAP8[$417>>0] = -128;
     break;
    }
   }
  } while(0);
  $418 = $i;
  $419 = (($418) + 1)|0;
  $i = $419;
 }
 $i1 = 0;
 while(1) {
  $420 = $i1;
  $421 = $0;
  $422 = ($421*3)|0;
  $423 = ($420|0)<($422|0);
  if (!($423)) {
   break;
  }
  $424 = $i1;
  $425 = $0;
  $426 = (($425) - 1)|0;
  $427 = ($424|0)==($426|0);
  do {
   if (!($427)) {
    $428 = $i1;
    $429 = $1;
    $430 = (($428) + ($429))|0;
    $431 = $3;
    $432 = (($430) + ($431))|0;
    $433 = $0;
    $434 = (($432) - ($433))|0;
    $x_real = $434;
    $435 = $x_real;
    $436 = ($435|0)>=(0);
    if ($436) {
     $437 = $x_real;
     $438 = $row;
     $439 = ($437|0)<($438|0);
     if ($439) {
      $440 = $2;
      $441 = $4;
      $442 = (($440) + ($441))|0;
      $443 = (($442) - 1)|0;
      $444 = ($443|0)>=(0);
      if ($444) {
       $445 = $2;
       $446 = $4;
       $447 = (($445) + ($446))|0;
       $448 = (($447) - 1)|0;
       $449 = $col;
       $450 = ($448|0)<($449|0);
       if ($450) {
        $451 = $5;
        $452 = ((($451)) + 96|0);
        $453 = HEAP32[$452>>2]|0;
        $454 = ((($453)) + 16|0);
        $455 = HEAP32[$454>>2]|0;
        $456 = $x_real;
        $457 = $col;
        $458 = Math_imul($456, $457)|0;
        $459 = (($455) + ($458)|0);
        $460 = $2;
        $461 = (($459) + ($460)|0);
        $462 = $4;
        $463 = (($461) + ($462)|0);
        $464 = ((($463)) + -1|0);
        $465 = HEAP8[$464>>0]|0;
        $466 = $465 << 24 >> 24;
        $467 = ($466|0)==(1);
        if ($467) {
         $468 = $5;
         $469 = ((($468)) + 96|0);
         $470 = HEAP32[$469>>2]|0;
         $471 = ((($470)) + 4|0);
         $472 = HEAP32[$471>>2]|0;
         $473 = $x_real;
         $474 = $col;
         $475 = Math_imul($473, $474)|0;
         $476 = (($472) + ($475)|0);
         $477 = $2;
         $478 = (($476) + ($477)|0);
         $479 = $4;
         $480 = (($478) + ($479)|0);
         $481 = ((($480)) + -1|0);
         $482 = HEAP8[$481>>0]|0;
         $483 = $5;
         $484 = ((($483)) + 100|0);
         $485 = HEAP32[$484>>2]|0;
         $486 = ((($485)) + 12|0);
         $487 = HEAP32[$486>>2]|0;
         $488 = $i1;
         $489 = (($487) + ($488)|0);
         HEAP8[$489>>0] = $482;
         $490 = $x_real;
         $491 = $col;
         $492 = Math_imul($490, $491)|0;
         $493 = $2;
         $494 = (($492) + ($493))|0;
         $495 = $4;
         $496 = (($494) + ($495))|0;
         $497 = (($496) - 1)|0;
         $498 = $5;
         $499 = ((($498)) + 96|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = ((($500)) + 4|0);
         $502 = HEAP32[$501>>2]|0;
         $503 = (($502) + ($497)|0);
         $504 = HEAP8[$503>>0]|0;
         $left_num = $504;
         $left_flag = 1;
         break;
        }
       }
      }
     }
    }
    $505 = $left_flag;
    $506 = ($505|0)==(1);
    if ($506) {
     $507 = $left_num;
     $508 = $i1;
     $509 = $5;
     $510 = ((($509)) + 100|0);
     $511 = HEAP32[$510>>2]|0;
     $512 = ((($511)) + 12|0);
     $513 = HEAP32[$512>>2]|0;
     $514 = (($513) + ($508)|0);
     HEAP8[$514>>0] = $507;
     break;
    } else {
     $515 = $i1;
     $516 = $5;
     $517 = ((($516)) + 100|0);
     $518 = HEAP32[$517>>2]|0;
     $519 = ((($518)) + 12|0);
     $520 = HEAP32[$519>>2]|0;
     $521 = (($520) + ($515)|0);
     HEAP8[$521>>0] = -128;
     break;
    }
   }
  } while(0);
  $522 = $i1;
  $523 = (($522) + 1)|0;
  $i1 = $523;
 }
 $i2 = 0;
 while(1) {
  $524 = $i2;
  $525 = $0;
  $526 = ($525*3)|0;
  $527 = ($524|0)<($526|0);
  if (!($527)) {
   break;
  }
  $528 = $i2;
  $529 = $5;
  $530 = ((($529)) + 100|0);
  $531 = HEAP32[$530>>2]|0;
  $532 = ((($531)) + 8|0);
  $533 = HEAP32[$532>>2]|0;
  $534 = (($533) + ($528)|0);
  $535 = HEAP8[$534>>0]|0;
  $536 = $i2;
  $537 = $5;
  $538 = ((($537)) + 100|0);
  $539 = HEAP32[$538>>2]|0;
  $540 = ((($539)) + 32|0);
  $541 = HEAP32[$540>>2]|0;
  $542 = (($541) + ($536)|0);
  HEAP8[$542>>0] = $535;
  $543 = $i2;
  $544 = $5;
  $545 = ((($544)) + 100|0);
  $546 = HEAP32[$545>>2]|0;
  $547 = ((($546)) + 12|0);
  $548 = HEAP32[$547>>2]|0;
  $549 = (($548) + ($543)|0);
  $550 = HEAP8[$549>>0]|0;
  $551 = $i2;
  $552 = $5;
  $553 = ((($552)) + 100|0);
  $554 = HEAP32[$553>>2]|0;
  $555 = ((($554)) + 36|0);
  $556 = HEAP32[$555>>2]|0;
  $557 = (($556) + ($551)|0);
  HEAP8[$557>>0] = $550;
  $558 = $i2;
  $559 = (($558) + 1)|0;
  $i2 = $559;
 }
 $560 = $0;
 $561 = $560<<1;
 $0 = $561;
 $562 = $0;
 $563 = ($562*3)|0;
 $564 = (($563|0) / 2)&-1;
 $565 = (($564) - 1)|0;
 $566 = $5;
 $567 = ((($566)) + 100|0);
 $568 = HEAP32[$567>>2]|0;
 $569 = ((($568)) + 8|0);
 $570 = HEAP32[$569>>2]|0;
 $571 = (($570) + ($565)|0);
 $572 = HEAP8[$571>>0]|0;
 $573 = $0;
 $574 = ($573*3)|0;
 $575 = (($574) - 1)|0;
 $576 = $5;
 $577 = ((($576)) + 100|0);
 $578 = HEAP32[$577>>2]|0;
 $579 = ((($578)) + 8|0);
 $580 = HEAP32[$579>>2]|0;
 $581 = (($580) + ($575)|0);
 HEAP8[$581>>0] = $572;
 $582 = $0;
 $583 = ($582*3)|0;
 $584 = (($583) - 2)|0;
 $i3 = $584;
 while(1) {
  $585 = $i3;
  $586 = ($585|0)>=(0);
  if (!($586)) {
   break;
  }
  $587 = $i3;
  $588 = $587 & 1;
  $589 = ($588|0)==(0);
  $590 = $i3;
  $591 = (($590|0) / 2)&-1;
  $592 = $5;
  $593 = ((($592)) + 100|0);
  $594 = HEAP32[$593>>2]|0;
  $595 = ((($594)) + 8|0);
  $596 = HEAP32[$595>>2]|0;
  $597 = (($596) + ($591)|0);
  $598 = HEAP8[$597>>0]|0;
  if ($589) {
   $599 = $i3;
   $600 = $5;
   $601 = ((($600)) + 100|0);
   $602 = HEAP32[$601>>2]|0;
   $603 = ((($602)) + 8|0);
   $604 = HEAP32[$603>>2]|0;
   $605 = (($604) + ($599)|0);
   HEAP8[$605>>0] = $598;
  } else {
   $606 = $598&255;
   $607 = $i3;
   $608 = (($607) + 1)|0;
   $609 = (($608|0) / 2)&-1;
   $610 = $5;
   $611 = ((($610)) + 100|0);
   $612 = HEAP32[$611>>2]|0;
   $613 = ((($612)) + 8|0);
   $614 = HEAP32[$613>>2]|0;
   $615 = (($614) + ($609)|0);
   $616 = HEAP8[$615>>0]|0;
   $617 = $616&255;
   $618 = (($606) + ($617))|0;
   $619 = (($618|0) / 2)&-1;
   $620 = $619&255;
   $621 = $i3;
   $622 = $5;
   $623 = ((($622)) + 100|0);
   $624 = HEAP32[$623>>2]|0;
   $625 = ((($624)) + 8|0);
   $626 = HEAP32[$625>>2]|0;
   $627 = (($626) + ($621)|0);
   HEAP8[$627>>0] = $620;
  }
  $628 = $i3;
  $629 = (($628) + -1)|0;
  $i3 = $629;
 }
 $630 = $0;
 $631 = ($630*3)|0;
 $632 = (($631|0) / 2)&-1;
 $633 = (($632) - 1)|0;
 $634 = $5;
 $635 = ((($634)) + 100|0);
 $636 = HEAP32[$635>>2]|0;
 $637 = ((($636)) + 12|0);
 $638 = HEAP32[$637>>2]|0;
 $639 = (($638) + ($633)|0);
 $640 = HEAP8[$639>>0]|0;
 $641 = $0;
 $642 = ($641*3)|0;
 $643 = (($642) - 1)|0;
 $644 = $5;
 $645 = ((($644)) + 100|0);
 $646 = HEAP32[$645>>2]|0;
 $647 = ((($646)) + 12|0);
 $648 = HEAP32[$647>>2]|0;
 $649 = (($648) + ($643)|0);
 HEAP8[$649>>0] = $640;
 $650 = $0;
 $651 = ($650*3)|0;
 $652 = (($651) - 2)|0;
 $i4 = $652;
 while(1) {
  $653 = $i4;
  $654 = ($653|0)>=(0);
  if (!($654)) {
   break;
  }
  $655 = $i4;
  $656 = $655 & 1;
  $657 = ($656|0)==(0);
  $658 = $i4;
  $659 = (($658|0) / 2)&-1;
  $660 = $5;
  $661 = ((($660)) + 100|0);
  $662 = HEAP32[$661>>2]|0;
  $663 = ((($662)) + 12|0);
  $664 = HEAP32[$663>>2]|0;
  $665 = (($664) + ($659)|0);
  $666 = HEAP8[$665>>0]|0;
  if ($657) {
   $667 = $i4;
   $668 = $5;
   $669 = ((($668)) + 100|0);
   $670 = HEAP32[$669>>2]|0;
   $671 = ((($670)) + 12|0);
   $672 = HEAP32[$671>>2]|0;
   $673 = (($672) + ($667)|0);
   HEAP8[$673>>0] = $666;
  } else {
   $674 = $666&255;
   $675 = $i4;
   $676 = (($675) + 1)|0;
   $677 = (($676|0) / 2)&-1;
   $678 = $5;
   $679 = ((($678)) + 100|0);
   $680 = HEAP32[$679>>2]|0;
   $681 = ((($680)) + 12|0);
   $682 = HEAP32[$681>>2]|0;
   $683 = (($682) + ($677)|0);
   $684 = HEAP8[$683>>0]|0;
   $685 = $684&255;
   $686 = (($674) + ($685))|0;
   $687 = (($686|0) / 2)&-1;
   $688 = $687&255;
   $689 = $i4;
   $690 = $5;
   $691 = ((($690)) + 100|0);
   $692 = HEAP32[$691>>2]|0;
   $693 = ((($692)) + 12|0);
   $694 = HEAP32[$693>>2]|0;
   $695 = (($694) + ($689)|0);
   HEAP8[$695>>0] = $688;
  }
  $696 = $i4;
  $697 = (($696) + -1)|0;
  $i4 = $697;
 }
 STACKTOP = sp;return;
}
function _get_top_and_left_Cr_border($size,$x,$y,$block_x,$block_y,$context) {
 $size = $size|0;
 $x = $x|0;
 $y = $y|0;
 $block_x = $block_x|0;
 $block_y = $block_y|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $col = 0, $i = 0;
 var $i1 = 0, $i2 = 0, $i3 = 0, $i4 = 0, $left_flag = 0, $left_num = 0, $or$cond = 0, $or$cond3 = 0, $row = 0, $top_flag = 0, $top_num = 0, $x_real = 0, $xx_real = 0, $y_real = 0, $yy_real = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $size;
 $1 = $x;
 $2 = $y;
 $3 = $block_x;
 $4 = $block_y;
 $5 = $context;
 $6 = $5;
 $7 = ((($6)) + 172|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8|0) / 2)&-1;
 $row = $9;
 $10 = $5;
 $11 = ((($10)) + 184|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12|0) / 2)&-1;
 $col = $13;
 $14 = $1;
 $15 = $3;
 $16 = (($14) + ($15))|0;
 $17 = (($16) - 1)|0;
 $xx_real = $17;
 $18 = $2;
 $19 = $4;
 $20 = (($18) + ($19))|0;
 $21 = (($20) - 1)|0;
 $yy_real = $21;
 $left_num = 0;
 $top_num = 0;
 $left_flag = 0;
 $top_flag = 0;
 $22 = $xx_real;
 $23 = ($22|0)<(0);
 if ($23) {
  label = 5;
 } else {
  $24 = $xx_real;
  $25 = $row;
  $26 = ($24|0)>=($25|0);
  $27 = $yy_real;
  $28 = ($27|0)<(0);
  $or$cond = $26 | $28;
  if ($or$cond) {
   label = 5;
  } else {
   $29 = $yy_real;
   $30 = $col;
   $31 = ($29|0)>=($30|0);
   if ($31) {
    label = 5;
   } else {
    $32 = $xx_real;
    $33 = $col;
    $34 = Math_imul($32, $33)|0;
    $35 = $yy_real;
    $36 = (($34) + ($35))|0;
    $37 = $5;
    $38 = ((($37)) + 96|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($39)) + 20|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (($41) + ($36)|0);
    $43 = HEAP8[$42>>0]|0;
    $44 = $43 << 24 >> 24;
    $45 = ($44|0)!=(1);
    if ($45) {
     label = 5;
    } else {
     $252 = $xx_real;
     $253 = $col;
     $254 = Math_imul($252, $253)|0;
     $255 = $yy_real;
     $256 = (($254) + ($255))|0;
     $257 = $5;
     $258 = ((($257)) + 96|0);
     $259 = HEAP32[$258>>2]|0;
     $260 = ((($259)) + 8|0);
     $261 = HEAP32[$260>>2]|0;
     $262 = (($261) + ($256)|0);
     $263 = HEAP8[$262>>0]|0;
     $264 = $0;
     $265 = (($264) - 1)|0;
     $266 = $5;
     $267 = ((($266)) + 100|0);
     $268 = HEAP32[$267>>2]|0;
     $269 = ((($268)) + 16|0);
     $270 = HEAP32[$269>>2]|0;
     $271 = (($270) + ($265)|0);
     HEAP8[$271>>0] = $263;
     $272 = $xx_real;
     $273 = $col;
     $274 = Math_imul($272, $273)|0;
     $275 = $yy_real;
     $276 = (($274) + ($275))|0;
     $277 = $5;
     $278 = ((($277)) + 96|0);
     $279 = HEAP32[$278>>2]|0;
     $280 = ((($279)) + 8|0);
     $281 = HEAP32[$280>>2]|0;
     $282 = (($281) + ($276)|0);
     $283 = HEAP8[$282>>0]|0;
     $284 = $0;
     $285 = (($284) - 1)|0;
     $286 = $5;
     $287 = ((($286)) + 100|0);
     $288 = HEAP32[$287>>2]|0;
     $289 = ((($288)) + 20|0);
     $290 = HEAP32[$289>>2]|0;
     $291 = (($290) + ($285)|0);
     HEAP8[$291>>0] = $283;
     $left_flag = 1;
     $top_flag = 1;
     $292 = $xx_real;
     $293 = $col;
     $294 = Math_imul($292, $293)|0;
     $295 = $yy_real;
     $296 = (($294) + ($295))|0;
     $297 = $5;
     $298 = ((($297)) + 96|0);
     $299 = HEAP32[$298>>2]|0;
     $300 = ((($299)) + 8|0);
     $301 = HEAP32[$300>>2]|0;
     $302 = (($301) + ($296)|0);
     $303 = HEAP8[$302>>0]|0;
     $left_num = $303;
     $304 = $xx_real;
     $305 = $col;
     $306 = Math_imul($304, $305)|0;
     $307 = $yy_real;
     $308 = (($306) + ($307))|0;
     $309 = $5;
     $310 = ((($309)) + 96|0);
     $311 = HEAP32[$310>>2]|0;
     $312 = ((($311)) + 8|0);
     $313 = HEAP32[$312>>2]|0;
     $314 = (($313) + ($308)|0);
     $315 = HEAP8[$314>>0]|0;
     $top_num = $315;
    }
   }
  }
 }
 do {
  if ((label|0) == 5) {
   $46 = $xx_real;
   $47 = (($46) + 1)|0;
   $48 = ($47|0)>=(0);
   if ($48) {
    $49 = $xx_real;
    $50 = (($49) + 1)|0;
    $51 = $row;
    $52 = ($50|0)<($51|0);
    $53 = $yy_real;
    $54 = ($53|0)>=(0);
    $or$cond3 = $52 & $54;
    if ($or$cond3) {
     $55 = $yy_real;
     $56 = $col;
     $57 = ($55|0)<($56|0);
     if ($57) {
      $58 = $xx_real;
      $59 = (($58) + 1)|0;
      $60 = $col;
      $61 = Math_imul($59, $60)|0;
      $62 = $yy_real;
      $63 = (($61) + ($62))|0;
      $64 = $5;
      $65 = ((($64)) + 96|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ((($66)) + 20|0);
      $68 = HEAP32[$67>>2]|0;
      $69 = (($68) + ($63)|0);
      $70 = HEAP8[$69>>0]|0;
      $71 = $70 << 24 >> 24;
      $72 = ($71|0)==(1);
      if ($72) {
       $73 = $xx_real;
       $74 = (($73) + 1)|0;
       $75 = $col;
       $76 = Math_imul($74, $75)|0;
       $77 = $yy_real;
       $78 = (($76) + ($77))|0;
       $79 = $5;
       $80 = ((($79)) + 96|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ((($81)) + 8|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = (($83) + ($78)|0);
       $85 = HEAP8[$84>>0]|0;
       $86 = $0;
       $87 = (($86) - 1)|0;
       $88 = $5;
       $89 = ((($88)) + 100|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ((($90)) + 16|0);
       $92 = HEAP32[$91>>2]|0;
       $93 = (($92) + ($87)|0);
       HEAP8[$93>>0] = $85;
       $94 = $xx_real;
       $95 = (($94) + 1)|0;
       $96 = $col;
       $97 = Math_imul($95, $96)|0;
       $98 = $yy_real;
       $99 = (($97) + ($98))|0;
       $100 = $5;
       $101 = ((($100)) + 96|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = ((($102)) + 8|0);
       $104 = HEAP32[$103>>2]|0;
       $105 = (($104) + ($99)|0);
       $106 = HEAP8[$105>>0]|0;
       $107 = $0;
       $108 = (($107) - 1)|0;
       $109 = $5;
       $110 = ((($109)) + 100|0);
       $111 = HEAP32[$110>>2]|0;
       $112 = ((($111)) + 20|0);
       $113 = HEAP32[$112>>2]|0;
       $114 = (($113) + ($108)|0);
       HEAP8[$114>>0] = $106;
       $115 = $xx_real;
       $116 = (($115) + 1)|0;
       $117 = $col;
       $118 = Math_imul($116, $117)|0;
       $119 = $yy_real;
       $120 = (($118) + ($119))|0;
       $121 = $5;
       $122 = ((($121)) + 96|0);
       $123 = HEAP32[$122>>2]|0;
       $124 = ((($123)) + 8|0);
       $125 = HEAP32[$124>>2]|0;
       $126 = (($125) + ($120)|0);
       $127 = HEAP8[$126>>0]|0;
       $left_num = $127;
       $128 = $xx_real;
       $129 = (($128) + 1)|0;
       $130 = $col;
       $131 = Math_imul($129, $130)|0;
       $132 = $yy_real;
       $133 = (($131) + ($132))|0;
       $134 = $5;
       $135 = ((($134)) + 96|0);
       $136 = HEAP32[$135>>2]|0;
       $137 = ((($136)) + 8|0);
       $138 = HEAP32[$137>>2]|0;
       $139 = (($138) + ($133)|0);
       $140 = HEAP8[$139>>0]|0;
       $top_num = $140;
       $left_flag = 1;
       $top_flag = 1;
       break;
      }
     }
    }
   }
   $141 = $xx_real;
   $142 = ($141|0)>=(0);
   if ($142) {
    $143 = $xx_real;
    $144 = $row;
    $145 = ($143|0)<($144|0);
    if ($145) {
     $146 = $yy_real;
     $147 = (($146) + 1)|0;
     $148 = ($147|0)>=(0);
     if ($148) {
      $149 = $yy_real;
      $150 = (($149) + 1)|0;
      $151 = $col;
      $152 = ($150|0)<($151|0);
      if ($152) {
       $153 = $xx_real;
       $154 = $col;
       $155 = Math_imul($153, $154)|0;
       $156 = $yy_real;
       $157 = (($156) + 1)|0;
       $158 = (($155) + ($157))|0;
       $159 = $5;
       $160 = ((($159)) + 96|0);
       $161 = HEAP32[$160>>2]|0;
       $162 = ((($161)) + 20|0);
       $163 = HEAP32[$162>>2]|0;
       $164 = (($163) + ($158)|0);
       $165 = HEAP8[$164>>0]|0;
       $166 = $165 << 24 >> 24;
       $167 = ($166|0)==(1);
       if ($167) {
        $168 = $xx_real;
        $169 = $col;
        $170 = Math_imul($168, $169)|0;
        $171 = $yy_real;
        $172 = (($171) + 1)|0;
        $173 = (($170) + ($172))|0;
        $174 = $5;
        $175 = ((($174)) + 96|0);
        $176 = HEAP32[$175>>2]|0;
        $177 = ((($176)) + 8|0);
        $178 = HEAP32[$177>>2]|0;
        $179 = (($178) + ($173)|0);
        $180 = HEAP8[$179>>0]|0;
        $181 = $0;
        $182 = (($181) - 1)|0;
        $183 = $5;
        $184 = ((($183)) + 100|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ((($185)) + 16|0);
        $187 = HEAP32[$186>>2]|0;
        $188 = (($187) + ($182)|0);
        HEAP8[$188>>0] = $180;
        $189 = $xx_real;
        $190 = $col;
        $191 = Math_imul($189, $190)|0;
        $192 = $yy_real;
        $193 = (($192) + 1)|0;
        $194 = (($191) + ($193))|0;
        $195 = $5;
        $196 = ((($195)) + 96|0);
        $197 = HEAP32[$196>>2]|0;
        $198 = ((($197)) + 8|0);
        $199 = HEAP32[$198>>2]|0;
        $200 = (($199) + ($194)|0);
        $201 = HEAP8[$200>>0]|0;
        $202 = $0;
        $203 = (($202) - 1)|0;
        $204 = $5;
        $205 = ((($204)) + 100|0);
        $206 = HEAP32[$205>>2]|0;
        $207 = ((($206)) + 20|0);
        $208 = HEAP32[$207>>2]|0;
        $209 = (($208) + ($203)|0);
        HEAP8[$209>>0] = $201;
        $210 = $xx_real;
        $211 = $col;
        $212 = Math_imul($210, $211)|0;
        $213 = $yy_real;
        $214 = (($213) + 1)|0;
        $215 = (($212) + ($214))|0;
        $216 = $5;
        $217 = ((($216)) + 96|0);
        $218 = HEAP32[$217>>2]|0;
        $219 = ((($218)) + 8|0);
        $220 = HEAP32[$219>>2]|0;
        $221 = (($220) + ($215)|0);
        $222 = HEAP8[$221>>0]|0;
        $left_num = $222;
        $223 = $xx_real;
        $224 = $col;
        $225 = Math_imul($223, $224)|0;
        $226 = $yy_real;
        $227 = (($226) + 1)|0;
        $228 = (($225) + ($227))|0;
        $229 = $5;
        $230 = ((($229)) + 96|0);
        $231 = HEAP32[$230>>2]|0;
        $232 = ((($231)) + 8|0);
        $233 = HEAP32[$232>>2]|0;
        $234 = (($233) + ($228)|0);
        $235 = HEAP8[$234>>0]|0;
        $top_num = $235;
        $left_flag = 1;
        $top_flag = 1;
        break;
       }
      }
     }
    }
   }
   $236 = $0;
   $237 = (($236) - 1)|0;
   $238 = $5;
   $239 = ((($238)) + 100|0);
   $240 = HEAP32[$239>>2]|0;
   $241 = ((($240)) + 16|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = (($242) + ($237)|0);
   HEAP8[$243>>0] = -128;
   $244 = $0;
   $245 = (($244) - 1)|0;
   $246 = $5;
   $247 = ((($246)) + 100|0);
   $248 = HEAP32[$247>>2]|0;
   $249 = ((($248)) + 20|0);
   $250 = HEAP32[$249>>2]|0;
   $251 = (($250) + ($245)|0);
   HEAP8[$251>>0] = -128;
  }
 } while(0);
 $i = 0;
 while(1) {
  $316 = $i;
  $317 = $0;
  $318 = ($317*3)|0;
  $319 = ($316|0)<($318|0);
  if (!($319)) {
   break;
  }
  $320 = $i;
  $321 = $0;
  $322 = (($321) - 1)|0;
  $323 = ($320|0)==($322|0);
  do {
   if (!($323)) {
    $324 = $i;
    $325 = $2;
    $326 = (($324) + ($325))|0;
    $327 = $4;
    $328 = (($326) + ($327))|0;
    $329 = $0;
    $330 = (($328) - ($329))|0;
    $y_real = $330;
    $331 = $y_real;
    $332 = ($331|0)>=(0);
    if ($332) {
     $333 = $y_real;
     $334 = $col;
     $335 = ($333|0)<($334|0);
     if ($335) {
      $336 = $1;
      $337 = $3;
      $338 = (($336) + ($337))|0;
      $339 = (($338) - 1)|0;
      $340 = ($339|0)>=(0);
      if ($340) {
       $341 = $1;
       $342 = $3;
       $343 = (($341) + ($342))|0;
       $344 = (($343) - 1)|0;
       $345 = $row;
       $346 = ($344|0)<($345|0);
       if ($346) {
        $347 = $5;
        $348 = ((($347)) + 96|0);
        $349 = HEAP32[$348>>2]|0;
        $350 = ((($349)) + 20|0);
        $351 = HEAP32[$350>>2]|0;
        $352 = $1;
        $353 = $3;
        $354 = (($352) + ($353))|0;
        $355 = (($354) - 1)|0;
        $356 = $col;
        $357 = Math_imul($355, $356)|0;
        $358 = (($351) + ($357)|0);
        $359 = $y_real;
        $360 = (($358) + ($359)|0);
        $361 = HEAP8[$360>>0]|0;
        $362 = $361 << 24 >> 24;
        $363 = ($362|0)==(1);
        if ($363) {
         $364 = $5;
         $365 = ((($364)) + 96|0);
         $366 = HEAP32[$365>>2]|0;
         $367 = ((($366)) + 8|0);
         $368 = HEAP32[$367>>2]|0;
         $369 = $1;
         $370 = $3;
         $371 = (($369) + ($370))|0;
         $372 = (($371) - 1)|0;
         $373 = $col;
         $374 = Math_imul($372, $373)|0;
         $375 = (($368) + ($374)|0);
         $376 = $y_real;
         $377 = (($375) + ($376)|0);
         $378 = HEAP8[$377>>0]|0;
         $379 = $5;
         $380 = ((($379)) + 100|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ((($381)) + 16|0);
         $383 = HEAP32[$382>>2]|0;
         $384 = $i;
         $385 = (($383) + ($384)|0);
         HEAP8[$385>>0] = $378;
         $386 = $1;
         $387 = $3;
         $388 = (($386) + ($387))|0;
         $389 = (($388) - 1)|0;
         $390 = $col;
         $391 = Math_imul($389, $390)|0;
         $392 = $y_real;
         $393 = (($391) + ($392))|0;
         $394 = $5;
         $395 = ((($394)) + 96|0);
         $396 = HEAP32[$395>>2]|0;
         $397 = ((($396)) + 8|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = (($398) + ($393)|0);
         $400 = HEAP8[$399>>0]|0;
         $top_num = $400;
         $top_flag = 1;
         break;
        }
       }
      }
     }
    }
    $401 = $top_flag;
    $402 = ($401|0)==(1);
    if ($402) {
     $403 = $top_num;
     $404 = $i;
     $405 = $5;
     $406 = ((($405)) + 100|0);
     $407 = HEAP32[$406>>2]|0;
     $408 = ((($407)) + 16|0);
     $409 = HEAP32[$408>>2]|0;
     $410 = (($409) + ($404)|0);
     HEAP8[$410>>0] = $403;
     break;
    } else {
     $411 = $i;
     $412 = $5;
     $413 = ((($412)) + 100|0);
     $414 = HEAP32[$413>>2]|0;
     $415 = ((($414)) + 16|0);
     $416 = HEAP32[$415>>2]|0;
     $417 = (($416) + ($411)|0);
     HEAP8[$417>>0] = -128;
     break;
    }
   }
  } while(0);
  $418 = $i;
  $419 = (($418) + 1)|0;
  $i = $419;
 }
 $i1 = 0;
 while(1) {
  $420 = $i1;
  $421 = $0;
  $422 = ($421*3)|0;
  $423 = ($420|0)<($422|0);
  if (!($423)) {
   break;
  }
  $424 = $i1;
  $425 = $0;
  $426 = (($425) - 1)|0;
  $427 = ($424|0)==($426|0);
  do {
   if (!($427)) {
    $428 = $i1;
    $429 = $1;
    $430 = (($428) + ($429))|0;
    $431 = $3;
    $432 = (($430) + ($431))|0;
    $433 = $0;
    $434 = (($432) - ($433))|0;
    $x_real = $434;
    $435 = $x_real;
    $436 = ($435|0)>=(0);
    if ($436) {
     $437 = $x_real;
     $438 = $row;
     $439 = ($437|0)<($438|0);
     if ($439) {
      $440 = $2;
      $441 = $4;
      $442 = (($440) + ($441))|0;
      $443 = (($442) - 1)|0;
      $444 = ($443|0)>=(0);
      if ($444) {
       $445 = $2;
       $446 = $4;
       $447 = (($445) + ($446))|0;
       $448 = (($447) - 1)|0;
       $449 = $col;
       $450 = ($448|0)<($449|0);
       if ($450) {
        $451 = $5;
        $452 = ((($451)) + 96|0);
        $453 = HEAP32[$452>>2]|0;
        $454 = ((($453)) + 20|0);
        $455 = HEAP32[$454>>2]|0;
        $456 = $x_real;
        $457 = $col;
        $458 = Math_imul($456, $457)|0;
        $459 = (($455) + ($458)|0);
        $460 = $2;
        $461 = (($459) + ($460)|0);
        $462 = $4;
        $463 = (($461) + ($462)|0);
        $464 = ((($463)) + -1|0);
        $465 = HEAP8[$464>>0]|0;
        $466 = $465 << 24 >> 24;
        $467 = ($466|0)==(1);
        if ($467) {
         $468 = $5;
         $469 = ((($468)) + 96|0);
         $470 = HEAP32[$469>>2]|0;
         $471 = ((($470)) + 8|0);
         $472 = HEAP32[$471>>2]|0;
         $473 = $x_real;
         $474 = $col;
         $475 = Math_imul($473, $474)|0;
         $476 = (($472) + ($475)|0);
         $477 = $2;
         $478 = (($476) + ($477)|0);
         $479 = $4;
         $480 = (($478) + ($479)|0);
         $481 = ((($480)) + -1|0);
         $482 = HEAP8[$481>>0]|0;
         $483 = $5;
         $484 = ((($483)) + 100|0);
         $485 = HEAP32[$484>>2]|0;
         $486 = ((($485)) + 20|0);
         $487 = HEAP32[$486>>2]|0;
         $488 = $i1;
         $489 = (($487) + ($488)|0);
         HEAP8[$489>>0] = $482;
         $490 = $x_real;
         $491 = $col;
         $492 = Math_imul($490, $491)|0;
         $493 = $2;
         $494 = (($492) + ($493))|0;
         $495 = $4;
         $496 = (($494) + ($495))|0;
         $497 = (($496) - 1)|0;
         $498 = $5;
         $499 = ((($498)) + 96|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = ((($500)) + 8|0);
         $502 = HEAP32[$501>>2]|0;
         $503 = (($502) + ($497)|0);
         $504 = HEAP8[$503>>0]|0;
         $left_num = $504;
         $left_flag = 1;
         break;
        }
       }
      }
     }
    }
    $505 = $left_flag;
    $506 = ($505|0)==(1);
    if ($506) {
     $507 = $left_num;
     $508 = $i1;
     $509 = $5;
     $510 = ((($509)) + 100|0);
     $511 = HEAP32[$510>>2]|0;
     $512 = ((($511)) + 20|0);
     $513 = HEAP32[$512>>2]|0;
     $514 = (($513) + ($508)|0);
     HEAP8[$514>>0] = $507;
     break;
    } else {
     $515 = $i1;
     $516 = $5;
     $517 = ((($516)) + 100|0);
     $518 = HEAP32[$517>>2]|0;
     $519 = ((($518)) + 20|0);
     $520 = HEAP32[$519>>2]|0;
     $521 = (($520) + ($515)|0);
     HEAP8[$521>>0] = -128;
     break;
    }
   }
  } while(0);
  $522 = $i1;
  $523 = (($522) + 1)|0;
  $i1 = $523;
 }
 $i2 = 0;
 while(1) {
  $524 = $i2;
  $525 = $0;
  $526 = ($525*3)|0;
  $527 = ($524|0)<($526|0);
  if (!($527)) {
   break;
  }
  $528 = $i2;
  $529 = $5;
  $530 = ((($529)) + 100|0);
  $531 = HEAP32[$530>>2]|0;
  $532 = ((($531)) + 16|0);
  $533 = HEAP32[$532>>2]|0;
  $534 = (($533) + ($528)|0);
  $535 = HEAP8[$534>>0]|0;
  $536 = $i2;
  $537 = $5;
  $538 = ((($537)) + 100|0);
  $539 = HEAP32[$538>>2]|0;
  $540 = ((($539)) + 40|0);
  $541 = HEAP32[$540>>2]|0;
  $542 = (($541) + ($536)|0);
  HEAP8[$542>>0] = $535;
  $543 = $i2;
  $544 = $5;
  $545 = ((($544)) + 100|0);
  $546 = HEAP32[$545>>2]|0;
  $547 = ((($546)) + 20|0);
  $548 = HEAP32[$547>>2]|0;
  $549 = (($548) + ($543)|0);
  $550 = HEAP8[$549>>0]|0;
  $551 = $i2;
  $552 = $5;
  $553 = ((($552)) + 100|0);
  $554 = HEAP32[$553>>2]|0;
  $555 = ((($554)) + 44|0);
  $556 = HEAP32[$555>>2]|0;
  $557 = (($556) + ($551)|0);
  HEAP8[$557>>0] = $550;
  $558 = $i2;
  $559 = (($558) + 1)|0;
  $i2 = $559;
 }
 $560 = $0;
 $561 = $560<<1;
 $0 = $561;
 $562 = $0;
 $563 = ($562*3)|0;
 $564 = (($563|0) / 2)&-1;
 $565 = (($564) - 1)|0;
 $566 = $5;
 $567 = ((($566)) + 100|0);
 $568 = HEAP32[$567>>2]|0;
 $569 = ((($568)) + 16|0);
 $570 = HEAP32[$569>>2]|0;
 $571 = (($570) + ($565)|0);
 $572 = HEAP8[$571>>0]|0;
 $573 = $0;
 $574 = ($573*3)|0;
 $575 = (($574) - 1)|0;
 $576 = $5;
 $577 = ((($576)) + 100|0);
 $578 = HEAP32[$577>>2]|0;
 $579 = ((($578)) + 16|0);
 $580 = HEAP32[$579>>2]|0;
 $581 = (($580) + ($575)|0);
 HEAP8[$581>>0] = $572;
 $582 = $0;
 $583 = ($582*3)|0;
 $584 = (($583) - 2)|0;
 $i3 = $584;
 while(1) {
  $585 = $i3;
  $586 = ($585|0)>=(0);
  if (!($586)) {
   break;
  }
  $587 = $i3;
  $588 = $587 & 1;
  $589 = ($588|0)==(0);
  $590 = $i3;
  $591 = (($590|0) / 2)&-1;
  $592 = $5;
  $593 = ((($592)) + 100|0);
  $594 = HEAP32[$593>>2]|0;
  $595 = ((($594)) + 16|0);
  $596 = HEAP32[$595>>2]|0;
  $597 = (($596) + ($591)|0);
  $598 = HEAP8[$597>>0]|0;
  if ($589) {
   $599 = $i3;
   $600 = $5;
   $601 = ((($600)) + 100|0);
   $602 = HEAP32[$601>>2]|0;
   $603 = ((($602)) + 16|0);
   $604 = HEAP32[$603>>2]|0;
   $605 = (($604) + ($599)|0);
   HEAP8[$605>>0] = $598;
  } else {
   $606 = $598&255;
   $607 = $i3;
   $608 = (($607) + 1)|0;
   $609 = (($608|0) / 2)&-1;
   $610 = $5;
   $611 = ((($610)) + 100|0);
   $612 = HEAP32[$611>>2]|0;
   $613 = ((($612)) + 16|0);
   $614 = HEAP32[$613>>2]|0;
   $615 = (($614) + ($609)|0);
   $616 = HEAP8[$615>>0]|0;
   $617 = $616&255;
   $618 = (($606) + ($617))|0;
   $619 = (($618|0) / 2)&-1;
   $620 = $619&255;
   $621 = $i3;
   $622 = $5;
   $623 = ((($622)) + 100|0);
   $624 = HEAP32[$623>>2]|0;
   $625 = ((($624)) + 16|0);
   $626 = HEAP32[$625>>2]|0;
   $627 = (($626) + ($621)|0);
   HEAP8[$627>>0] = $620;
  }
  $628 = $i3;
  $629 = (($628) + -1)|0;
  $i3 = $629;
 }
 $630 = $0;
 $631 = ($630*3)|0;
 $632 = (($631|0) / 2)&-1;
 $633 = (($632) - 1)|0;
 $634 = $5;
 $635 = ((($634)) + 100|0);
 $636 = HEAP32[$635>>2]|0;
 $637 = ((($636)) + 20|0);
 $638 = HEAP32[$637>>2]|0;
 $639 = (($638) + ($633)|0);
 $640 = HEAP8[$639>>0]|0;
 $641 = $0;
 $642 = ($641*3)|0;
 $643 = (($642) - 1)|0;
 $644 = $5;
 $645 = ((($644)) + 100|0);
 $646 = HEAP32[$645>>2]|0;
 $647 = ((($646)) + 20|0);
 $648 = HEAP32[$647>>2]|0;
 $649 = (($648) + ($643)|0);
 HEAP8[$649>>0] = $640;
 $650 = $0;
 $651 = ($650*3)|0;
 $652 = (($651) - 2)|0;
 $i4 = $652;
 while(1) {
  $653 = $i4;
  $654 = ($653|0)>=(0);
  if (!($654)) {
   break;
  }
  $655 = $i4;
  $656 = $655 & 1;
  $657 = ($656|0)==(0);
  $658 = $i4;
  $659 = (($658|0) / 2)&-1;
  $660 = $5;
  $661 = ((($660)) + 100|0);
  $662 = HEAP32[$661>>2]|0;
  $663 = ((($662)) + 20|0);
  $664 = HEAP32[$663>>2]|0;
  $665 = (($664) + ($659)|0);
  $666 = HEAP8[$665>>0]|0;
  if ($657) {
   $667 = $i4;
   $668 = $5;
   $669 = ((($668)) + 100|0);
   $670 = HEAP32[$669>>2]|0;
   $671 = ((($670)) + 20|0);
   $672 = HEAP32[$671>>2]|0;
   $673 = (($672) + ($667)|0);
   HEAP8[$673>>0] = $666;
  } else {
   $674 = $666&255;
   $675 = $i4;
   $676 = (($675) + 1)|0;
   $677 = (($676|0) / 2)&-1;
   $678 = $5;
   $679 = ((($678)) + 100|0);
   $680 = HEAP32[$679>>2]|0;
   $681 = ((($680)) + 20|0);
   $682 = HEAP32[$681>>2]|0;
   $683 = (($682) + ($677)|0);
   $684 = HEAP8[$683>>0]|0;
   $685 = $684&255;
   $686 = (($674) + ($685))|0;
   $687 = (($686|0) / 2)&-1;
   $688 = $687&255;
   $689 = $i4;
   $690 = $5;
   $691 = ((($690)) + 100|0);
   $692 = HEAP32[$691>>2]|0;
   $693 = ((($692)) + 20|0);
   $694 = HEAP32[$693>>2]|0;
   $695 = (($694) + ($689)|0);
   HEAP8[$695>>0] = $688;
  }
  $696 = $i4;
  $697 = (($696) + -1)|0;
  $i4 = $697;
 }
 STACKTOP = sp;return;
}
function _predict_block_border($direction,$size,$context,$block_num) {
 $direction = $direction|0;
 $size = $size|0;
 $context = $context|0;
 $block_num = $block_num|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $direction;
 $1 = $size;
 $2 = $context;
 $3 = $block_num;
 $4 = $0;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = $3;
  $7 = $2;
  $8 = ((($7)) + 88|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + ($6<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $2;
  $15 = ((($14)) + 100|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ((($16)) + 24|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = $1;
  $20 = (($18) + ($19)|0);
  $21 = $2;
  $22 = ((($21)) + 100|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($23)) + 28|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $1;
  $27 = (($25) + ($26)|0);
  $28 = $1;
  $29 = $1;
  $30 = (+($29|0));
  $31 = (+_log2($30));
  $32 = (~~(($31)));
  _pred_planar($13,$20,$27,$28,$32);
  STACKTOP = sp;return;
 }
 $33 = $0;
 $34 = ($33|0)==(1);
 $35 = $3;
 $36 = $2;
 $37 = ((($36)) + 88|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = (($38) + ($35<<2)|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ((($40)) + 4|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = $2;
 $44 = ((($43)) + 100|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ((($45)) + 24|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = $1;
 $49 = (($47) + ($48)|0);
 $50 = $2;
 $51 = ((($50)) + 100|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ((($52)) + 28|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = $1;
 $56 = (($54) + ($55)|0);
 $57 = $1;
 $58 = $1;
 if ($34) {
  $59 = (+($58|0));
  $60 = (+_log2($59));
  $61 = (~~(($60)));
  _pred_dc($42,$49,$56,$57,$61,0);
  STACKTOP = sp;return;
 } else {
  $62 = $0;
  _pre_angular($42,$49,$56,$57,$58,$62);
  STACKTOP = sp;return;
 }
}
function _predict_block_border_Cb($direction,$size,$context,$block_num) {
 $direction = $direction|0;
 $size = $size|0;
 $context = $context|0;
 $block_num = $block_num|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $direction;
 $1 = $size;
 $2 = $context;
 $3 = $block_num;
 $4 = $0;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = $3;
  $7 = $2;
  $8 = ((($7)) + 88|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + ($6<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $2;
  $15 = ((($14)) + 100|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ((($16)) + 32|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = $1;
  $20 = (($18) + ($19)|0);
  $21 = $2;
  $22 = ((($21)) + 100|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($23)) + 36|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $1;
  $27 = (($25) + ($26)|0);
  $28 = $1;
  $29 = $1;
  $30 = (+($29|0));
  $31 = (+_log2($30));
  $32 = (~~(($31)));
  _pred_planar($13,$20,$27,$28,$32);
  STACKTOP = sp;return;
 }
 $33 = $0;
 $34 = ($33|0)==(1);
 $35 = $3;
 $36 = $2;
 $37 = ((($36)) + 88|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = (($38) + ($35<<2)|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ((($40)) + 4|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = $2;
 $44 = ((($43)) + 100|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ((($45)) + 32|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = $1;
 $49 = (($47) + ($48)|0);
 $50 = $2;
 $51 = ((($50)) + 100|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ((($52)) + 36|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = $1;
 $56 = (($54) + ($55)|0);
 $57 = $1;
 $58 = $1;
 if ($34) {
  $59 = (+($58|0));
  $60 = (+_log2($59));
  $61 = (~~(($60)));
  _pred_dc($42,$49,$56,$57,$61,0);
  STACKTOP = sp;return;
 } else {
  $62 = $0;
  _pre_angular($42,$49,$56,$57,$58,$62);
  STACKTOP = sp;return;
 }
}
function _predict_block_border_Cr($direction,$size,$context,$block_num) {
 $direction = $direction|0;
 $size = $size|0;
 $context = $context|0;
 $block_num = $block_num|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $direction;
 $1 = $size;
 $2 = $context;
 $3 = $block_num;
 $4 = $0;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = $3;
  $7 = $2;
  $8 = ((($7)) + 88|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + ($6<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $2;
  $15 = ((($14)) + 100|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ((($16)) + 40|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = $1;
  $20 = (($18) + ($19)|0);
  $21 = $2;
  $22 = ((($21)) + 100|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($23)) + 44|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $1;
  $27 = (($25) + ($26)|0);
  $28 = $1;
  $29 = $1;
  $30 = (+($29|0));
  $31 = (+_log2($30));
  $32 = (~~(($31)));
  _pred_planar($13,$20,$27,$28,$32);
  STACKTOP = sp;return;
 }
 $33 = $0;
 $34 = ($33|0)==(1);
 $35 = $3;
 $36 = $2;
 $37 = ((($36)) + 88|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = (($38) + ($35<<2)|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ((($40)) + 4|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = $2;
 $44 = ((($43)) + 100|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ((($45)) + 40|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = $1;
 $49 = (($47) + ($48)|0);
 $50 = $2;
 $51 = ((($50)) + 100|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ((($52)) + 44|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = $1;
 $56 = (($54) + ($55)|0);
 $57 = $1;
 $58 = $1;
 if ($34) {
  $59 = (+($58|0));
  $60 = (+_log2($59));
  $61 = (~~(($60)));
  _pred_dc($42,$49,$56,$57,$61,0);
  STACKTOP = sp;return;
 } else {
  $62 = $0;
  _pre_angular($42,$49,$56,$57,$58,$62);
  STACKTOP = sp;return;
 }
}
function _weak_filter_reference($reference,$size) {
 $reference = $reference|0;
 $size = $size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $i = 0, $i1 = 0, $reference_temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $reference;
 $1 = $size;
 $2 = $1;
 $3 = ($2*3)|0;
 $4 = (_malloc($3)|0);
 $reference_temp = $4;
 $5 = $0;
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 $8 = ($7*3)|0;
 $9 = $0;
 $10 = ((($9)) + 1|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11&255;
 $13 = (($8) + ($12))|0;
 $14 = (($13) + 2)|0;
 $15 = $14 >> 2;
 $16 = $15&255;
 $17 = $reference_temp;
 HEAP8[$17>>0] = $16;
 $18 = $1;
 $19 = ($18*3)|0;
 $20 = (($19) - 1)|0;
 $21 = $0;
 $22 = (($21) + ($20)|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = $23&255;
 $25 = ($24*3)|0;
 $26 = $1;
 $27 = ($26*3)|0;
 $28 = (($27) - 2)|0;
 $29 = $0;
 $30 = (($29) + ($28)|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $31&255;
 $33 = (($25) + ($32))|0;
 $34 = (($33) + 2)|0;
 $35 = $34 >> 2;
 $36 = $35&255;
 $37 = $1;
 $38 = ($37*3)|0;
 $39 = (($38) - 1)|0;
 $40 = $reference_temp;
 $41 = (($40) + ($39)|0);
 HEAP8[$41>>0] = $36;
 $i = 1;
 while(1) {
  $42 = $i;
  $43 = $1;
  $44 = ($43*3)|0;
  $45 = (($44) - 1)|0;
  $46 = ($42|0)<($45|0);
  if (!($46)) {
   break;
  }
  $47 = $i;
  $48 = $0;
  $49 = (($48) + ($47)|0);
  $50 = HEAP8[$49>>0]|0;
  $51 = $50&255;
  $52 = $51<<1;
  $53 = $i;
  $54 = (($53) - 1)|0;
  $55 = $0;
  $56 = (($55) + ($54)|0);
  $57 = HEAP8[$56>>0]|0;
  $58 = $57&255;
  $59 = (($52) + ($58))|0;
  $60 = $i;
  $61 = (($60) + 1)|0;
  $62 = $0;
  $63 = (($62) + ($61)|0);
  $64 = HEAP8[$63>>0]|0;
  $65 = $64&255;
  $66 = (($59) + ($65))|0;
  $67 = (($66) + 2)|0;
  $68 = $67 >> 2;
  $69 = $68&255;
  $70 = $i;
  $71 = $reference_temp;
  $72 = (($71) + ($70)|0);
  HEAP8[$72>>0] = $69;
  $73 = $i;
  $74 = (($73) + 1)|0;
  $i = $74;
 }
 $i1 = 0;
 while(1) {
  $75 = $i1;
  $76 = $1;
  $77 = ($76*3)|0;
  $78 = ($75|0)<($77|0);
  if (!($78)) {
   break;
  }
  $79 = $i1;
  $80 = $reference_temp;
  $81 = (($80) + ($79)|0);
  $82 = HEAP8[$81>>0]|0;
  $83 = $i1;
  $84 = $0;
  $85 = (($84) + ($83)|0);
  HEAP8[$85>>0] = $82;
  $86 = $i1;
  $87 = (($86) + 1)|0;
  $i1 = $87;
 }
 $88 = $reference_temp;
 _free($88);
 STACKTOP = sp;return;
}
function _strong_filter_reference($reference,$size) {
 $reference = $reference|0;
 $size = $size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0.0;
 var $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $gap_reference = 0.0, $i = 0, $i1 = 0, $reference_temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $reference;
 $1 = $size;
 $2 = $1;
 $3 = ($2*3)|0;
 $4 = (_malloc($3)|0);
 $reference_temp = $4;
 $5 = $1;
 $6 = ($5*3)|0;
 $7 = (($6) - 1)|0;
 $8 = $0;
 $9 = (($8) + ($7)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = (+($10&255));
 $12 = $0;
 $13 = HEAP8[$12>>0]|0;
 $14 = (+($13&255));
 $15 = $11 - $14;
 $16 = $1;
 $17 = ($16*3)|0;
 $18 = (+($17|0));
 $19 = $15 / $18;
 $gap_reference = $19;
 $20 = $0;
 $21 = HEAP8[$20>>0]|0;
 $22 = $reference_temp;
 HEAP8[$22>>0] = $21;
 $23 = $1;
 $24 = ($23*3)|0;
 $25 = (($24) - 1)|0;
 $26 = $0;
 $27 = (($26) + ($25)|0);
 $28 = HEAP8[$27>>0]|0;
 $29 = $1;
 $30 = ($29*3)|0;
 $31 = (($30) - 1)|0;
 $32 = $reference_temp;
 $33 = (($32) + ($31)|0);
 HEAP8[$33>>0] = $28;
 $i = 1;
 while(1) {
  $34 = $i;
  $35 = $1;
  $36 = ($35*3)|0;
  $37 = (($36) - 1)|0;
  $38 = ($34|0)<($37|0);
  if (!($38)) {
   break;
  }
  $39 = $i;
  $40 = (($39) - 1)|0;
  $41 = $reference_temp;
  $42 = (($41) + ($40)|0);
  $43 = HEAP8[$42>>0]|0;
  $44 = (+($43&255));
  $45 = $gap_reference;
  $46 = $44 + $45;
  $47 = (_control_range($46)|0);
  $48 = $i;
  $49 = $reference_temp;
  $50 = (($49) + ($48)|0);
  HEAP8[$50>>0] = $47;
  $51 = $i;
  $52 = (($51) + 1)|0;
  $i = $52;
 }
 $i1 = 1;
 while(1) {
  $53 = $i1;
  $54 = $1;
  $55 = ($54*3)|0;
  $56 = (($55) - 1)|0;
  $57 = ($53|0)<($56|0);
  if (!($57)) {
   break;
  }
  $58 = $i1;
  $59 = $reference_temp;
  $60 = (($59) + ($58)|0);
  $61 = HEAP8[$60>>0]|0;
  $62 = $i1;
  $63 = $0;
  $64 = (($63) + ($62)|0);
  HEAP8[$64>>0] = $61;
  $65 = $i1;
  $66 = (($65) + 1)|0;
  $i1 = $66;
 }
 $67 = $reference_temp;
 _free($67);
 STACKTOP = sp;return;
}
function _judge_strong_filter($reference_top,$reference_left,$size) {
 $reference_top = $reference_top|0;
 $reference_left = $reference_left|0;
 $size = $size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $temp1 = 0, $temp2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $reference_top;
 $2 = $reference_left;
 $3 = $size;
 $4 = $3;
 $5 = (($4) - 1)|0;
 $6 = $1;
 $7 = (($6) + ($5)|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8&255;
 $10 = $3;
 $11 = ($10*3)|0;
 $12 = (($11) - 1)|0;
 $13 = $1;
 $14 = (($13) + ($12)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15&255;
 $17 = (($9) + ($16))|0;
 $18 = $3;
 $19 = $18<<1;
 $20 = (($19) - 1)|0;
 $21 = $1;
 $22 = (($21) + ($20)|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = $23&255;
 $25 = $24<<1;
 $26 = (($17) - ($25))|0;
 $temp1 = $26;
 $27 = $3;
 $28 = (($27) - 1)|0;
 $29 = $2;
 $30 = (($29) + ($28)|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $31&255;
 $33 = $3;
 $34 = ($33*3)|0;
 $35 = (($34) - 1)|0;
 $36 = $2;
 $37 = (($36) + ($35)|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = $38&255;
 $40 = (($32) + ($39))|0;
 $41 = $3;
 $42 = $41<<1;
 $43 = (($42) - 1)|0;
 $44 = $2;
 $45 = (($44) + ($43)|0);
 $46 = HEAP8[$45>>0]|0;
 $47 = $46&255;
 $48 = $47<<1;
 $49 = (($40) - ($48))|0;
 $temp2 = $49;
 $50 = $temp1;
 $51 = ($50|0)<(8);
 $52 = $temp2;
 $53 = ($52|0)<(8);
 $or$cond = $51 & $53;
 if ($or$cond) {
  $0 = 1;
  $54 = $0;
  STACKTOP = sp;return ($54|0);
 } else {
  $0 = 0;
  $54 = $0;
  STACKTOP = sp;return ($54|0);
 }
 return (0)|0;
}
function _pred_planar($src,$top,$left,$stride,$log2size) {
 $src = $src|0;
 $top = $top|0;
 $left = $left|0;
 $stride = $stride|0;
 $log2size = $log2size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $size = 0, $x = 0, $y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $src;
 $1 = $top;
 $2 = $left;
 $3 = $stride;
 $4 = $log2size;
 $5 = $4;
 $6 = 1 << $5;
 $size = $6;
 $y = 0;
 while(1) {
  $7 = $y;
  $8 = $size;
  $9 = ($7|0)<($8|0);
  if (!($9)) {
   break;
  }
  $x = 0;
  while(1) {
   $10 = $x;
   $11 = $size;
   $12 = ($10|0)<($11|0);
   if (!($12)) {
    break;
   }
   $13 = $size;
   $14 = (($13) - 1)|0;
   $15 = $x;
   $16 = (($14) - ($15))|0;
   $17 = $y;
   $18 = $2;
   $19 = (($18) + ($17)|0);
   $20 = HEAP8[$19>>0]|0;
   $21 = $20&255;
   $22 = Math_imul($16, $21)|0;
   $23 = $x;
   $24 = (($23) + 1)|0;
   $25 = $size;
   $26 = $1;
   $27 = (($26) + ($25)|0);
   $28 = HEAP8[$27>>0]|0;
   $29 = $28&255;
   $30 = Math_imul($24, $29)|0;
   $31 = (($22) + ($30))|0;
   $32 = $size;
   $33 = (($32) - 1)|0;
   $34 = $y;
   $35 = (($33) - ($34))|0;
   $36 = $x;
   $37 = $1;
   $38 = (($37) + ($36)|0);
   $39 = HEAP8[$38>>0]|0;
   $40 = $39&255;
   $41 = Math_imul($35, $40)|0;
   $42 = (($31) + ($41))|0;
   $43 = $y;
   $44 = (($43) + 1)|0;
   $45 = $size;
   $46 = $2;
   $47 = (($46) + ($45)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = $48&255;
   $50 = Math_imul($44, $49)|0;
   $51 = (($42) + ($50))|0;
   $52 = $size;
   $53 = (($51) + ($52))|0;
   $54 = $4;
   $55 = (($54) + 1)|0;
   $56 = $53 >> $55;
   $57 = $56&255;
   $58 = $3;
   $59 = $y;
   $60 = Math_imul($58, $59)|0;
   $61 = $x;
   $62 = (($60) + ($61))|0;
   $63 = $0;
   $64 = (($63) + ($62)|0);
   HEAP8[$64>>0] = $57;
   $65 = $x;
   $66 = (($65) + 1)|0;
   $x = $66;
  }
  $67 = $y;
  $68 = (($67) + 1)|0;
  $y = $68;
 }
 STACKTOP = sp;return;
}
function _pred_dc($src,$top,$left,$stride,$log2size,$flag) {
 $src = $src|0;
 $top = $top|0;
 $left = $left|0;
 $stride = $stride|0;
 $log2size = $log2size|0;
 $flag = $flag|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $dc = 0, $i = 0, $i1 = 0, $i2 = 0, $i3 = 0, $j = 0, $size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $src;
 $1 = $top;
 $2 = $left;
 $3 = $stride;
 $4 = $log2size;
 $5 = $flag;
 $6 = $4;
 $7 = 1 << $6;
 $size = $7;
 $8 = $size;
 $dc = $8;
 $i = 0;
 while(1) {
  $9 = $i;
  $10 = $size;
  $11 = ($9|0)<($10|0);
  if (!($11)) {
   break;
  }
  $12 = $i;
  $13 = $2;
  $14 = (($13) + ($12)|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15&255;
  $17 = $i;
  $18 = $1;
  $19 = (($18) + ($17)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20&255;
  $22 = (($16) + ($21))|0;
  $23 = $dc;
  $24 = (($23) + ($22))|0;
  $dc = $24;
  $25 = $i;
  $26 = (($25) + 1)|0;
  $i = $26;
 }
 $27 = $4;
 $28 = (($27) + 1)|0;
 $29 = $dc;
 $30 = $29 >> $28;
 $dc = $30;
 $i1 = 0;
 while(1) {
  $31 = $i1;
  $32 = $size;
  $33 = ($31|0)<($32|0);
  if (!($33)) {
   break;
  }
  $j = 0;
  while(1) {
   $34 = $j;
   $35 = $size;
   $36 = ($34|0)<($35|0);
   if (!($36)) {
    break;
   }
   $37 = $dc;
   $38 = $37&255;
   $39 = $i1;
   $40 = $3;
   $41 = Math_imul($39, $40)|0;
   $42 = $j;
   $43 = (($41) + ($42))|0;
   $44 = $0;
   $45 = (($44) + ($43)|0);
   HEAP8[$45>>0] = $38;
   $46 = $j;
   $47 = (($46) + 1)|0;
   $j = $47;
  }
  $48 = $i1;
  $49 = (($48) + 1)|0;
  $i1 = $49;
 }
 $50 = $5;
 $51 = ($50|0)!=(0);
 if (!($51)) {
  STACKTOP = sp;return;
 }
 $52 = $2;
 $53 = HEAP8[$52>>0]|0;
 $54 = $53&255;
 $55 = $dc;
 $56 = $55<<1;
 $57 = (($54) + ($56))|0;
 $58 = $1;
 $59 = HEAP8[$58>>0]|0;
 $60 = $59&255;
 $61 = (($57) + ($60))|0;
 $62 = (($61) + 2)|0;
 $63 = $62 >> 2;
 $64 = $63&255;
 $65 = $0;
 HEAP8[$65>>0] = $64;
 $i2 = 1;
 while(1) {
  $66 = $i2;
  $67 = $size;
  $68 = ($66|0)<($67|0);
  if (!($68)) {
   break;
  }
  $69 = $i2;
  $70 = $1;
  $71 = (($70) + ($69)|0);
  $72 = HEAP8[$71>>0]|0;
  $73 = $72&255;
  $74 = $dc;
  $75 = ($74*3)|0;
  $76 = (($73) + ($75))|0;
  $77 = (($76) + 2)|0;
  $78 = $77 >> 2;
  $79 = $78&255;
  $80 = $i2;
  $81 = $0;
  $82 = (($81) + ($80)|0);
  HEAP8[$82>>0] = $79;
  $83 = $i2;
  $84 = (($83) + 1)|0;
  $i2 = $84;
 }
 $i3 = 1;
 while(1) {
  $85 = $i3;
  $86 = $size;
  $87 = ($85|0)<($86|0);
  if (!($87)) {
   break;
  }
  $88 = $i3;
  $89 = $2;
  $90 = (($89) + ($88)|0);
  $91 = HEAP8[$90>>0]|0;
  $92 = $91&255;
  $93 = $dc;
  $94 = ($93*3)|0;
  $95 = (($92) + ($94))|0;
  $96 = (($95) + 2)|0;
  $97 = $96 >> 2;
  $98 = $97&255;
  $99 = $3;
  $100 = $i3;
  $101 = Math_imul($99, $100)|0;
  $102 = $0;
  $103 = (($102) + ($101)|0);
  HEAP8[$103>>0] = $98;
  $104 = $i3;
  $105 = (($104) + 1)|0;
  $i3 = $105;
 }
 STACKTOP = sp;return;
}
function _pre_angular($src,$top,$left,$size,$stride,$mode) {
 $src = $src|0;
 $top = $top|0;
 $left = $left|0;
 $size = $size|0;
 $stride = $stride|0;
 $mode = $mode|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $angle = 0, $i = 0, $i1 = 0, $idx = 0, $idx6 = 0, $last = 0, $ratio = 0, $ratio7 = 0, $ref = 0, $ref_array = 0, $ref_tmp = 0, $x = 0, $x2 = 0, $x3 = 0, $x4 = 0;
 var $x5 = 0, $y = 0, $y8 = 0, $y9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2096|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ref_array = sp + 96|0;
 $0 = $src;
 $1 = $top;
 $2 = $left;
 $3 = $size;
 $4 = $stride;
 $5 = $mode;
 $6 = $5;
 $7 = (($6) - 2)|0;
 $8 = (378409 + ($7)|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9 << 24 >> 24;
 $angle = $10;
 $11 = $3;
 $12 = (($ref_array) + ($11)|0);
 $ref_tmp = $12;
 $13 = $3;
 $14 = $angle;
 $15 = Math_imul($13, $14)|0;
 $16 = $15 >> 5;
 $last = $16;
 $17 = $5;
 $18 = ($17|0)>=(32);
 if (!($18)) {
  $133 = $2;
  $134 = ((($133)) + -1|0);
  $ref = $134;
  $135 = $last;
  $136 = ($135|0)<(-1);
  if ($136) {
   $x3 = 0;
   while(1) {
    $137 = $x3;
    $138 = $3;
    $139 = ($137|0)<=($138|0);
    if (!($139)) {
     break;
    }
    $140 = $x3;
    $141 = (($140) - 1)|0;
    $142 = $2;
    $143 = (($142) + ($141)|0);
    $144 = HEAP8[$143>>0]|0;
    $145 = $x3;
    $146 = $ref_tmp;
    $147 = (($146) + ($145)|0);
    HEAP8[$147>>0] = $144;
    $148 = $x3;
    $149 = (($148) + 1)|0;
    $x3 = $149;
   }
   $150 = $last;
   $x4 = $150;
   while(1) {
    $151 = $x4;
    $152 = ($151|0)<=(-1);
    if (!($152)) {
     break;
    }
    $153 = $x4;
    $154 = $5;
    $155 = (($154) - 18)|0;
    $156 = (20576 + ($155<<1)|0);
    $157 = HEAP16[$156>>1]|0;
    $158 = $157 << 16 >> 16;
    $159 = Math_imul($153, $158)|0;
    $160 = (($159) + 128)|0;
    $161 = $160 >> 8;
    $162 = (-1 + ($161))|0;
    $163 = $1;
    $164 = (($163) + ($162)|0);
    $165 = HEAP8[$164>>0]|0;
    $166 = $x4;
    $167 = $ref_tmp;
    $168 = (($167) + ($166)|0);
    HEAP8[$168>>0] = $165;
    $169 = $x4;
    $170 = (($169) + 1)|0;
    $x4 = $170;
   }
   $171 = $ref_tmp;
   $ref = $171;
  }
  $x5 = 0;
  while(1) {
   $172 = $x5;
   $173 = $3;
   $174 = ($172|0)<($173|0);
   if (!($174)) {
    break;
   }
   $175 = $x5;
   $176 = (($175) + 1)|0;
   $177 = $angle;
   $178 = Math_imul($176, $177)|0;
   $179 = $178 >> 5;
   $idx6 = $179;
   $180 = $x5;
   $181 = (($180) + 1)|0;
   $182 = $angle;
   $183 = Math_imul($181, $182)|0;
   $184 = $183 & 31;
   $ratio7 = $184;
   $185 = $ratio7;
   $186 = ($185|0)!=(0);
   L17: do {
    if ($186) {
     $y8 = 0;
     while(1) {
      $187 = $y8;
      $188 = $3;
      $189 = ($187|0)<($188|0);
      if (!($189)) {
       break L17;
      }
      $190 = $ratio7;
      $191 = (32 - ($190))|0;
      $192 = $y8;
      $193 = $idx6;
      $194 = (($192) + ($193))|0;
      $195 = (($194) + 1)|0;
      $196 = $ref;
      $197 = (($196) + ($195)|0);
      $198 = HEAP8[$197>>0]|0;
      $199 = $198&255;
      $200 = Math_imul($191, $199)|0;
      $201 = $ratio7;
      $202 = $y8;
      $203 = $idx6;
      $204 = (($202) + ($203))|0;
      $205 = (($204) + 2)|0;
      $206 = $ref;
      $207 = (($206) + ($205)|0);
      $208 = HEAP8[$207>>0]|0;
      $209 = $208&255;
      $210 = Math_imul($201, $209)|0;
      $211 = (($200) + ($210))|0;
      $212 = (($211) + 16)|0;
      $213 = $212 >> 5;
      $214 = $213&255;
      $215 = $y8;
      $216 = $4;
      $217 = Math_imul($215, $216)|0;
      $218 = $x5;
      $219 = (($217) + ($218))|0;
      $220 = $0;
      $221 = (($220) + ($219)|0);
      HEAP8[$221>>0] = $214;
      $222 = $y8;
      $223 = (($222) + 1)|0;
      $y8 = $223;
     }
    } else {
     $y9 = 0;
     while(1) {
      $224 = $y9;
      $225 = $3;
      $226 = ($224|0)<($225|0);
      if (!($226)) {
       break L17;
      }
      $227 = $y9;
      $228 = $idx6;
      $229 = (($227) + ($228))|0;
      $230 = (($229) + 1)|0;
      $231 = $ref;
      $232 = (($231) + ($230)|0);
      $233 = HEAP8[$232>>0]|0;
      $234 = $y9;
      $235 = $4;
      $236 = Math_imul($234, $235)|0;
      $237 = $x5;
      $238 = (($236) + ($237))|0;
      $239 = $0;
      $240 = (($239) + ($238)|0);
      HEAP8[$240>>0] = $233;
      $241 = $y9;
      $242 = (($241) + 1)|0;
      $y9 = $242;
     }
    }
   } while(0);
   $243 = $x5;
   $244 = (($243) + 1)|0;
   $x5 = $244;
  }
  STACKTOP = sp;return;
 }
 $19 = $1;
 $20 = ((($19)) + -1|0);
 $ref = $20;
 $21 = $last;
 $22 = ($21|0)<(-1);
 if ($22) {
  $23 = $angle;
  $24 = ($23|0)<(0);
  if (!($24)) {
   ___assert_fail((378470|0),(378480|0),194,(378554|0));
   // unreachable;
  }
  $i = 0;
  while(1) {
   $25 = $i;
   $26 = $3;
   $27 = ($25|0)<=($26|0);
   if (!($27)) {
    break;
   }
   $28 = $i;
   $29 = (($28) - 1)|0;
   $30 = $1;
   $31 = (($30) + ($29)|0);
   $32 = HEAP8[$31>>0]|0;
   $33 = $i;
   $34 = $ref_tmp;
   $35 = (($34) + ($33)|0);
   HEAP8[$35>>0] = $32;
   $36 = $i;
   $37 = (($36) + 1)|0;
   $i = $37;
  }
  $38 = $last;
  $i1 = $38;
  while(1) {
   $39 = $i1;
   $40 = ($39|0)<=(-1);
   if (!($40)) {
    break;
   }
   $41 = $i1;
   $42 = $5;
   $43 = (($42) - 18)|0;
   $44 = (20576 + ($43<<1)|0);
   $45 = HEAP16[$44>>1]|0;
   $46 = $45 << 16 >> 16;
   $47 = Math_imul($41, $46)|0;
   $48 = (($47) + 128)|0;
   $49 = $48 >> 8;
   $50 = (-1 + ($49))|0;
   $51 = $2;
   $52 = (($51) + ($50)|0);
   $53 = HEAP8[$52>>0]|0;
   $54 = $i1;
   $55 = $ref_tmp;
   $56 = (($55) + ($54)|0);
   HEAP8[$56>>0] = $53;
   $57 = $i1;
   $58 = (($57) + 1)|0;
   $i1 = $58;
  }
  $59 = $ref_tmp;
  $ref = $59;
 }
 $y = 0;
 while(1) {
  $60 = $y;
  $61 = $3;
  $62 = ($60|0)<($61|0);
  if (!($62)) {
   break;
  }
  $63 = $y;
  $64 = (($63) + 1)|0;
  $65 = $angle;
  $66 = Math_imul($64, $65)|0;
  $67 = $66 >> 5;
  $idx = $67;
  $68 = $y;
  $69 = (($68) + 1)|0;
  $70 = $angle;
  $71 = Math_imul($69, $70)|0;
  $72 = $71 & 31;
  $ratio = $72;
  $73 = $ratio;
  $74 = ($73|0)!=(0);
  L46: do {
   if ($74) {
    $x = 0;
    while(1) {
     $75 = $x;
     $76 = $3;
     $77 = ($75|0)<($76|0);
     if (!($77)) {
      break L46;
     }
     $78 = $ratio;
     $79 = (32 - ($78))|0;
     $80 = $x;
     $81 = $idx;
     $82 = (($80) + ($81))|0;
     $83 = (($82) + 1)|0;
     $84 = $ref;
     $85 = (($84) + ($83)|0);
     $86 = HEAP8[$85>>0]|0;
     $87 = $86&255;
     $88 = Math_imul($79, $87)|0;
     $89 = $ratio;
     $90 = $x;
     $91 = $idx;
     $92 = (($90) + ($91))|0;
     $93 = (($92) + 2)|0;
     $94 = $ref;
     $95 = (($94) + ($93)|0);
     $96 = HEAP8[$95>>0]|0;
     $97 = $96&255;
     $98 = Math_imul($89, $97)|0;
     $99 = (($88) + ($98))|0;
     $100 = (($99) + 16)|0;
     $101 = $100 >> 5;
     $102 = $101&255;
     $103 = $y;
     $104 = $3;
     $105 = Math_imul($103, $104)|0;
     $106 = $x;
     $107 = (($105) + ($106))|0;
     $108 = $0;
     $109 = (($108) + ($107)|0);
     HEAP8[$109>>0] = $102;
     $110 = $x;
     $111 = (($110) + 1)|0;
     $x = $111;
    }
   } else {
    $x2 = 0;
    while(1) {
     $112 = $x2;
     $113 = $3;
     $114 = ($112|0)<($113|0);
     if (!($114)) {
      break L46;
     }
     $115 = $x2;
     $116 = $idx;
     $117 = (($115) + ($116))|0;
     $118 = (($117) + 1)|0;
     $119 = $ref;
     $120 = (($119) + ($118)|0);
     $121 = HEAP8[$120>>0]|0;
     $122 = $y;
     $123 = $3;
     $124 = Math_imul($122, $123)|0;
     $125 = $x2;
     $126 = (($124) + ($125))|0;
     $127 = $0;
     $128 = (($127) + ($126)|0);
     HEAP8[$128>>0] = $121;
     $129 = $x2;
     $130 = (($129) + 1)|0;
     $x2 = $130;
    }
   }
  } while(0);
  $131 = $y;
  $132 = (($131) + 1)|0;
  $y = $132;
 }
 STACKTOP = sp;return;
}
function _AngleToDelta($mode,$size,$delta,$isTop,$insertNum) {
 $mode = $mode|0;
 $size = $size|0;
 $delta = $delta|0;
 $isTop = $isTop|0;
 $insertNum = $insertNum|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $realAngle = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $mode;
 $1 = $size;
 $2 = $delta;
 $3 = $isTop;
 $4 = $insertNum;
 $5 = $4;
 HEAP32[$5>>2] = 31;
 $6 = $0;
 $7 = (($6) - 4)|0;
 $realAngle = $7;
 $i = 0;
 while(1) {
  $8 = $i;
  $9 = $1;
  $10 = ($8|0)<($9|0);
  if (!($10)) {
   break;
  }
  $11 = $realAngle;
  $12 = (378566 + ($11)|0);
  $13 = HEAP8[$12>>0]|0;
  $14 = $13 << 24 >> 24;
  $15 = $i;
  $16 = (($15) + 1)|0;
  $17 = Math_imul($14, $16)|0;
  $18 = $4;
  $19 = HEAP32[$18>>2]|0;
  $20 = (($19) + 1)|0;
  $21 = $1;
  $22 = Math_imul($20, $21)|0;
  $23 = (($17) + ($22))|0;
  $24 = $23&65535;
  $25 = $i;
  $26 = $2;
  $27 = (($26) + ($25<<1)|0);
  HEAP16[$27>>1] = $24;
  $28 = $i;
  $29 = (($28) + 1)|0;
  $i = $29;
 }
 $30 = $0;
 $31 = ($30|0)>=(34);
 $32 = $3;
 if ($31) {
  HEAP32[$32>>2] = 1;
  STACKTOP = sp;return;
 } else {
  HEAP32[$32>>2] = 0;
  STACKTOP = sp;return;
 }
}
function _getPredictFromDeltaTop($top,$size,$delta,$predict,$insertNum) {
 $top = $top|0;
 $size = $size|0;
 $delta = $delta|0;
 $predict = $predict|0;
 $insertNum = $insertNum|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $j = 0, $topInsert = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $top;
 $1 = $size;
 $2 = $delta;
 $3 = $predict;
 $4 = $insertNum;
 $5 = $1;
 $6 = $5;
 $7 = ($6*3)|0;
 $8 = (($7) - 1)|0;
 $9 = $8<<5;
 $10 = (($9) + 1)|0;
 $11 = (_malloc($10)|0);
 $topInsert = $11;
 $12 = $0;
 $13 = $topInsert;
 $14 = $4;
 $15 = $1;
 $16 = ($15*3)|0;
 _InsertPixel($12,$13,$14,$16);
 $i = 0;
 while(1) {
  $17 = $i;
  $18 = $1;
  $19 = ($17|0)<($18|0);
  if (!($19)) {
   break;
  }
  $j = 0;
  while(1) {
   $20 = $j;
   $21 = $1;
   $22 = ($20|0)<($21|0);
   $23 = $i;
   if (!($22)) {
    break;
   }
   $24 = $2;
   $25 = (($24) + ($23<<1)|0);
   $26 = HEAP16[$25>>1]|0;
   $27 = $26 << 16 >> 16;
   $28 = $j;
   $29 = $28<<5;
   $30 = (($27) + ($29))|0;
   $31 = $topInsert;
   $32 = (($31) + ($30)|0);
   $33 = HEAP8[$32>>0]|0;
   $34 = $i;
   $35 = $1;
   $36 = Math_imul($34, $35)|0;
   $37 = $j;
   $38 = (($36) + ($37))|0;
   $39 = $3;
   $40 = (($39) + ($38)|0);
   HEAP8[$40>>0] = $33;
   $41 = $j;
   $42 = (($41) + 1)|0;
   $j = $42;
  }
  $43 = (($23) + 1)|0;
  $i = $43;
 }
 $44 = $topInsert;
 _free($44);
 STACKTOP = sp;return;
}
function _getShapeFromDeltaTop($startPoint,$bandWidth,$size,$insertNum,$delta,$shapeFlat1,$shapeEdge,$shapeFlat2) {
 $startPoint = $startPoint|0;
 $bandWidth = $bandWidth|0;
 $size = $size|0;
 $insertNum = $insertNum|0;
 $delta = $delta|0;
 $shapeFlat1 = $shapeFlat1|0;
 $shapeEdge = $shapeEdge|0;
 $shapeFlat2 = $shapeFlat2|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $endPoint = 0, $i = 0, $index = 0, $j = 0, $refLine = 0, $refLineLen = 0, $tmp = 0, $y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $startPoint;
 $1 = $bandWidth;
 $2 = $size;
 $3 = $insertNum;
 $4 = $delta;
 $5 = $shapeFlat1;
 $6 = $shapeEdge;
 $7 = $shapeFlat2;
 $8 = $2;
 $9 = $8<<2;
 $refLineLen = $9;
 $10 = $0;
 $11 = $1;
 $12 = (($10) + ($11))|0;
 $endPoint = $12;
 $13 = $refLineLen;
 $14 = $13<<2;
 $15 = (_malloc($14)|0);
 $refLine = $15;
 $i = 0;
 while(1) {
  $16 = $i;
  $17 = $refLineLen;
  $18 = ($16|0)<($17|0);
  if (!($18)) {
   break;
  }
  $19 = $i;
  $20 = $0;
  $21 = ($19|0)<($20|0);
  $22 = $i;
  do {
   if ($21) {
    $23 = $refLine;
    $24 = (($23) + ($22<<2)|0);
    HEAP32[$24>>2] = 1;
   } else {
    $25 = $endPoint;
    $26 = ($22|0)<=($25|0);
    $27 = $i;
    $28 = $refLine;
    $29 = (($28) + ($27<<2)|0);
    if ($26) {
     HEAP32[$29>>2] = 2;
     break;
    } else {
     HEAP32[$29>>2] = 3;
     break;
    }
   }
  } while(0);
  $30 = $i;
  $31 = (($30) + 1)|0;
  $i = $31;
 }
 $i = 0;
 $y = 0;
 while(1) {
  $32 = $i;
  $33 = $2;
  $34 = ($32|0)<($33|0);
  if (!($34)) {
   break;
  }
  $35 = $i;
  $36 = $4;
  $37 = (($36) + ($35<<1)|0);
  $38 = HEAP16[$37>>1]|0;
  $39 = $38 << 16 >> 16;
  $40 = (($39|0) / 32)&-1;
  $index = $40;
  $j = 0;
  while(1) {
   $41 = $j;
   $42 = $2;
   $43 = ($41|0)<($42|0);
   if (!($43)) {
    break;
   }
   $44 = $index;
   $45 = $j;
   $46 = (($44) + ($45))|0;
   $47 = $refLine;
   $48 = (($47) + ($46<<2)|0);
   $49 = HEAP32[$48>>2]|0;
   $tmp = $49;
   $50 = $tmp;
   switch ($50|0) {
   case 1:  {
    $51 = $y;
    $52 = $j;
    $53 = (($51) + ($52))|0;
    $54 = $5;
    $55 = (($54) + ($53<<2)|0);
    HEAP32[$55>>2] = 1;
    $56 = $y;
    $57 = $j;
    $58 = (($56) + ($57))|0;
    $59 = $6;
    $60 = (($59) + ($58<<2)|0);
    HEAP32[$60>>2] = 0;
    $61 = $y;
    $62 = $j;
    $63 = (($61) + ($62))|0;
    $64 = $7;
    $65 = (($64) + ($63<<2)|0);
    HEAP32[$65>>2] = 0;
    break;
   }
   case 2:  {
    $66 = $y;
    $67 = $j;
    $68 = (($66) + ($67))|0;
    $69 = $5;
    $70 = (($69) + ($68<<2)|0);
    HEAP32[$70>>2] = 0;
    $71 = $y;
    $72 = $j;
    $73 = (($71) + ($72))|0;
    $74 = $6;
    $75 = (($74) + ($73<<2)|0);
    HEAP32[$75>>2] = 1;
    $76 = $y;
    $77 = $j;
    $78 = (($76) + ($77))|0;
    $79 = $7;
    $80 = (($79) + ($78<<2)|0);
    HEAP32[$80>>2] = 0;
    break;
   }
   case 3:  {
    $81 = $y;
    $82 = $j;
    $83 = (($81) + ($82))|0;
    $84 = $5;
    $85 = (($84) + ($83<<2)|0);
    HEAP32[$85>>2] = 0;
    $86 = $y;
    $87 = $j;
    $88 = (($86) + ($87))|0;
    $89 = $6;
    $90 = (($89) + ($88<<2)|0);
    HEAP32[$90>>2] = 0;
    $91 = $y;
    $92 = $j;
    $93 = (($91) + ($92))|0;
    $94 = $7;
    $95 = (($94) + ($93<<2)|0);
    HEAP32[$95>>2] = 1;
    break;
   }
   default: {
   }
   }
   $96 = $j;
   $97 = (($96) + 1)|0;
   $j = $97;
  }
  $98 = $i;
  $99 = (($98) + 1)|0;
  $i = $99;
  $100 = $2;
  $101 = $y;
  $102 = (($101) + ($100))|0;
  $y = $102;
 }
 $103 = $refLine;
 _free($103);
 STACKTOP = sp;return;
}
function _getShapeFromDeltaLeft($startPoint,$bandWidth,$size,$insertNum,$delta,$shapeFlat1,$shapeEdge,$shapeFlat2) {
 $startPoint = $startPoint|0;
 $bandWidth = $bandWidth|0;
 $size = $size|0;
 $insertNum = $insertNum|0;
 $delta = $delta|0;
 $shapeFlat1 = $shapeFlat1|0;
 $shapeEdge = $shapeEdge|0;
 $shapeFlat2 = $shapeFlat2|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $endPoint = 0, $i = 0, $index = 0, $j = 0, $refLine = 0, $refLineLen = 0, $tmp = 0, $y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $startPoint;
 $1 = $bandWidth;
 $2 = $size;
 $3 = $insertNum;
 $4 = $delta;
 $5 = $shapeFlat1;
 $6 = $shapeEdge;
 $7 = $shapeFlat2;
 $8 = $2;
 $9 = $8<<2;
 $refLineLen = $9;
 $10 = $0;
 $11 = $1;
 $12 = (($10) + ($11))|0;
 $endPoint = $12;
 $13 = $refLineLen;
 $14 = $13<<2;
 $15 = (_malloc($14)|0);
 $refLine = $15;
 $i = 0;
 while(1) {
  $16 = $i;
  $17 = $refLineLen;
  $18 = ($16|0)<($17|0);
  if (!($18)) {
   break;
  }
  $19 = $i;
  $20 = $0;
  $21 = ($19|0)<($20|0);
  $22 = $i;
  do {
   if ($21) {
    $23 = $refLine;
    $24 = (($23) + ($22<<2)|0);
    HEAP32[$24>>2] = 1;
   } else {
    $25 = $endPoint;
    $26 = ($22|0)<=($25|0);
    $27 = $i;
    $28 = $refLine;
    $29 = (($28) + ($27<<2)|0);
    if ($26) {
     HEAP32[$29>>2] = 2;
     break;
    } else {
     HEAP32[$29>>2] = 3;
     break;
    }
   }
  } while(0);
  $30 = $i;
  $31 = (($30) + 1)|0;
  $i = $31;
 }
 $j = 0;
 while(1) {
  $32 = $j;
  $33 = $2;
  $34 = ($32|0)<($33|0);
  if (!($34)) {
   break;
  }
  $35 = $j;
  $36 = $4;
  $37 = (($36) + ($35<<1)|0);
  $38 = HEAP16[$37>>1]|0;
  $39 = $38 << 16 >> 16;
  $40 = (($39|0) / 32)&-1;
  $index = $40;
  $i = 0;
  $y = 0;
  while(1) {
   $41 = $i;
   $42 = $2;
   $43 = ($41|0)<($42|0);
   if (!($43)) {
    break;
   }
   $44 = $index;
   $45 = $i;
   $46 = (($44) + ($45))|0;
   $47 = $refLine;
   $48 = (($47) + ($46<<2)|0);
   $49 = HEAP32[$48>>2]|0;
   $tmp = $49;
   $50 = $tmp;
   switch ($50|0) {
   case 1:  {
    $51 = $y;
    $52 = $j;
    $53 = (($51) + ($52))|0;
    $54 = $5;
    $55 = (($54) + ($53<<2)|0);
    HEAP32[$55>>2] = 1;
    $56 = $y;
    $57 = $j;
    $58 = (($56) + ($57))|0;
    $59 = $6;
    $60 = (($59) + ($58<<2)|0);
    HEAP32[$60>>2] = 0;
    $61 = $y;
    $62 = $j;
    $63 = (($61) + ($62))|0;
    $64 = $7;
    $65 = (($64) + ($63<<2)|0);
    HEAP32[$65>>2] = 0;
    break;
   }
   case 2:  {
    $66 = $y;
    $67 = $j;
    $68 = (($66) + ($67))|0;
    $69 = $5;
    $70 = (($69) + ($68<<2)|0);
    HEAP32[$70>>2] = 0;
    $71 = $y;
    $72 = $j;
    $73 = (($71) + ($72))|0;
    $74 = $6;
    $75 = (($74) + ($73<<2)|0);
    HEAP32[$75>>2] = 1;
    $76 = $y;
    $77 = $j;
    $78 = (($76) + ($77))|0;
    $79 = $7;
    $80 = (($79) + ($78<<2)|0);
    HEAP32[$80>>2] = 0;
    break;
   }
   case 3:  {
    $81 = $y;
    $82 = $j;
    $83 = (($81) + ($82))|0;
    $84 = $5;
    $85 = (($84) + ($83<<2)|0);
    HEAP32[$85>>2] = 0;
    $86 = $y;
    $87 = $j;
    $88 = (($86) + ($87))|0;
    $89 = $6;
    $90 = (($89) + ($88<<2)|0);
    HEAP32[$90>>2] = 0;
    $91 = $y;
    $92 = $j;
    $93 = (($91) + ($92))|0;
    $94 = $7;
    $95 = (($94) + ($93<<2)|0);
    HEAP32[$95>>2] = 1;
    break;
   }
   default: {
   }
   }
   $96 = $i;
   $97 = (($96) + 1)|0;
   $i = $97;
   $98 = $2;
   $99 = $y;
   $100 = (($99) + ($98))|0;
   $y = $100;
  }
  $101 = $j;
  $102 = (($101) + 1)|0;
  $j = $102;
 }
 $103 = $refLine;
 _free($103);
 STACKTOP = sp;return;
}
function _getPredictFromDeltaTop_v2($top,$left,$blockSize,$delta,$predict,$insertNum) {
 $top = $top|0;
 $left = $left|0;
 $blockSize = $blockSize|0;
 $delta = $delta|0;
 $predict = $predict|0;
 $insertNum = $insertNum|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0.0, $46 = 0, $47 = 0.0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $i = 0, $j = 0, $k = 0, $len = 0, $origin = 0, $origin_i = 0, $pos = 0, $ref = 0, $refLen = 0, $tangle = 0.0, $w = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $top;
 $1 = $left;
 $2 = $blockSize;
 $3 = $delta;
 $4 = $predict;
 $5 = $insertNum;
 $6 = $2;
 $7 = (($6) - 1)|0;
 $origin = $7;
 $8 = $origin;
 $9 = $8<<5;
 $origin_i = $9;
 $10 = $2;
 $11 = ($10*3)|0;
 $refLen = $11;
 $12 = $refLen;
 $13 = $12;
 $14 = (_malloc($13)|0);
 $ref = $14;
 $15 = $ref;
 $16 = $origin;
 $17 = (($15) + ($16)|0);
 $18 = $0;
 $19 = $origin;
 $20 = (($18) + ($19)|0);
 $21 = $refLen;
 $22 = $origin;
 $23 = (($21) - ($22))|0;
 $24 = $23;
 _memcpy(($17|0),($20|0),($24|0))|0;
 $j = 0;
 while(1) {
  $25 = $j;
  $26 = $2;
  $27 = ($25|0)<($26|0);
  if (!($27)) {
   break;
  }
  $28 = $j;
  $29 = $3;
  $30 = (($29) + ($28<<1)|0);
  $31 = HEAP16[$30>>1]|0;
  $32 = $31 << 16 >> 16;
  $33 = $origin_i;
  $34 = ($32|0)<($33|0);
  L4: do {
   if ($34) {
    $35 = $origin;
    $36 = $j;
    $37 = $3;
    $38 = (($37) + ($36<<1)|0);
    $39 = HEAP16[$38>>1]|0;
    $40 = $39 << 16 >> 16;
    $41 = (($40|0) / 32)&-1;
    $42 = (($35) - ($41))|0;
    $len = $42;
    $43 = $j;
    $44 = (($43) + 1)|0;
    $45 = (+($44|0));
    $46 = $len;
    $47 = (+($46|0));
    $48 = $45 / $47;
    $tangle = $48;
    $k = 1;
    while(1) {
     $49 = $k;
     $50 = $len;
     $51 = ($49|0)<=($50|0);
     if (!($51)) {
      break L4;
     }
     $52 = $origin;
     $53 = $k;
     $54 = (+($53|0));
     $55 = $tangle;
     $56 = $54 * $55;
     $57 = $56;
     $58 = (+_round($57));
     $59 = (~~(($58)));
     $60 = (($52) + ($59))|0;
     $61 = $1;
     $62 = (($61) + ($60)|0);
     $63 = HEAP8[$62>>0]|0;
     $64 = $origin;
     $65 = $k;
     $66 = (($64) - ($65))|0;
     $67 = $ref;
     $68 = (($67) + ($66)|0);
     HEAP8[$68>>0] = $63;
     $69 = $k;
     $70 = (($69) + 1)|0;
     $k = $70;
    }
   }
  } while(0);
  $71 = $j;
  $72 = $3;
  $73 = (($72) + ($71<<1)|0);
  $74 = HEAP16[$73>>1]|0;
  $75 = $74 << 16 >> 16;
  $76 = (($75|0) / 32)&-1;
  $pos = $76;
  $77 = $j;
  $78 = $3;
  $79 = (($78) + ($77<<1)|0);
  $80 = HEAP16[$79>>1]|0;
  $81 = $80 << 16 >> 16;
  $82 = (($81|0) % 32)&-1;
  $w = $82;
  $83 = $w;
  $84 = ($83|0)==(0);
  $i = 0;
  L10: do {
   if ($84) {
    while(1) {
     $85 = $i;
     $86 = $2;
     $87 = ($85|0)<($86|0);
     if (!($87)) {
      break L10;
     }
     $88 = $pos;
     $89 = $i;
     $90 = (($88) + ($89))|0;
     $91 = $ref;
     $92 = (($91) + ($90)|0);
     $93 = HEAP8[$92>>0]|0;
     $94 = $j;
     $95 = $2;
     $96 = Math_imul($94, $95)|0;
     $97 = $i;
     $98 = (($96) + ($97))|0;
     $99 = $4;
     $100 = (($99) + ($98)|0);
     HEAP8[$100>>0] = $93;
     $101 = $i;
     $102 = (($101) + 1)|0;
     $i = $102;
    }
   } else {
    while(1) {
     $103 = $i;
     $104 = $2;
     $105 = ($103|0)<($104|0);
     if (!($105)) {
      break L10;
     }
     $106 = $w;
     $107 = (32 - ($106))|0;
     $108 = $pos;
     $109 = $i;
     $110 = (($108) + ($109))|0;
     $111 = $ref;
     $112 = (($111) + ($110)|0);
     $113 = HEAP8[$112>>0]|0;
     $114 = $113&255;
     $115 = Math_imul($107, $114)|0;
     $116 = $w;
     $117 = $pos;
     $118 = $i;
     $119 = (($117) + ($118))|0;
     $120 = (($119) + 1)|0;
     $121 = $ref;
     $122 = (($121) + ($120)|0);
     $123 = HEAP8[$122>>0]|0;
     $124 = $123&255;
     $125 = Math_imul($116, $124)|0;
     $126 = (($115) + ($125))|0;
     $127 = (($126) + 16)|0;
     $128 = (($127|0) / 32)&-1;
     $129 = $128&255;
     $130 = $j;
     $131 = $2;
     $132 = Math_imul($130, $131)|0;
     $133 = $i;
     $134 = (($132) + ($133))|0;
     $135 = $4;
     $136 = (($135) + ($134)|0);
     HEAP8[$136>>0] = $129;
     $137 = $i;
     $138 = (($137) + 1)|0;
     $i = $138;
    }
   }
  } while(0);
  $139 = $j;
  $140 = (($139) + 1)|0;
  $j = $140;
 }
 $141 = $ref;
 _free($141);
 STACKTOP = sp;return;
}
function _getPredictFromDeltaLeft_v2($top,$left,$blockSize,$delta,$predict,$insertNum) {
 $top = $top|0;
 $left = $left|0;
 $blockSize = $blockSize|0;
 $delta = $delta|0;
 $predict = $predict|0;
 $insertNum = $insertNum|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0.0, $46 = 0, $47 = 0.0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $i = 0, $j = 0, $k = 0, $len = 0, $origin = 0, $origin_i = 0, $pos = 0, $ref = 0, $refLen = 0, $tangle = 0.0, $w = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $top;
 $1 = $left;
 $2 = $blockSize;
 $3 = $delta;
 $4 = $predict;
 $5 = $insertNum;
 $6 = $2;
 $7 = (($6) - 1)|0;
 $origin = $7;
 $8 = $origin;
 $9 = $8<<5;
 $origin_i = $9;
 $10 = $2;
 $11 = ($10*3)|0;
 $refLen = $11;
 $12 = $refLen;
 $13 = $12;
 $14 = (_malloc($13)|0);
 $ref = $14;
 $15 = $ref;
 $16 = $origin;
 $17 = (($15) + ($16)|0);
 $18 = $1;
 $19 = $origin;
 $20 = (($18) + ($19)|0);
 $21 = $refLen;
 $22 = $origin;
 $23 = (($21) - ($22))|0;
 $24 = $23;
 _memcpy(($17|0),($20|0),($24|0))|0;
 $j = 0;
 while(1) {
  $25 = $j;
  $26 = $2;
  $27 = ($25|0)<($26|0);
  if (!($27)) {
   break;
  }
  $28 = $j;
  $29 = $3;
  $30 = (($29) + ($28<<1)|0);
  $31 = HEAP16[$30>>1]|0;
  $32 = $31 << 16 >> 16;
  $33 = $origin_i;
  $34 = ($32|0)<($33|0);
  L4: do {
   if ($34) {
    $35 = $origin;
    $36 = $j;
    $37 = $3;
    $38 = (($37) + ($36<<1)|0);
    $39 = HEAP16[$38>>1]|0;
    $40 = $39 << 16 >> 16;
    $41 = (($40|0) / 32)&-1;
    $42 = (($35) - ($41))|0;
    $len = $42;
    $43 = $j;
    $44 = (($43) + 1)|0;
    $45 = (+($44|0));
    $46 = $len;
    $47 = (+($46|0));
    $48 = $45 / $47;
    $tangle = $48;
    $k = 1;
    while(1) {
     $49 = $k;
     $50 = $len;
     $51 = ($49|0)<=($50|0);
     if (!($51)) {
      break L4;
     }
     $52 = $origin;
     $53 = $k;
     $54 = (+($53|0));
     $55 = $tangle;
     $56 = $54 * $55;
     $57 = $56;
     $58 = (+_round($57));
     $59 = (~~(($58)));
     $60 = (($52) + ($59))|0;
     $61 = $0;
     $62 = (($61) + ($60)|0);
     $63 = HEAP8[$62>>0]|0;
     $64 = $origin;
     $65 = $k;
     $66 = (($64) - ($65))|0;
     $67 = $ref;
     $68 = (($67) + ($66)|0);
     HEAP8[$68>>0] = $63;
     $69 = $k;
     $70 = (($69) + 1)|0;
     $k = $70;
    }
   }
  } while(0);
  $71 = $j;
  $72 = $3;
  $73 = (($72) + ($71<<1)|0);
  $74 = HEAP16[$73>>1]|0;
  $75 = $74 << 16 >> 16;
  $76 = (($75|0) / 32)&-1;
  $pos = $76;
  $77 = $j;
  $78 = $3;
  $79 = (($78) + ($77<<1)|0);
  $80 = HEAP16[$79>>1]|0;
  $81 = $80 << 16 >> 16;
  $82 = $81 & 31;
  $w = $82;
  $83 = $w;
  $84 = ($83|0)==(0);
  $i = 0;
  L10: do {
   if ($84) {
    while(1) {
     $85 = $i;
     $86 = $2;
     $87 = ($85|0)<($86|0);
     if (!($87)) {
      break L10;
     }
     $88 = $pos;
     $89 = $i;
     $90 = (($88) + ($89))|0;
     $91 = $ref;
     $92 = (($91) + ($90)|0);
     $93 = HEAP8[$92>>0]|0;
     $94 = $i;
     $95 = $2;
     $96 = Math_imul($94, $95)|0;
     $97 = $j;
     $98 = (($96) + ($97))|0;
     $99 = $4;
     $100 = (($99) + ($98)|0);
     HEAP8[$100>>0] = $93;
     $101 = $i;
     $102 = (($101) + 1)|0;
     $i = $102;
    }
   } else {
    while(1) {
     $103 = $i;
     $104 = $2;
     $105 = ($103|0)<($104|0);
     if (!($105)) {
      break L10;
     }
     $106 = $w;
     $107 = (32 - ($106))|0;
     $108 = $pos;
     $109 = $i;
     $110 = (($108) + ($109))|0;
     $111 = $ref;
     $112 = (($111) + ($110)|0);
     $113 = HEAP8[$112>>0]|0;
     $114 = $113&255;
     $115 = Math_imul($107, $114)|0;
     $116 = $w;
     $117 = $pos;
     $118 = $i;
     $119 = (($117) + ($118))|0;
     $120 = (($119) + 1)|0;
     $121 = $ref;
     $122 = (($121) + ($120)|0);
     $123 = HEAP8[$122>>0]|0;
     $124 = $123&255;
     $125 = Math_imul($116, $124)|0;
     $126 = (($115) + ($125))|0;
     $127 = (($126) + 16)|0;
     $128 = (($127|0) / 32)&-1;
     $129 = $128&255;
     $130 = $i;
     $131 = $2;
     $132 = Math_imul($130, $131)|0;
     $133 = $j;
     $134 = (($132) + ($133))|0;
     $135 = $4;
     $136 = (($135) + ($134)|0);
     HEAP8[$136>>0] = $129;
     $137 = $i;
     $138 = (($137) + 1)|0;
     $i = $138;
    }
   }
  } while(0);
  $139 = $j;
  $140 = (($139) + 1)|0;
  $j = $140;
 }
 $141 = $ref;
 _free($141);
 STACKTOP = sp;return;
}
function _InsertPixel($input,$output,$insertNum,$length) {
 $input = $input|0;
 $output = $output|0;
 $insertNum = $insertNum|0;
 $length = $length|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $index = 0, $j = 0;
 var $stride = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $input;
 $1 = $output;
 $2 = $insertNum;
 $3 = $length;
 $index = 0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = $3;
  $6 = (($5) - 1)|0;
  $7 = ($4|0)<($6|0);
  $8 = $i;
  if (!($7)) {
   break;
  }
  $9 = (($8) + 1)|0;
  $10 = $0;
  $11 = (($10) + ($9)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12&255;
  $14 = $i;
  $15 = $0;
  $16 = (($15) + ($14)|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = $17&255;
  $19 = (($13) - ($18))|0;
  $stride = $19;
  $20 = $i;
  $21 = $0;
  $22 = (($21) + ($20)|0);
  $23 = HEAP8[$22>>0]|0;
  $24 = $index;
  $25 = $1;
  $26 = (($25) + ($24)|0);
  HEAP8[$26>>0] = $23;
  $j = 1;
  while(1) {
   $27 = $j;
   $28 = ($27|0)<(32);
   if (!($28)) {
    break;
   }
   $29 = $i;
   $30 = $0;
   $31 = (($30) + ($29)|0);
   $32 = HEAP8[$31>>0]|0;
   $33 = $32&255;
   $34 = $stride;
   $35 = $j;
   $36 = Math_imul($34, $35)|0;
   $37 = (($36|0) / 32)&-1;
   $38 = (($33) + ($37))|0;
   $39 = $38&255;
   $40 = $index;
   $41 = $j;
   $42 = (($40) + ($41))|0;
   $43 = $1;
   $44 = (($43) + ($42)|0);
   HEAP8[$44>>0] = $39;
   $45 = $j;
   $46 = (($45) + 1)|0;
   $j = $46;
  }
  $47 = $index;
  $48 = (($47) + 32)|0;
  $index = $48;
  $49 = $i;
  $50 = (($49) + 1)|0;
  $i = $50;
 }
 $51 = $0;
 $52 = (($51) + ($8)|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = $index;
 $55 = $1;
 $56 = (($55) + ($54)|0);
 HEAP8[$56>>0] = $53;
 STACKTOP = sp;return;
}
function _setQP($rdcost,$qp) {
 $rdcost = $rdcost|0;
 $qp = $qp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $rdcost;
 $1 = $qp;
 $2 = $1;
 $3 = $0;
 $4 = ((($3)) + 20|0);
 HEAP32[$4>>2] = $2;
 $5 = $1;
 $6 = (608 + ($5<<2)|0);
 $7 = +HEAPF32[$6>>2];
 $8 = $0;
 $9 = ((($8)) + 8|0);
 HEAPF32[$9>>2] = $7;
 STACKTOP = sp;return;
}
function _get_CbCr_predict_info($predict_Y,$context) {
 $predict_Y = $predict_Y|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $flag = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $predict_Y;
 $1 = $context;
 $flag = 0;
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = ($2|0)<(4);
  if (!($3)) {
   break;
  }
  $4 = $0;
  $5 = (($4) - 2)|0;
  $6 = $i;
  $7 = $1;
  $8 = ((($7)) + 412|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + ($6<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($5|0)==($11|0);
  if ($12) {
   label = 4;
   break;
  }
  $13 = $i;
  $14 = (($13) + 1)|0;
  $i = $14;
 }
 if ((label|0) == 4) {
  $flag = 1;
 }
 $15 = $flag;
 $16 = ($15|0)==(1);
 if ($16) {
  $17 = $1;
  $18 = ((($17)) + 412|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 16|0);
  HEAP32[$20>>2] = 64;
  STACKTOP = sp;return;
 } else {
  $21 = $0;
  $22 = $1;
  $23 = ((($22)) + 412|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($24)) + 16|0);
  HEAP32[$25>>2] = $21;
  STACKTOP = sp;return;
 }
}
function _iquanti_idct_regular($size,$src,$des,$context,$channel) {
 $size = $size|0;
 $src = $src|0;
 $des = $des|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $9 = 0, $i = 0, $i1 = 0, $i2 = 0, $or$cond = 0, $regular = 0, $shape = 0, $temp = 0, $temp1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 49200|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $temp = sp + 32792|0;
 $temp1 = sp + 16392|0;
 $shape = sp + 8|0;
 $0 = $size;
 $1 = $src;
 $2 = $des;
 $3 = $context;
 $4 = $channel;
 _memset(($temp|0),0,16384)|0;
 $i = 0;
 while(1) {
  $5 = $i;
  $6 = $0;
  $7 = $0;
  $8 = Math_imul($6, $7)|0;
  $9 = ($5|0)<($8|0);
  if (!($9)) {
   break;
  }
  $10 = $i;
  $11 = $1;
  $12 = (($11) + ($10<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (+($13|0));
  $15 = $14 * 1.0;
  $16 = $3;
  $17 = ((($16)) + 16|0);
  $18 = ((($17)) + 20|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = $3;
  $21 = ((($20)) + 192|0);
  $22 = (($21) + ($19<<2)|0);
  $23 = +HEAPF32[$22>>2];
  $24 = $23;
  $25 = $15 * $24;
  $26 = $25;
  $27 = $i;
  $28 = (($temp) + ($27<<2)|0);
  HEAPF32[$28>>2] = $26;
  $29 = $i;
  $30 = (($29) + 1)|0;
  $i = $30;
 }
 $31 = $0;
 $32 = ($31|0)!=(64);
 $33 = $0;
 $34 = ($33|0)!=(2);
 $or$cond = $32 & $34;
 if (!($or$cond)) {
  $75 = $3;
  $76 = ((($75)) + 72|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = $0;
  $79 = $0;
  $80 = $2;
  _regularIdctOneChannel($77,$temp,$78,$79,$80);
  STACKTOP = sp;return;
 }
 $regular = 1;
 $35 = $regular;
 $36 = ($35|0)!=(0);
 if ($36) {
  $i1 = 0;
  while(1) {
   $37 = $i1;
   $38 = $0;
   $39 = $0;
   $40 = Math_imul($38, $39)|0;
   $41 = ($37|0)<($40|0);
   if (!($41)) {
    break;
   }
   $42 = $i1;
   $43 = $1;
   $44 = (($43) + ($42<<2)|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = (+($45|0));
   $47 = $i1;
   $48 = (($temp) + ($47<<2)|0);
   HEAPF32[$48>>2] = $46;
   $49 = $i1;
   $50 = (($49) + 1)|0;
   $i1 = $50;
  }
  _memset(($temp1|0),0,16384)|0;
  $51 = $0;
  $52 = $3;
  $53 = ((($52)) + 16|0);
  $54 = ((($53)) + 20|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = $4;
  _regularIQuantization($51,$temp,$temp1,$55,$56);
  $57 = $0;
  $58 = $2;
  $59 = $4;
  _regularIDCT($57,$temp1,$58,$59);
  STACKTOP = sp;return;
 } else {
  _memset(($shape|0),0,16384)|0;
  $i2 = 0;
  while(1) {
   $60 = $i2;
   $61 = $0;
   $62 = $0;
   $63 = Math_imul($61, $62)|0;
   $64 = ($60|0)<($63|0);
   if (!($64)) {
    break;
   }
   $65 = $i2;
   $66 = (($shape) + ($65<<2)|0);
   HEAP32[$66>>2] = 1;
   $67 = $i2;
   $68 = (($67) + 1)|0;
   $i2 = $68;
  }
  $69 = $3;
  $70 = ((($69)) + 72|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = $0;
  $73 = $0;
  $74 = $2;
  _shapeIdctOneChannel($71,$temp,$shape,$72,$73,$74);
  STACKTOP = sp;return;
 }
}
function _izigzag_iqunati_idct_irregular($size,$shape,$src,$des,$context) {
 $size = $size|0;
 $shape = $shape|0;
 $src = $src|0;
 $des = $des|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $i1 = 0, $i2 = 0, $len = 0, $temp = 0, $temp1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32816|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $temp = sp + 16408|0;
 $temp1 = sp + 8|0;
 $0 = $size;
 $1 = $shape;
 $2 = $src;
 $3 = $des;
 $4 = $context;
 _memset(($temp|0),0,16384)|0;
 $i = 0;
 while(1) {
  $5 = $i;
  $6 = $0;
  $7 = $0;
  $8 = Math_imul($6, $7)|0;
  $9 = ($5|0)<($8|0);
  if (!($9)) {
   break;
  }
  $10 = $i;
  $11 = $2;
  $12 = (($11) + ($10<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (+($13|0));
  $15 = $i;
  $16 = (($temp) + ($15<<2)|0);
  HEAPF32[$16>>2] = $14;
  $17 = $i;
  $18 = (($17) + 1)|0;
  $i = $18;
 }
 $len = 0;
 $i1 = 0;
 while(1) {
  $19 = $i1;
  $20 = $0;
  $21 = $0;
  $22 = Math_imul($20, $21)|0;
  $23 = ($19|0)<($22|0);
  if (!($23)) {
   break;
  }
  $24 = $i1;
  $25 = $1;
  $26 = (($25) + ($24<<2)|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ($27|0)!=(0);
  if ($28) {
   $29 = $len;
   $30 = (($29) + 1)|0;
   $len = $30;
  }
  $31 = $i1;
  $32 = (($31) + 1)|0;
  $i1 = $32;
 }
 _memset(($temp1|0),0,16384)|0;
 $33 = $4;
 $34 = ((($33)) + 72|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = $1;
 $37 = $len;
 $38 = $0;
 $39 = $0;
 _izigzagOneChannel($35,$temp,$36,$37,$38,$39,$temp1);
 $i2 = 0;
 while(1) {
  $40 = $i2;
  $41 = $0;
  $42 = $0;
  $43 = Math_imul($41, $42)|0;
  $44 = ($40|0)<($43|0);
  if (!($44)) {
   break;
  }
  $45 = $i2;
  $46 = (($temp1) + ($45<<2)|0);
  $47 = +HEAPF32[$46>>2];
  $48 = $4;
  $49 = ((($48)) + 16|0);
  $50 = ((($49)) + 20|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = $4;
  $53 = ((($52)) + 192|0);
  $54 = (($53) + ($51<<2)|0);
  $55 = +HEAPF32[$54>>2];
  $56 = $47 * $55;
  $57 = $i2;
  $58 = (($temp1) + ($57<<2)|0);
  HEAPF32[$58>>2] = $56;
  $59 = $i2;
  $60 = (($59) + 1)|0;
  $i2 = $60;
 }
 $61 = $4;
 $62 = ((($61)) + 72|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = $1;
 $65 = $0;
 $66 = $0;
 $67 = $3;
 _shapeIdctOneChannel($63,$temp1,$64,$65,$66,$67);
 STACKTOP = sp;return;
}
function _decodeEgkUeAndCabacBypass($k,$context) {
 $k = $k|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $m = 0, $value = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $k;
 $1 = $context;
 $m = 0;
 $value = 0;
 while(1) {
  $2 = $1;
  $3 = ((($2)) + 60|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (_get_cabac_bypass($4)|0);
  $6 = ($5|0)!=(0);
  $7 = $6 ^ 1;
  if (!($7)) {
   break;
  }
  $8 = $m;
  $9 = (($8) + 1)|0;
  $m = $9;
 }
 $i = 0;
 while(1) {
  $10 = $i;
  $11 = $m;
  $12 = $0;
  $13 = (($11) + ($12))|0;
  $14 = ($10|0)<($13|0);
  if (!($14)) {
   break;
  }
  $15 = $value;
  $16 = $15 << 1;
  $17 = $1;
  $18 = ((($17)) + 60|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (_get_cabac_bypass($19)|0);
  $21 = (($16) + ($20))|0;
  $value = $21;
  $22 = $i;
  $23 = (($22) + 1)|0;
  $i = $23;
 }
 $24 = $m;
 $25 = $0;
 $26 = (($24) + ($25))|0;
 $27 = 1 << $26;
 $28 = $0;
 $29 = 1 << $28;
 $30 = (($27) - ($29))|0;
 $31 = $value;
 $32 = (($30) + ($31))|0;
 STACKTOP = sp;return ($32|0);
}
function _decodeFrameHeadInfo($real_pic_row,$real_pic_col,$frame_qp,$context) {
 $real_pic_row = $real_pic_row|0;
 $real_pic_col = $real_pic_col|0;
 $frame_qp = $frame_qp|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $col_use_egk = 0, $decode = 0, $k = 0, $k1 = 0, $len = 0, $row_use_egk = 0, $vararg_buffer = 0;
 var $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $real_pic_row;
 $1 = $real_pic_col;
 $2 = $frame_qp;
 $3 = $context;
 $len = 16;
 $4 = $3;
 $5 = ((($4)) + 60|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_get_cabac_bypass($6)|0);
 $row_use_egk = $7;
 $8 = $3;
 $9 = ((($8)) + 60|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $len;
 $12 = (_get_bits_bypass($10,$11)|0);
 $13 = (($12) + 1)|0;
 $decode = $13;
 $14 = $row_use_egk;
 $15 = ($14|0)!=(0);
 if ($15) {
  $k = 0;
  $16 = $k;
  $17 = $3;
  $18 = (_decodeEgkUeAndCabacBypass($16,$17)|0);
  $19 = $decode;
  $20 = (($19) + ($18))|0;
  $decode = $20;
 }
 $21 = $decode;
 $22 = $0;
 HEAP32[$22>>2] = $21;
 $23 = $3;
 $24 = ((($23)) + 60|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = (_get_cabac_bypass($25)|0);
 $col_use_egk = $26;
 $27 = $3;
 $28 = ((($27)) + 60|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = $len;
 $31 = (_get_bits_bypass($29,$30)|0);
 $32 = (($31) + 1)|0;
 $decode = $32;
 $33 = $col_use_egk;
 $34 = ($33|0)!=(0);
 if ($34) {
  $k1 = 0;
  $35 = $k1;
  $36 = $3;
  $37 = (_decodeEgkUeAndCabacBypass($35,$36)|0);
  $38 = $decode;
  $39 = (($38) + ($37))|0;
  $decode = $39;
 }
 $40 = $decode;
 $41 = $1;
 HEAP32[$41>>2] = $40;
 $42 = $3;
 $43 = ((($42)) + 60|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (_get_bits_bypass($44,6)|0);
 $46 = $2;
 HEAP32[$46>>2] = $45;
 $47 = $0;
 $48 = HEAP32[$47>>2]|0;
 $49 = $1;
 $50 = HEAP32[$49>>2]|0;
 $51 = $2;
 $52 = HEAP32[$51>>2]|0;
 HEAP32[$vararg_buffer>>2] = $48;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $50;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $52;
 (_printf(378627,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function _decodeSplitFlag($splitFlag,$cu,$pos,$context) {
 $splitFlag = $splitFlag|0;
 $cu = $cu|0;
 $pos = $pos|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $ctx_id = 0, $leftSplitFlag = 0, $upSplitFlag = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $upSplitFlag = sp + 21|0;
 $leftSplitFlag = sp + 20|0;
 $0 = $splitFlag;
 $1 = $cu;
 $2 = $pos;
 $3 = $context;
 HEAP8[$upSplitFlag>>0] = 0;
 HEAP8[$leftSplitFlag>>0] = 0;
 $4 = $1;
 $5 = $2;
 _getCabacSplitFlag($4,$5,$upSplitFlag,$leftSplitFlag);
 $6 = HEAP8[$upSplitFlag>>0]|0;
 $7 = $6&255;
 $8 = HEAP8[$leftSplitFlag>>0]|0;
 $9 = $8&255;
 $10 = (($7) + ($9))|0;
 $ctx_id = $10;
 $11 = $3;
 $12 = ((($11)) + 60|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $3;
 $15 = ((($14)) + 104|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $18 = $ctx_id;
 $19 = (($17) + ($18)|0);
 $20 = (_get_cabac_regular($13,$19)|0);
 $21 = $20&255;
 $22 = $0;
 HEAP8[$22>>0] = $21;
 STACKTOP = sp;return 0;
}
function _decodeSmoothFlag($smoothFlag,$cu,$pos,$context) {
 $smoothFlag = $smoothFlag|0;
 $cu = $cu|0;
 $pos = $pos|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ctx_idx = 0, $leftSmoothFlag = 0, $upSmoothFlag = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $upSmoothFlag = sp + 21|0;
 $leftSmoothFlag = sp + 20|0;
 $0 = $smoothFlag;
 $1 = $cu;
 $2 = $pos;
 $3 = $context;
 HEAP8[$upSmoothFlag>>0] = 0;
 HEAP8[$leftSmoothFlag>>0] = 0;
 $4 = $1;
 $5 = $2;
 _getCabacSmoothFlag($4,$5,$upSmoothFlag,$leftSmoothFlag);
 $6 = HEAP8[$upSmoothFlag>>0]|0;
 $7 = $6&255;
 $8 = HEAP8[$leftSmoothFlag>>0]|0;
 $9 = $8&255;
 $10 = (($7) + ($9))|0;
 $ctx_idx = $10;
 $11 = $3;
 $12 = ((($11)) + 60|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $3;
 $15 = ((($14)) + 104|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + 6|0);
 $19 = $ctx_idx;
 $20 = (($18) + ($19)|0);
 $21 = (_get_cabac_regular($13,$20)|0);
 $22 = $21&255;
 $23 = $0;
 HEAP8[$23>>0] = $22;
 STACKTOP = sp;return 0;
}
function _decodeSmoothFlag_chroma($smoothFlag_chroma,$ctu,$pos,$context) {
 $smoothFlag_chroma = $smoothFlag_chroma|0;
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ctx_idx = 0, $leftSmoothFlag_chroma = 0, $upSmoothFlag_chroma = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $upSmoothFlag_chroma = sp + 21|0;
 $leftSmoothFlag_chroma = sp + 20|0;
 $0 = $smoothFlag_chroma;
 $1 = $ctu;
 $2 = $pos;
 $3 = $context;
 HEAP8[$upSmoothFlag_chroma>>0] = 0;
 HEAP8[$leftSmoothFlag_chroma>>0] = 0;
 $4 = $1;
 $5 = $2;
 _getCabacSmoothFlag_chroma($4,$5,$upSmoothFlag_chroma,$leftSmoothFlag_chroma);
 $6 = HEAP8[$upSmoothFlag_chroma>>0]|0;
 $7 = $6&255;
 $8 = HEAP8[$leftSmoothFlag_chroma>>0]|0;
 $9 = $8&255;
 $10 = (($7) + ($9))|0;
 $ctx_idx = $10;
 $11 = $3;
 $12 = ((($11)) + 60|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $3;
 $15 = ((($14)) + 104|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + 6|0);
 $19 = $ctx_idx;
 $20 = (($18) + ($19)|0);
 $21 = (_get_cabac_regular($13,$20)|0);
 $22 = $21&255;
 $23 = $0;
 HEAP8[$23>>0] = $22;
 STACKTOP = sp;return;
}
function _decodeIntraLumaPredType($ctu,$pos,$context) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $candi = 0, $firstBit = 0, $i = 0, $i1 = 0, $leftPretype = 0, $left_mode_base = 0, $len = 0, $mode_base = 0, $mode_off = 0, $preIdx = 0, $preIn = 0, $pretype = 0, $secondBit = 0, $upPretype = 0;
 var $up_mode_base = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer16 = 0, $vararg_buffer19 = 0, $vararg_buffer2 = 0, $vararg_buffer23 = 0, $vararg_buffer6 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0, $vararg_ptr22 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer23 = sp + 64|0;
 $vararg_buffer19 = sp + 56|0;
 $vararg_buffer16 = sp + 48|0;
 $vararg_buffer13 = sp + 40|0;
 $vararg_buffer11 = sp + 32|0;
 $vararg_buffer8 = sp + 24|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $leftPretype = sp + 125|0;
 $upPretype = sp + 124|0;
 $candi = sp + 121|0;
 $1 = $ctu;
 $2 = $context;
 $3 = $2;
 $4 = ((($3)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_get_cabac_bypass($5)|0);
 $firstBit = $6;
 $7 = $firstBit;
 $8 = ($7|0)==(1);
 if ($8) {
  $9 = $2;
  $10 = ((($9)) + 60|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (_get_cabac_bypass($11)|0);
  $secondBit = $12;
  $13 = $secondBit;
  $14 = $13&255;
  $0 = $14;
  $125 = $0;
  STACKTOP = sp;return ($125|0);
 }
 HEAP8[$leftPretype>>0] = 0;
 HEAP8[$upPretype>>0] = 0;
 $15 = $1;
 _getCabacPredType($15,$pos,$upPretype,$leftPretype);
 $16 = HEAP8[$leftPretype>>0]|0;
 $17 = (_getCodePretypeBase($16)|0);
 $left_mode_base = $17;
 $18 = HEAP8[$upPretype>>0]|0;
 $19 = (_getCodePretypeBase($18)|0);
 $up_mode_base = $19;
 $20 = HEAP32[892>>2]|0;
 $21 = ($20|0)!=(0);
 if ($21) {
  $22 = HEAP8[$leftPretype>>0]|0;
  $23 = $22&255;
  $24 = HEAP8[$upPretype>>0]|0;
  $25 = $24&255;
  HEAP32[$vararg_buffer>>2] = $23;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $25;
  (_printf(378646,$vararg_buffer)|0);
  $26 = $left_mode_base;
  $27 = $up_mode_base;
  HEAP32[$vararg_buffer2>>2] = $26;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $27;
  (_printf(378677,$vararg_buffer2)|0);
 }
 ;HEAP8[$candi>>0]=0|0;HEAP8[$candi+1>>0]=0|0;HEAP8[$candi+2>>0]=0|0;
 $28 = $left_mode_base;
 $29 = $28&255;
 $30 = $up_mode_base;
 $31 = $30&255;
 _getPretypeCandi($29,$31,$candi);
 $32 = HEAP32[892>>2]|0;
 $33 = ($32|0)!=(0);
 if ($33) {
  (_printf(378704,$vararg_buffer6)|0);
  $i = 0;
  while(1) {
   $34 = $i;
   $35 = ($34|0)<(3);
   if (!($35)) {
    break;
   }
   $36 = $i;
   $37 = (($candi) + ($36)|0);
   $38 = HEAP8[$37>>0]|0;
   $39 = $38&255;
   HEAP32[$vararg_buffer8>>2] = $39;
   (_printf(382302,$vararg_buffer8)|0);
   $40 = $i;
   $41 = (($40) + 1)|0;
   $i = $41;
  }
  (_printf(382820,$vararg_buffer11)|0);
 }
 $42 = $2;
 $43 = ((($42)) + 60|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = $2;
 $46 = ((($45)) + 104|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = HEAP32[$47>>2]|0;
 $49 = ((($48)) + 24|0);
 $50 = (_get_cabac_regular($44,$49)|0);
 $preIn = $50;
 $mode_base = -1;
 $mode_off = -1;
 $pretype = 0;
 $51 = $preIn;
 $52 = ($51|0)!=(0);
 if ($52) {
  $preIdx = 0;
  $53 = $2;
  $54 = ((($53)) + 60|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = (_get_cabac_bypass($55)|0);
  $preIdx = $56;
  $57 = $preIdx;
  $58 = ($57|0)==(1);
  if ($58) {
   $59 = $preIdx;
   $60 = $59 << 1;
   $61 = $2;
   $62 = ((($61)) + 60|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = (_get_cabac_bypass($63)|0);
   $65 = (($60) + ($64))|0;
   $66 = (($65) - 1)|0;
   $preIdx = $66;
  }
  $67 = $preIdx;
  $68 = (($candi) + ($67)|0);
  $69 = HEAP8[$68>>0]|0;
  $70 = $69&255;
  $mode_base = $70;
  $71 = $mode_base;
  $72 = $71&255;
  $73 = (_getExtendPretypeBase($72)|0);
  $74 = $73&255;
  $pretype = $74;
  $75 = HEAP32[892>>2]|0;
  $76 = ($75|0)!=(0);
  if ($76) {
   $77 = $pretype;
   $78 = $77&255;
   HEAP32[$vararg_buffer13>>2] = $78;
   (_printf(378712,$vararg_buffer13)|0);
  }
 } else {
  _bubble($candi,3);
  $79 = $2;
  $80 = ((($79)) + 60|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = (_get_bits_bypass($81,5)|0);
  $mode_base = $82;
  $i1 = 0;
  while(1) {
   $83 = $i1;
   $84 = ($83|0)<(3);
   $85 = $mode_base;
   if (!($84)) {
    break;
   }
   $86 = $i1;
   $87 = (($candi) + ($86)|0);
   $88 = HEAP8[$87>>0]|0;
   $89 = $88&255;
   $90 = ($85|0)>=($89|0);
   if ($90) {
    $91 = $mode_base;
    $92 = (($91) + 1)|0;
    $mode_base = $92;
   }
   $93 = $i1;
   $94 = (($93) + 1)|0;
   $i1 = $94;
  }
  $95 = $85&255;
  $96 = (_getExtendPretypeBase($95)|0);
  $97 = $96&255;
  $pretype = $97;
  $98 = HEAP32[892>>2]|0;
  $99 = ($98|0)!=(0);
  if ($99) {
   $100 = $pretype;
   $101 = $100&255;
   HEAP32[$vararg_buffer16>>2] = $101;
   (_printf(378729,$vararg_buffer16)|0);
  }
 }
 $102 = $pretype;
 $103 = (_getPretypeOff($102)|0);
 $mode_off = $103;
 $104 = $mode_off;
 $105 = ($104|0)!=(-1);
 if ($105) {
  $106 = $mode_base;
  $107 = (_getCodeOffLen($106)|0);
  $len = $107;
  $108 = $2;
  $109 = ((($108)) + 60|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = $len;
  $112 = (_get_bits_bypass($110,$111)|0);
  $mode_off = $112;
  $113 = $mode_off;
  $114 = $pretype;
  $115 = $114&255;
  $116 = (($115) + ($113))|0;
  $117 = $116&255;
  $pretype = $117;
 }
 $118 = HEAP32[892>>2]|0;
 $119 = ($118|0)!=(0);
 if ($119) {
  $120 = $mode_base;
  $121 = $mode_off;
  HEAP32[$vararg_buffer19>>2] = $120;
  $vararg_ptr22 = ((($vararg_buffer19)) + 4|0);
  HEAP32[$vararg_ptr22>>2] = $121;
  (_printf(378749,$vararg_buffer19)|0);
  $122 = $pretype;
  $123 = $122&255;
  HEAP32[$vararg_buffer23>>2] = $123;
  (_printf(378777,$vararg_buffer23)|0);
 }
 $124 = $pretype;
 $0 = $124;
 $125 = $0;
 STACKTOP = sp;return ($125|0);
}
function _decodeIntraChromaPredType($chromaModeIdx,$context) {
 $chromaModeIdx = $chromaModeIdx|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $firstBin = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $chromaModeIdx;
 $1 = $context;
 $2 = $0;
 HEAP8[$2>>0] = 0;
 $3 = $1;
 $4 = ((($3)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $1;
 $7 = ((($6)) + 104|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 25|0);
 $11 = (_get_cabac_regular($5,$10)|0);
 $12 = $11&255;
 $firstBin = $12;
 $13 = $firstBin;
 $14 = ($13<<24>>24)!=(0);
 if (!($14)) {
  $30 = $0;
  HEAP8[$30>>0] = 4;
  STACKTOP = sp;return;
 }
 $i = 0;
 while(1) {
  $15 = $i;
  $16 = ($15|0)<(2);
  if (!($16)) {
   break;
  }
  $17 = $0;
  $18 = HEAP8[$17>>0]|0;
  $19 = $18&255;
  $20 = $19 << 1;
  $21 = $1;
  $22 = ((($21)) + 60|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = (_get_cabac_bypass($23)|0);
  $25 = (($20) + ($24))|0;
  $26 = $25&255;
  $27 = $0;
  HEAP8[$27>>0] = $26;
  $28 = $i;
  $29 = (($28) + 1)|0;
  $i = $29;
 }
 STACKTOP = sp;return;
}
function _decodeTuSplitflag_luma($transformSize,$context) {
 $transformSize = $transformSize|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0.0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ctx_idx = 0, $tu_splitflag = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $transformSize;
 $1 = $context;
 $2 = $0;
 $3 = (+($2|0));
 $4 = (+_log2($3));
 $5 = (~~(($4)));
 $6 = (6 - ($5))|0;
 $ctx_idx = $6;
 $7 = $1;
 $8 = ((($7)) + 60|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $1;
 $11 = ((($10)) + 104|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($13)) + 48|0);
 $15 = $ctx_idx;
 $16 = (($14) + ($15)|0);
 $17 = (_get_cabac_regular($9,$16)|0);
 $18 = $17&255;
 $tu_splitflag = $18;
 $19 = $tu_splitflag;
 STACKTOP = sp;return ($19|0);
}
function _decodeTuSplitflag_chroma($transformSize,$context) {
 $transformSize = $transformSize|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0.0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $ctx_idx = 0, $tu_splitflag_chroma = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $transformSize;
 $1 = $context;
 $2 = $0;
 $3 = (+($2|0));
 $4 = (+_log2($3));
 $5 = (~~(($4)));
 $6 = (5 - ($5))|0;
 $7 = (($6) + 4)|0;
 $ctx_idx = $7;
 $8 = $1;
 $9 = ((($8)) + 60|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1;
 $12 = ((($11)) + 104|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($14)) + 48|0);
 $16 = $ctx_idx;
 $17 = (($15) + ($16)|0);
 $18 = (_get_cabac_regular($10,$17)|0);
 $19 = $18&255;
 $tu_splitflag_chroma = $19;
 $20 = $tu_splitflag_chroma;
 STACKTOP = sp;return ($20|0);
}
function _decodeCoeffTranskip_luma($tuSize,$trans_depth,$context) {
 $tuSize = $tuSize|0;
 $trans_depth = $trans_depth|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $coeff_transform_skipflag = 0, $ctx_idx = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $tuSize;
 $1 = $trans_depth;
 $2 = $context;
 $coeff_transform_skipflag = 0;
 $3 = $0;
 $4 = ($3|0)==(64);
 if ($4) {
  $8 = 2;
 } else {
  $5 = $1;
  $6 = ($5|0)==(0);
  $7 = $6 ? 1 : 0;
  $8 = $7;
 }
 $ctx_idx = $8;
 $9 = $2;
 $10 = ((($9)) + 60|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $2;
 $13 = ((($12)) + 104|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 39|0);
 $17 = $ctx_idx;
 $18 = (($16) + ($17)|0);
 $19 = (_get_cabac_regular($11,$18)|0);
 $20 = $19&255;
 $coeff_transform_skipflag = $20;
 $21 = $coeff_transform_skipflag;
 STACKTOP = sp;return ($21|0);
}
function _decodeCoeffTranskip_chroma($tuSize,$trans_depth,$context) {
 $tuSize = $tuSize|0;
 $trans_depth = $trans_depth|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $coeff_transform_skipflag = 0, $ctx_idx = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $tuSize;
 $1 = $trans_depth;
 $2 = $context;
 $coeff_transform_skipflag = 0;
 $3 = $0;
 $4 = ($3|0)==(32);
 $5 = $1;
 $6 = (($5) + 3)|0;
 $7 = $4 ? 7 : $6;
 $ctx_idx = $7;
 $8 = $2;
 $9 = ((($8)) + 60|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2;
 $12 = ((($11)) + 104|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($14)) + 39|0);
 $16 = $ctx_idx;
 $17 = (($15) + ($16)|0);
 $18 = (_get_cabac_regular($10,$17)|0);
 $19 = $18&255;
 $coeff_transform_skipflag = $19;
 $20 = $coeff_transform_skipflag;
 STACKTOP = sp;return ($20|0);
}
function _decodeBorderStart($size,$context) {
 $size = $size|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $value = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $size;
 $1 = $context;
 $2 = $0;
 $3 = $2<<1;
 $4 = (+($3|0));
 $5 = (+_log2($4));
 $6 = (~~(($5)));
 $7 = $1;
 $8 = (_decodeEgkUeAndCabacBypass($6,$7)|0);
 $9 = $8&255;
 $value = $9;
 $10 = $value;
 STACKTOP = sp;return ($10|0);
}
function _decodeNewBorderData($deltaLen,$delta,$start,$width,$context,$three_part) {
 $deltaLen = $deltaLen|0;
 $delta = $delta|0;
 $start = $start|0;
 $width = $width|0;
 $context = $context|0;
 $three_part = $three_part|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $abs_greater0_flag = 0, $abs_greater1_flag = 0, $greater0_flag = 0, $greater1_flag = 0, $i = 0, $i1 = 0, $i2 = 0, $i3 = 0, $shapeDelta = 0;
 var $sign = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 704|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $shapeDelta = sp + 568|0;
 $abs_greater0_flag = sp + 288|0;
 $abs_greater1_flag = sp + 24|0;
 $0 = $deltaLen;
 $1 = $delta;
 $2 = $start;
 $3 = $width;
 $4 = $context;
 $5 = $three_part;
 $6 = $5;
 $7 = ($6|0)!=(0);
 if ($7) {
  $8 = $0;
  $9 = $4;
  $10 = (_decodeBorderStart($8,$9)|0);
  $11 = $2;
  HEAP8[$11>>0] = $10;
  $12 = $4;
  $13 = (_decodeEgkUeAndCabacBypass(0,$12)|0);
  $14 = $13&255;
  $15 = $3;
  HEAP8[$15>>0] = $14;
 }
 dest=$shapeDelta; stop=dest+128|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 _memset(($abs_greater0_flag|0),0,256)|0;
 $i = 0;
 while(1) {
  $16 = $i;
  $17 = $0;
  $18 = ($16|0)<($17|0);
  if (!($18)) {
   break;
  }
  $19 = $4;
  $20 = ((($19)) + 60|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = $4;
  $23 = ((($22)) + 104|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($25)) + 12|0);
  $27 = (_get_cabac_regular($21,$26)|0);
  $greater0_flag = $27;
  $28 = $greater0_flag;
  $29 = $i;
  $30 = (($abs_greater0_flag) + ($29<<2)|0);
  HEAP32[$30>>2] = $28;
  $31 = $i;
  $32 = (($31) + 1)|0;
  $i = $32;
 }
 _memset(($abs_greater1_flag|0),0,256)|0;
 $i1 = 0;
 while(1) {
  $33 = $i1;
  $34 = $0;
  $35 = ($33|0)<($34|0);
  if (!($35)) {
   break;
  }
  $36 = $i1;
  $37 = (($abs_greater0_flag) + ($36<<2)|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($38|0)!=(0);
  if ($39) {
   $40 = $4;
   $41 = ((($40)) + 60|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = $4;
   $44 = ((($43)) + 104|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($46)) + 13|0);
   $48 = (_get_cabac_regular($42,$47)|0);
   $greater1_flag = $48;
   $49 = $greater1_flag;
   $50 = $i1;
   $51 = (($abs_greater1_flag) + ($50<<2)|0);
   HEAP32[$51>>2] = $49;
  }
  $52 = $i1;
  $53 = (($52) + 1)|0;
  $i1 = $53;
 }
 $i2 = 0;
 while(1) {
  $54 = $i2;
  $55 = $0;
  $56 = ($54|0)<($55|0);
  if (!($56)) {
   break;
  }
  $57 = $i2;
  $58 = (($abs_greater0_flag) + ($57<<2)|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = ($59|0)!=(0);
  if ($60) {
   $61 = $4;
   $62 = ((($61)) + 60|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = (_get_cabac_bypass($63)|0);
   $sign = $64;
   $65 = $i2;
   $66 = (($abs_greater1_flag) + ($65<<2)|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ($67|0)!=(0);
   if ($68) {
    $69 = $4;
    $70 = (_decodeEgkUeAndCabacBypass(1,$69)|0);
    $71 = (($70) + 2)|0;
    $72 = $71&65535;
    $73 = $i2;
    $74 = (($shapeDelta) + ($73<<1)|0);
    HEAP16[$74>>1] = $72;
   } else {
    $75 = $i2;
    $76 = (($shapeDelta) + ($75<<1)|0);
    HEAP16[$76>>1] = 1;
   }
   $77 = $sign;
   $78 = ($77|0)!=(0);
   if ($78) {
    $79 = $i2;
    $80 = (($shapeDelta) + ($79<<1)|0);
    $81 = HEAP16[$80>>1]|0;
    $82 = $81 << 16 >> 16;
    $83 = (0 - ($82))|0;
    $84 = $83&65535;
    $85 = $i2;
    $86 = (($shapeDelta) + ($85<<1)|0);
    HEAP16[$86>>1] = $84;
   }
  }
  $87 = $i2;
  $88 = (($87) + 1)|0;
  $i2 = $88;
 }
 $89 = HEAP16[$shapeDelta>>1]|0;
 $90 = $1;
 HEAP16[$90>>1] = $89;
 $i3 = 1;
 while(1) {
  $91 = $i3;
  $92 = $0;
  $93 = ($91|0)<($92|0);
  if (!($93)) {
   break;
  }
  $94 = $i3;
  $95 = (($94) - 1)|0;
  $96 = $1;
  $97 = (($96) + ($95<<1)|0);
  $98 = HEAP16[$97>>1]|0;
  $99 = $98 << 16 >> 16;
  $100 = $i3;
  $101 = (($shapeDelta) + ($100<<1)|0);
  $102 = HEAP16[$101>>1]|0;
  $103 = $102 << 16 >> 16;
  $104 = (($99) + ($103))|0;
  $105 = $104&65535;
  $106 = $i3;
  $107 = $1;
  $108 = (($107) + ($106<<1)|0);
  HEAP16[$108>>1] = $105;
  $109 = $i3;
  $110 = (($109) + 1)|0;
  $i3 = $110;
 }
 STACKTOP = sp;return;
}
function _decodeCoeffResidual($len,$src,$context,$channel) {
 $len = $len|0;
 $src = $src|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $len;
 $1 = $src;
 $2 = $context;
 $3 = $channel;
 $4 = $1;
 $5 = $0;
 $6 = $2;
 $7 = $3;
 _decodeCoeffIrr($4,$5,$6,$7);
 STACKTOP = sp;return 0;
}
function _decodeCoeffIrr($src,$srcLen,$context,$channel) {
 $src = $src|0;
 $srcLen = $srcLen|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0.0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0.0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0.0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0.0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0.0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0.0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $baseLevel = 0, $baseOff = 0, $cAbsLevel = 0, $cgLen = 0, $csbf = 0, $ctx2 = 0, $ctx_set = 0, $firstItem = 0, $greater1Ctx = 0;
 var $greater1Flags = 0, $greater1Len = 0, $greater2Flags = 0, $i = 0, $i1 = 0, $i2 = 0, $i3 = 0, $lastGreater1Ctx = 0, $lastGreater1Flag = 0, $lastGreater1Pos = 0, $lastPos = 0, $lastTwoFlags = 0, $len = 0, $numSigs = 0, $off_idx = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $r = 0;
 var $remain = 0, $sigFlags = 0, $sigTableIdx = 0, $sign = 0, $transform_skipflag = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer19 = 0, $vararg_buffer23 = 0, $vararg_buffer25 = 0, $vararg_buffer28 = 0, $vararg_buffer30 = 0, $vararg_buffer8 = 0, $vararg_ptr11 = 0, $vararg_ptr18 = 0, $vararg_ptr22 = 0, dest = 0, label = 0, sp = 0;
 var stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer30 = sp + 64|0;
 $vararg_buffer28 = sp + 56|0;
 $vararg_buffer25 = sp + 48|0;
 $vararg_buffer23 = sp + 40|0;
 $vararg_buffer19 = sp + 32|0;
 $vararg_buffer15 = sp + 24|0;
 $vararg_buffer12 = sp + 16|0;
 $vararg_buffer8 = sp + 8|0;
 $vararg_buffer = sp;
 $lastTwoFlags = sp + 416|0;
 $sigFlags = sp + 336|0;
 $baseOff = sp + 328|0;
 $sigTableIdx = sp + 324|0;
 $greater1Flags = sp + 256|0;
 $greater1Ctx = sp + 244|0;
 $ctx_set = sp + 240|0;
 $greater2Flags = sp + 168|0;
 $sign = sp + 96|0;
 $r = sp + 84|0;
 $cAbsLevel = sp + 80|0;
 $remain = sp + 68|0;
 $0 = $src;
 $1 = $srcLen;
 $2 = $context;
 $3 = $channel;
 $4 = HEAP32[888>>2]|0;
 $5 = ($4|0)!=(0);
 if ($5) {
  $6 = $3;
  HEAP32[$vararg_buffer>>2] = $6;
  (_printf(378795,$vararg_buffer)|0);
 }
 $7 = $0;
 $8 = $1;
 $9 = $8<<2;
 _memset(($7|0),0,($9|0))|0;
 $10 = $1;
 $11 = ($10|0)==(0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = $1;
 $13 = (+($12|0));
 $14 = (+_log2($13));
 $15 = 6.0 > $14;
 if ($15) {
  $16 = $1;
  $17 = (+($16|0));
  $18 = (+_log2($17));
  $23 = $18;
 } else {
  $23 = 6.0;
 }
 $19 = $3;
 $20 = ($19*6)|0;
 $21 = (+($20|0));
 $22 = $23 + $21;
 $24 = (~~(($22)));
 $off_idx = $24;
 $25 = $2;
 $26 = ((($25)) + 60|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = $2;
 $29 = ((($28)) + 104|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($31)) + 177|0);
 $33 = $off_idx;
 $34 = (($32) + ($33)|0);
 $35 = (_get_cabac_regular($27,$34)|0);
 $transform_skipflag = $35;
 $36 = HEAP32[888>>2]|0;
 $37 = ($36|0)!=(0);
 if ($37) {
  $38 = $transform_skipflag;
  $39 = $2;
  $40 = ((($39)) + 104|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = HEAP32[$41>>2]|0;
  $43 = $off_idx;
  $44 = (($42) + ($43)|0);
  $45 = HEAP8[$44>>0]|0;
  $46 = $45&255;
  HEAP32[$vararg_buffer8>>2] = $38;
  $vararg_ptr11 = ((($vararg_buffer8)) + 4|0);
  HEAP32[$vararg_ptr11>>2] = $46;
  (_printf(378808,$vararg_buffer8)|0);
 }
 $47 = $transform_skipflag;
 $48 = ($47|0)!=(0);
 if (!($48)) {
  STACKTOP = sp;return;
 }
 $49 = $1;
 $50 = $2;
 $51 = $3;
 $52 = (_decodeLastPos_irr($49,$50,$51)|0);
 $lastPos = $52;
 $53 = $lastPos;
 $54 = (($53) + 1)|0;
 $len = $54;
 ;HEAP32[$lastTwoFlags>>2]=HEAP32[900>>2]|0;HEAP32[$lastTwoFlags+4>>2]=HEAP32[900+4>>2]|0;
 $lastGreater1Ctx = 1;
 $lastGreater1Flag = 0;
 while(1) {
  $55 = $len;
  $56 = ($55|0)>(0);
  if (!($56)) {
   break;
  }
  $57 = HEAP32[888>>2]|0;
  $58 = ($57|0)!=(0);
  if ($58) {
   $59 = $len;
   HEAP32[$vararg_buffer12>>2] = $59;
   (_printf(378836,$vararg_buffer12)|0);
  }
  $cgLen = 0;
  $60 = $len;
  $61 = $lastPos;
  $62 = (($61) + 1)|0;
  $63 = ($60|0)==($62|0);
  if ($63) {
   $64 = $lastPos;
   $65 = (($64) + 1)|0;
   $66 = (($65|0) % 16)&-1;
   $67 = ($66|0)!=(0);
   if ($67) {
    $68 = $lastPos;
    $69 = (($68) + 1)|0;
    $70 = $lastPos;
    $71 = (($70) + 1)|0;
    $72 = (($71|0) / 16)&-1;
    $73 = $72<<4;
    $74 = (($69) - ($73))|0;
    $cgLen = $74;
   } else {
    label = 16;
   }
  } else {
   label = 16;
  }
  if ((label|0) == 16) {
   label = 0;
   $cgLen = 16;
  }
  $csbf = 0;
  $75 = $len;
  $76 = $lastPos;
  $77 = (($76) + 1)|0;
  $78 = ($75|0)!=($77|0);
  if ($78) {
   $79 = $2;
   $80 = $3;
   $81 = (_decodeCsbf_irr($lastTwoFlags,$79,$80)|0);
   $csbf = $81;
  } else {
   $csbf = 1;
  }
  $82 = $csbf;
  $83 = ($82|0)!=(0);
  if (!($83)) {
   $84 = HEAP32[$lastTwoFlags>>2]|0;
   $85 = ((($lastTwoFlags)) + 4|0);
   HEAP32[$85>>2] = $84;
   $86 = $csbf;
   HEAP32[$lastTwoFlags>>2] = $86;
   $87 = $cgLen;
   $88 = $len;
   $89 = (($88) - ($87))|0;
   $len = $89;
   continue;
  }
  dest=$sigFlags; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  HEAP32[$baseOff>>2] = 0;
  HEAP32[$sigTableIdx>>2] = 0;
  $90 = $1;
  $91 = $len;
  $92 = $3;
  _getSigUsed($90,$91,$lastTwoFlags,$baseOff,$sigTableIdx,$92);
  $93 = HEAP32[888>>2]|0;
  $94 = ($93|0)!=(0);
  if ($94) {
   $95 = HEAP32[$baseOff>>2]|0;
   $96 = HEAP32[$sigTableIdx>>2]|0;
   HEAP32[$vararg_buffer15>>2] = $95;
   $vararg_ptr18 = ((($vararg_buffer15)) + 4|0);
   HEAP32[$vararg_ptr18>>2] = $96;
   (_printf(378845,$vararg_buffer15)|0);
  }
  $i = 0;
  while(1) {
   $97 = $i;
   $98 = $cgLen;
   $99 = ($97|0)<($98|0);
   if (!($99)) {
    break;
   }
   $100 = $len;
   $101 = $lastPos;
   $102 = (($101) + 1)|0;
   $103 = ($100|0)==($102|0);
   $104 = $i;
   $105 = ($104|0)==(0);
   $or$cond = $103 & $105;
   if ($or$cond) {
    $106 = $i;
    $107 = (($sigFlags) + ($106<<2)|0);
    HEAP32[$107>>2] = 1;
   } else {
    $108 = $len;
    $109 = $cgLen;
    $110 = (($109) - 1)|0;
    $111 = $i;
    $112 = (($110) - ($111))|0;
    $113 = HEAP32[$baseOff>>2]|0;
    $114 = HEAP32[$sigTableIdx>>2]|0;
    $115 = $2;
    $116 = $3;
    $117 = (_decodeSigFlag_irr($108,$112,$113,$114,$115,$116)|0);
    $118 = $i;
    $119 = (($sigFlags) + ($118<<2)|0);
    HEAP32[$119>>2] = $117;
   }
   $120 = $i;
   $121 = (($120) + 1)|0;
   $i = $121;
  }
  dest=$greater1Flags; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  $greater1Len = 0;
  $lastGreater1Pos = -1;
  HEAP32[$greater1Ctx>>2] = 1;
  HEAP32[$ctx_set>>2] = 0;
  $firstItem = 1;
  $i1 = 0;
  while(1) {
   $122 = $i1;
   $123 = $cgLen;
   $124 = ($122|0)<($123|0);
   $125 = $greater1Len;
   $126 = ($125|0)<(8);
   $127 = $124 ? $126 : 0;
   if (!($127)) {
    break;
   }
   $128 = $i1;
   $129 = (($sigFlags) + ($128<<2)|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ($130|0)!=(0);
   if ($131) {
    $132 = $greater1Len;
    $133 = (($132) + 1)|0;
    $greater1Len = $133;
    $134 = $firstItem;
    $135 = $len;
    $136 = $lastPos;
    $137 = (($136) + 1)|0;
    $138 = ($135|0)==($137|0);
    $139 = $138&1;
    $140 = $len;
    $141 = ($140|0)<=(16);
    $142 = $141&1;
    $143 = $lastGreater1Ctx;
    $144 = $lastGreater1Flag;
    $145 = $2;
    $146 = $3;
    $147 = (_decodeGreater1Flag_irr($134,$139,$142,$143,$144,$greater1Ctx,$ctx_set,$145,$146)|0);
    $148 = $i1;
    $149 = (($greater1Flags) + ($148<<2)|0);
    HEAP32[$149>>2] = $147;
    $150 = HEAP32[$greater1Ctx>>2]|0;
    $lastGreater1Ctx = $150;
    $151 = $i1;
    $152 = (($greater1Flags) + ($151<<2)|0);
    $153 = HEAP32[$152>>2]|0;
    $lastGreater1Flag = $153;
    $154 = $i1;
    $155 = (($greater1Flags) + ($154<<2)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)!=(0);
    $158 = $lastGreater1Pos;
    $159 = ($158|0)==(-1);
    $or$cond3 = $157 & $159;
    if ($or$cond3) {
     $160 = $i1;
     $lastGreater1Pos = $160;
    }
    $firstItem = 0;
   }
   $161 = $i1;
   $162 = (($161) + 1)|0;
   $i1 = $162;
  }
  dest=$greater2Flags; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  $163 = $lastGreater1Pos;
  $164 = ($163|0)!=(-1);
  if ($164) {
   $165 = HEAP32[$ctx_set>>2]|0;
   $166 = $3;
   $167 = $166<<2;
   $168 = (($165) + ($167))|0;
   $ctx2 = $168;
   $169 = $2;
   $170 = ((($169)) + 60|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = $2;
   $173 = ((($172)) + 104|0);
   $174 = HEAP32[$173>>2]|0;
   $175 = HEAP32[$174>>2]|0;
   $176 = ((($175)) + 275|0);
   $177 = $ctx2;
   $178 = (($176) + ($177)|0);
   $179 = (_get_cabac_regular($171,$178)|0);
   $180 = $lastGreater1Pos;
   $181 = (($greater2Flags) + ($180<<2)|0);
   HEAP32[$181>>2] = $179;
   $182 = HEAP32[888>>2]|0;
   $183 = ($182|0)!=(0);
   if ($183) {
    $184 = $lastGreater1Pos;
    $185 = (($greater2Flags) + ($184<<2)|0);
    $186 = HEAP32[$185>>2]|0;
    $187 = $2;
    $188 = ((($187)) + 104|0);
    $189 = HEAP32[$188>>2]|0;
    $190 = HEAP32[$189>>2]|0;
    $191 = $ctx2;
    $192 = (($190) + ($191)|0);
    $193 = HEAP8[$192>>0]|0;
    $194 = $193&255;
    HEAP32[$vararg_buffer19>>2] = $186;
    $vararg_ptr22 = ((($vararg_buffer19)) + 4|0);
    HEAP32[$vararg_ptr22>>2] = $194;
    (_printf(378874,$vararg_buffer19)|0);
   }
  }
  dest=$sign; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  $195 = HEAP32[888>>2]|0;
  $196 = ($195|0)!=(0);
  if ($196) {
   (_printf(378902,$vararg_buffer23)|0);
  }
  $i2 = 0;
  while(1) {
   $197 = $i2;
   $198 = $cgLen;
   $199 = ($197|0)<($198|0);
   if (!($199)) {
    break;
   }
   $200 = $i2;
   $201 = (($sigFlags) + ($200<<2)|0);
   $202 = HEAP32[$201>>2]|0;
   $203 = ($202|0)!=(0);
   if ($203) {
    $204 = $2;
    $205 = ((($204)) + 60|0);
    $206 = HEAP32[$205>>2]|0;
    $207 = (_get_cabac_bypass($206)|0);
    $208 = $i2;
    $209 = (($sign) + ($208<<2)|0);
    HEAP32[$209>>2] = $207;
    $210 = HEAP32[888>>2]|0;
    $211 = ($210|0)!=(0);
    if ($211) {
     $212 = $i2;
     $213 = (($sign) + ($212<<2)|0);
     $214 = HEAP32[$213>>2]|0;
     HEAP32[$vararg_buffer25>>2] = $214;
     (_printf(382817,$vararg_buffer25)|0);
    }
   }
   $215 = $i2;
   $216 = (($215) + 1)|0;
   $i2 = $216;
  }
  $217 = HEAP32[888>>2]|0;
  $218 = ($217|0)!=(0);
  if ($218) {
   (_printf(382820,$vararg_buffer28)|0);
  }
  $numSigs = 0;
  HEAP32[$r>>2] = 0;
  HEAP32[$cAbsLevel>>2] = 0;
  $i3 = 0;
  while(1) {
   $219 = $i3;
   $220 = $cgLen;
   $221 = ($219|0)<($220|0);
   if (!($221)) {
    break;
   }
   $222 = $i3;
   $223 = (($sigFlags) + ($222<<2)|0);
   $224 = HEAP32[$223>>2]|0;
   $225 = ($224|0)!=(0);
   if ($225) {
    $226 = $i3;
    $227 = (($sigFlags) + ($226<<2)|0);
    $228 = HEAP32[$227>>2]|0;
    $229 = $i3;
    $230 = (($greater1Flags) + ($229<<2)|0);
    $231 = HEAP32[$230>>2]|0;
    $232 = (($228) + ($231))|0;
    $233 = $i3;
    $234 = (($greater2Flags) + ($233<<2)|0);
    $235 = HEAP32[$234>>2]|0;
    $236 = (($232) + ($235))|0;
    $baseLevel = $236;
    $237 = $baseLevel;
    $238 = $numSigs;
    $239 = ($238|0)<(8);
    if ($239) {
     $240 = $i3;
     $241 = $lastGreater1Pos;
     $242 = ($240|0)==($241|0);
     $243 = $242 ? 3 : 2;
     $245 = $243;
    } else {
     $245 = 1;
    }
    $244 = ($237|0)==($245|0);
    L82: do {
     if ($244) {
      HEAP32[$remain>>2] = 0;
      $246 = $baseLevel;
      $247 = $2;
      _decodeRemaining($remain,$246,$r,$cAbsLevel,$247);
      $248 = HEAP32[888>>2]|0;
      $249 = ($248|0)!=(0);
      if ($249) {
       $250 = HEAP32[$remain>>2]|0;
       HEAP32[$vararg_buffer30>>2] = $250;
       (_printf(378909,$vararg_buffer30)|0);
      }
      $251 = HEAP32[$remain>>2]|0;
      $252 = $baseLevel;
      $253 = (($251) + ($252))|0;
      $254 = $len;
      $255 = (($254) - 1)|0;
      $256 = $i3;
      $257 = (($255) - ($256))|0;
      $258 = $0;
      $259 = (($258) + ($257<<2)|0);
      HEAP32[$259>>2] = $253;
     } else {
      $260 = $numSigs;
      $261 = ($260|0)<(8);
      do {
       if ($261) {
        $262 = $i3;
        $263 = $lastGreater1Pos;
        $264 = ($262|0)==($263|0);
        $265 = $baseLevel;
        $266 = ($265|0)==(2);
        $or$cond5 = $264 & $266;
        if (!($or$cond5)) {
         break;
        }
        $267 = $len;
        $268 = (($267) - 1)|0;
        $269 = $i3;
        $270 = (($268) - ($269))|0;
        $271 = $0;
        $272 = (($271) + ($270<<2)|0);
        HEAP32[$272>>2] = 2;
        break L82;
       }
      } while(0);
      $273 = $numSigs;
      $274 = ($273|0)<(8);
      if (!($274)) {
       break;
      }
      $275 = $i3;
      $276 = $lastGreater1Pos;
      $277 = ($275|0)!=($276|0);
      $278 = $baseLevel;
      $279 = ($278|0)==(1);
      $or$cond7 = $277 & $279;
      if (!($or$cond7)) {
       break;
      }
      $280 = $len;
      $281 = (($280) - 1)|0;
      $282 = $i3;
      $283 = (($281) - ($282))|0;
      $284 = $0;
      $285 = (($284) + ($283<<2)|0);
      HEAP32[$285>>2] = 1;
     }
    } while(0);
    $286 = $i3;
    $287 = (($sign) + ($286<<2)|0);
    $288 = HEAP32[$287>>2]|0;
    $289 = ($288|0)!=(0);
    if ($289) {
     $290 = $len;
     $291 = (($290) - 1)|0;
     $292 = $i3;
     $293 = (($291) - ($292))|0;
     $294 = $0;
     $295 = (($294) + ($293<<2)|0);
     $296 = HEAP32[$295>>2]|0;
     $297 = (0 - ($296))|0;
     $298 = $len;
     $299 = (($298) - 1)|0;
     $300 = $i3;
     $301 = (($299) - ($300))|0;
     $302 = $0;
     $303 = (($302) + ($301<<2)|0);
     HEAP32[$303>>2] = $297;
    }
    $304 = $numSigs;
    $305 = (($304) + 1)|0;
    $numSigs = $305;
   }
   $306 = $i3;
   $307 = (($306) + 1)|0;
   $i3 = $307;
  }
  $308 = $cgLen;
  $309 = $len;
  $310 = (($309) - ($308))|0;
  $len = $310;
 }
 STACKTOP = sp;return;
}
function _decodeLastPos_irr($srcLen,$context,$channel) {
 $srcLen = $srcLen|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0.0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $bitsLen = 0, $bypass_len = 0, $ctx_idx = 0, $ctx_table = 0, $i = 0, $i1 = 0, $regular_len = 0, $value = 0, $vararg_buffer = 0;
 var $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $ctx_table = sp + 40|0;
 $0 = $srcLen;
 $1 = $context;
 $2 = $channel;
 $3 = $0;
 $4 = (+($3|0));
 $5 = (+_log2($4));
 $6 = (~~(($5)));
 $7 = (($6) + 1)|0;
 $bitsLen = $7;
 $8 = $bitsLen;
 $9 = ($8|0)<=(3);
 $10 = $bitsLen;
 $11 = $9 ? $10 : 3;
 $bypass_len = $11;
 $12 = $bitsLen;
 $13 = ($12|0)>(3);
 $14 = $bitsLen;
 $15 = (($14) - 3)|0;
 $16 = $13 ? $15 : 0;
 $regular_len = $16;
 $value = 0;
 dest=$ctx_table; src=1180; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $17 = HEAP32[888>>2]|0;
 $18 = ($17|0)!=(0);
 if ($18) {
  (_printf(379034,$vararg_buffer)|0);
 }
 $i = 0;
 while(1) {
  $19 = $i;
  $20 = $regular_len;
  $21 = ($19|0)<($20|0);
  if (!($21)) {
   break;
  }
  $22 = $bitsLen;
  $23 = (($22) - 1)|0;
  $24 = $i;
  $25 = (($23) - ($24))|0;
  $26 = (($ctx_table) + ($25<<2)|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = $2;
  $29 = ($28*6)|0;
  $30 = (($27) + ($29))|0;
  $ctx_idx = $30;
  $31 = $value;
  $32 = $31 << 1;
  $33 = $1;
  $34 = ((($33)) + 60|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = $1;
  $37 = ((($36)) + 104|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($39)) + 189|0);
  $41 = $ctx_idx;
  $42 = (($40) + ($41)|0);
  $43 = (_get_cabac_regular($35,$42)|0);
  $44 = (($32) + ($43))|0;
  $value = $44;
  $45 = HEAP32[888>>2]|0;
  $46 = ($45|0)!=(0);
  if ($46) {
   $47 = $value;
   $48 = $47 & 1;
   HEAP32[$vararg_buffer1>>2] = $48;
   (_printf(382817,$vararg_buffer1)|0);
  }
  $49 = $i;
  $50 = (($49) + 1)|0;
  $i = $50;
 }
 $i1 = 0;
 while(1) {
  $51 = $i1;
  $52 = $bypass_len;
  $53 = ($51|0)<($52|0);
  if (!($53)) {
   break;
  }
  $54 = $value;
  $55 = $54 << 1;
  $56 = $1;
  $57 = ((($56)) + 60|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (_get_cabac_bypass($58)|0);
  $60 = (($55) + ($59))|0;
  $value = $60;
  $61 = HEAP32[888>>2]|0;
  $62 = ($61|0)!=(0);
  if ($62) {
   $63 = $value;
   $64 = $63 & 1;
   HEAP32[$vararg_buffer3>>2] = $64;
   (_printf(382817,$vararg_buffer3)|0);
  }
  $65 = $i1;
  $66 = (($65) + 1)|0;
  $i1 = $66;
 }
 $67 = HEAP32[888>>2]|0;
 $68 = ($67|0)!=(0);
 if (!($68)) {
  $70 = $value;
  STACKTOP = sp;return ($70|0);
 }
 $69 = $value;
 HEAP32[$vararg_buffer6>>2] = $69;
 (_printf(379050,$vararg_buffer6)|0);
 $70 = $value;
 STACKTOP = sp;return ($70|0);
}
function _decodeCsbf_irr($lastTwoFlags,$context,$channel) {
 $lastTwoFlags = $lastTwoFlags|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $csbf = 0, $ctx_idx = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $lastTwoFlags;
 $1 = $context;
 $2 = $channel;
 $ctx_idx = 0;
 $3 = $0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = $0;
  $7 = ((($6)) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0);
  if ($9) {
   $ctx_idx = 0;
  } else {
   label = 4;
  }
 } else {
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $10 = $0;
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==(0);
   if ($12) {
    $13 = $0;
    $14 = ((($13)) + 4|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==(1);
    if ($16) {
     $ctx_idx = 1;
     break;
    }
   }
   $17 = $0;
   $18 = HEAP32[$17>>2]|0;
   $19 = ($18|0)==(1);
   if ($19) {
    $20 = $0;
    $21 = ((($20)) + 4|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ($22|0)==(0);
    if ($23) {
     $ctx_idx = 2;
     break;
    }
   }
   $24 = $0;
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)==(1);
   if ($26) {
    $27 = $0;
    $28 = ((($27)) + 4|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($29|0)==(1);
    if ($30) {
     $ctx_idx = 3;
    }
   }
  }
 } while(0);
 $31 = $2;
 $32 = $31<<2;
 $33 = $ctx_idx;
 $34 = (($33) + ($32))|0;
 $ctx_idx = $34;
 $35 = $1;
 $36 = ((($35)) + 60|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = $1;
 $39 = ((($38)) + 104|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($41)) + 201|0);
 $43 = $ctx_idx;
 $44 = (($42) + ($43)|0);
 $45 = (_get_cabac_regular($37,$44)|0);
 $csbf = $45;
 $46 = HEAP32[888>>2]|0;
 $47 = ($46|0)!=(0);
 if (!($47)) {
  $49 = $csbf;
  STACKTOP = sp;return ($49|0);
 }
 $48 = $csbf;
 HEAP32[$vararg_buffer>>2] = $48;
 (_printf(379017,$vararg_buffer)|0);
 $49 = $csbf;
 STACKTOP = sp;return ($49|0);
}
function _decodeSigFlag_irr($remainLen,$sigPos,$baseoff,$sigTableIdx,$context,$channel) {
 $remainLen = $remainLen|0;
 $sigPos = $sigPos|0;
 $baseoff = $baseoff|0;
 $sigTableIdx = $sigTableIdx|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isDc = 0, $item_off = 0, $or$cond = 0, $sig = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = $remainLen;
 $1 = $sigPos;
 $2 = $baseoff;
 $3 = $sigTableIdx;
 $4 = $context;
 $5 = $channel;
 $isDc = 0;
 $6 = $0;
 $7 = ($6|0)<=(16);
 $8 = $1;
 $9 = ($8|0)==(0);
 $or$cond = $7 & $9;
 if ($or$cond) {
  $isDc = 1;
  $10 = $5;
  $11 = ($10*21)|0;
  $12 = (0 + ($11))|0;
  $2 = $12;
 }
 $sig = 0;
 $13 = $isDc;
 $14 = ($13|0)!=(0);
 if ($14) {
  $15 = $4;
  $16 = ((($15)) + 60|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = $4;
  $19 = ((($18)) + 104|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = HEAP32[$20>>2]|0;
  $22 = ((($21)) + 209|0);
  $23 = $2;
  $24 = (($22) + ($23)|0);
  $25 = (_get_cabac_regular($17,$24)|0);
  $sig = $25;
  $26 = HEAP32[888>>2]|0;
  $27 = ($26|0)!=(0);
  if (!($27)) {
   $51 = $sig;
   STACKTOP = sp;return ($51|0);
  }
  $28 = $sig;
  HEAP32[$vararg_buffer>>2] = $28;
  (_printf(378973,$vararg_buffer)|0);
  $51 = $sig;
  STACKTOP = sp;return ($51|0);
 } else {
  $29 = $1;
  $30 = $3;
  $31 = (908 + ($30<<2)|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = (($32) + ($29<<2)|0);
  $34 = HEAP32[$33>>2]|0;
  $item_off = $34;
  $35 = $4;
  $36 = ((($35)) + 60|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = $4;
  $39 = ((($38)) + 104|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($41)) + 209|0);
  $43 = $2;
  $44 = (($42) + ($43)|0);
  $45 = $item_off;
  $46 = (($44) + ($45)|0);
  $47 = (_get_cabac_regular($37,$46)|0);
  $sig = $47;
  $48 = HEAP32[888>>2]|0;
  $49 = ($48|0)!=(0);
  if (!($49)) {
   $51 = $sig;
   STACKTOP = sp;return ($51|0);
  }
  $50 = $sig;
  HEAP32[$vararg_buffer2>>2] = $50;
  (_printf(378994,$vararg_buffer2)|0);
  $51 = $sig;
  STACKTOP = sp;return ($51|0);
 }
 return (0)|0;
}
function _decodeGreater1Flag_irr($firstItem,$firstGroup,$dcGroup,$lastGreater1Ctx,$lastGreater1Flag,$greater1Ctx,$ctxSet,$context,$channel) {
 $firstItem = $firstItem|0;
 $firstGroup = $firstGroup|0;
 $dcGroup = $dcGroup|0;
 $lastGreater1Ctx = $lastGreater1Ctx|0;
 $lastGreater1Flag = $lastGreater1Flag|0;
 $greater1Ctx = $greater1Ctx|0;
 $ctxSet = $ctxSet|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $ctx_idx = 0, $greater1Flag = 0, $off = 0, $or$cond = 0, $or$cond3 = 0, $vararg_buffer = 0, $vararg_buffer4 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer4 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = $firstItem;
 $1 = $firstGroup;
 $2 = $dcGroup;
 $3 = $lastGreater1Ctx;
 $4 = $lastGreater1Flag;
 $5 = $greater1Ctx;
 $6 = $ctxSet;
 $7 = $context;
 $8 = $channel;
 $9 = $0;
 $10 = ($9|0)!=(0);
 do {
  if ($10) {
   $11 = $2;
   $12 = ($11|0)!=(0);
   $13 = $8;
   $14 = ($13|0)!=(0);
   $or$cond = $12 | $14;
   $15 = $6;
   if ($or$cond) {
    HEAP32[$15>>2] = 0;
   } else {
    HEAP32[$15>>2] = 2;
   }
   $16 = $1;
   $17 = ($16|0)!=(0);
   do {
    if ($17) {
     $3 = 1;
    } else {
     $18 = $1;
     $19 = ($18|0)==(0);
     $20 = $3;
     $21 = ($20|0)!=(0);
     $or$cond3 = $19 & $21;
     if ($or$cond3) {
      $22 = $4;
      $23 = ($22|0)!=(0);
      if ($23) {
       $3 = 0;
       break;
      } else {
       $24 = $3;
       $25 = (($24) + 1)|0;
       $3 = $25;
       break;
      }
     }
    }
   } while(0);
   $26 = $3;
   $27 = ($26|0)==(0);
   if ($27) {
    $28 = $6;
    $29 = HEAP32[$28>>2]|0;
    $30 = (($29) + 1)|0;
    HEAP32[$28>>2] = $30;
   }
   $31 = $5;
   HEAP32[$31>>2] = 1;
  } else {
   $32 = $5;
   $33 = HEAP32[$32>>2]|0;
   $34 = ($33|0)!=(0);
   if ($34) {
    $35 = $4;
    $36 = ($35|0)!=(0);
    $37 = $5;
    if ($36) {
     HEAP32[$37>>2] = 0;
     break;
    } else {
     $38 = HEAP32[$37>>2]|0;
     $39 = (($38) + 1)|0;
     HEAP32[$37>>2] = $39;
     break;
    }
   }
  }
 } while(0);
 $40 = $5;
 $41 = HEAP32[$40>>2]|0;
 $42 = (3)>($41|0);
 if ($42) {
  $43 = $5;
  $44 = HEAP32[$43>>2]|0;
  $45 = $44;
 } else {
  $45 = 3;
 }
 $off = $45;
 $46 = $6;
 $47 = HEAP32[$46>>2]|0;
 $48 = $47<<2;
 $49 = $off;
 $50 = (($48) + ($49))|0;
 $ctx_idx = $50;
 $greater1Flag = 0;
 $51 = $8;
 $52 = ($51|0)!=(0);
 $53 = $7;
 $54 = ((($53)) + 60|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $7;
 $57 = ((($56)) + 104|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = HEAP32[$58>>2]|0;
 $60 = ((($59)) + 251|0);
 if ($52) {
  $67 = ((($60)) + 16|0);
  $68 = $ctx_idx;
  $69 = (($67) + ($68)|0);
  $70 = (_get_cabac_regular($55,$69)|0);
  $greater1Flag = $70;
  $71 = HEAP32[888>>2]|0;
  $72 = ($71|0)!=(0);
  if (!($72)) {
   $84 = $greater1Flag;
   STACKTOP = sp;return ($84|0);
  }
  $73 = $greater1Flag;
  $74 = $7;
  $75 = ((($74)) + 104|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = HEAP32[$76>>2]|0;
  $78 = ((($77)) + 251|0);
  $79 = ((($78)) + 16|0);
  $80 = $ctx_idx;
  $81 = (($79) + ($80)|0);
  $82 = HEAP8[$81>>0]|0;
  $83 = $82&255;
  HEAP32[$vararg_buffer4>>2] = $73;
  $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
  HEAP32[$vararg_ptr7>>2] = $83;
  (_printf(378944,$vararg_buffer4)|0);
  $84 = $greater1Flag;
  STACKTOP = sp;return ($84|0);
 } else {
  $61 = $ctx_idx;
  $62 = (($60) + ($61)|0);
  $63 = (_get_cabac_regular($55,$62)|0);
  $greater1Flag = $63;
  $64 = HEAP32[888>>2]|0;
  $65 = ($64|0)!=(0);
  if (!($65)) {
   $84 = $greater1Flag;
   STACKTOP = sp;return ($84|0);
  }
  $66 = $greater1Flag;
  HEAP32[$vararg_buffer>>2] = $66;
  (_printf(378921,$vararg_buffer)|0);
  $84 = $greater1Flag;
  STACKTOP = sp;return ($84|0);
 }
 return (0)|0;
}
function _cabac_tableinit() {
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $i = 0, $i1 = 0, $j = 0, $j2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i1 = 0;
 $j2 = 0;
 while(1) {
  $0 = $i1;
  $1 = ($0|0)<(512);
  if (!($1)) {
   break;
  }
  $2 = $i1;
  $3 = $j2;
  $4 = 1 << $3;
  $5 = ($2|0)>=($4|0);
  if ($5) {
   $6 = $j2;
   $7 = (($6) + 1)|0;
   $j2 = $7;
  }
  $8 = $j2;
  $9 = (9 - ($8))|0;
  $10 = $9&255;
  $11 = $i1;
  $12 = (379058 + ($11)|0);
  HEAP8[$12>>0] = $10;
  $13 = $i1;
  $14 = (($13) + 1)|0;
  $i1 = $14;
 }
 $i = 0;
 while(1) {
  $15 = $i;
  $16 = ($15|0)<(64);
  if (!($16)) {
   break;
  }
  $j = 0;
  while(1) {
   $17 = $j;
   $18 = ($17|0)<(4);
   if (!($18)) {
    break;
   }
   $19 = $j;
   $20 = $i;
   $21 = (379570 + ($20<<2)|0);
   $22 = (($21) + ($19)|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $j;
   $25 = $24<<1;
   $26 = $25<<6;
   $27 = $i;
   $28 = $27<<1;
   $29 = (($26) + ($28))|0;
   $30 = (($29) + 1)|0;
   $31 = (379826 + ($30)|0);
   HEAP8[$31>>0] = $23;
   $32 = $j;
   $33 = $32<<1;
   $34 = $33<<6;
   $35 = $i;
   $36 = $35<<1;
   $37 = (($34) + ($36))|0;
   $38 = (($37) + 0)|0;
   $39 = (379826 + ($38)|0);
   HEAP8[$39>>0] = $23;
   $40 = $j;
   $41 = (($40) + 1)|0;
   $j = $41;
  }
  $42 = $i;
  $43 = (380338 + ($42)|0);
  $44 = HEAP8[$43>>0]|0;
  $45 = $44&255;
  $46 = $45<<1;
  $47 = (($46) + 0)|0;
  $48 = $47&255;
  $49 = $i;
  $50 = $49<<1;
  $51 = (128 + ($50))|0;
  $52 = (($51) + 0)|0;
  $53 = (380402 + ($52)|0);
  HEAP8[$53>>0] = $48;
  $54 = $i;
  $55 = (380338 + ($54)|0);
  $56 = HEAP8[$55>>0]|0;
  $57 = $56&255;
  $58 = $57<<1;
  $59 = (($58) + 1)|0;
  $60 = $59&255;
  $61 = $i;
  $62 = $61<<1;
  $63 = (128 + ($62))|0;
  $64 = (($63) + 1)|0;
  $65 = (380402 + ($64)|0);
  HEAP8[$65>>0] = $60;
  $66 = $i;
  $67 = ($66|0)!=(0);
  $68 = $i;
  if ($67) {
   $69 = (380658 + ($68)|0);
   $70 = HEAP8[$69>>0]|0;
   $71 = $70&255;
   $72 = $71<<1;
   $73 = (($72) + 0)|0;
   $74 = $73&255;
   $75 = $i;
   $76 = $75<<1;
   $77 = (128 - ($76))|0;
   $78 = (($77) - 1)|0;
   $79 = (380402 + ($78)|0);
   HEAP8[$79>>0] = $74;
   $80 = $i;
   $81 = (380658 + ($80)|0);
   $82 = HEAP8[$81>>0]|0;
   $83 = $82&255;
   $84 = $83<<1;
   $85 = (($84) + 1)|0;
   $86 = $85&255;
   $87 = $i;
   $88 = $87<<1;
   $89 = (128 - ($88))|0;
   $90 = (($89) - 2)|0;
   $91 = (380402 + ($90)|0);
   HEAP8[$91>>0] = $86;
  } else {
   $92 = $68<<1;
   $93 = (128 - ($92))|0;
   $94 = (($93) - 1)|0;
   $95 = (380402 + ($94)|0);
   HEAP8[$95>>0] = 1;
   $96 = $i;
   $97 = $96<<1;
   $98 = (128 - ($97))|0;
   $99 = (($98) - 2)|0;
   $100 = (380402 + ($99)|0);
   HEAP8[$100>>0] = 0;
  }
  $101 = $i;
  $102 = (($101) + 1)|0;
  $i = $102;
 }
 STACKTOP = sp;return 0;
}
function _get_ff_h264_lps_range() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (379826|0);
}
function _get_ff_h264_mlps_state() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (380402|0);
}
function _get_ff_h264_norm_shift() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (379058|0);
}
function _decodeRemaining($remain,$baseLevel,$r,$cAbsLevel,$context) {
 $remain = $remain|0;
 $baseLevel = $baseLevel|0;
 $r = $r|0;
 $cAbsLevel = $cAbsLevel|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cMax = 0, $i = 0, $i1 = 0, $k = 0, $m = 0, $pre = 0, $suf = 0, $value = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $remain;
 $1 = $baseLevel;
 $2 = $r;
 $3 = $cAbsLevel;
 $4 = $context;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = $3;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = HEAP32[$9>>2]|0;
 $11 = 1 << $10;
 $12 = ($11*3)|0;
 $13 = ($8|0)>($12|0);
 $14 = $13&1;
 $15 = (($6) + ($14))|0;
 $16 = ($15|0)>(4);
 if ($16) {
  $29 = 4;
 } else {
  $17 = $2;
  $18 = HEAP32[$17>>2]|0;
  $19 = $3;
  $20 = HEAP32[$19>>2]|0;
  $21 = $2;
  $22 = HEAP32[$21>>2]|0;
  $23 = 1 << $22;
  $24 = ($23*3)|0;
  $25 = ($20|0)>($24|0);
  $26 = $25&1;
  $27 = (($18) + ($26))|0;
  $29 = $27;
 }
 $28 = $2;
 HEAP32[$28>>2] = $29;
 $30 = $2;
 $31 = HEAP32[$30>>2]|0;
 $32 = 4 << $31;
 $cMax = $32;
 $pre = 0;
 $suf = 0;
 while(1) {
  $33 = $pre;
  $34 = ($33>>>0)<(4);
  if (!($34)) {
   break;
  }
  $35 = $4;
  $36 = ((($35)) + 60|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (_get_cabac_bypass($37)|0);
  $39 = ($38|0)!=(0);
  if (!($39)) {
   break;
  }
  $40 = $pre;
  $41 = (($40) + 1)|0;
  $pre = $41;
 }
 $42 = $pre;
 $43 = ($42>>>0)<(4);
 if ($43) {
  $44 = $pre;
  $45 = $2;
  $46 = HEAP32[$45>>2]|0;
  $47 = $44 << $46;
  $pre = $47;
  $i = 0;
  while(1) {
   $48 = $i;
   $49 = $2;
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)<($50|0);
   if (!($51)) {
    break;
   }
   $52 = $suf;
   $53 = $52 << 1;
   $54 = $4;
   $55 = ((($54)) + 60|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = (_get_cabac_bypass($56)|0);
   $58 = (($53) + ($57))|0;
   $suf = $58;
   $59 = $i;
   $60 = (($59) + 1)|0;
   $i = $60;
  }
  $96 = $pre;
  $97 = $suf;
  $98 = (($96) + ($97))|0;
  $99 = $0;
  HEAP32[$99>>2] = $98;
  $100 = $0;
  $101 = HEAP32[$100>>2]|0;
  $102 = $1;
  $103 = (($101) + ($102))|0;
  $104 = $3;
  HEAP32[$104>>2] = $103;
  STACKTOP = sp;return;
 }
 $61 = $cMax;
 $pre = $61;
 $62 = $2;
 $63 = HEAP32[$62>>2]|0;
 $64 = (($63) + 1)|0;
 $k = $64;
 $m = 0;
 while(1) {
  $65 = $4;
  $66 = ((($65)) + 60|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = (_get_cabac_bypass($67)|0);
  $69 = ($68|0)!=(0);
  $70 = $69 ^ 1;
  if (!($70)) {
   break;
  }
  $71 = $m;
  $72 = (($71) + 1)|0;
  $m = $72;
 }
 $value = 0;
 $i1 = 0;
 while(1) {
  $73 = $i1;
  $74 = $m;
  $75 = $k;
  $76 = (($74) + ($75))|0;
  $77 = ($73|0)<($76|0);
  if (!($77)) {
   break;
  }
  $78 = $value;
  $79 = $78 << 1;
  $80 = $4;
  $81 = ((($80)) + 60|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (_get_cabac_bypass($82)|0);
  $84 = (($79) + ($83))|0;
  $value = $84;
  $85 = $i1;
  $86 = (($85) + 1)|0;
  $i1 = $86;
 }
 $87 = $m;
 $88 = $k;
 $89 = (($87) + ($88))|0;
 $90 = 1 << $89;
 $91 = $k;
 $92 = 1 << $91;
 $93 = (($90) - ($92))|0;
 $94 = $value;
 $95 = (($93) + ($94))|0;
 $suf = $95;
 $96 = $pre;
 $97 = $suf;
 $98 = (($96) + ($97))|0;
 $99 = $0;
 HEAP32[$99>>2] = $98;
 $100 = $0;
 $101 = HEAP32[$100>>2]|0;
 $102 = $1;
 $103 = (($101) + ($102))|0;
 $104 = $3;
 HEAP32[$104>>2] = $103;
 STACKTOP = sp;return;
}
function _getSigUsed($srcLen,$remainLen,$lastTwoCgFlags,$baseOff,$sigTableIdx,$channel) {
 $srcLen = $srcLen|0;
 $remainLen = $remainLen|0;
 $lastTwoCgFlags = $lastTwoCgFlags|0;
 $baseOff = $baseOff|0;
 $sigTableIdx = $sigTableIdx|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0;
 var $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $srcLen;
 $1 = $remainLen;
 $2 = $lastTwoCgFlags;
 $3 = $baseOff;
 $4 = $sigTableIdx;
 $5 = $channel;
 $6 = $0;
 $7 = ($6|0)<(16);
 do {
  if ($7) {
   $8 = $3;
   HEAP32[$8>>2] = 1;
  } else {
   $9 = $0;
   $10 = ($9|0)>=(16);
   $11 = $0;
   $12 = ($11|0)<=(64);
   $or$cond = $10 & $12;
   $13 = $1;
   $14 = ($13|0)<=(16);
   $or$cond3 = $or$cond & $14;
   if ($or$cond3) {
    $15 = $3;
    HEAP32[$15>>2] = 9;
    break;
   }
   $16 = $0;
   $17 = ($16|0)>=(16);
   $18 = $0;
   $19 = ($18|0)<=(64);
   $or$cond5 = $17 & $19;
   $20 = $1;
   $21 = ($20|0)>(16);
   $or$cond7 = $or$cond5 & $21;
   if ($or$cond7) {
    $22 = $3;
    HEAP32[$22>>2] = 12;
    break;
   }
   $23 = $0;
   $24 = ($23|0)>(64);
   $25 = $1;
   $26 = ($25|0)<=(16);
   $or$cond9 = $24 & $26;
   $27 = $3;
   if ($or$cond9) {
    HEAP32[$27>>2] = 15;
    break;
   } else {
    HEAP32[$27>>2] = 18;
    break;
   }
  }
 } while(0);
 $28 = $5;
 $29 = ($28*21)|0;
 $30 = $3;
 $31 = HEAP32[$30>>2]|0;
 $32 = (($31) + ($29))|0;
 HEAP32[$30>>2] = $32;
 $33 = $1;
 $34 = ($33|0)<=(16);
 if ($34) {
  $35 = $4;
  HEAP32[$35>>2] = 0;
  STACKTOP = sp;return;
 }
 $36 = $1;
 $37 = ($36|0)>(16);
 if ($37) {
  $38 = $2;
  $39 = HEAP32[$38>>2]|0;
  $40 = ($39|0)==(1);
  if ($40) {
   $41 = $2;
   $42 = ((($41)) + 4|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($43|0)==(0);
   if ($44) {
    $45 = $4;
    HEAP32[$45>>2] = 1;
    STACKTOP = sp;return;
   }
  }
 }
 $46 = $1;
 $47 = ($46|0)>(16);
 if ($47) {
  $48 = $2;
  $49 = HEAP32[$48>>2]|0;
  $50 = ($49|0)==(1);
  if ($50) {
   $51 = $2;
   $52 = ((($51)) + 4|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = ($53|0)==(1);
   if ($54) {
    $55 = $4;
    HEAP32[$55>>2] = 2;
    STACKTOP = sp;return;
   }
  }
 }
 $56 = $4;
 HEAP32[$56>>2] = 3;
 STACKTOP = sp;return;
}
function _decodeLastOnePos($transformSize,$lastPos,$type,$context,$channel) {
 $transformSize = $transformSize|0;
 $lastPos = $lastPos|0;
 $type = $type|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0.0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $binIdx = 0, $cMax = 0, $ctx_idx = 0, $ctx_offset = 0, $ctx_shift = 0, $intervalIdx = 0;
 var $preValue = 0, $sufLen = 0, $sufValue = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $transformSize;
 $1 = $lastPos;
 $2 = $type;
 $3 = $context;
 $4 = $channel;
 $ctx_offset = 0;
 $ctx_shift = 0;
 $5 = $4;
 $6 = ($5|0)!=(0);
 if ($6) {
  $ctx_offset = 15;
  $26 = $0;
  $27 = (+($26|0));
  $28 = (+_log2($27));
  $29 = (~~(($28)));
  $30 = (($29) - 2)|0;
  $ctx_shift = $30;
 } else {
  $7 = $0;
  $8 = (+($7|0));
  $9 = (+_log2($8));
  $10 = (~~(($9)));
  $11 = (($10) - 2)|0;
  $12 = ($11*3)|0;
  $13 = $0;
  $14 = (+($13|0));
  $15 = (+_log2($14));
  $16 = (~~(($15)));
  $17 = (($16) - 1)|0;
  $18 = $17 >> 2;
  $19 = (($12) + ($18))|0;
  $ctx_offset = $19;
  $20 = $0;
  $21 = (+($20|0));
  $22 = (+_log2($21));
  $23 = (~~(($22)));
  $24 = (($23) + 1)|0;
  $25 = $24 >> 2;
  $ctx_shift = $25;
 }
 $preValue = 0;
 $sufValue = 0;
 $sufLen = 0;
 $intervalIdx = 0;
 $binIdx = 0;
 $31 = $0;
 $32 = (+($31|0));
 $33 = (+_log2($32));
 $34 = (~~(($33)));
 $35 = $34 << 1;
 $36 = (($35) - 1)|0;
 $cMax = $36;
 while(1) {
  $37 = $binIdx;
  $38 = $cMax;
  $39 = ($37>>>0)<($38>>>0);
  if (!($39)) {
   break;
  }
  $40 = $binIdx;
  $41 = $ctx_shift;
  $42 = $40 >> $41;
  $43 = $ctx_offset;
  $44 = (($42) + ($43))|0;
  $45 = ($44|0)<(50);
  if ($45) {
   $46 = $binIdx;
   $47 = $ctx_shift;
   $48 = $46 >> $47;
   $49 = $ctx_offset;
   $50 = (($48) + ($49))|0;
   $51 = $50;
  } else {
   $51 = 50;
  }
  $ctx_idx = $51;
  $52 = $2;
  $53 = ($52|0)!=(0);
  $54 = $3;
  $55 = ((($54)) + 60|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = $3;
  $58 = ((($57)) + 104|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = HEAP32[$59>>2]|0;
  if ($53) {
   $61 = ((($60)) + 111|0);
   $62 = $ctx_idx;
   $63 = (($61) + ($62)|0);
   $64 = (_get_cabac_regular($56,$63)|0);
   $65 = ($64|0)!=(0);
   if (!($65)) {
    break;
   }
   $66 = $intervalIdx;
   $67 = (($66) + 1)|0;
   $intervalIdx = $67;
  } else {
   $68 = ((($60)) + 129|0);
   $69 = $ctx_idx;
   $70 = (($68) + ($69)|0);
   $71 = (_get_cabac_regular($56,$70)|0);
   $72 = ($71|0)!=(0);
   if (!($72)) {
    break;
   }
   $73 = $intervalIdx;
   $74 = (($73) + 1)|0;
   $intervalIdx = $74;
  }
  $75 = $binIdx;
  $76 = (($75) + 1)|0;
  $binIdx = $76;
 }
 $77 = $intervalIdx;
 switch ($77|0) {
 case 3: case 2: case 1: case 0:  {
  $78 = $intervalIdx;
  $preValue = $78;
  break;
 }
 case 4:  {
  $preValue = 4;
  $sufLen = 1;
  break;
 }
 case 5:  {
  $preValue = 6;
  $sufLen = 1;
  break;
 }
 case 6:  {
  $preValue = 8;
  $sufLen = 2;
  break;
 }
 case 7:  {
  $preValue = 12;
  $sufLen = 2;
  break;
 }
 case 8:  {
  $preValue = 16;
  $sufLen = 3;
  break;
 }
 case 9:  {
  $preValue = 24;
  $sufLen = 3;
  break;
 }
 default: {
 }
 }
 while(1) {
  $79 = $sufLen;
  $80 = ($79|0)!=(0);
  if (!($80)) {
   break;
  }
  $81 = $sufLen;
  $82 = (($81) + -1)|0;
  $sufLen = $82;
  $83 = $sufValue;
  $84 = $83 << 1;
  $85 = $3;
  $86 = ((($85)) + 60|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = (_get_cabac_bypass($87)|0);
  $89 = (($84) + ($88))|0;
  $sufValue = $89;
 }
 $90 = $preValue;
 $91 = $sufValue;
 $92 = (($90) + ($91))|0;
 $93 = $1;
 HEAP32[$93>>2] = $92;
 STACKTOP = sp;return;
}
function _decodeCoeffNxN($transformSize,$pretype,$coeff,$context,$channel,$trans_depth) {
 $transformSize = $transformSize|0;
 $pretype = $pretype|0;
 $coeff = $coeff|0;
 $context = $context|0;
 $channel = $channel|0;
 $trans_depth = $trans_depth|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $coeff_sub = 0, $i = 0;
 var $i1 = 0, $i3 = 0, $i5 = 0, $j = 0, $j2 = 0, $j4 = 0, $j6 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $coeff_sub = sp + 32|0;
 $0 = $transformSize;
 $1 = $pretype;
 $2 = $coeff;
 $3 = $context;
 $4 = $channel;
 $5 = $trans_depth;
 $6 = $0;
 $7 = ($6|0)==(2);
 $8 = $4;
 $9 = ($8|0)==(1);
 $or$cond = $7 & $9;
 if ($or$cond) {
  $10 = $1;
  $11 = $2;
  $12 = $3;
  $13 = $5;
  _decodeCoeff2x2($10,$11,$12,$13);
  STACKTOP = sp;return;
 }
 $14 = $0;
 $15 = ($14|0)==(64);
 if (!($15)) {
  $112 = $0;
  $113 = $1;
  $114 = $2;
  $115 = $3;
  $116 = $4;
  $117 = $5;
  _decodeCoeff32x32($112,$113,$114,$115,$116,$117);
  STACKTOP = sp;return;
 }
 _memset(($coeff_sub|0),0,4096)|0;
 $16 = $1;
 $17 = $3;
 $18 = $4;
 $19 = $5;
 _decodeCoeff32x32(32,$16,$coeff_sub,$17,$18,$19);
 $i = 0;
 while(1) {
  $20 = $i;
  $21 = ($20|0)<(32);
  if (!($21)) {
   break;
  }
  $j = 0;
  while(1) {
   $22 = $j;
   $23 = ($22|0)<(32);
   $24 = $i;
   if (!($23)) {
    break;
   }
   $25 = $24<<5;
   $26 = $j;
   $27 = (($25) + ($26))|0;
   $28 = (($coeff_sub) + ($27<<2)|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = $i;
   $31 = $30<<6;
   $32 = $j;
   $33 = (($31) + ($32))|0;
   $34 = $2;
   $35 = (($34) + ($33<<2)|0);
   HEAP32[$35>>2] = $29;
   $36 = $j;
   $37 = (($36) + 1)|0;
   $j = $37;
  }
  $38 = (($24) + 1)|0;
  $i = $38;
 }
 $39 = $1;
 $40 = $3;
 $41 = $4;
 $42 = $5;
 _decodeCoeff32x32(32,$39,$coeff_sub,$40,$41,$42);
 $i1 = 0;
 while(1) {
  $43 = $i1;
  $44 = ($43|0)<(32);
  if (!($44)) {
   break;
  }
  $j2 = 0;
  while(1) {
   $45 = $j2;
   $46 = ($45|0)<(32);
   $47 = $i1;
   if (!($46)) {
    break;
   }
   $48 = $47<<5;
   $49 = $j2;
   $50 = (($48) + ($49))|0;
   $51 = (($coeff_sub) + ($50<<2)|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = $i1;
   $54 = $53<<6;
   $55 = $j2;
   $56 = (($54) + ($55))|0;
   $57 = (($56) + 32)|0;
   $58 = $2;
   $59 = (($58) + ($57<<2)|0);
   HEAP32[$59>>2] = $52;
   $60 = $j2;
   $61 = (($60) + 1)|0;
   $j2 = $61;
  }
  $62 = (($47) + 1)|0;
  $i1 = $62;
 }
 $63 = $1;
 $64 = $3;
 $65 = $4;
 $66 = $5;
 _decodeCoeff32x32(32,$63,$coeff_sub,$64,$65,$66);
 $i3 = 0;
 while(1) {
  $67 = $i3;
  $68 = ($67|0)<(32);
  if (!($68)) {
   break;
  }
  $j4 = 0;
  while(1) {
   $69 = $j4;
   $70 = ($69|0)<(32);
   $71 = $i3;
   if (!($70)) {
    break;
   }
   $72 = $71<<5;
   $73 = $j4;
   $74 = (($72) + ($73))|0;
   $75 = (($coeff_sub) + ($74<<2)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $i3;
   $78 = (($77) + 32)|0;
   $79 = $78<<6;
   $80 = $j4;
   $81 = (($79) + ($80))|0;
   $82 = $2;
   $83 = (($82) + ($81<<2)|0);
   HEAP32[$83>>2] = $76;
   $84 = $j4;
   $85 = (($84) + 1)|0;
   $j4 = $85;
  }
  $86 = (($71) + 1)|0;
  $i3 = $86;
 }
 $87 = $1;
 $88 = $3;
 $89 = $4;
 $90 = $5;
 _decodeCoeff32x32(32,$87,$coeff_sub,$88,$89,$90);
 $i5 = 0;
 while(1) {
  $91 = $i5;
  $92 = ($91|0)<(32);
  if (!($92)) {
   break;
  }
  $j6 = 0;
  while(1) {
   $93 = $j6;
   $94 = ($93|0)<(32);
   $95 = $i5;
   if (!($94)) {
    break;
   }
   $96 = $95<<5;
   $97 = $j6;
   $98 = (($96) + ($97))|0;
   $99 = (($coeff_sub) + ($98<<2)|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = $i5;
   $102 = (($101) + 32)|0;
   $103 = $102<<6;
   $104 = $j6;
   $105 = (($103) + ($104))|0;
   $106 = (($105) + 32)|0;
   $107 = $2;
   $108 = (($107) + ($106<<2)|0);
   HEAP32[$108>>2] = $100;
   $109 = $j6;
   $110 = (($109) + 1)|0;
   $j6 = $110;
  }
  $111 = (($95) + 1)|0;
  $i5 = $111;
 }
 STACKTOP = sp;return;
}
function _decodeCoeff2x2($pretype,$coeff,$context,$trans_depth) {
 $pretype = $pretype|0;
 $coeff = $coeff|0;
 $context = $context|0;
 $trans_depth = $trans_depth|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $baseLevel = 0, $cAbsLevel = 0, $csbf = 0, $curGreater1Flag = 0, $curGreater2Flag = 0, $curSig = 0, $curSign = 0, $greater1Flags = 0, $greater2Flags = 0, $i = 0, $i1 = 0, $i2 = 0, $i3 = 0, $lastGreater1Pos = 0, $or$cond = 0, $or$cond3 = 0, $r = 0, $remain = 0, $scanOff = 0, $scanSet = 0;
 var $sigFlags = 0, $sigScanOrder = 0, $signFlags = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $sigFlags = sp + 92|0;
 $greater1Flags = sp + 84|0;
 $greater2Flags = sp + 76|0;
 $signFlags = sp + 68|0;
 $r = sp + 16|0;
 $cAbsLevel = sp + 12|0;
 $remain = sp;
 $0 = $pretype;
 $1 = $coeff;
 $2 = $context;
 $3 = $trans_depth;
 $4 = $1;
 ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;
 $5 = $3;
 $6 = $2;
 $7 = (_decodeCoeffTranskip_chroma(2,$5,$6)|0);
 $csbf = $7;
 $8 = $csbf;
 $9 = ($8<<24>>24)!=(0);
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = $0;
 $11 = (_getScanSet($10,2,1)|0);
 $scanSet = $11;
 $12 = (_getScanOff(2)|0);
 $scanOff = $12;
 $13 = $scanOff;
 $14 = $scanSet;
 $15 = (1228 + (($14*20)|0)|0);
 $16 = (($15) + ($13<<2)|0);
 $17 = HEAP32[$16>>2]|0;
 $sigScanOrder = $17;
 ;HEAP8[$sigFlags>>0]=0|0;HEAP8[$sigFlags+1>>0]=0|0;HEAP8[$sigFlags+2>>0]=0|0;HEAP8[$sigFlags+3>>0]=0|0;
 $i = 0;
 while(1) {
  $18 = $i;
  $19 = ($18|0)<(4);
  if (!($19)) {
   break;
  }
  $20 = $2;
  $21 = ((($20)) + 60|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (_get_cabac_bypass($22)|0);
  $24 = $23&255;
  $curSig = $24;
  $25 = $curSig;
  $26 = $i;
  $27 = $sigScanOrder;
  $28 = (($27) + ($26<<2)|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = (($sigFlags) + ($29)|0);
  HEAP8[$30>>0] = $25;
  $31 = $i;
  $32 = (($31) + 1)|0;
  $i = $32;
 }
 ;HEAP8[$greater1Flags>>0]=0|0;HEAP8[$greater1Flags+1>>0]=0|0;HEAP8[$greater1Flags+2>>0]=0|0;HEAP8[$greater1Flags+3>>0]=0|0;
 $lastGreater1Pos = -1;
 $i1 = 0;
 while(1) {
  $33 = $i1;
  $34 = ($33|0)<(4);
  if (!($34)) {
   break;
  }
  $35 = $i1;
  $36 = $sigScanOrder;
  $37 = (($36) + ($35<<2)|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = (($sigFlags) + ($38)|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = ($40<<24>>24)!=(0);
  if ($41) {
   $42 = $2;
   $43 = ((($42)) + 60|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (_get_cabac_bypass($44)|0);
   $46 = $45&255;
   $curGreater1Flag = $46;
   $47 = $curGreater1Flag;
   $48 = $47&255;
   $49 = ($48|0)!=(0);
   $50 = $lastGreater1Pos;
   $51 = ($50|0)==(-1);
   $or$cond = $49 & $51;
   if ($or$cond) {
    $52 = $i1;
    $lastGreater1Pos = $52;
   }
   $53 = $curGreater1Flag;
   $54 = $i1;
   $55 = $sigScanOrder;
   $56 = (($55) + ($54<<2)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = (($greater1Flags) + ($57)|0);
   HEAP8[$58>>0] = $53;
  }
  $59 = $i1;
  $60 = (($59) + 1)|0;
  $i1 = $60;
 }
 ;HEAP8[$greater2Flags>>0]=0|0;HEAP8[$greater2Flags+1>>0]=0|0;HEAP8[$greater2Flags+2>>0]=0|0;HEAP8[$greater2Flags+3>>0]=0|0;
 $61 = $lastGreater1Pos;
 $62 = ($61|0)!=(-1);
 if ($62) {
  $63 = $2;
  $64 = ((($63)) + 60|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = (_get_cabac_bypass($65)|0);
  $67 = $66&255;
  $curGreater2Flag = $67;
  $68 = $curGreater2Flag;
  $69 = $lastGreater1Pos;
  $70 = $sigScanOrder;
  $71 = (($70) + ($69<<2)|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = (($greater2Flags) + ($72)|0);
  HEAP8[$73>>0] = $68;
 }
 ;HEAP8[$signFlags>>0]=0|0;HEAP8[$signFlags+1>>0]=0|0;HEAP8[$signFlags+2>>0]=0|0;HEAP8[$signFlags+3>>0]=0|0;
 $i2 = 0;
 while(1) {
  $74 = $i2;
  $75 = ($74|0)<(4);
  if (!($75)) {
   break;
  }
  $76 = $i2;
  $77 = $sigScanOrder;
  $78 = (($77) + ($76<<2)|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = (($sigFlags) + ($79)|0);
  $81 = HEAP8[$80>>0]|0;
  $82 = ($81<<24>>24)!=(0);
  if ($82) {
   $83 = $2;
   $84 = ((($83)) + 60|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = (_get_cabac_bypass($85)|0);
   $87 = $86&255;
   $curSign = $87;
   $88 = $curSign;
   $89 = $i2;
   $90 = $sigScanOrder;
   $91 = (($90) + ($89<<2)|0);
   $92 = HEAP32[$91>>2]|0;
   $93 = (($signFlags) + ($92)|0);
   HEAP8[$93>>0] = $88;
  }
  $94 = $i2;
  $95 = (($94) + 1)|0;
  $i2 = $95;
 }
 HEAP32[$r>>2] = 0;
 HEAP32[$cAbsLevel>>2] = 0;
 $i3 = 0;
 while(1) {
  $96 = $i3;
  $97 = ($96|0)<(4);
  if (!($97)) {
   break;
  }
  $98 = $i3;
  $99 = $sigScanOrder;
  $100 = (($99) + ($98<<2)|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = (($sigFlags) + ($101)|0);
  $103 = HEAP8[$102>>0]|0;
  $104 = $103&255;
  $105 = $i3;
  $106 = $sigScanOrder;
  $107 = (($106) + ($105<<2)|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = (($greater1Flags) + ($108)|0);
  $110 = HEAP8[$109>>0]|0;
  $111 = $110&255;
  $112 = (($104) + ($111))|0;
  $113 = $i3;
  $114 = $sigScanOrder;
  $115 = (($114) + ($113<<2)|0);
  $116 = HEAP32[$115>>2]|0;
  $117 = (($greater2Flags) + ($116)|0);
  $118 = HEAP8[$117>>0]|0;
  $119 = $118&255;
  $120 = (($112) + ($119))|0;
  $baseLevel = $120;
  $121 = $baseLevel;
  $122 = $i3;
  $123 = $lastGreater1Pos;
  $124 = ($122|0)==($123|0);
  $125 = $124 ? 3 : 2;
  $126 = ($121|0)==($125|0);
  do {
   if ($126) {
    HEAP32[$remain>>2] = 0;
    $127 = $baseLevel;
    $128 = $2;
    _decodeRemaining($remain,$127,$r,$cAbsLevel,$128);
    $129 = HEAP32[$remain>>2]|0;
    $130 = $baseLevel;
    $131 = (($129) + ($130))|0;
    $132 = $i3;
    $133 = $sigScanOrder;
    $134 = (($133) + ($132<<2)|0);
    $135 = HEAP32[$134>>2]|0;
    $136 = $1;
    $137 = (($136) + ($135<<2)|0);
    HEAP32[$137>>2] = $131;
   } else {
    $138 = $i3;
    $139 = $lastGreater1Pos;
    $140 = ($138|0)==($139|0);
    $141 = $baseLevel;
    $142 = ($141|0)==(2);
    $or$cond3 = $140 & $142;
    if ($or$cond3) {
     $143 = $i3;
     $144 = $sigScanOrder;
     $145 = (($144) + ($143<<2)|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = $1;
     $148 = (($147) + ($146<<2)|0);
     HEAP32[$148>>2] = 2;
     break;
    }
    $149 = $baseLevel;
    $150 = ($149|0)==(1);
    if ($150) {
     $151 = $i3;
     $152 = $sigScanOrder;
     $153 = (($152) + ($151<<2)|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = $1;
     $156 = (($155) + ($154<<2)|0);
     HEAP32[$156>>2] = 1;
    }
   }
  } while(0);
  $157 = $i3;
  $158 = $sigScanOrder;
  $159 = (($158) + ($157<<2)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = (($signFlags) + ($160)|0);
  $162 = HEAP8[$161>>0]|0;
  $163 = ($162<<24>>24)!=(0);
  if ($163) {
   $164 = $i3;
   $165 = $sigScanOrder;
   $166 = (($165) + ($164<<2)|0);
   $167 = HEAP32[$166>>2]|0;
   $168 = $1;
   $169 = (($168) + ($167<<2)|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = (0 - ($170))|0;
   $172 = $i3;
   $173 = $sigScanOrder;
   $174 = (($173) + ($172<<2)|0);
   $175 = HEAP32[$174>>2]|0;
   $176 = $1;
   $177 = (($176) + ($175<<2)|0);
   HEAP32[$177>>2] = $171;
  }
  $178 = $i3;
  $179 = (($178) + 1)|0;
  $i3 = $179;
 }
 STACKTOP = sp;return;
}
function _decodeCoeff32x32($transformSize,$pretype,$coeff,$context,$channel,$trans_depth) {
 $transformSize = $transformSize|0;
 $pretype = $pretype|0;
 $coeff = $coeff|0;
 $context = $context|0;
 $channel = $channel|0;
 $trans_depth = $trans_depth|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $baseLevel = 0, $cAbsLevel = 0, $cgIdx = 0;
 var $cgScanOrder = 0, $codedGroupFlag = 0, $coeffIdx = 0, $coeffIdx1 = 0, $coeffIdx2 = 0, $coeffIdx3 = 0, $coeffIdxStart = 0, $ctx_idx = 0, $ctx_set = 0, $curCsbf = 0, $firstGroup = 0, $firstItem = 0, $greater1Ctx = 0, $greater1GroupFlag = 0, $greater1Len = 0, $greater2GroupFlag = 0, $groupOff = 0, $i = 0, $lastCgScanLocation = 0, $lastGreater1Ctx = 0;
 var $lastGreater1Flag = 0, $lastLargerOnePos = 0, $lastSigOripos = 0, $lastSigScanLocation = 0, $lastx = 0, $lasty = 0, $or$cond = 0, $or$cond3 = 0, $r = 0, $remain = 0, $scanOff = 0, $scanOrder = 0, $scanSet = 0, $sigGroupFlag = 0, $signGroupFlag = 0, $transformSkipFlag = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $lastx = sp + 388|0;
 $lasty = sp + 384|0;
 $lastGreater1Ctx = sp + 348|0;
 $greater1Ctx = sp + 340|0;
 $ctx_set = sp + 332|0;
 $curCsbf = sp + 316|0;
 $sigGroupFlag = sp + 248|0;
 $greater1GroupFlag = sp + 176|0;
 $greater2GroupFlag = sp + 96|0;
 $signGroupFlag = sp + 24|0;
 $r = sp + 16|0;
 $cAbsLevel = sp + 12|0;
 $remain = sp;
 $0 = $transformSize;
 $1 = $pretype;
 $2 = $coeff;
 $3 = $context;
 $4 = $channel;
 $5 = $trans_depth;
 $6 = $2;
 $7 = $0;
 $8 = $0;
 $9 = Math_imul($7, $8)|0;
 $10 = $9<<2;
 _memset(($6|0),0,($10|0))|0;
 $transformSkipFlag = 0;
 $11 = $4;
 $12 = ($11|0)!=(0);
 $13 = $0;
 $14 = $5;
 $15 = $3;
 if ($12) {
  $16 = (_decodeCoeffTranskip_chroma($13,$14,$15)|0);
  $17 = $16&255;
  $transformSkipFlag = $17;
 } else {
  $18 = (_decodeCoeffTranskip_luma($13,$14,$15)|0);
  $19 = $18&255;
  $transformSkipFlag = $19;
 }
 $20 = $transformSkipFlag;
 $21 = ($20|0)!=(0);
 if (!($21)) {
  STACKTOP = sp;return;
 }
 HEAP32[$lastx>>2] = 0;
 HEAP32[$lasty>>2] = 0;
 $22 = $0;
 $23 = $3;
 $24 = $4;
 _decodeLastOnePos($22,$lastx,1,$23,$24);
 $25 = $0;
 $26 = $3;
 $27 = $4;
 _decodeLastOnePos($25,$lasty,0,$26,$27);
 $28 = $1;
 $29 = $0;
 $30 = $4;
 $31 = (_getScanSet($28,$29,$30)|0);
 $scanSet = $31;
 $32 = $0;
 $33 = (_getScanOff($32)|0);
 $scanOff = $33;
 $34 = $scanOff;
 $35 = $scanSet;
 $36 = (1228 + (($35*20)|0)|0);
 $37 = (($36) + ($34<<2)|0);
 $38 = HEAP32[$37>>2]|0;
 $scanOrder = $38;
 $39 = $scanOff;
 $40 = $scanSet;
 $41 = (1288 + (($40*20)|0)|0);
 $42 = (($41) + ($39<<2)|0);
 $43 = HEAP32[$42>>2]|0;
 $cgScanOrder = $43;
 $44 = HEAP32[$lastx>>2]|0;
 $45 = $0;
 $46 = Math_imul($44, $45)|0;
 $47 = HEAP32[$lasty>>2]|0;
 $48 = (($46) + ($47))|0;
 $lastSigOripos = $48;
 $lastSigScanLocation = 0;
 $i = 0;
 while(1) {
  $49 = $i;
  $50 = $0;
  $51 = $0;
  $52 = Math_imul($50, $51)|0;
  $53 = ($49|0)<($52|0);
  if (!($53)) {
   break;
  }
  $54 = $i;
  $55 = $scanOrder;
  $56 = (($55) + ($54<<2)|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = $lastSigOripos;
  $59 = ($57|0)==($58|0);
  $60 = $i;
  if ($59) {
   label = 8;
   break;
  }
  $61 = (($60) + 1)|0;
  $i = $61;
 }
 if ((label|0) == 8) {
  $lastSigScanLocation = $60;
 }
 $62 = $0;
 $63 = $0;
 $64 = Math_imul($62, $63)|0;
 $65 = (($64|0) / 16)&-1;
 $66 = (_calloc($65,4)|0);
 $codedGroupFlag = $66;
 HEAP32[$lastGreater1Ctx>>2] = 1;
 $firstGroup = 1;
 HEAP32[$greater1Ctx>>2] = 1;
 $lastGreater1Flag = 1;
 HEAP32[$ctx_set>>2] = 0;
 $67 = $lastSigScanLocation;
 $68 = (($67|0) / 16)&-1;
 $lastCgScanLocation = $68;
 $69 = $lastCgScanLocation;
 $cgIdx = $69;
 while(1) {
  $70 = $cgIdx;
  $71 = $0;
  $72 = $0;
  $73 = Math_imul($71, $72)|0;
  $74 = (($73|0) / 16)&-1;
  $75 = ($70|0)<($74|0);
  if (!($75)) {
   break;
  }
  $76 = $cgIdx;
  $77 = $76<<4;
  $groupOff = $77;
  HEAP32[$curCsbf>>2] = 0;
  $78 = $cgIdx;
  $79 = $lastCgScanLocation;
  $80 = ($78|0)==($79|0);
  if ($80) {
   HEAP32[$curCsbf>>2] = 1;
  } else {
   $81 = $cgIdx;
   $82 = $cgScanOrder;
   $83 = (($82) + ($81<<2)|0);
   $84 = HEAP32[$83>>2]|0;
   $85 = $0;
   $86 = $codedGroupFlag;
   $87 = $3;
   $88 = $4;
   _decodeCSBF($curCsbf,$84,$85,$86,$87,$88);
  }
  $89 = HEAP32[$curCsbf>>2]|0;
  $90 = $cgIdx;
  $91 = $cgScanOrder;
  $92 = (($91) + ($90<<2)|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = $codedGroupFlag;
  $95 = (($94) + ($93<<2)|0);
  HEAP32[$95>>2] = $89;
  $96 = HEAP32[$curCsbf>>2]|0;
  $97 = ($96|0)!=(0);
  L22: do {
   if ($97) {
    $coeffIdxStart = 0;
    $98 = $cgIdx;
    $99 = $lastCgScanLocation;
    $100 = ($98|0)==($99|0);
    if ($100) {
     $101 = $lastSigScanLocation;
     $102 = (($101|0) % 16)&-1;
     $coeffIdxStart = $102;
    }
    dest=$sigGroupFlag; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    $103 = $coeffIdxStart;
    $coeffIdx = $103;
    while(1) {
     $104 = $coeffIdx;
     $105 = ($104|0)<(16);
     if (!($105)) {
      break;
     }
     $106 = $cgIdx;
     $107 = $lastCgScanLocation;
     $108 = ($106|0)==($107|0);
     if ($108) {
      $109 = $coeffIdx;
      $110 = $coeffIdxStart;
      $111 = ($109|0)==($110|0);
      if ($111) {
       $112 = $coeffIdx;
       $113 = (($sigGroupFlag) + ($112<<2)|0);
       HEAP32[$113>>2] = 1;
      } else {
       label = 23;
      }
     } else {
      label = 23;
     }
     if ((label|0) == 23) {
      label = 0;
      $114 = $coeffIdx;
      $115 = (($sigGroupFlag) + ($114<<2)|0);
      $116 = $groupOff;
      $117 = $coeffIdx;
      $118 = (($116) + ($117))|0;
      $119 = $scanOrder;
      $120 = (($119) + ($118<<2)|0);
      $121 = HEAP32[$120>>2]|0;
      $122 = $0;
      $123 = $codedGroupFlag;
      $124 = $3;
      $125 = $4;
      _decodeSigFlag($115,$121,$122,$123,$124,$125);
     }
     $126 = $coeffIdx;
     $127 = (($126) + 1)|0;
     $coeffIdx = $127;
    }
    dest=$greater1GroupFlag; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    $greater1Len = 0;
    $lastLargerOnePos = -1;
    $firstItem = 1;
    $128 = $coeffIdxStart;
    $coeffIdx1 = $128;
    while(1) {
     $129 = $coeffIdx1;
     $130 = ($129|0)<(16);
     $131 = $greater1Len;
     $132 = ($131|0)<(8);
     $133 = $130 ? $132 : 0;
     if (!($133)) {
      break;
     }
     $134 = $coeffIdx1;
     $135 = (($sigGroupFlag) + ($134<<2)|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($136|0)!=(0);
     if ($137) {
      $138 = $coeffIdx1;
      $139 = (($greater1GroupFlag) + ($138<<2)|0);
      $140 = $lastGreater1Flag;
      $141 = $groupOff;
      $142 = $coeffIdx1;
      $143 = (($141) + ($142))|0;
      $144 = $scanOrder;
      $145 = (($144) + ($143<<2)|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = $0;
      $148 = $firstItem;
      $149 = $firstGroup;
      $150 = $3;
      $151 = $4;
      _decodeGreater1Flag($139,$140,$146,$147,$lastGreater1Ctx,$ctx_set,$greater1Ctx,$148,$149,$150,$151);
      $firstItem = 0;
      $firstGroup = 0;
      $152 = $coeffIdx1;
      $153 = (($greater1GroupFlag) + ($152<<2)|0);
      $154 = HEAP32[$153>>2]|0;
      $lastGreater1Flag = $154;
      $155 = $greater1Len;
      $156 = (($155) + 1)|0;
      $greater1Len = $156;
      $157 = $lastLargerOnePos;
      $158 = ($157|0)==(-1);
      if ($158) {
       $159 = $coeffIdx1;
       $160 = (($greater1GroupFlag) + ($159<<2)|0);
       $161 = HEAP32[$160>>2]|0;
       $162 = ($161|0)!=(0);
       if ($162) {
        $163 = $coeffIdx1;
        $lastLargerOnePos = $163;
       }
      }
     }
     $164 = $coeffIdx1;
     $165 = (($164) + 1)|0;
     $coeffIdx1 = $165;
    }
    dest=$greater2GroupFlag; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    $166 = $lastLargerOnePos;
    $167 = ($166|0)!=(-1);
    if ($167) {
     $168 = HEAP32[$ctx_set>>2]|0;
     $169 = $4;
     $170 = ($169|0)!=(0);
     $171 = $170 ? 4 : 0;
     $172 = (($168) + ($171))|0;
     $ctx_idx = $172;
     $173 = $3;
     $174 = ((($173)) + 60|0);
     $175 = HEAP32[$174>>2]|0;
     $176 = $3;
     $177 = ((($176)) + 104|0);
     $178 = HEAP32[$177>>2]|0;
     $179 = HEAP32[$178>>2]|0;
     $180 = ((($179)) + 171|0);
     $181 = $ctx_idx;
     $182 = (($180) + ($181)|0);
     $183 = (_get_cabac_regular($175,$182)|0);
     $184 = $lastLargerOnePos;
     $185 = (($greater2GroupFlag) + ($184<<2)|0);
     HEAP32[$185>>2] = $183;
    }
    dest=$signGroupFlag; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    $186 = $coeffIdxStart;
    $coeffIdx2 = $186;
    while(1) {
     $187 = $coeffIdx2;
     $188 = ($187|0)<(16);
     if (!($188)) {
      break;
     }
     $189 = $coeffIdx2;
     $190 = (($sigGroupFlag) + ($189<<2)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = ($191|0)!=(0);
     if ($192) {
      $193 = $3;
      $194 = ((($193)) + 60|0);
      $195 = HEAP32[$194>>2]|0;
      $196 = (_get_cabac_bypass($195)|0);
      $197 = $coeffIdx2;
      $198 = (($signGroupFlag) + ($197<<2)|0);
      HEAP32[$198>>2] = $196;
     }
     $199 = $coeffIdx2;
     $200 = (($199) + 1)|0;
     $coeffIdx2 = $200;
    }
    HEAP32[$r>>2] = 0;
    HEAP32[$cAbsLevel>>2] = 0;
    $greater1Len = 0;
    $201 = $coeffIdxStart;
    $coeffIdx3 = $201;
    while(1) {
     $202 = $coeffIdx3;
     $203 = ($202|0)<(16);
     if (!($203)) {
      break L22;
     }
     $204 = $coeffIdx3;
     $205 = (($sigGroupFlag) + ($204<<2)|0);
     $206 = HEAP32[$205>>2]|0;
     $207 = ($206|0)!=(0);
     if ($207) {
      $208 = $coeffIdx3;
      $209 = (($sigGroupFlag) + ($208<<2)|0);
      $210 = HEAP32[$209>>2]|0;
      $211 = $coeffIdx3;
      $212 = (($greater1GroupFlag) + ($211<<2)|0);
      $213 = HEAP32[$212>>2]|0;
      $214 = (($210) + ($213))|0;
      $215 = $coeffIdx3;
      $216 = (($greater2GroupFlag) + ($215<<2)|0);
      $217 = HEAP32[$216>>2]|0;
      $218 = (($214) + ($217))|0;
      $baseLevel = $218;
      $219 = $lastLargerOnePos;
      $220 = ($219|0)!=(-1);
      if ($220) {
       $221 = $coeffIdx3;
       $222 = $lastLargerOnePos;
       $223 = ($221|0)==($222|0);
       $224 = $baseLevel;
       $225 = ($224|0)==(2);
       $or$cond = $223 & $225;
       if ($or$cond) {
        $226 = $groupOff;
        $227 = $coeffIdx3;
        $228 = (($226) + ($227))|0;
        $229 = $scanOrder;
        $230 = (($229) + ($228<<2)|0);
        $231 = HEAP32[$230>>2]|0;
        $232 = $2;
        $233 = (($232) + ($231<<2)|0);
        HEAP32[$233>>2] = 2;
       } else {
        label = 45;
       }
      } else {
       label = 45;
      }
      do {
       if ((label|0) == 45) {
        label = 0;
        $234 = $greater1Len;
        $235 = ($234|0)<(8);
        $236 = $baseLevel;
        $237 = ($236|0)==(1);
        $or$cond3 = $235 & $237;
        if ($or$cond3) {
         $238 = $groupOff;
         $239 = $coeffIdx3;
         $240 = (($238) + ($239))|0;
         $241 = $scanOrder;
         $242 = (($241) + ($240<<2)|0);
         $243 = HEAP32[$242>>2]|0;
         $244 = $2;
         $245 = (($244) + ($243<<2)|0);
         HEAP32[$245>>2] = 1;
         break;
        }
        $246 = $baseLevel;
        $247 = $greater1Len;
        $248 = ($247|0)<(8);
        if ($248) {
         $249 = $coeffIdx3;
         $250 = $lastLargerOnePos;
         $251 = ($249|0)==($250|0);
         $252 = $251 ? 3 : 2;
         $254 = $252;
        } else {
         $254 = 1;
        }
        $253 = ($246|0)==($254|0);
        if ($253) {
         HEAP32[$remain>>2] = 0;
         $255 = $baseLevel;
         $256 = $3;
         _decodeRemaining($remain,$255,$r,$cAbsLevel,$256);
         $257 = HEAP32[$remain>>2]|0;
         $258 = $baseLevel;
         $259 = (($257) + ($258))|0;
         $260 = $groupOff;
         $261 = $coeffIdx3;
         $262 = (($260) + ($261))|0;
         $263 = $scanOrder;
         $264 = (($263) + ($262<<2)|0);
         $265 = HEAP32[$264>>2]|0;
         $266 = $2;
         $267 = (($266) + ($265<<2)|0);
         HEAP32[$267>>2] = $259;
        }
       }
      } while(0);
      $268 = $greater1Len;
      $269 = (($268) + 1)|0;
      $greater1Len = $269;
      $270 = $coeffIdx3;
      $271 = (($signGroupFlag) + ($270<<2)|0);
      $272 = HEAP32[$271>>2]|0;
      $273 = ($272|0)!=(0);
      if ($273) {
       $274 = $groupOff;
       $275 = $coeffIdx3;
       $276 = (($274) + ($275))|0;
       $277 = $scanOrder;
       $278 = (($277) + ($276<<2)|0);
       $279 = HEAP32[$278>>2]|0;
       $280 = $2;
       $281 = (($280) + ($279<<2)|0);
       $282 = HEAP32[$281>>2]|0;
       $283 = (0 - ($282))|0;
       $284 = $groupOff;
       $285 = $coeffIdx3;
       $286 = (($284) + ($285))|0;
       $287 = $scanOrder;
       $288 = (($287) + ($286<<2)|0);
       $289 = HEAP32[$288>>2]|0;
       $290 = $2;
       $291 = (($290) + ($289<<2)|0);
       HEAP32[$291>>2] = $283;
      }
     }
     $292 = $coeffIdx3;
     $293 = (($292) + 1)|0;
     $coeffIdx3 = $293;
    }
   }
  } while(0);
  $294 = $cgIdx;
  $295 = (($294) + 1)|0;
  $cgIdx = $295;
 }
 $296 = $codedGroupFlag;
 _free($296);
 STACKTOP = sp;return;
}
function _decodeCSBF($csbf,$oriCgPos,$transformSize,$codedGroupFlag,$context,$channel) {
 $csbf = $csbf|0;
 $oriCgPos = $oriCgPos|0;
 $transformSize = $transformSize|0;
 $codedGroupFlag = $codedGroupFlag|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $ctx_idx = 0, $downCsbf = 0, $groupCol = 0, $groupRow = 0, $groupSize = 0, $rightCsbf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $csbf;
 $1 = $oriCgPos;
 $2 = $transformSize;
 $3 = $codedGroupFlag;
 $4 = $context;
 $5 = $channel;
 $downCsbf = 0;
 $rightCsbf = 0;
 $6 = $2;
 $7 = (($6|0) / 4)&-1;
 $groupSize = $7;
 $8 = $1;
 $9 = $groupSize;
 $10 = (($8|0) / ($9|0))&-1;
 $groupRow = $10;
 $11 = $1;
 $12 = $groupSize;
 $13 = (($11|0) % ($12|0))&-1;
 $groupCol = $13;
 $14 = $groupCol;
 $15 = $groupSize;
 $16 = (($15) - 1)|0;
 $17 = ($14|0)<($16|0);
 if ($17) {
  $18 = $groupRow;
  $19 = $groupSize;
  $20 = Math_imul($18, $19)|0;
  $21 = $groupCol;
  $22 = (($20) + ($21))|0;
  $23 = (($22) + 1)|0;
  $24 = $3;
  $25 = (($24) + ($23<<2)|0);
  $26 = HEAP32[$25>>2]|0;
  $rightCsbf = $26;
 }
 $27 = $groupRow;
 $28 = $groupSize;
 $29 = (($28) - 1)|0;
 $30 = ($27|0)<($29|0);
 if ($30) {
  $31 = $groupRow;
  $32 = (($31) + 1)|0;
  $33 = $groupSize;
  $34 = Math_imul($32, $33)|0;
  $35 = $groupCol;
  $36 = (($34) + ($35))|0;
  $37 = $3;
  $38 = (($37) + ($36<<2)|0);
  $39 = HEAP32[$38>>2]|0;
  $downCsbf = $39;
 }
 $40 = $rightCsbf;
 $41 = $downCsbf;
 $42 = (($40) + ($41))|0;
 $43 = ($42>>>0)>=(1);
 $44 = $43 ? 1 : 0;
 $ctx_idx = $44;
 $45 = $5;
 $46 = ($45|0)!=(0);
 $47 = $4;
 $48 = ((($47)) + 60|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = $4;
 $51 = ((($50)) + 104|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = HEAP32[$52>>2]|0;
 $54 = ((($53)) + 65|0);
 if ($46) {
  $59 = ((($54)) + 2|0);
  $60 = $ctx_idx;
  $61 = (($59) + ($60)|0);
  $62 = (_get_cabac_regular($49,$61)|0);
  $63 = $0;
  HEAP32[$63>>2] = $62;
  STACKTOP = sp;return;
 } else {
  $55 = $ctx_idx;
  $56 = (($54) + ($55)|0);
  $57 = (_get_cabac_regular($49,$56)|0);
  $58 = $0;
  HEAP32[$58>>2] = $57;
  STACKTOP = sp;return;
 }
}
function _decodeSigFlag($sigFlag,$oriSigPos,$transformSize,$codeGroupFlag,$context,$channel) {
 $sigFlag = $sigFlag|0;
 $oriSigPos = $oriSigPos|0;
 $transformSize = $transformSize|0;
 $codeGroupFlag = $codeGroupFlag|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $downCsbf = 0, $groupCol = 0, $groupRow = 0, $groupSize = 0, $off_idx = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0;
 var $rightCsbf = 0, $sigCol = 0, $sigRow = 0, $sigTableIdx = 0, $sigTableLocal = 0, $subCol = 0, $subRow = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $sigFlag;
 $1 = $oriSigPos;
 $2 = $transformSize;
 $3 = $codeGroupFlag;
 $4 = $context;
 $5 = $channel;
 $6 = $1;
 $7 = $2;
 $8 = (($6|0) / ($7|0))&-1;
 $sigRow = $8;
 $9 = $1;
 $10 = $2;
 $11 = (($9|0) % ($10|0))&-1;
 $sigCol = $11;
 $12 = $2;
 $13 = (($12|0) / 4)&-1;
 $groupSize = $13;
 $14 = $sigRow;
 $15 = (($14|0) / 4)&-1;
 $groupRow = $15;
 $16 = $sigCol;
 $17 = (($16|0) / 4)&-1;
 $groupCol = $17;
 $18 = $sigRow;
 $19 = (($18|0) % 4)&-1;
 $subRow = $19;
 $20 = $sigCol;
 $21 = (($20|0) % 4)&-1;
 $subCol = $21;
 $rightCsbf = 0;
 $downCsbf = 0;
 $22 = $groupRow;
 $23 = $groupSize;
 $24 = (($23) - 1)|0;
 $25 = ($22|0)<($24|0);
 if ($25) {
  $26 = $groupRow;
  $27 = (($26) + 1)|0;
  $28 = $groupSize;
  $29 = Math_imul($27, $28)|0;
  $30 = $groupCol;
  $31 = (($29) + ($30))|0;
  $32 = $3;
  $33 = (($32) + ($31<<2)|0);
  $34 = HEAP32[$33>>2]|0;
  $downCsbf = $34;
 }
 $35 = $groupCol;
 $36 = $groupSize;
 $37 = (($36) - 1)|0;
 $38 = ($35|0)<($37|0);
 if ($38) {
  $39 = $groupRow;
  $40 = $groupSize;
  $41 = Math_imul($39, $40)|0;
  $42 = $groupCol;
  $43 = (($41) + ($42))|0;
  $44 = (($43) + 1)|0;
  $45 = $3;
  $46 = (($45) + ($44<<2)|0);
  $47 = HEAP32[$46>>2]|0;
  $rightCsbf = $47;
 }
 $sigTableIdx = 0;
 $48 = $2;
 $49 = ($48|0)==(4);
 do {
  if ($49) {
   $sigTableIdx = 0;
  } else {
   $50 = $rightCsbf;
   $51 = ($50|0)==(0);
   $52 = $downCsbf;
   $53 = ($52|0)==(0);
   $or$cond = $51 & $53;
   if ($or$cond) {
    $sigTableIdx = 1;
    break;
   }
   $54 = $rightCsbf;
   $55 = ($54|0)==(0);
   $56 = $downCsbf;
   $57 = ($56|0)==(1);
   $or$cond3 = $55 & $57;
   if ($or$cond3) {
    $sigTableIdx = 2;
    break;
   }
   $58 = $rightCsbf;
   $59 = ($58|0)==(1);
   $60 = $downCsbf;
   $61 = ($60|0)==(0);
   $or$cond5 = $59 & $61;
   if ($or$cond5) {
    $sigTableIdx = 3;
    break;
   }
   $62 = $rightCsbf;
   $63 = ($62|0)==(1);
   $64 = $downCsbf;
   $65 = ($64|0)==(1);
   $or$cond7 = $63 & $65;
   if ($or$cond7) {
    $sigTableIdx = 4;
   }
  }
 } while(0);
 $66 = $sigTableIdx;
 $67 = (1348 + ($66<<2)|0);
 $68 = HEAP32[$67>>2]|0;
 $sigTableLocal = $68;
 $69 = $subRow;
 $70 = $69<<2;
 $71 = $subCol;
 $72 = (($70) + ($71))|0;
 $73 = $sigTableLocal;
 $74 = (($73) + ($72<<2)|0);
 $75 = HEAP32[$74>>2]|0;
 $off_idx = $75;
 $76 = $5;
 $77 = ($76|0)!=(0);
 do {
  if ($77) {
   $85 = $off_idx;
   $86 = (($85) + 12)|0;
   $off_idx = $86;
  } else {
   $78 = $groupRow;
   $79 = $groupCol;
   $80 = (($78) + ($79))|0;
   $81 = ($80|0)>(0);
   $82 = $off_idx;
   if ($81) {
    $83 = (($82) + 24)|0;
    $off_idx = $83;
    break;
   } else {
    $84 = (($82) + 21)|0;
    $off_idx = $84;
    break;
   }
  }
 } while(0);
 $87 = $2;
 $88 = ($87|0)==(4);
 $89 = $1;
 $90 = ($89|0)!=(0);
 $or$cond9 = $88 | $90;
 if (!($or$cond9)) {
  $off_idx = 0;
 }
 $91 = $5;
 $92 = ($91|0)!=(0);
 $93 = $4;
 $94 = ((($93)) + 60|0);
 $95 = HEAP32[$94>>2]|0;
 $96 = $4;
 $97 = ((($96)) + 104|0);
 $98 = HEAP32[$97>>2]|0;
 $99 = HEAP32[$98>>2]|0;
 $100 = ((($99)) + 69|0);
 if ($92) {
  $105 = ((($100)) + 27|0);
  $106 = $off_idx;
  $107 = (($105) + ($106)|0);
  $108 = (_get_cabac_regular($95,$107)|0);
  $109 = $0;
  HEAP32[$109>>2] = $108;
  STACKTOP = sp;return;
 } else {
  $101 = $off_idx;
  $102 = (($100) + ($101)|0);
  $103 = (_get_cabac_regular($95,$102)|0);
  $104 = $0;
  HEAP32[$104>>2] = $103;
  STACKTOP = sp;return;
 }
}
function _decodeGreater1Flag($greater1Flag,$lastGreater1Flag,$ori_pos,$transform_size,$lastGreater1Ctx,$ctxSet,$greater1Ctx,$firstItem,$firstGroup,$context,$channel) {
 $greater1Flag = $greater1Flag|0;
 $lastGreater1Flag = $lastGreater1Flag|0;
 $ori_pos = $ori_pos|0;
 $transform_size = $transform_size|0;
 $lastGreater1Ctx = $lastGreater1Ctx|0;
 $ctxSet = $ctxSet|0;
 $greater1Ctx = $greater1Ctx|0;
 $firstItem = $firstItem|0;
 $firstGroup = $firstGroup|0;
 $context = $context|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $ctx_idx = 0, $group_col = 0, $group_row = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $greater1Flag;
 $1 = $lastGreater1Flag;
 $2 = $ori_pos;
 $3 = $transform_size;
 $4 = $lastGreater1Ctx;
 $5 = $ctxSet;
 $6 = $greater1Ctx;
 $7 = $firstItem;
 $8 = $firstGroup;
 $9 = $context;
 $10 = $channel;
 $11 = $2;
 $12 = $3;
 $13 = (($11|0) / ($12|0))&-1;
 $14 = (($13|0) / 4)&-1;
 $group_row = $14;
 $15 = $2;
 $16 = $3;
 $17 = (($15|0) % ($16|0))&-1;
 $18 = (($17|0) / 4)&-1;
 $group_col = $18;
 $19 = $7;
 $20 = ($19|0)!=(0);
 do {
  if ($20) {
   $21 = $group_row;
   $22 = ($21|0)==(0);
   $23 = $group_col;
   $24 = ($23|0)==(0);
   $or$cond = $22 & $24;
   $25 = $10;
   $26 = ($25|0)!=(0);
   $or$cond3 = $or$cond | $26;
   $27 = $5;
   if ($or$cond3) {
    HEAP32[$27>>2] = 0;
   } else {
    HEAP32[$27>>2] = 2;
   }
   $28 = $8;
   $29 = ($28|0)!=(0);
   do {
    if ($29) {
     $30 = $4;
     HEAP32[$30>>2] = 1;
    } else {
     $31 = $6;
     $32 = HEAP32[$31>>2]|0;
     $33 = $4;
     HEAP32[$33>>2] = $32;
     $34 = $4;
     $35 = HEAP32[$34>>2]|0;
     $36 = ($35|0)!=(0);
     if ($36) {
      $37 = $1;
      $38 = ($37|0)!=(0);
      $39 = $4;
      if ($38) {
       HEAP32[$39>>2] = 0;
       break;
      } else {
       $40 = HEAP32[$39>>2]|0;
       $41 = (($40) + 1)|0;
       HEAP32[$39>>2] = $41;
       break;
      }
     }
    }
   } while(0);
   $42 = $4;
   $43 = HEAP32[$42>>2]|0;
   $44 = ($43|0)==(0);
   if ($44) {
    $45 = $5;
    $46 = HEAP32[$45>>2]|0;
    $47 = (($46) + 1)|0;
    HEAP32[$45>>2] = $47;
   }
   $48 = $6;
   HEAP32[$48>>2] = 1;
  } else {
   $49 = $6;
   $50 = HEAP32[$49>>2]|0;
   $51 = ($50|0)!=(0);
   if ($51) {
    $52 = $1;
    $53 = ($52|0)!=(0);
    $54 = $6;
    if ($53) {
     HEAP32[$54>>2] = 0;
     break;
    } else {
     $55 = HEAP32[$54>>2]|0;
     $56 = (($55) + 1)|0;
     HEAP32[$54>>2] = $56;
     break;
    }
   }
  }
 } while(0);
 $57 = $5;
 $58 = HEAP32[$57>>2]|0;
 $59 = $58<<2;
 $60 = $6;
 $61 = HEAP32[$60>>2]|0;
 $62 = (3)<($61|0);
 if ($62) {
  $66 = 3;
 } else {
  $63 = $6;
  $64 = HEAP32[$63>>2]|0;
  $66 = $64;
 }
 $65 = (($59) + ($66))|0;
 $ctx_idx = $65;
 $67 = $10;
 $68 = ($67|0)!=(0);
 $69 = $9;
 $70 = ((($69)) + 60|0);
 $71 = HEAP32[$70>>2]|0;
 $72 = $9;
 $73 = ((($72)) + 104|0);
 $74 = HEAP32[$73>>2]|0;
 $75 = HEAP32[$74>>2]|0;
 $76 = ((($75)) + 147|0);
 if ($68) {
  $81 = ((($76)) + 16|0);
  $82 = $ctx_idx;
  $83 = (($81) + ($82)|0);
  $84 = (_get_cabac_regular($71,$83)|0);
  $85 = $0;
  HEAP32[$85>>2] = $84;
  STACKTOP = sp;return;
 } else {
  $77 = $ctx_idx;
  $78 = (($76) + ($77)|0);
  $79 = (_get_cabac_regular($71,$78)|0);
  $80 = $0;
  HEAP32[$80>>2] = $79;
  STACKTOP = sp;return;
 }
}
function _sbacInit($qp,$initValue) {
 $qp = $qp|0;
 $initValue = $initValue|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $initState = 0;
 var $mpState = 0, $offset = 0, $slope = 0, $state = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $qp;
 $1 = $initValue;
 $2 = $0;
 $3 = ($2|0)<(0);
 if ($3) {
  $8 = 0;
 } else {
  $4 = $0;
  $5 = ($4|0)>(51);
  $6 = $0;
  $7 = $5 ? 51 : $6;
  $8 = $7;
 }
 $0 = $8;
 $9 = $1;
 $10 = $9 >> 4;
 $11 = ($10*5)|0;
 $12 = (($11) - 45)|0;
 $slope = $12;
 $13 = $1;
 $14 = $13 & 15;
 $15 = $14 << 3;
 $16 = (($15) - 16)|0;
 $offset = $16;
 $17 = $slope;
 $18 = $0;
 $19 = Math_imul($17, $18)|0;
 $20 = $19 >> 4;
 $21 = $offset;
 $22 = (($20) + ($21))|0;
 $23 = (1)>($22|0);
 if ($23) {
  $44 = 1;
 } else {
  $24 = $slope;
  $25 = $0;
  $26 = Math_imul($24, $25)|0;
  $27 = $26 >> 4;
  $28 = $offset;
  $29 = (($27) + ($28))|0;
  $30 = ($29|0)<(126);
  if ($30) {
   $31 = $slope;
   $32 = $0;
   $33 = Math_imul($31, $32)|0;
   $34 = $33 >> 4;
   $35 = $offset;
   $36 = (($34) + ($35))|0;
   $37 = (1)>($36|0);
   if ($37) {
    $44 = 1;
   } else {
    $38 = $slope;
    $39 = $0;
    $40 = Math_imul($38, $39)|0;
    $41 = $40 >> 4;
    $42 = $offset;
    $43 = (($41) + ($42))|0;
    $44 = $43;
   }
  } else {
   $44 = 126;
  }
 }
 $initState = $44;
 $45 = $initState;
 $46 = ($45|0)>=(64);
 $47 = $46&1;
 $mpState = $47;
 $48 = $mpState;
 $49 = ($48|0)!=(0);
 $50 = $initState;
 $51 = (($50) - 64)|0;
 $52 = (63 - ($50))|0;
 $53 = $49 ? $51 : $52;
 $54 = $53 << 1;
 $55 = $mpState;
 $56 = (($54) + ($55))|0;
 $state = $56;
 $57 = $state;
 $58 = $57&255;
 STACKTOP = sp;return ($58|0);
}
function _resetEntropyCtxTable($context,$sliceType,$qp) {
 $context = $context|0;
 $sliceType = $sliceType|0;
 $qp = $qp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $contextStateTable = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $sliceType;
 $2 = $qp;
 $3 = $0;
 $4 = ((($3)) + 104|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = $0;
  $9 = ((($8)) + 104|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$10>>2]|0;
  _free($11);
 }
 $12 = (_malloc(600)|0);
 $13 = $0;
 $14 = ((($13)) + 104|0);
 $15 = HEAP32[$14>>2]|0;
 HEAP32[$15>>2] = $12;
 $16 = $0;
 $17 = ((($16)) + 104|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$18>>2]|0;
 $contextStateTable = $19;
 $20 = $contextStateTable;
 $21 = $1;
 $22 = $2;
 _initBuffer($20,$21,$22,380722,3);
 $23 = $contextStateTable;
 $24 = ((($23)) + 3|0);
 $25 = $1;
 $26 = $2;
 _initBuffer($24,$25,$26,380731,3);
 $27 = $contextStateTable;
 $28 = ((($27)) + 6|0);
 $29 = $1;
 $30 = $2;
 _initBuffer($28,$29,$30,380740,3);
 $31 = $contextStateTable;
 $32 = ((($31)) + 9|0);
 $33 = $1;
 $34 = $2;
 _initBuffer($32,$33,$34,380749,3);
 $35 = $contextStateTable;
 $36 = ((($35)) + 12|0);
 $37 = $1;
 $38 = $2;
 _initBuffer($36,$37,$38,380758,1);
 $39 = $contextStateTable;
 $40 = ((($39)) + 13|0);
 $41 = $1;
 $42 = $2;
 _initBuffer($40,$41,$42,380761,1);
 $43 = $contextStateTable;
 $44 = ((($43)) + 14|0);
 $45 = $1;
 $46 = $2;
 _initBuffer($44,$45,$46,380764,1);
 $47 = $contextStateTable;
 $48 = ((($47)) + 15|0);
 $49 = $1;
 $50 = $2;
 _initBuffer($48,$49,$50,380767,1);
 $51 = $contextStateTable;
 $52 = ((($51)) + 16|0);
 $53 = $1;
 $54 = $2;
 _initBuffer($52,$53,$54,380770,1);
 $55 = $contextStateTable;
 $56 = ((($55)) + 17|0);
 $57 = $1;
 $58 = $2;
 _initBuffer($56,$57,$58,380773,1);
 $59 = $contextStateTable;
 $60 = ((($59)) + 18|0);
 $61 = $1;
 $62 = $2;
 _initBuffer($60,$61,$62,380776,1);
 $63 = $contextStateTable;
 $64 = ((($63)) + 19|0);
 $65 = $1;
 $66 = $2;
 _initBuffer($64,$65,$66,380779,4);
 $67 = $contextStateTable;
 $68 = ((($67)) + 23|0);
 $69 = $1;
 $70 = $2;
 _initBuffer($68,$69,$70,380791,1);
 $71 = $contextStateTable;
 $72 = ((($71)) + 24|0);
 $73 = $1;
 $74 = $2;
 _initBuffer($72,$73,$74,380794,1);
 $75 = $contextStateTable;
 $76 = ((($75)) + 25|0);
 $77 = $1;
 $78 = $2;
 _initBuffer($76,$77,$78,380797,2);
 $79 = $contextStateTable;
 $80 = ((($79)) + 27|0);
 $81 = $1;
 $82 = $2;
 _initBuffer($80,$81,$82,380803,3);
 $83 = $contextStateTable;
 $84 = ((($83)) + 30|0);
 $85 = $1;
 $86 = $2;
 _initBuffer($84,$85,$86,380812,5);
 $87 = $contextStateTable;
 $88 = ((($87)) + 35|0);
 $89 = $1;
 $90 = $2;
 _initBuffer($88,$89,$90,380827,2);
 $91 = $contextStateTable;
 $92 = ((($91)) + 37|0);
 $93 = $1;
 $94 = $2;
 _initBuffer($92,$93,$94,380833,2);
 $95 = $contextStateTable;
 $96 = ((($95)) + 39|0);
 $97 = $1;
 $98 = $2;
 _initBuffer($96,$97,$98,380839,9);
 $99 = $contextStateTable;
 $100 = ((($99)) + 48|0);
 $101 = $1;
 $102 = $2;
 _initBuffer($100,$101,$102,380866,8);
 $103 = $contextStateTable;
 $104 = ((($103)) + 64|0);
 $105 = $1;
 $106 = $2;
 _initBuffer($104,$105,$106,380890,1);
 $107 = $contextStateTable;
 $108 = ((($107)) + 65|0);
 $109 = $1;
 $110 = $2;
 _initBuffer($108,$109,$110,380893,4);
 $111 = $contextStateTable;
 $112 = ((($111)) + 69|0);
 $113 = $1;
 $114 = $2;
 _initBuffer($112,$113,$114,380905,42);
 $115 = $contextStateTable;
 $116 = ((($115)) + 111|0);
 $117 = $1;
 $118 = $2;
 _initBuffer($116,$117,$118,381031,18);
 $119 = $contextStateTable;
 $120 = ((($119)) + 129|0);
 $121 = $1;
 $122 = $2;
 _initBuffer($120,$121,$122,381031,18);
 $123 = $contextStateTable;
 $124 = ((($123)) + 147|0);
 $125 = $1;
 $126 = $2;
 _initBuffer($124,$125,$126,381085,24);
 $127 = $contextStateTable;
 $128 = ((($127)) + 171|0);
 $129 = $1;
 $130 = $2;
 _initBuffer($128,$129,$130,381157,6);
 $131 = $contextStateTable;
 $132 = ((($131)) + 299|0);
 $133 = $1;
 $134 = $2;
 _initBuffer($132,$133,$134,381175,1);
 $135 = $contextStateTable;
 $136 = ((($135)) + 300|0);
 $137 = $1;
 $138 = $2;
 _initBuffer($136,$137,$138,381178,1);
 $139 = $contextStateTable;
 $140 = ((($139)) + 301|0);
 $141 = $1;
 $142 = $2;
 _initBuffer($140,$141,$142,381181,1);
 $143 = $contextStateTable;
 $144 = ((($143)) + 302|0);
 $145 = $1;
 $146 = $2;
 _initBuffer($144,$145,$146,381184,2);
 $147 = $contextStateTable;
 $148 = ((($147)) + 304|0);
 $149 = $1;
 $150 = $2;
 _initBuffer($148,$149,$150,381190,1);
 $151 = $contextStateTable;
 $152 = ((($151)) + 177|0);
 $153 = $1;
 $154 = $2;
 _initBuffer($152,$153,$154,381193,12);
 $155 = $contextStateTable;
 $156 = ((($155)) + 189|0);
 $157 = $1;
 $158 = $2;
 _initBuffer($156,$157,$158,381229,12);
 $159 = $contextStateTable;
 $160 = ((($159)) + 201|0);
 $161 = $1;
 $162 = $2;
 _initBuffer($160,$161,$162,381265,8);
 $163 = $contextStateTable;
 $164 = ((($163)) + 209|0);
 $165 = $1;
 $166 = $2;
 _initBuffer($164,$165,$166,381289,42);
 $167 = $contextStateTable;
 $168 = ((($167)) + 251|0);
 $169 = $1;
 $170 = $2;
 _initBuffer($168,$169,$170,381415,24);
 $171 = $contextStateTable;
 $172 = ((($171)) + 275|0);
 $173 = $1;
 $174 = $2;
 _initBuffer($172,$173,$174,381487,24);
 STACKTOP = sp;return;
}
function _initBuffer($contextModel,$sliceType,$qp,$ctxModel,$size) {
 $contextModel = $contextModel|0;
 $sliceType = $sliceType|0;
 $qp = $qp|0;
 $ctxModel = $ctxModel|0;
 $size = $size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $contextModel;
 $1 = $sliceType;
 $2 = $qp;
 $3 = $ctxModel;
 $4 = $size;
 $5 = $1;
 $6 = $4;
 $7 = Math_imul($5, $6)|0;
 $8 = $3;
 $9 = (($8) + ($7)|0);
 $3 = $9;
 $n = 0;
 while(1) {
  $10 = $n;
  $11 = $4;
  $12 = ($10|0)<($11|0);
  if (!($12)) {
   break;
  }
  $13 = $2;
  $14 = $n;
  $15 = $3;
  $16 = (($15) + ($14)|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = $17&255;
  $19 = (_sbacInit($13,$18)|0);
  $20 = $n;
  $21 = $0;
  $22 = (($21) + ($20)|0);
  HEAP8[$22>>0] = $19;
  $23 = $n;
  $24 = (($23) + 1)|0;
  $n = $24;
 }
 STACKTOP = sp;return;
}
function _getCabacSplitFlag($cu,$pos,$upSplitFlag,$leftSplitFlag) {
 $cu = $cu|0;
 $pos = $pos|0;
 $upSplitFlag = $upSplitFlag|0;
 $leftSplitFlag = $leftSplitFlag|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0;
 var $98 = 0, $99 = 0, $leftIdx = 0, $leftIdx6 = 0, $leftx = 0, $leftx4 = 0, $lefty = 0, $lefty5 = 0, $upIdx = 0, $upIdx3 = 0, $upx = 0, $upx1 = 0, $upy = 0, $upy2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $cu;
 $1 = $pos;
 $2 = $upSplitFlag;
 $3 = $leftSplitFlag;
 $4 = $2;
 HEAP8[$4>>0] = 0;
 $5 = $3;
 HEAP8[$5>>0] = 0;
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)!=(0);
 if ($8) {
  $9 = $1;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($10) - 4)|0;
  $upx = $11;
  $12 = $1;
  $13 = ((($12)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $upy = $14;
  $15 = $upx;
  $16 = (($15|0) / 4)&-1;
  $17 = $16<<4;
  $18 = $upy;
  $19 = (($18|0) / 4)&-1;
  $20 = (($17) + ($19))|0;
  $upIdx = $20;
  $21 = $upIdx;
  $22 = $0;
  $23 = ((($22)) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (($24) + ($21)|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = $26&255;
  $28 = (+($27|0));
  $29 = $1;
  $30 = ((($29)) + 8|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = (($31|0) / 4)&-1;
  $33 = (+($32|0));
  $34 = (+_log2($33));
  $35 = 4.0 - $34;
  $36 = $28 > $35;
  if ($36) {
   $37 = $2;
   HEAP8[$37>>0] = 1;
  }
 } else {
  $38 = $0;
  $39 = ((($38)) + 121|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = ($40<<24>>24)!=(0);
  if ($41) {
   $42 = $1;
   $43 = ((($42)) + 8|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (64 - ($44))|0;
   $upx1 = $45;
   $46 = $1;
   $47 = ((($46)) + 4|0);
   $48 = HEAP32[$47>>2]|0;
   $upy2 = $48;
   $49 = $upx1;
   $50 = (($49|0) / 4)&-1;
   $51 = $50<<4;
   $52 = $upy2;
   $53 = (($52|0) / 4)&-1;
   $54 = (($51) + ($53))|0;
   $upIdx3 = $54;
   $55 = $upIdx3;
   $56 = $0;
   $57 = ((($56)) + 128|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($58)) + 8|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = (($60) + ($55)|0);
   $62 = HEAP8[$61>>0]|0;
   $63 = $62&255;
   $64 = (+($63|0));
   $65 = $1;
   $66 = ((($65)) + 8|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = (($67|0) / 4)&-1;
   $69 = (+($68|0));
   $70 = (+_log2($69));
   $71 = 4.0 - $70;
   $72 = $64 > $71;
   if ($72) {
    $73 = $2;
    HEAP8[$73>>0] = 1;
   }
  }
 }
 $74 = $1;
 $75 = ((($74)) + 4|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = ($76|0)!=(0);
 if ($77) {
  $78 = $1;
  $79 = HEAP32[$78>>2]|0;
  $leftx = $79;
  $80 = $1;
  $81 = ((($80)) + 4|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (($82) - 4)|0;
  $lefty = $83;
  $84 = $leftx;
  $85 = (($84|0) / 4)&-1;
  $86 = $85<<4;
  $87 = $lefty;
  $88 = (($87|0) / 4)&-1;
  $89 = (($86) + ($88))|0;
  $leftIdx = $89;
  $90 = $leftIdx;
  $91 = $0;
  $92 = ((($91)) + 8|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = (($93) + ($90)|0);
  $95 = HEAP8[$94>>0]|0;
  $96 = $95&255;
  $97 = (+($96|0));
  $98 = $1;
  $99 = ((($98)) + 8|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = (($100|0) / 4)&-1;
  $102 = (+($101|0));
  $103 = (+_log2($102));
  $104 = 4.0 - $103;
  $105 = $97 > $104;
  if (!($105)) {
   STACKTOP = sp;return;
  }
  $106 = $3;
  HEAP8[$106>>0] = 1;
  STACKTOP = sp;return;
 }
 $107 = $0;
 $108 = ((($107)) + 120|0);
 $109 = HEAP8[$108>>0]|0;
 $110 = ($109<<24>>24)!=(0);
 if (!($110)) {
  STACKTOP = sp;return;
 }
 $111 = $1;
 $112 = HEAP32[$111>>2]|0;
 $leftx4 = $112;
 $113 = $1;
 $114 = ((($113)) + 8|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = (64 - ($115))|0;
 $lefty5 = $116;
 $117 = $leftx4;
 $118 = (($117|0) / 4)&-1;
 $119 = $118<<4;
 $120 = $lefty5;
 $121 = (($120|0) / 4)&-1;
 $122 = (($119) + ($121))|0;
 $leftIdx6 = $122;
 $123 = $leftIdx6;
 $124 = $0;
 $125 = ((($124)) + 124|0);
 $126 = HEAP32[$125>>2]|0;
 $127 = ((($126)) + 8|0);
 $128 = HEAP32[$127>>2]|0;
 $129 = (($128) + ($123)|0);
 $130 = HEAP8[$129>>0]|0;
 $131 = $130&255;
 $132 = (+($131|0));
 $133 = $1;
 $134 = ((($133)) + 8|0);
 $135 = HEAP32[$134>>2]|0;
 $136 = (($135|0) / 4)&-1;
 $137 = (+($136|0));
 $138 = (+_log2($137));
 $139 = 4.0 - $138;
 $140 = $132 > $139;
 if (!($140)) {
  STACKTOP = sp;return;
 }
 $141 = $3;
 HEAP8[$141>>0] = 1;
 STACKTOP = sp;return;
}
function _getCabacSmoothFlag($cu,$pos,$upSmoothFlag,$leftSmoothFlag) {
 $cu = $cu|0;
 $pos = $pos|0;
 $upSmoothFlag = $upSmoothFlag|0;
 $leftSmoothFlag = $leftSmoothFlag|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $leftIdx = 0, $leftIdx6 = 0, $leftx = 0, $leftx4 = 0;
 var $lefty = 0, $lefty5 = 0, $upIdx = 0, $upIdx3 = 0, $upx = 0, $upx1 = 0, $upy = 0, $upy2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $cu;
 $1 = $pos;
 $2 = $upSmoothFlag;
 $3 = $leftSmoothFlag;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)!=(0);
 if ($6) {
  $7 = $1;
  $8 = HEAP32[$7>>2]|0;
  $9 = $1;
  $10 = ((($9)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($8) - ($11))|0;
  $upx = $12;
  $13 = $1;
  $14 = ((($13)) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $upy = $15;
  $16 = $upx;
  $17 = (($16|0) / 4)&-1;
  $18 = $17<<4;
  $19 = $upy;
  $20 = (($19|0) / 4)&-1;
  $21 = (($18) + ($20))|0;
  $upIdx = $21;
  $22 = $upIdx;
  $23 = $0;
  $24 = ((($23)) + 16|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = (($25) + ($22)|0);
  $27 = HEAP8[$26>>0]|0;
  $28 = $2;
  HEAP8[$28>>0] = $27;
 } else {
  $29 = $0;
  $30 = ((($29)) + 121|0);
  $31 = HEAP8[$30>>0]|0;
  $32 = ($31<<24>>24)!=(0);
  if ($32) {
   $33 = $1;
   $34 = ((($33)) + 8|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (64 - ($35))|0;
   $upx1 = $36;
   $37 = $1;
   $38 = ((($37)) + 4|0);
   $39 = HEAP32[$38>>2]|0;
   $upy2 = $39;
   $40 = $upx1;
   $41 = (($40|0) / 4)&-1;
   $42 = $41<<4;
   $43 = $upy2;
   $44 = (($43|0) / 4)&-1;
   $45 = (($42) + ($44))|0;
   $upIdx3 = $45;
   $46 = $upIdx3;
   $47 = $0;
   $48 = ((($47)) + 128|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = ((($49)) + 16|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (($51) + ($46)|0);
   $53 = HEAP8[$52>>0]|0;
   $54 = $2;
   HEAP8[$54>>0] = $53;
  }
 }
 $55 = $1;
 $56 = ((($55)) + 4|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ($57|0)!=(0);
 if ($58) {
  $59 = $1;
  $60 = HEAP32[$59>>2]|0;
  $leftx = $60;
  $61 = $1;
  $62 = ((($61)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = $1;
  $65 = ((($64)) + 8|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (($63) - ($66))|0;
  $lefty = $67;
  $68 = $leftx;
  $69 = (($68|0) / 4)&-1;
  $70 = $69<<4;
  $71 = $lefty;
  $72 = (($71|0) / 4)&-1;
  $73 = (($70) + ($72))|0;
  $leftIdx = $73;
  $74 = $leftIdx;
  $75 = $0;
  $76 = ((($75)) + 16|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = (($77) + ($74)|0);
  $79 = HEAP8[$78>>0]|0;
  $80 = $3;
  HEAP8[$80>>0] = $79;
 } else {
  $81 = $0;
  $82 = ((($81)) + 120|0);
  $83 = HEAP8[$82>>0]|0;
  $84 = ($83<<24>>24)!=(0);
  if ($84) {
   $85 = $1;
   $86 = HEAP32[$85>>2]|0;
   $leftx4 = $86;
   $87 = $1;
   $88 = ((($87)) + 8|0);
   $89 = HEAP32[$88>>2]|0;
   $90 = (64 - ($89))|0;
   $lefty5 = $90;
   $91 = $leftx4;
   $92 = (($91|0) / 4)&-1;
   $93 = $92<<4;
   $94 = $lefty5;
   $95 = (($94|0) / 4)&-1;
   $96 = (($93) + ($95))|0;
   $leftIdx6 = $96;
   $97 = $leftIdx6;
   $98 = $0;
   $99 = ((($98)) + 124|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = ((($100)) + 16|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = (($102) + ($97)|0);
   $104 = HEAP8[$103>>0]|0;
   $105 = $3;
   HEAP8[$105>>0] = $104;
  }
 }
 $106 = $2;
 $107 = HEAP8[$106>>0]|0;
 $108 = $107&255;
 $109 = ($108|0)==(255);
 if ($109) {
  $110 = $2;
  HEAP8[$110>>0] = 0;
 }
 $111 = $3;
 $112 = HEAP8[$111>>0]|0;
 $113 = $112&255;
 $114 = ($113|0)==(255);
 if (!($114)) {
  STACKTOP = sp;return;
 }
 $115 = $3;
 HEAP8[$115>>0] = 0;
 STACKTOP = sp;return;
}
function _getCabacSmoothFlag_chroma($ctu,$pos,$upSmoothFlag_chroma,$leftSmoothFlag_chroma) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $upSmoothFlag_chroma = $upSmoothFlag_chroma|0;
 $leftSmoothFlag_chroma = $leftSmoothFlag_chroma|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $left_idx = 0, $upidx = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ctu;
 $1 = $pos;
 $2 = $upSmoothFlag_chroma;
 $3 = $leftSmoothFlag_chroma;
 $4 = $2;
 HEAP8[$4>>0] = 0;
 $5 = $3;
 HEAP8[$5>>0] = 0;
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)!=(0);
 if ($8) {
  label = 4;
 } else {
  $9 = $1;
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   $12 = $0;
   $13 = ((($12)) + 121|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = $14&255;
   $16 = ($15|0)!=(0);
   if ($16) {
    label = 4;
   }
  }
 }
 do {
  if ((label|0) == 4) {
   $17 = $1;
   $18 = HEAP32[$17>>2]|0;
   $19 = $1;
   $20 = ((($19)) + 8|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (($18) - ($21))|0;
   $23 = (($22|0) / 4)&-1;
   $24 = $23<<4;
   $25 = $1;
   $26 = ((($25)) + 4|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (($27|0) / 4)&-1;
   $29 = (($24) + ($28))|0;
   $upidx = $29;
   $30 = $1;
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)==(0);
   if ($32) {
    $33 = $1;
    $34 = ((($33)) + 8|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (64 - ($35))|0;
    $37 = (($36|0) / 4)&-1;
    $38 = $37<<4;
    $39 = $1;
    $40 = ((($39)) + 4|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (($41|0) / 4)&-1;
    $43 = (($38) + ($42))|0;
    $upidx = $43;
   }
   $44 = $1;
   $45 = HEAP32[$44>>2]|0;
   $46 = ($45|0)==(0);
   $47 = $upidx;
   $48 = $0;
   if ($46) {
    $49 = ((($48)) + 128|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ((($50)) + 20|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = (($52) + ($47)|0);
    $54 = HEAP8[$53>>0]|0;
    $55 = $2;
    HEAP8[$55>>0] = $54;
    break;
   } else {
    $56 = ((($48)) + 20|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = (($57) + ($47)|0);
    $59 = HEAP8[$58>>0]|0;
    $60 = $2;
    HEAP8[$60>>0] = $59;
    break;
   }
  }
 } while(0);
 $61 = $1;
 $62 = ((($61)) + 4|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = ($63|0)!=(0);
 if ($64) {
  label = 12;
 } else {
  $65 = $1;
  $66 = ((($65)) + 4|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ($67|0)==(0);
  if ($68) {
   $69 = $0;
   $70 = ((($69)) + 120|0);
   $71 = HEAP8[$70>>0]|0;
   $72 = $71&255;
   $73 = ($72|0)!=(0);
   if ($73) {
    label = 12;
   }
  }
 }
 do {
  if ((label|0) == 12) {
   $left_idx = 0;
   $74 = $1;
   $75 = ((($74)) + 4|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = ($76|0)==(0);
   $78 = $1;
   $79 = HEAP32[$78>>2]|0;
   $80 = (($79|0) / 4)&-1;
   $81 = $80<<4;
   $82 = $1;
   if ($77) {
    $83 = ((($82)) + 8|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = (64 - ($84))|0;
    $86 = (($85|0) / 4)&-1;
    $87 = (($81) + ($86))|0;
    $left_idx = $87;
   } else {
    $88 = ((($82)) + 4|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = $1;
    $91 = ((($90)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (($89) - ($92))|0;
    $94 = (($93|0) / 4)&-1;
    $95 = (($81) + ($94))|0;
    $left_idx = $95;
   }
   $96 = $1;
   $97 = ((($96)) + 4|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==(0);
   $100 = $left_idx;
   $101 = $0;
   if ($99) {
    $102 = ((($101)) + 124|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = ((($103)) + 20|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = (($105) + ($100)|0);
    $107 = HEAP8[$106>>0]|0;
    $108 = $3;
    HEAP8[$108>>0] = $107;
    break;
   } else {
    $109 = ((($101)) + 20|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (($110) + ($100)|0);
    $112 = HEAP8[$111>>0]|0;
    $113 = $3;
    HEAP8[$113>>0] = $112;
    break;
   }
  }
 } while(0);
 $114 = $2;
 $115 = HEAP8[$114>>0]|0;
 $116 = $115&255;
 $117 = ($116|0)==(255);
 if ($117) {
  $118 = $2;
  HEAP8[$118>>0] = 0;
 }
 $119 = $3;
 $120 = HEAP8[$119>>0]|0;
 $121 = $120&255;
 $122 = ($121|0)==(255);
 if (!($122)) {
  STACKTOP = sp;return;
 }
 $123 = $3;
 HEAP8[$123>>0] = 0;
 STACKTOP = sp;return;
}
function _getCabacPredType($cu,$pos,$upIntraCuDir,$leftIntraCuDir) {
 $cu = $cu|0;
 $pos = $pos|0;
 $upIntraCuDir = $upIntraCuDir|0;
 $leftIntraCuDir = $leftIntraCuDir|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $leftIdx = 0, $leftIdx6 = 0, $leftx = 0, $leftx4 = 0, $lefty = 0, $lefty5 = 0, $upIdx = 0, $upIdx3 = 0, $upx = 0, $upx1 = 0, $upy = 0, $upy2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $cu;
 $1 = $pos;
 $2 = $upIntraCuDir;
 $3 = $leftIntraCuDir;
 $4 = $2;
 HEAP8[$4>>0] = 3;
 $5 = $3;
 HEAP8[$5>>0] = 3;
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)!=(0);
 if ($8) {
  $9 = $1;
  $10 = HEAP32[$9>>2]|0;
  $11 = $1;
  $12 = ((($11)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($10) - ($13))|0;
  $upx = $14;
  $15 = $1;
  $16 = ((($15)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  $upy = $17;
  $18 = $upx;
  $19 = (($18|0) / 4)&-1;
  $20 = $19<<4;
  $21 = $upy;
  $22 = (($21|0) / 4)&-1;
  $23 = (($20) + ($22))|0;
  $upIdx = $23;
  $24 = $upIdx;
  $25 = $0;
  $26 = ((($25)) + 24|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = (($27) + ($24)|0);
  $29 = HEAP8[$28>>0]|0;
  $30 = $2;
  HEAP8[$30>>0] = $29;
 } else {
  $31 = $0;
  $32 = ((($31)) + 121|0);
  $33 = HEAP8[$32>>0]|0;
  $34 = ($33<<24>>24)!=(0);
  if ($34) {
   $35 = $1;
   $36 = ((($35)) + 8|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (64 - ($37))|0;
   $upx1 = $38;
   $39 = $1;
   $40 = ((($39)) + 4|0);
   $41 = HEAP32[$40>>2]|0;
   $upy2 = $41;
   $42 = $upx1;
   $43 = (($42|0) / 4)&-1;
   $44 = $43<<4;
   $45 = $upy2;
   $46 = (($45|0) / 4)&-1;
   $47 = (($44) + ($46))|0;
   $upIdx3 = $47;
   $48 = $upIdx3;
   $49 = $0;
   $50 = ((($49)) + 128|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($51)) + 24|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($53) + ($48)|0);
   $55 = HEAP8[$54>>0]|0;
   $56 = $2;
   HEAP8[$56>>0] = $55;
  }
 }
 $57 = $2;
 $58 = HEAP8[$57>>0]|0;
 $59 = $58&255;
 $60 = ($59|0)==(0);
 if ($60) {
  label = 7;
 } else {
  $61 = $2;
  $62 = HEAP8[$61>>0]|0;
  $63 = $62&255;
  $64 = ($63|0)==(1);
  if ($64) {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $65 = $2;
  HEAP8[$65>>0] = 3;
 }
 $66 = $1;
 $67 = ((($66)) + 4|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = ($68|0)!=(0);
 if ($69) {
  $70 = $1;
  $71 = HEAP32[$70>>2]|0;
  $leftx = $71;
  $72 = $1;
  $73 = ((($72)) + 4|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = $1;
  $76 = ((($75)) + 8|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = (($74) - ($77))|0;
  $lefty = $78;
  $79 = $leftx;
  $80 = (($79|0) / 4)&-1;
  $81 = $80<<4;
  $82 = $lefty;
  $83 = (($82|0) / 4)&-1;
  $84 = (($81) + ($83))|0;
  $leftIdx = $84;
  $85 = $leftIdx;
  $86 = $0;
  $87 = ((($86)) + 24|0);
  $88 = HEAP32[$87>>2]|0;
  $89 = (($88) + ($85)|0);
  $90 = HEAP8[$89>>0]|0;
  $91 = $3;
  HEAP8[$91>>0] = $90;
 } else {
  $92 = $0;
  $93 = ((($92)) + 120|0);
  $94 = HEAP8[$93>>0]|0;
  $95 = ($94<<24>>24)!=(0);
  if ($95) {
   $96 = $1;
   $97 = HEAP32[$96>>2]|0;
   $leftx4 = $97;
   $98 = $1;
   $99 = ((($98)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = (64 - ($100))|0;
   $lefty5 = $101;
   $102 = $leftx4;
   $103 = (($102|0) / 4)&-1;
   $104 = $103<<4;
   $105 = $lefty5;
   $106 = (($105|0) / 4)&-1;
   $107 = (($104) + ($106))|0;
   $leftIdx6 = $107;
   $108 = $leftIdx6;
   $109 = $0;
   $110 = ((($109)) + 124|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = ((($111)) + 24|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (($113) + ($108)|0);
   $115 = HEAP8[$114>>0]|0;
   $116 = $3;
   HEAP8[$116>>0] = $115;
  }
 }
 $117 = $3;
 $118 = HEAP8[$117>>0]|0;
 $119 = $118&255;
 $120 = ($119|0)==(0);
 if (!($120)) {
  $121 = $3;
  $122 = HEAP8[$121>>0]|0;
  $123 = $122&255;
  $124 = ($123|0)==(1);
  if (!($124)) {
   STACKTOP = sp;return;
  }
 }
 $125 = $3;
 HEAP8[$125>>0] = 3;
 STACKTOP = sp;return;
}
function _getChromaPretype($pretype,$preIdx) {
 $pretype = $pretype|0;
 $preIdx = $preIdx|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $candi = 0, $flag = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $candi = sp + 8|0;
 $0 = $pretype;
 $1 = $preIdx;
 ;HEAP8[$candi>>0]=0|0;HEAP8[$candi+1>>0]=0|0;HEAP8[$candi+2>>0]=0|0;HEAP8[$candi+3>>0]=0|0;HEAP8[$candi+4>>0]=0|0;
 HEAP8[$candi>>0] = 2;
 $2 = ((($candi)) + 1|0);
 HEAP8[$2>>0] = 49;
 $3 = ((($candi)) + 2|0);
 HEAP8[$3>>0] = 19;
 $4 = ((($candi)) + 3|0);
 HEAP8[$4>>0] = 3;
 $5 = ((($candi)) + 4|0);
 HEAP8[$5>>0] = 64;
 $flag = -1;
 $i = 0;
 while(1) {
  $6 = $i;
  $7 = ($6|0)<(4);
  if (!($7)) {
   break;
  }
  $8 = $0;
  $9 = $8&255;
  $10 = $i;
  $11 = (($candi) + ($10)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12&255;
  $14 = ($9|0)==($13|0);
  $15 = $i;
  if ($14) {
   label = 4;
   break;
  }
  $16 = (($15) + 1)|0;
  $i = $16;
 }
 if ((label|0) == 4) {
  $flag = $15;
 }
 $17 = $flag;
 $18 = ($17|0)!=(-1);
 $19 = $0;
 $20 = ((($candi)) + 4|0);
 HEAP8[$20>>0] = $19;
 if (!($18)) {
  $23 = $1;
  $24 = $23&255;
  $25 = (($candi) + ($24)|0);
  $26 = HEAP8[$25>>0]|0;
  STACKTOP = sp;return ($26|0);
 }
 $21 = $flag;
 $22 = (($candi) + ($21)|0);
 HEAP8[$22>>0] = 64;
 $23 = $1;
 $24 = $23&255;
 $25 = (($candi) + ($24)|0);
 $26 = HEAP8[$25>>0]|0;
 STACKTOP = sp;return ($26|0);
}
function _getPretypeCandi($left_mode_base,$up_mode_base,$candi) {
 $left_mode_base = $left_mode_base|0;
 $up_mode_base = $up_mode_base|0;
 $candi = $candi|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $left_mode_base;
 $1 = $up_mode_base;
 $2 = $candi;
 $3 = $0;
 $4 = $3&255;
 $5 = $1;
 $6 = $5&255;
 $7 = ($4|0)==($6|0);
 $8 = $0;
 if ($7) {
  $9 = $8&255;
  $10 = ($9|0)>=(2);
  if ($10) {
   $11 = $0;
   $12 = $2;
   HEAP8[$12>>0] = $11;
   $13 = $0;
   $14 = $13&255;
   $15 = (($14) - 2)|0;
   $16 = (($15) + 31)|0;
   $17 = $16 & 31;
   $18 = (($17) + 2)|0;
   $19 = $18&255;
   $20 = $2;
   $21 = ((($20)) + 1|0);
   HEAP8[$21>>0] = $19;
   $22 = $0;
   $23 = $22&255;
   $24 = (($23) - 2)|0;
   $25 = (($24) + 1)|0;
   $26 = $25 & 31;
   $27 = (($26) + 2)|0;
   $28 = $27&255;
   $29 = $2;
   $30 = ((($29)) + 2|0);
   HEAP8[$30>>0] = $28;
   STACKTOP = sp;return;
  } else {
   $31 = $2;
   HEAP8[$31>>0] = 0;
   $32 = $2;
   $33 = ((($32)) + 1|0);
   HEAP8[$33>>0] = 1;
   $34 = $2;
   $35 = ((($34)) + 2|0);
   HEAP8[$35>>0] = 26;
   STACKTOP = sp;return;
  }
 }
 $36 = $2;
 HEAP8[$36>>0] = $8;
 $37 = $1;
 $38 = $2;
 $39 = ((($38)) + 1|0);
 HEAP8[$39>>0] = $37;
 $40 = $0;
 $41 = $40&255;
 $42 = ($41|0)!=(0);
 if ($42) {
  $43 = $1;
  $44 = $43&255;
  $45 = ($44|0)!=(0);
  if ($45) {
   $46 = $2;
   $47 = ((($46)) + 2|0);
   HEAP8[$47>>0] = 0;
   STACKTOP = sp;return;
  }
 }
 $48 = $0;
 $49 = $48&255;
 $50 = $1;
 $51 = $50&255;
 $52 = (($49) + ($51))|0;
 $53 = ($52|0)<(2);
 $54 = $53 ? 26 : 1;
 $55 = $54&255;
 $56 = $2;
 $57 = ((($56)) + 2|0);
 HEAP8[$57>>0] = $55;
 STACKTOP = sp;return;
}
function _bubble($candi,$len) {
 $candi = $candi|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $bubble = 0, $i = 0, $j = 0, $t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $candi;
 $1 = $len;
 $bubble = 1;
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = $1;
  $4 = (($3) - 1)|0;
  $5 = ($2|0)<($4|0);
  if (!($5)) {
   label = 10;
   break;
  }
  $bubble = 0;
  $j = 0;
  while(1) {
   $6 = $j;
   $7 = $1;
   $8 = (($7) - 1)|0;
   $9 = ($6|0)<($8|0);
   if (!($9)) {
    break;
   }
   $10 = $j;
   $11 = $0;
   $12 = (($11) + ($10)|0);
   $13 = HEAP8[$12>>0]|0;
   $14 = $13&255;
   $15 = $j;
   $16 = (($15) + 1)|0;
   $17 = $0;
   $18 = (($17) + ($16)|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19&255;
   $21 = ($14|0)>($20|0);
   if ($21) {
    $bubble = 1;
    $22 = $j;
    $23 = $0;
    $24 = (($23) + ($22)|0);
    $25 = HEAP8[$24>>0]|0;
    $t = $25;
    $26 = $j;
    $27 = (($26) + 1)|0;
    $28 = $0;
    $29 = (($28) + ($27)|0);
    $30 = HEAP8[$29>>0]|0;
    $31 = $j;
    $32 = $0;
    $33 = (($32) + ($31)|0);
    HEAP8[$33>>0] = $30;
    $34 = $t;
    $35 = $j;
    $36 = (($35) + 1)|0;
    $37 = $0;
    $38 = (($37) + ($36)|0);
    HEAP8[$38>>0] = $34;
   }
   $39 = $j;
   $40 = (($39) + 1)|0;
   $j = $40;
  }
  $41 = $bubble;
  $42 = ($41|0)!=(0);
  if (!($42)) {
   label = 10;
   break;
  }
  $43 = $i;
  $44 = (($43) + 1)|0;
  $i = $44;
 }
 if ((label|0) == 10) {
  STACKTOP = sp;return;
 }
}
function _getCodePretypeBase($extend_pretype) {
 $extend_pretype = $extend_pretype|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $extend_pretype;
 $2 = $1;
 $3 = $2&255;
 $4 = ($3|0)<(2);
 if ($4) {
  $0 = -1;
 } else {
  $5 = $1;
  $6 = $5&255;
  $7 = (8080 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $0 = $8;
 }
 $9 = $0;
 STACKTOP = sp;return ($9|0);
}
function _getPretypeOff($extend_pretype) {
 $extend_pretype = $extend_pretype|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $extend_pretype;
 $2 = $1;
 $3 = $2&255;
 $4 = ($3|0)<(4);
 if ($4) {
  $0 = -1;
 } else {
  $5 = $1;
  $6 = $5&255;
  $7 = (8340 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $0 = $8;
 }
 $9 = $0;
 STACKTOP = sp;return ($9|0);
}
function _getExtendPretypeBase($hevc_pretype) {
 $hevc_pretype = $hevc_pretype|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $hevc_pretype;
 $1 = $0;
 $2 = $1&255;
 $3 = (8600 + ($2<<2)|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function _getCodeOffLen($mode_base) {
 $mode_base = $mode_base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $mode_base;
 $2 = $1;
 $3 = ($2|0)==(2);
 $4 = $1;
 $5 = ($4|0)==(17);
 $or$cond = $3 | $5;
 $6 = $1;
 $7 = ($6|0)==(18);
 $or$cond3 = $or$cond | $7;
 $8 = $1;
 $9 = ($8|0)==(29);
 $or$cond5 = $or$cond3 | $9;
 $10 = $1;
 $11 = ($10|0)==(33);
 $or$cond7 = $or$cond5 | $11;
 if ($or$cond7) {
  $0 = 2;
  $12 = $0;
  STACKTOP = sp;return ($12|0);
 } else {
  $0 = 1;
  $12 = $0;
  STACKTOP = sp;return ($12|0);
 }
 return (0)|0;
}
function _cabacCtuDecode($ctu,$context) {
 $ctu = $ctu|0;
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $colCtuNums = 0, $ctu_col = 0, $ctu_row = 0, $pos = 0, $pos$byval_copy = 0, $rowCtuNums = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pos$byval_copy = sp + 52|0;
 $vararg_buffer = sp;
 $pos = sp + 16|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $1;
 $3 = ((($2)) + 172|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 63)|0;
 $6 = (($5|0) / 64)&-1;
 $rowCtuNums = $6;
 $7 = $1;
 $8 = ((($7)) + 184|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 63)|0;
 $11 = (($10|0) / 64)&-1;
 $colCtuNums = $11;
 $ctu_row = 64;
 $ctu_col = 64;
 $12 = $0;
 $13 = $12;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = (($13) + 4)|0;
 $17 = $16;
 $18 = HEAP32[$17>>2]|0;
 $19 = $colCtuNums;
 $20 = ($19|0)<(0);
 $21 = $20 << 31 >> 31;
 $22 = (___remdi3(($15|0),($18|0),($19|0),($21|0))|0);
 $23 = tempRet0;
 $24 = $colCtuNums;
 $25 = (($24) - 1)|0;
 $26 = ($25|0)<(0);
 $27 = $26 << 31 >> 31;
 $28 = ($22|0)==($25|0);
 $29 = ($23|0)==($27|0);
 $30 = $28 & $29;
 if ($30) {
  $31 = $1;
  $32 = ((($31)) + 184|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = (($33|0) % 64)&-1;
  $35 = ($34|0)!=(0);
  if ($35) {
   $36 = $1;
   $37 = ((($36)) + 184|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = (($38|0) % 64)&-1;
   $ctu_col = $39;
  }
 }
 $40 = $0;
 $41 = $40;
 $42 = $41;
 $43 = HEAP32[$42>>2]|0;
 $44 = (($41) + 4)|0;
 $45 = $44;
 $46 = HEAP32[$45>>2]|0;
 $47 = $colCtuNums;
 $48 = ($47|0)<(0);
 $49 = $48 << 31 >> 31;
 $50 = (___divdi3(($43|0),($46|0),($47|0),($49|0))|0);
 $51 = tempRet0;
 $52 = $rowCtuNums;
 $53 = (($52) - 1)|0;
 $54 = ($53|0)<(0);
 $55 = $54 << 31 >> 31;
 $56 = ($50|0)==($53|0);
 $57 = ($51|0)==($55|0);
 $58 = $56 & $57;
 if ($58) {
  $59 = $1;
  $60 = ((($59)) + 172|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = (($61|0) % 64)&-1;
  $63 = ($62|0)!=(0);
  if ($63) {
   $64 = $1;
   $65 = ((($64)) + 172|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = (($66|0) % 64)&-1;
   $ctu_row = $67;
  }
 }
 HEAP32[$pos>>2] = 0;
 $68 = ((($pos)) + 4|0);
 HEAP32[$68>>2] = 0;
 $69 = ((($pos)) + 8|0);
 HEAP32[$69>>2] = 64;
 $70 = HEAP32[8740>>2]|0;
 $71 = ($70|0)!=(0);
 if (!($71)) {
  $85 = $0;
  $86 = $1;
  $87 = $ctu_row;
  $88 = $ctu_col;
  ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
  _cabacCuDecode($85,$pos$byval_copy,$86,$87,$88);
  STACKTOP = sp;return;
 }
 $72 = $0;
 $73 = $72;
 $74 = $73;
 $75 = HEAP32[$74>>2]|0;
 $76 = (($73) + 4)|0;
 $77 = $76;
 $78 = HEAP32[$77>>2]|0;
 $79 = $ctu_row;
 $80 = $ctu_col;
 $81 = $vararg_buffer;
 $82 = $81;
 HEAP32[$82>>2] = $75;
 $83 = (($81) + 4)|0;
 $84 = $83;
 HEAP32[$84>>2] = $78;
 $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr1>>2] = $79;
 $vararg_ptr2 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr2>>2] = $80;
 (_printf(381559,$vararg_buffer)|0);
 $85 = $0;
 $86 = $1;
 $87 = $ctu_row;
 $88 = $ctu_col;
 ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
 _cabacCuDecode($85,$pos$byval_copy,$86,$87,$88);
 STACKTOP = sp;return;
}
function _cabacCuDecode($ctu,$pos,$context,$ctu_row,$ctu_col) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 $ctu_row = $ctu_row|0;
 $ctu_col = $ctu_col|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $curPreidx = 0, $curPretype = 0, $curPretype_chroma = 0, $curSplitflag = 0, $pos$byval_copy = 0, $pos$byval_copy37 = 0, $pos$byval_copy38 = 0, $pos$byval_copy39 = 0, $pos$byval_copy40 = 0, $pos$byval_copy41 = 0, $pos$byval_copy42 = 0, $pos$byval_copy43 = 0, $pos$byval_copy44 = 0, $pos$byval_copy45 = 0, $pos$byval_copy46 = 0, $pos$byval_copy47 = 0, $pos$byval_copy48 = 0;
 var $pos$byval_copy49 = 0, $pos$byval_copy50 = 0, $pos$byval_copy51 = 0, $pos$byval_copy52 = 0, $pos$byval_copy53 = 0, $pos$byval_copy54 = 0, $pos$byval_copy55 = 0, $pos$byval_copy56 = 0, $pos$byval_copy57 = 0, $pos$byval_copy58 = 0, $pos$byval_copy59 = 0, $shapeEdge = 0, $shapeEdge2 = 0, $shapeFlat1 = 0, $shapeFlat11 = 0, $shapeFlat2 = 0, $shapeFlat23 = 0, $smoothFlag = 0, $smoothFlag_chroma = 0, $vararg_buffer = 0;
 var $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer25 = 0, $vararg_buffer27 = 0, $vararg_buffer29 = 0, $vararg_buffer31 = 0, $vararg_buffer33 = 0, $vararg_buffer35 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 98752|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pos$byval_copy59 = sp + 98724|0;
 $pos$byval_copy58 = sp + 98712|0;
 $pos$byval_copy57 = sp + 98700|0;
 $pos$byval_copy56 = sp + 98688|0;
 $pos$byval_copy55 = sp + 98676|0;
 $pos$byval_copy54 = sp + 98664|0;
 $pos$byval_copy53 = sp + 98652|0;
 $pos$byval_copy52 = sp + 98640|0;
 $pos$byval_copy51 = sp + 98628|0;
 $pos$byval_copy50 = sp + 98616|0;
 $pos$byval_copy49 = sp + 98604|0;
 $pos$byval_copy48 = sp + 98592|0;
 $pos$byval_copy47 = sp + 98580|0;
 $pos$byval_copy46 = sp + 98568|0;
 $pos$byval_copy45 = sp + 98556|0;
 $pos$byval_copy44 = sp + 98544|0;
 $pos$byval_copy43 = sp + 98532|0;
 $pos$byval_copy42 = sp + 98520|0;
 $pos$byval_copy41 = sp + 98508|0;
 $pos$byval_copy40 = sp + 98496|0;
 $pos$byval_copy39 = sp + 98484|0;
 $pos$byval_copy38 = sp + 98472|0;
 $pos$byval_copy37 = sp + 98460|0;
 $pos$byval_copy = sp + 98448|0;
 $vararg_buffer35 = sp + 120|0;
 $vararg_buffer33 = sp + 112|0;
 $vararg_buffer31 = sp + 104|0;
 $vararg_buffer29 = sp + 96|0;
 $vararg_buffer27 = sp + 88|0;
 $vararg_buffer25 = sp + 80|0;
 $vararg_buffer23 = sp + 72|0;
 $vararg_buffer21 = sp + 64|0;
 $vararg_buffer19 = sp + 56|0;
 $vararg_buffer17 = sp + 48|0;
 $vararg_buffer14 = sp + 40|0;
 $vararg_buffer11 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer = sp;
 $curSplitflag = sp + 98741|0;
 $curPreidx = sp + 98738|0;
 $smoothFlag = sp + 98737|0;
 $smoothFlag_chroma = sp + 98736|0;
 $shapeFlat1 = sp + 82048|0;
 $shapeEdge = sp + 65664|0;
 $shapeFlat2 = sp + 49280|0;
 $shapeFlat11 = sp + 32896|0;
 $shapeEdge2 = sp + 16512|0;
 $shapeFlat23 = sp + 128|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $ctu_row;
 $3 = $ctu_col;
 $4 = HEAP32[$pos>>2]|0;
 $5 = $2;
 $6 = ($4|0)>=($5|0);
 if ($6) {
  STACKTOP = sp;return;
 }
 $7 = ((($pos)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $3;
 $10 = ($8|0)>=($9|0);
 if ($10) {
  STACKTOP = sp;return;
 }
 HEAP8[$curSplitflag>>0] = 0;
 $11 = ((($pos)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)>(4);
 if ($13) {
  $14 = $0;
  $15 = $1;
  (_decodeSplitFlag($curSplitflag,$14,$pos,$15)|0);
 }
 $16 = HEAP32[8740>>2]|0;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = HEAP8[$curSplitflag>>0]|0;
  $19 = $18&255;
  $20 = HEAP32[$pos>>2]|0;
  $21 = ((($pos)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($pos)) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  HEAP32[$vararg_buffer>>2] = $19;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $20;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $22;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $24;
  (_printf(381603,$vararg_buffer)|0);
 }
 $25 = HEAP8[$curSplitflag>>0]|0;
 $26 = ($25<<24>>24)!=(0);
 if ($26) {
  $27 = ((($pos)) + 8|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = (($28|0) / 2)&-1;
  HEAP32[$27>>2] = $29;
  $30 = $0;
  $31 = $1;
  $32 = $2;
  $33 = $3;
  ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
  _cabacCuDecode($30,$pos$byval_copy,$31,$32,$33);
  $34 = ((($pos)) + 8|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ((($pos)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (($37) + ($35))|0;
  HEAP32[$36>>2] = $38;
  $39 = $0;
  $40 = $1;
  $41 = $2;
  $42 = $3;
  ;HEAP32[$pos$byval_copy37>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy37+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy37+8>>2]=HEAP32[$pos+8>>2]|0;
  _cabacCuDecode($39,$pos$byval_copy37,$40,$41,$42);
  $43 = ((($pos)) + 8|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = HEAP32[$pos>>2]|0;
  $46 = (($45) + ($44))|0;
  HEAP32[$pos>>2] = $46;
  $47 = ((($pos)) + 8|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($pos)) + 4|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = (($50) - ($48))|0;
  HEAP32[$49>>2] = $51;
  $52 = $0;
  $53 = $1;
  $54 = $2;
  $55 = $3;
  ;HEAP32[$pos$byval_copy38>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy38+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy38+8>>2]=HEAP32[$pos+8>>2]|0;
  _cabacCuDecode($52,$pos$byval_copy38,$53,$54,$55);
  $56 = ((($pos)) + 8|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ((($pos)) + 4|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = (($59) + ($57))|0;
  HEAP32[$58>>2] = $60;
  $61 = $0;
  $62 = $1;
  $63 = $2;
  $64 = $3;
  ;HEAP32[$pos$byval_copy39>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy39+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy39+8>>2]=HEAP32[$pos+8>>2]|0;
  _cabacCuDecode($61,$pos$byval_copy39,$62,$63,$64);
  STACKTOP = sp;return;
 }
 $65 = $0;
 $66 = ((($65)) + 8|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = ((($pos)) + 8|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = (+($69|0));
 $71 = (+_log2($70));
 $72 = 6.0 - $71;
 $73 = (~~(($72))&255);
 ;HEAP32[$pos$byval_copy40>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy40+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy40+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($67,$pos$byval_copy40,$73);
 $curPretype = 0;
 $74 = $0;
 $75 = $1;
 ;HEAP32[$pos$byval_copy41>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy41+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy41+8>>2]=HEAP32[$pos+8>>2]|0;
 $76 = (_decodeIntraLumaPredType($74,$pos$byval_copy41,$75)|0);
 $curPretype = $76;
 $77 = HEAP32[8740>>2]|0;
 $78 = ($77|0)!=(0);
 if ($78) {
  $79 = $curPretype;
  $80 = $79&255;
  HEAP32[$vararg_buffer4>>2] = $80;
  (_printf(381642,$vararg_buffer4)|0);
 }
 $81 = $0;
 $82 = ((($81)) + 24|0);
 $83 = HEAP32[$82>>2]|0;
 $84 = $curPretype;
 ;HEAP32[$pos$byval_copy42>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy42+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy42+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($83,$pos$byval_copy42,$84);
 $curPretype_chroma = 0;
 HEAP8[$curPreidx>>0] = 0;
 $85 = $1;
 _decodeIntraChromaPredType($curPreidx,$85);
 $86 = $curPretype;
 $87 = HEAP8[$curPreidx>>0]|0;
 $88 = (_getChromaPretype($86,$87)|0);
 $curPretype_chroma = $88;
 $89 = HEAP32[8740>>2]|0;
 $90 = ($89|0)!=(0);
 if ($90) {
  $91 = HEAP8[$curPreidx>>0]|0;
  $92 = $91&255;
  $93 = $curPretype_chroma;
  $94 = $93&255;
  HEAP32[$vararg_buffer7>>2] = $92;
  $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
  HEAP32[$vararg_ptr10>>2] = $94;
  (_printf(381665,$vararg_buffer7)|0);
 }
 $95 = $0;
 $96 = ((($95)) + 32|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = HEAP8[$curPreidx>>0]|0;
 ;HEAP32[$pos$byval_copy43>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy43+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy43+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($97,$pos$byval_copy43,$98);
 HEAP8[$smoothFlag>>0] = 0;
 $99 = $0;
 $100 = $1;
 (_decodeSmoothFlag($smoothFlag,$99,$pos,$100)|0);
 $101 = HEAP32[8740>>2]|0;
 $102 = ($101|0)!=(0);
 if ($102) {
  $103 = HEAP8[$smoothFlag>>0]|0;
  $104 = $103&255;
  HEAP32[$vararg_buffer11>>2] = $104;
  (_printf(381707,$vararg_buffer11)|0);
 }
 $105 = $0;
 $106 = ((($105)) + 16|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = HEAP8[$smoothFlag>>0]|0;
 ;HEAP32[$pos$byval_copy44>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy44+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy44+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($107,$pos$byval_copy44,$108);
 HEAP8[$smoothFlag_chroma>>0] = 0;
 $109 = $0;
 $110 = $1;
 _decodeSmoothFlag_chroma($smoothFlag_chroma,$109,$pos,$110);
 $111 = HEAP32[8740>>2]|0;
 $112 = ($111|0)!=(0);
 if ($112) {
  $113 = HEAP8[$smoothFlag_chroma>>0]|0;
  $114 = $113&255;
  HEAP32[$vararg_buffer14>>2] = $114;
  (_printf(381733,$vararg_buffer14)|0);
 }
 $115 = $0;
 $116 = ((($115)) + 20|0);
 $117 = HEAP32[$116>>2]|0;
 $118 = HEAP8[$smoothFlag_chroma>>0]|0;
 ;HEAP32[$pos$byval_copy45>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy45+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy45+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($117,$pos$byval_copy45,$118);
 $119 = $curPretype;
 $120 = $119&255;
 $121 = ($120|0)==(0);
 if (!($121)) {
  $122 = $curPretype;
  $123 = $122&255;
  $124 = ($123|0)==(1);
  if (!($124)) {
   _memset(($shapeFlat11|0),0,16384)|0;
   _memset(($shapeEdge2|0),0,16384)|0;
   _memset(($shapeFlat23|0),0,16384)|0;
   $153 = HEAP32[8740>>2]|0;
   $154 = ($153|0)!=(0);
   if ($154) {
    (_printf(381931,$vararg_buffer27)|0);
   }
   $155 = $curPretype;
   $156 = ((($pos)) + 8|0);
   $157 = HEAP32[$156>>2]|0;
   $158 = HEAP8[$smoothFlag>>0]|0;
   $159 = $1;
   $160 = $0;
   ;HEAP32[$pos$byval_copy53>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy53+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy53+8>>2]=HEAP32[$pos+8>>2]|0;
   _decodeStartForPretype2_36Andfill($155,$157,$158,$shapeFlat11,$shapeEdge2,$shapeFlat23,$159,$160,$pos$byval_copy53);
   $161 = HEAP8[$smoothFlag>>0]|0;
   $162 = $161&255;
   $163 = ($162|0)==(0);
   $164 = HEAP32[8740>>2]|0;
   $165 = ($164|0)!=(0);
   if ($163) {
    if ($165) {
     (_printf(381970,$vararg_buffer29)|0);
    }
    $166 = $0;
    $167 = $1;
    $168 = $curPretype;
    ;HEAP32[$pos$byval_copy54>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy54+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy54+8>>2]=HEAP32[$pos+8>>2]|0;
    _decodeCoeffForSmooth($166,$pos$byval_copy54,$167,0,$168);
   } else {
    if ($165) {
     (_printf(381998,$vararg_buffer31)|0);
    }
    $169 = $0;
    $170 = $1;
    $171 = $curPretype;
    ;HEAP32[$pos$byval_copy55>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy55+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy55+8>>2]=HEAP32[$pos+8>>2]|0;
    ;HEAP32[$pos$byval_copy56>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy56+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy56+8>>2]=HEAP32[$pos+8>>2]|0;
    _decodeCoeffForThreePart($169,$pos$byval_copy55,$pos$byval_copy56,$170,$shapeFlat11,$shapeEdge2,$shapeFlat23,0,$171);
   }
   $172 = HEAP8[$smoothFlag_chroma>>0]|0;
   $173 = $172&255;
   $174 = ($173|0)==(0);
   $175 = HEAP32[8740>>2]|0;
   $176 = ($175|0)!=(0);
   if ($174) {
    if ($176) {
     (_printf(382029,$vararg_buffer33)|0);
    }
    $177 = $0;
    $178 = $1;
    $179 = $curPretype_chroma;
    ;HEAP32[$pos$byval_copy57>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy57+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy57+8>>2]=HEAP32[$pos+8>>2]|0;
    _decodeCoeffForSmooth_chroma($177,$pos$byval_copy57,$178,0,$179);
    STACKTOP = sp;return;
   } else {
    if ($176) {
     (_printf(382059,$vararg_buffer35)|0);
    }
    $180 = $0;
    $181 = $1;
    $182 = $curPretype_chroma;
    ;HEAP32[$pos$byval_copy58>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy58+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy58+8>>2]=HEAP32[$pos+8>>2]|0;
    ;HEAP32[$pos$byval_copy59>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy59+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy59+8>>2]=HEAP32[$pos+8>>2]|0;
    _decodeCoeffForThreePart_chroma($180,$pos$byval_copy58,$pos$byval_copy59,$181,$shapeFlat11,$shapeEdge2,$shapeFlat23,0,$182);
    STACKTOP = sp;return;
   }
  }
 }
 _memset(($shapeFlat1|0),0,16384)|0;
 _memset(($shapeEdge|0),0,16384)|0;
 _memset(($shapeFlat2|0),0,16384)|0;
 $125 = HEAP32[8740>>2]|0;
 $126 = ($125|0)!=(0);
 if ($126) {
  (_printf(381767,$vararg_buffer17)|0);
 }
 $127 = $0;
 $128 = $1;
 $129 = HEAP8[$smoothFlag>>0]|0;
 $130 = $curPretype;
 ;HEAP32[$pos$byval_copy46>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy46+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy46+8>>2]=HEAP32[$pos+8>>2]|0;
 _decodeBorderAndFill($127,$pos$byval_copy46,$128,$129,$130,31,$shapeFlat1,$shapeEdge,$shapeFlat2);
 $131 = HEAP8[$smoothFlag>>0]|0;
 $132 = $131&255;
 $133 = ($132|0)==(0);
 $134 = HEAP32[8740>>2]|0;
 $135 = ($134|0)!=(0);
 if ($133) {
  if ($135) {
   (_printf(381796,$vararg_buffer19)|0);
  }
  $136 = $0;
  $137 = $1;
  $138 = $curPretype;
  ;HEAP32[$pos$byval_copy47>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy47+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy47+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth($136,$pos$byval_copy47,$137,0,$138);
 } else {
  if ($135) {
   (_printf(381824,$vararg_buffer21)|0);
  }
  $139 = $0;
  $140 = $1;
  $141 = $curPretype;
  ;HEAP32[$pos$byval_copy48>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy48+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy48+8>>2]=HEAP32[$pos+8>>2]|0;
  ;HEAP32[$pos$byval_copy49>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy49+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy49+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForThreePart($139,$pos$byval_copy48,$pos$byval_copy49,$140,$shapeFlat1,$shapeEdge,$shapeFlat2,0,$141);
 }
 $142 = HEAP8[$smoothFlag_chroma>>0]|0;
 $143 = $142&255;
 $144 = ($143|0)==(0);
 $145 = HEAP32[8740>>2]|0;
 $146 = ($145|0)!=(0);
 if ($144) {
  if ($146) {
   (_printf(381855,$vararg_buffer23)|0);
  }
  $147 = $0;
  $148 = $1;
  $149 = $curPretype_chroma;
  ;HEAP32[$pos$byval_copy50>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy50+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy50+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth_chroma($147,$pos$byval_copy50,$148,0,$149);
  STACKTOP = sp;return;
 } else {
  if ($146) {
   (_printf(381891,$vararg_buffer25)|0);
  }
  $150 = $0;
  $151 = $1;
  $152 = $curPretype_chroma;
  ;HEAP32[$pos$byval_copy51>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy51+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy51+8>>2]=HEAP32[$pos+8>>2]|0;
  ;HEAP32[$pos$byval_copy52>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy52+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy52+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForThreePart_chroma($150,$pos$byval_copy51,$pos$byval_copy52,$151,$shapeFlat1,$shapeEdge,$shapeFlat2,0,$152);
  STACKTOP = sp;return;
 }
}
function _fillCtuBase($des,$pos,$element) {
 $des = $des|0;
 $pos = $pos|0;
 $element = $element|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $idx = 0, $j = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $des;
 $1 = $element;
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = ((($pos)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($4|0) / 4)&-1;
  $6 = ($2|0)<($5|0);
  if (!($6)) {
   break;
  }
  $j = 0;
  while(1) {
   $7 = $j;
   $8 = ((($pos)) + 8|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (($9|0) / 4)&-1;
   $11 = ($7|0)<($10|0);
   if (!($11)) {
    break;
   }
   $12 = HEAP32[$pos>>2]|0;
   $13 = (($12|0) / 4)&-1;
   $14 = $i;
   $15 = (($13) + ($14))|0;
   $16 = $15<<4;
   $17 = ((($pos)) + 4|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (($18|0) / 4)&-1;
   $20 = (($16) + ($19))|0;
   $21 = $j;
   $22 = (($20) + ($21))|0;
   $idx = $22;
   $23 = $1;
   $24 = $idx;
   $25 = $0;
   $26 = (($25) + ($24)|0);
   HEAP8[$26>>0] = $23;
   $27 = $j;
   $28 = (($27) + 1)|0;
   $j = $28;
  }
  $29 = $i;
  $30 = (($29) + 1)|0;
  $i = $30;
 }
 STACKTOP = sp;return;
}
function _decodeBorderAndFill($ctu,$pos,$context,$smoothFlag,$pretype,$insertNum,$shapeFlat1,$shapeEdge,$shapeFlat2) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 $smoothFlag = $smoothFlag|0;
 $pretype = $pretype|0;
 $insertNum = $insertNum|0;
 $shapeFlat1 = $shapeFlat1|0;
 $shapeEdge = $shapeEdge|0;
 $shapeFlat2 = $shapeFlat2|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $block_idx = 0, $delta = 0;
 var $i = 0, $i1 = 0, $i12 = 0, $i2 = 0, $i4 = 0, $i5 = 0, $i6 = 0, $i9 = 0, $idx = 0, $idx11 = 0, $idx14 = 0, $idx8 = 0, $j = 0, $j10 = 0, $j13 = 0, $j3 = 0, $j7 = 0, $k = 0, $ori_delta = 0, $start = 0;
 var $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer16 = 0, $vararg_buffer18 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer25 = 0, $vararg_buffer28 = 0, $vararg_buffer3 = 0, $vararg_buffer30 = 0, $vararg_buffer32 = 0, $vararg_buffer35 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr8 = 0, $width = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 496|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer35 = sp + 120|0;
 $vararg_buffer32 = sp + 112|0;
 $vararg_buffer30 = sp + 104|0;
 $vararg_buffer28 = sp + 96|0;
 $vararg_buffer25 = sp + 88|0;
 $vararg_buffer23 = sp + 80|0;
 $vararg_buffer21 = sp + 72|0;
 $vararg_buffer18 = sp + 64|0;
 $vararg_buffer16 = sp + 56|0;
 $vararg_buffer14 = sp + 48|0;
 $vararg_buffer11 = sp + 40|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $delta = sp + 352|0;
 $start = sp + 481|0;
 $width = sp + 480|0;
 $ori_delta = sp + 224|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $smoothFlag;
 $3 = $pretype;
 $4 = $insertNum;
 $5 = $shapeFlat1;
 $6 = $shapeEdge;
 $7 = $shapeFlat2;
 dest=$delta; stop=dest+128|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 HEAP8[$start>>0] = 0;
 HEAP8[$width>>0] = 0;
 $8 = ((($pos)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $1;
 $11 = $2;
 $12 = $11&255;
 _decodeNewBorderData($9,$delta,$start,$width,$10,$12);
 $13 = HEAP32[8740>>2]|0;
 $14 = ($13|0)!=(0);
 if ($14) {
  (_printf(382735,$vararg_buffer)|0);
  $i = 0;
  while(1) {
   $15 = $i;
   $16 = ((($pos)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($15|0)<($17|0);
   if (!($18)) {
    break;
   }
   $19 = $i;
   $20 = (($delta) + ($19<<1)|0);
   $21 = HEAP16[$20>>1]|0;
   $22 = $21 << 16 >> 16;
   HEAP32[$vararg_buffer1>>2] = $22;
   (_printf(382302,$vararg_buffer1)|0);
   $23 = $i;
   $24 = (($23) + 1)|0;
   $i = $24;
  }
  (_printf(382820,$vararg_buffer3)|0);
 }
 $i1 = 0;
 while(1) {
  $25 = $i1;
  $26 = ((($pos)) + 8|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = (($27|0) / 4)&-1;
  $29 = ($25|0)<($28|0);
  if (!($29)) {
   break;
  }
  $j = 0;
  while(1) {
   $30 = $j;
   $31 = ((($pos)) + 8|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = (($32|0) / 4)&-1;
   $34 = ($30|0)<($33|0);
   if (!($34)) {
    break;
   }
   $block_idx = 0;
   $35 = $3;
   $36 = $35&255;
   $37 = ($36|0)==(0);
   $38 = HEAP32[$pos>>2]|0;
   $39 = (($38|0) / 4)&-1;
   if ($37) {
    $40 = $j;
    $41 = (($39) + ($40))|0;
    $42 = $41<<4;
    $43 = ((($pos)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (($44|0) / 4)&-1;
    $46 = (($42) + ($45))|0;
    $47 = $i1;
    $48 = (($46) + ($47))|0;
    $block_idx = $48;
   } else {
    $49 = $i1;
    $50 = (($39) + ($49))|0;
    $51 = $50<<4;
    $52 = ((($pos)) + 4|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = (($53|0) / 4)&-1;
    $55 = (($51) + ($54))|0;
    $56 = $j;
    $57 = (($55) + ($56))|0;
    $block_idx = $57;
   }
   $k = 0;
   while(1) {
    $58 = $k;
    $59 = ($58|0)<(4);
    $60 = $j;
    if (!($59)) {
     break;
    }
    $61 = $60<<2;
    $62 = $k;
    $63 = (($61) + ($62))|0;
    $64 = (($delta) + ($63<<1)|0);
    $65 = HEAP16[$64>>1]|0;
    $66 = $block_idx;
    $67 = $66<<2;
    $68 = $k;
    $69 = (($67) + ($68))|0;
    $70 = $0;
    $71 = ((($70)) + 80|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (($72) + ($69<<1)|0);
    HEAP16[$73>>1] = $65;
    $74 = $k;
    $75 = (($74) + 1)|0;
    $k = $75;
   }
   $76 = (($60) + 1)|0;
   $j = $76;
  }
  $77 = $i1;
  $78 = (($77) + 1)|0;
  $i1 = $78;
 }
 $79 = $2;
 $80 = ($79<<24>>24)!=(0);
 L24: do {
  if ($80) {
   $i2 = 0;
   while(1) {
    $81 = $i2;
    $82 = ((($pos)) + 8|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = (($83|0) / 4)&-1;
    $85 = ($81|0)<($84|0);
    if (!($85)) {
     break L24;
    }
    $j3 = 0;
    while(1) {
     $86 = $j3;
     $87 = ((($pos)) + 8|0);
     $88 = HEAP32[$87>>2]|0;
     $89 = (($88|0) / 4)&-1;
     $90 = ($86|0)<($89|0);
     if (!($90)) {
      break;
     }
     $91 = HEAP32[$pos>>2]|0;
     $92 = (($91|0) / 4)&-1;
     $93 = $i2;
     $94 = (($92) + ($93))|0;
     $95 = $94<<4;
     $96 = ((($pos)) + 4|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = (($97|0) / 4)&-1;
     $99 = $j3;
     $100 = (($98) + ($99))|0;
     $101 = (($95) + ($100))|0;
     $idx = $101;
     $102 = HEAP8[$start>>0]|0;
     $103 = $idx;
     $104 = $0;
     $105 = ((($104)) + 180|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = (($106) + ($103)|0);
     HEAP8[$107>>0] = $102;
     $108 = HEAP8[$width>>0]|0;
     $109 = $idx;
     $110 = $0;
     $111 = ((($110)) + 76|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = (($112) + ($109)|0);
     HEAP8[$113>>0] = $108;
     $114 = $j3;
     $115 = (($114) + 1)|0;
     $j3 = $115;
    }
    $116 = $i2;
    $117 = (($116) + 1)|0;
    $i2 = $117;
   }
  }
 } while(0);
 dest=$ori_delta; stop=dest+128|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $i4 = 0;
 while(1) {
  $118 = $i4;
  $119 = ((($pos)) + 8|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118|0)<($120|0);
  if (!($121)) {
   break;
  }
  $122 = $i4;
  $123 = (($delta) + ($122<<1)|0);
  $124 = HEAP16[$123>>1]|0;
  $125 = $124 << 16 >> 16;
  $126 = ((($pos)) + 8|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = $4;
  $129 = (($128) + 1)|0;
  $130 = Math_imul($127, $129)|0;
  $131 = (($125) + ($130))|0;
  $132 = $131&65535;
  $133 = $i4;
  $134 = (($ori_delta) + ($133<<1)|0);
  HEAP16[$134>>1] = $132;
  $135 = $i4;
  $136 = (($135) + 1)|0;
  $i4 = $136;
 }
 $137 = HEAP32[8740>>2]|0;
 $138 = ($137|0)!=(0);
 if ($138) {
  $139 = $2;
  $140 = ($139<<24>>24)!=(0);
  if ($140) {
   $141 = HEAP8[$start>>0]|0;
   $142 = $141 << 24 >> 24;
   $143 = HEAP8[$width>>0]|0;
   $144 = $143&255;
   HEAP32[$vararg_buffer5>>2] = $142;
   $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
   HEAP32[$vararg_ptr8>>2] = $144;
   (_printf(382743,$vararg_buffer5)|0);
  }
  (_printf(382764,$vararg_buffer9)|0);
  $i5 = 0;
  while(1) {
   $145 = $i5;
   $146 = ((($pos)) + 8|0);
   $147 = HEAP32[$146>>2]|0;
   $148 = ($145|0)<($147|0);
   if (!($148)) {
    break;
   }
   $149 = $i5;
   $150 = (($ori_delta) + ($149<<1)|0);
   $151 = HEAP16[$150>>1]|0;
   $152 = $151 << 16 >> 16;
   HEAP32[$vararg_buffer11>>2] = $152;
   (_printf(382302,$vararg_buffer11)|0);
   $153 = $i5;
   $154 = (($153) + 1)|0;
   $i5 = $154;
  }
  (_printf(382820,$vararg_buffer14)|0);
 }
 $155 = $2;
 $156 = ($155<<24>>24)!=(0);
 do {
  if ($156) {
   $157 = $3;
   $158 = $157&255;
   $159 = ($158|0)==(0);
   $160 = HEAP8[$start>>0]|0;
   $161 = $160 << 24 >> 24;
   $162 = HEAP8[$width>>0]|0;
   $163 = $162&255;
   $164 = ((($pos)) + 8|0);
   $165 = HEAP32[$164>>2]|0;
   $166 = $4;
   $167 = $5;
   $168 = $6;
   $169 = $7;
   if ($159) {
    _getShapeFromDeltaTop($161,$163,$165,$166,$ori_delta,$167,$168,$169);
    break;
   } else {
    _getShapeFromDeltaLeft($161,$163,$165,$166,$ori_delta,$167,$168,$169);
    break;
   }
  }
 } while(0);
 $170 = HEAP32[8744>>2]|0;
 $171 = ($170|0)!=(0);
 if (!($171)) {
  STACKTOP = sp;return;
 }
 (_printf(382776,$vararg_buffer16)|0);
 $i6 = 0;
 while(1) {
  $172 = $i6;
  $173 = ((($pos)) + 8|0);
  $174 = HEAP32[$173>>2]|0;
  $175 = ($172|0)<($174|0);
  if (!($175)) {
   break;
  }
  $j7 = 0;
  while(1) {
   $176 = $j7;
   $177 = ((($pos)) + 8|0);
   $178 = HEAP32[$177>>2]|0;
   $179 = ($176|0)<($178|0);
   if (!($179)) {
    break;
   }
   $180 = $i6;
   $181 = ((($pos)) + 8|0);
   $182 = HEAP32[$181>>2]|0;
   $183 = Math_imul($180, $182)|0;
   $184 = $j7;
   $185 = (($183) + ($184))|0;
   $idx8 = $185;
   $186 = $idx8;
   $187 = $5;
   $188 = (($187) + ($186<<2)|0);
   $189 = HEAP32[$188>>2]|0;
   HEAP32[$vararg_buffer18>>2] = $189;
   (_printf(382302,$vararg_buffer18)|0);
   $190 = $j7;
   $191 = (($190) + 1)|0;
   $j7 = $191;
  }
  (_printf(382820,$vararg_buffer21)|0);
  $192 = $i6;
  $193 = (($192) + 1)|0;
  $i6 = $193;
 }
 (_printf(382790,$vararg_buffer23)|0);
 $i9 = 0;
 while(1) {
  $194 = $i9;
  $195 = ((($pos)) + 8|0);
  $196 = HEAP32[$195>>2]|0;
  $197 = ($194|0)<($196|0);
  if (!($197)) {
   break;
  }
  $j10 = 0;
  while(1) {
   $198 = $j10;
   $199 = ((($pos)) + 8|0);
   $200 = HEAP32[$199>>2]|0;
   $201 = ($198|0)<($200|0);
   if (!($201)) {
    break;
   }
   $202 = $i9;
   $203 = ((($pos)) + 8|0);
   $204 = HEAP32[$203>>2]|0;
   $205 = Math_imul($202, $204)|0;
   $206 = $j10;
   $207 = (($205) + ($206))|0;
   $idx11 = $207;
   $208 = $idx11;
   $209 = $6;
   $210 = (($209) + ($208<<2)|0);
   $211 = HEAP32[$210>>2]|0;
   HEAP32[$vararg_buffer25>>2] = $211;
   (_printf(382302,$vararg_buffer25)|0);
   $212 = $j10;
   $213 = (($212) + 1)|0;
   $j10 = $213;
  }
  (_printf(382820,$vararg_buffer28)|0);
  $214 = $i9;
  $215 = (($214) + 1)|0;
  $i9 = $215;
 }
 (_printf(382803,$vararg_buffer30)|0);
 $i12 = 0;
 while(1) {
  $216 = $i12;
  $217 = ((($pos)) + 8|0);
  $218 = HEAP32[$217>>2]|0;
  $219 = ($216|0)<($218|0);
  if (!($219)) {
   break;
  }
  $j13 = 0;
  while(1) {
   $220 = $j13;
   $221 = ((($pos)) + 8|0);
   $222 = HEAP32[$221>>2]|0;
   $223 = ($220|0)<($222|0);
   if (!($223)) {
    break;
   }
   $224 = $i12;
   $225 = ((($pos)) + 8|0);
   $226 = HEAP32[$225>>2]|0;
   $227 = Math_imul($224, $226)|0;
   $228 = $j13;
   $229 = (($227) + ($228))|0;
   $idx14 = $229;
   $230 = $idx14;
   $231 = $7;
   $232 = (($231) + ($230<<2)|0);
   $233 = HEAP32[$232>>2]|0;
   HEAP32[$vararg_buffer32>>2] = $233;
   (_printf(382302,$vararg_buffer32)|0);
   $234 = $j13;
   $235 = (($234) + 1)|0;
   $j13 = $235;
  }
  (_printf(382820,$vararg_buffer35)|0);
  $236 = $i12;
  $237 = (($236) + 1)|0;
  $i12 = $237;
 }
 STACKTOP = sp;return;
}
function _decodeCoeffForSmooth($ctu,$pos,$context,$trans_depth,$pretype) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 $trans_depth = $trans_depth|0;
 $pretype = $pretype|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $pos$byval_copy = 0, $pos$byval_copy1 = 0, $pos$byval_copy2 = 0, $pos$byval_copy3 = 0, $pos$byval_copy4 = 0, $pos$byval_copy5 = 0, $pos$byval_copy6 = 0, $pos$byval_copy7 = 0;
 var $pos$byval_copy8 = 0, $tu_skipflag = 0, $tu_splitflag = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pos$byval_copy8 = sp + 112|0;
 $pos$byval_copy7 = sp + 100|0;
 $pos$byval_copy6 = sp + 88|0;
 $pos$byval_copy5 = sp + 76|0;
 $pos$byval_copy4 = sp + 64|0;
 $pos$byval_copy3 = sp + 52|0;
 $pos$byval_copy2 = sp + 40|0;
 $pos$byval_copy1 = sp + 28|0;
 $pos$byval_copy = sp + 16|0;
 $vararg_buffer = sp;
 $0 = $ctu;
 $1 = $context;
 $2 = $trans_depth;
 $3 = $pretype;
 $tu_splitflag = 0;
 $4 = ((($pos)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>(4);
 if ($6) {
  $7 = ((($pos)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $1;
  $10 = (_decodeTuSplitflag_luma($8,$9)|0);
  $tu_splitflag = $10;
 }
 $11 = $0;
 $12 = ((($11)) + 184|0);
 $13 = HEAP32[$12>>2]|0;
 ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($13,$pos$byval_copy,0);
 $14 = $tu_splitflag;
 $15 = ($14<<24>>24)!=(0);
 if ($15) {
  $16 = ((($pos)) + 8|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (($17|0) / 2)&-1;
  HEAP32[$16>>2] = $18;
  $19 = $0;
  $20 = $1;
  $21 = $2;
  $22 = (($21) + 1)|0;
  $23 = $3;
  ;HEAP32[$pos$byval_copy1>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy1+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy1+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth($19,$pos$byval_copy1,$20,$22,$23);
  $24 = ((($pos)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($pos)) + 4|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = (($27) + ($25))|0;
  HEAP32[$26>>2] = $28;
  $29 = $0;
  $30 = $1;
  $31 = $2;
  $32 = (($31) + 1)|0;
  $33 = $3;
  ;HEAP32[$pos$byval_copy2>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy2+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy2+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth($29,$pos$byval_copy2,$30,$32,$33);
  $34 = ((($pos)) + 8|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = HEAP32[$pos>>2]|0;
  $37 = (($36) + ($35))|0;
  HEAP32[$pos>>2] = $37;
  $38 = ((($pos)) + 8|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($pos)) + 4|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = (($41) - ($39))|0;
  HEAP32[$40>>2] = $42;
  $43 = $0;
  $44 = $1;
  $45 = $2;
  $46 = (($45) + 1)|0;
  $47 = $3;
  ;HEAP32[$pos$byval_copy3>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy3+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy3+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth($43,$pos$byval_copy3,$44,$46,$47);
  $48 = ((($pos)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ((($pos)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = (($51) + ($49))|0;
  HEAP32[$50>>2] = $52;
  $53 = $0;
  $54 = $1;
  $55 = $2;
  $56 = (($55) + 1)|0;
  $57 = $3;
  ;HEAP32[$pos$byval_copy4>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy4+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy4+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth($53,$pos$byval_copy4,$54,$56,$57);
  STACKTOP = sp;return;
 }
 $58 = $0;
 $59 = ((($58)) + 12|0);
 $60 = HEAP32[$59>>2]|0;
 $61 = ((($pos)) + 8|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = (+($62|0));
 $64 = (+_log2($63));
 $65 = 6.0 - $64;
 $66 = (~~(($65))&255);
 ;HEAP32[$pos$byval_copy5>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy5+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy5+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($60,$pos$byval_copy5,$66);
 $67 = $1;
 $68 = ((($67)) + 60|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = $1;
 $71 = ((($70)) + 104|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$72>>2]|0;
 $74 = ((($73)) + 302|0);
 $75 = (_get_cabac_regular($69,$74)|0);
 $76 = $75&255;
 $tu_skipflag = $76;
 $77 = HEAP32[8076>>2]|0;
 $78 = ($77|0)!=(0);
 if ($78) {
  $79 = $tu_skipflag;
  $80 = $79&255;
  HEAP32[$vararg_buffer>>2] = $80;
  (_printf(382711,$vararg_buffer)|0);
 }
 $81 = $0;
 $82 = ((($81)) + 196|0);
 $83 = HEAP32[$82>>2]|0;
 $84 = $tu_skipflag;
 ;HEAP32[$pos$byval_copy6>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy6+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy6+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($83,$pos$byval_copy6,$84);
 $85 = $tu_skipflag;
 $86 = $85&255;
 $87 = ($86|0)==(0);
 $88 = $0;
 $89 = $1;
 $90 = $2;
 $91 = $3;
 if ($87) {
  ;HEAP32[$pos$byval_copy7>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy7+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy7+8>>2]=HEAP32[$pos+8>>2]|0;
  _iquantiAndIdctAndFillCoeffNxN($88,$pos$byval_copy7,$89,$90,$91);
  STACKTOP = sp;return;
 } else {
  ;HEAP32[$pos$byval_copy8>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy8+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy8+8>>2]=HEAP32[$pos+8>>2]|0;
  _iquantiAndFillCoeffNxN($88,$pos$byval_copy8,$89,$90,$91);
  STACKTOP = sp;return;
 }
}
function _decodeCoeffForThreePart($ctu,$pos,$ori_pos,$context,$shapeFlat1,$shapeEdge,$shapeFlat2,$trans_depth,$pretype) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $ori_pos = $ori_pos|0;
 $context = $context|0;
 $shapeFlat1 = $shapeFlat1|0;
 $shapeEdge = $shapeEdge|0;
 $shapeFlat2 = $shapeFlat2|0;
 $trans_depth = $trans_depth|0;
 $pretype = $pretype|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $hasBorder1 = 0, $hasBorder2 = 0;
 var $hasBorder3 = 0, $hasBorder4 = 0, $ori_pos$byval_copy = 0, $ori_pos$byval_copy12 = 0, $ori_pos$byval_copy20 = 0, $ori_pos$byval_copy22 = 0, $ori_pos$byval_copy24 = 0, $ori_pos$byval_copy26 = 0, $ori_pos$byval_copy28 = 0, $ori_pos$byval_copy30 = 0, $ori_pos$byval_copy6 = 0, $ori_pos$byval_copy9 = 0, $pos$byval_copy = 0, $pos$byval_copy10 = 0, $pos$byval_copy11 = 0, $pos$byval_copy13 = 0, $pos$byval_copy14 = 0, $pos$byval_copy15 = 0, $pos$byval_copy16 = 0, $pos$byval_copy17 = 0;
 var $pos$byval_copy18 = 0, $pos$byval_copy19 = 0, $pos$byval_copy21 = 0, $pos$byval_copy23 = 0, $pos$byval_copy25 = 0, $pos$byval_copy27 = 0, $pos$byval_copy29 = 0, $pos$byval_copy4 = 0, $pos$byval_copy5 = 0, $pos$byval_copy7 = 0, $pos$byval_copy8 = 0, $temp_block_x = 0, $temp_block_y = 0, $tu_flattype = 0, $tu_skipflag = 0, $tu_splitflag = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ori_pos$byval_copy30 = sp + 396|0;
 $pos$byval_copy29 = sp + 384|0;
 $ori_pos$byval_copy28 = sp + 372|0;
 $pos$byval_copy27 = sp + 360|0;
 $ori_pos$byval_copy26 = sp + 348|0;
 $pos$byval_copy25 = sp + 336|0;
 $ori_pos$byval_copy24 = sp + 324|0;
 $pos$byval_copy23 = sp + 312|0;
 $ori_pos$byval_copy22 = sp + 300|0;
 $pos$byval_copy21 = sp + 288|0;
 $ori_pos$byval_copy20 = sp + 276|0;
 $pos$byval_copy19 = sp + 264|0;
 $pos$byval_copy18 = sp + 252|0;
 $pos$byval_copy17 = sp + 240|0;
 $pos$byval_copy16 = sp + 228|0;
 $pos$byval_copy15 = sp + 216|0;
 $pos$byval_copy14 = sp + 204|0;
 $pos$byval_copy13 = sp + 192|0;
 $ori_pos$byval_copy12 = sp + 180|0;
 $pos$byval_copy11 = sp + 168|0;
 $pos$byval_copy10 = sp + 156|0;
 $ori_pos$byval_copy9 = sp + 144|0;
 $pos$byval_copy8 = sp + 132|0;
 $pos$byval_copy7 = sp + 120|0;
 $ori_pos$byval_copy6 = sp + 108|0;
 $pos$byval_copy5 = sp + 96|0;
 $pos$byval_copy4 = sp + 84|0;
 $ori_pos$byval_copy = sp + 72|0;
 $pos$byval_copy = sp + 60|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = $ctu;
 $1 = $context;
 $2 = $shapeFlat1;
 $3 = $shapeEdge;
 $4 = $shapeFlat2;
 $5 = $trans_depth;
 $6 = $pretype;
 $tu_splitflag = 0;
 $7 = ((($pos)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)>(4);
 if ($9) {
  $10 = ((($pos)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $1;
  $13 = (_decodeTuSplitflag_luma($11,$12)|0);
  $tu_splitflag = $13;
 }
 $hasBorder1 = 0;
 $hasBorder2 = 0;
 $hasBorder3 = 0;
 $hasBorder4 = 0;
 $14 = HEAP32[$pos>>2]|0;
 $15 = HEAP32[$ori_pos>>2]|0;
 $16 = (($14) - ($15))|0;
 $temp_block_x = $16;
 $17 = ((($pos)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($ori_pos)) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($18) - ($20))|0;
 $temp_block_y = $21;
 $22 = $temp_block_x;
 $23 = $temp_block_y;
 $24 = ((($pos)) + 8|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = (($25|0) / 2)&-1;
 $27 = ((($ori_pos)) + 8|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = $3;
 $30 = (_hasBorder735($22,$23,$26,$28,$29)|0);
 $hasBorder1 = $30;
 $31 = $temp_block_x;
 $32 = $temp_block_y;
 $33 = ((($pos)) + 8|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($34|0) / 2)&-1;
 $36 = (($32) + ($35))|0;
 $37 = ((($pos)) + 8|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = (($38|0) / 2)&-1;
 $40 = ((($ori_pos)) + 8|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = $3;
 $43 = (_hasBorder735($31,$36,$39,$41,$42)|0);
 $hasBorder2 = $43;
 $44 = $temp_block_x;
 $45 = ((($pos)) + 8|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (($46|0) / 2)&-1;
 $48 = (($44) + ($47))|0;
 $49 = $temp_block_y;
 $50 = ((($pos)) + 8|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (($51|0) / 2)&-1;
 $53 = ((($ori_pos)) + 8|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = $3;
 $56 = (_hasBorder735($48,$49,$52,$54,$55)|0);
 $hasBorder3 = $56;
 $57 = $temp_block_x;
 $58 = ((($pos)) + 8|0);
 $59 = HEAP32[$58>>2]|0;
 $60 = (($59|0) / 2)&-1;
 $61 = (($57) + ($60))|0;
 $62 = $temp_block_y;
 $63 = ((($pos)) + 8|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = (($64|0) / 2)&-1;
 $66 = (($62) + ($65))|0;
 $67 = ((($pos)) + 8|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = (($68|0) / 2)&-1;
 $70 = ((($ori_pos)) + 8|0);
 $71 = HEAP32[$70>>2]|0;
 $72 = $3;
 $73 = (_hasBorder735($61,$66,$69,$71,$72)|0);
 $hasBorder4 = $73;
 $74 = $tu_splitflag;
 $75 = ($74<<24>>24)!=(0);
 if ($75) {
  $76 = ((($pos)) + 8|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = (($77|0) / 2)&-1;
  HEAP32[$76>>2] = $78;
  $79 = $hasBorder1;
  $80 = ($79|0)!=(0);
  $81 = $0;
  $82 = $1;
  if ($80) {
   $83 = $2;
   $84 = $3;
   $85 = $4;
   $86 = $5;
   $87 = (($86) + 1)|0;
   $88 = $6;
   ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _decodeCoeffForThreePart($81,$pos$byval_copy,$ori_pos$byval_copy,$82,$83,$84,$85,$87,$88);
  } else {
   $89 = $5;
   $90 = (($89) + 1)|0;
   $91 = $6;
   ;HEAP32[$pos$byval_copy4>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy4+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy4+8>>2]=HEAP32[$pos+8>>2]|0;
   _decodeCoeffForSmooth($81,$pos$byval_copy4,$82,$90,$91);
  }
  $92 = ((($pos)) + 8|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = ((($pos)) + 4|0);
  $95 = HEAP32[$94>>2]|0;
  $96 = (($95) + ($93))|0;
  HEAP32[$94>>2] = $96;
  $97 = $hasBorder2;
  $98 = ($97|0)!=(0);
  $99 = $0;
  $100 = $1;
  if ($98) {
   $101 = $2;
   $102 = $3;
   $103 = $4;
   $104 = $5;
   $105 = (($104) + 1)|0;
   $106 = $6;
   ;HEAP32[$pos$byval_copy5>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy5+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy5+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy6>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy6+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy6+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _decodeCoeffForThreePart($99,$pos$byval_copy5,$ori_pos$byval_copy6,$100,$101,$102,$103,$105,$106);
  } else {
   $107 = $5;
   $108 = (($107) + 1)|0;
   $109 = $6;
   ;HEAP32[$pos$byval_copy7>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy7+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy7+8>>2]=HEAP32[$pos+8>>2]|0;
   _decodeCoeffForSmooth($99,$pos$byval_copy7,$100,$108,$109);
  }
  $110 = ((($pos)) + 8|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = HEAP32[$pos>>2]|0;
  $113 = (($112) + ($111))|0;
  HEAP32[$pos>>2] = $113;
  $114 = ((($pos)) + 8|0);
  $115 = HEAP32[$114>>2]|0;
  $116 = ((($pos)) + 4|0);
  $117 = HEAP32[$116>>2]|0;
  $118 = (($117) - ($115))|0;
  HEAP32[$116>>2] = $118;
  $119 = $hasBorder3;
  $120 = ($119|0)!=(0);
  $121 = $0;
  $122 = $1;
  if ($120) {
   $123 = $2;
   $124 = $3;
   $125 = $4;
   $126 = $5;
   $127 = (($126) + 1)|0;
   $128 = $6;
   ;HEAP32[$pos$byval_copy8>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy8+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy8+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy9>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy9+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy9+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _decodeCoeffForThreePart($121,$pos$byval_copy8,$ori_pos$byval_copy9,$122,$123,$124,$125,$127,$128);
  } else {
   $129 = $5;
   $130 = (($129) + 1)|0;
   $131 = $6;
   ;HEAP32[$pos$byval_copy10>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy10+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy10+8>>2]=HEAP32[$pos+8>>2]|0;
   _decodeCoeffForSmooth($121,$pos$byval_copy10,$122,$130,$131);
  }
  $132 = ((($pos)) + 8|0);
  $133 = HEAP32[$132>>2]|0;
  $134 = ((($pos)) + 4|0);
  $135 = HEAP32[$134>>2]|0;
  $136 = (($135) + ($133))|0;
  HEAP32[$134>>2] = $136;
  $137 = $hasBorder4;
  $138 = ($137|0)!=(0);
  $139 = $0;
  $140 = $1;
  if ($138) {
   $141 = $2;
   $142 = $3;
   $143 = $4;
   $144 = $5;
   $145 = (($144) + 1)|0;
   $146 = $6;
   ;HEAP32[$pos$byval_copy11>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy11+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy11+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy12>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy12+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy12+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _decodeCoeffForThreePart($139,$pos$byval_copy11,$ori_pos$byval_copy12,$140,$141,$142,$143,$145,$146);
   STACKTOP = sp;return;
  } else {
   $147 = $5;
   $148 = (($147) + 1)|0;
   $149 = $6;
   ;HEAP32[$pos$byval_copy13>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy13+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy13+8>>2]=HEAP32[$pos+8>>2]|0;
   _decodeCoeffForSmooth($139,$pos$byval_copy13,$140,$148,$149);
   STACKTOP = sp;return;
  }
 }
 $150 = $0;
 $151 = ((($150)) + 12|0);
 $152 = HEAP32[$151>>2]|0;
 $153 = ((($pos)) + 8|0);
 $154 = HEAP32[$153>>2]|0;
 $155 = (+($154|0));
 $156 = (+_log2($155));
 $157 = 6.0 - $156;
 $158 = (~~(($157))&255);
 ;HEAP32[$pos$byval_copy14>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy14+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy14+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($152,$pos$byval_copy14,$158);
 $159 = $1;
 $160 = ((($159)) + 60|0);
 $161 = HEAP32[$160>>2]|0;
 $162 = (_get_cabac_bypass($161)|0);
 $163 = $162&255;
 $tu_flattype = $163;
 $164 = $1;
 $165 = ((($164)) + 60|0);
 $166 = HEAP32[$165>>2]|0;
 $167 = $1;
 $168 = ((($167)) + 104|0);
 $169 = HEAP32[$168>>2]|0;
 $170 = HEAP32[$169>>2]|0;
 $171 = ((($170)) + 302|0);
 $172 = (_get_cabac_regular($166,$171)|0);
 $173 = $172&255;
 $tu_skipflag = $173;
 $174 = HEAP32[8076>>2]|0;
 $175 = ($174|0)!=(0);
 if ($175) {
  $176 = $tu_flattype;
  $177 = $176&255;
  HEAP32[$vararg_buffer>>2] = $177;
  (_printf(382407,$vararg_buffer)|0);
 }
 $178 = HEAP32[8076>>2]|0;
 $179 = ($178|0)!=(0);
 if ($179) {
  $180 = $tu_skipflag;
  $181 = $180&255;
  HEAP32[$vararg_buffer1>>2] = $181;
  (_printf(382431,$vararg_buffer1)|0);
 }
 $182 = $0;
 $183 = ((($182)) + 184|0);
 $184 = HEAP32[$183>>2]|0;
 $185 = $tu_flattype;
 ;HEAP32[$pos$byval_copy15>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy15+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy15+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($184,$pos$byval_copy15,$185);
 $186 = $0;
 $187 = ((($186)) + 196|0);
 $188 = HEAP32[$187>>2]|0;
 $189 = $tu_skipflag;
 ;HEAP32[$pos$byval_copy16>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy16+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy16+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($188,$pos$byval_copy16,$189);
 $190 = $tu_flattype;
 $191 = $190&255;
 $192 = ($191|0)==(0);
 $193 = $tu_skipflag;
 $194 = $193&255;
 $195 = ($194|0)==(0);
 $196 = $0;
 $197 = $1;
 if ($192) {
  $198 = $5;
  $199 = $6;
  if ($195) {
   ;HEAP32[$pos$byval_copy17>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy17+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy17+8>>2]=HEAP32[$pos+8>>2]|0;
   _iquantiAndIdctAndFillCoeffNxN($196,$pos$byval_copy17,$197,$198,$199);
   STACKTOP = sp;return;
  } else {
   ;HEAP32[$pos$byval_copy18>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy18+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy18+8>>2]=HEAP32[$pos+8>>2]|0;
   _iquantiAndFillCoeffNxN($196,$pos$byval_copy18,$197,$198,$199);
   STACKTOP = sp;return;
  }
 } else {
  $200 = $2;
  $201 = $5;
  if ($195) {
   ;HEAP32[$pos$byval_copy19>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy19+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy19+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy20>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy20+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy20+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _izigzag_iquanti_idct_coeff_onepart($196,$pos$byval_copy19,$ori_pos$byval_copy20,$197,$200,$201);
   $202 = $0;
   $203 = $1;
   $204 = $3;
   $205 = $5;
   ;HEAP32[$pos$byval_copy21>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy21+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy21+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy22>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy22+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy22+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _izigzag_iquanti_idct_coeff_onepart($202,$pos$byval_copy21,$ori_pos$byval_copy22,$203,$204,$205);
   $206 = $0;
   $207 = $1;
   $208 = $4;
   $209 = $5;
   ;HEAP32[$pos$byval_copy23>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy23+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy23+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy24>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy24+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy24+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _izigzag_iquanti_idct_coeff_onepart($206,$pos$byval_copy23,$ori_pos$byval_copy24,$207,$208,$209);
   STACKTOP = sp;return;
  } else {
   ;HEAP32[$pos$byval_copy25>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy25+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy25+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy26>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy26+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy26+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _iquanti_fillCoeff_onepart($196,$pos$byval_copy25,$ori_pos$byval_copy26,$197,$200,$201);
   $210 = $0;
   $211 = $1;
   $212 = $3;
   $213 = $5;
   ;HEAP32[$pos$byval_copy27>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy27+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy27+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy28>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy28+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy28+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _iquanti_fillCoeff_onepart($210,$pos$byval_copy27,$ori_pos$byval_copy28,$211,$212,$213);
   $214 = $0;
   $215 = $1;
   $216 = $4;
   $217 = $5;
   ;HEAP32[$pos$byval_copy29>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy29+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy29+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy30>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy30+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy30+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _iquanti_fillCoeff_onepart($214,$pos$byval_copy29,$ori_pos$byval_copy30,$215,$216,$217);
   STACKTOP = sp;return;
  }
 }
}
function _decodeCoeffForSmooth_chroma($ctu,$pos,$context,$trans_depth,$pretype) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 $trans_depth = $trans_depth|0;
 $pretype = $pretype|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $pos$byval_copy = 0, $pos$byval_copy1 = 0, $pos$byval_copy2 = 0, $pos$byval_copy3 = 0, $pos$byval_copy4 = 0, $pos$byval_copy5 = 0;
 var $pos$byval_copy6 = 0, $pos$byval_copy7 = 0, $pos$byval_copy8 = 0, $tu_skipflag = 0, $tu_splitflag_chroma = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pos$byval_copy8 = sp + 112|0;
 $pos$byval_copy7 = sp + 100|0;
 $pos$byval_copy6 = sp + 88|0;
 $pos$byval_copy5 = sp + 76|0;
 $pos$byval_copy4 = sp + 64|0;
 $pos$byval_copy3 = sp + 52|0;
 $pos$byval_copy2 = sp + 40|0;
 $pos$byval_copy1 = sp + 28|0;
 $pos$byval_copy = sp + 16|0;
 $vararg_buffer = sp;
 $0 = $ctu;
 $1 = $context;
 $2 = $trans_depth;
 $3 = $pretype;
 $tu_splitflag_chroma = 0;
 $4 = ((($pos)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>(4);
 if ($6) {
  $7 = ((($pos)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = (($8|0) / 2)&-1;
  $10 = $1;
  $11 = (_decodeTuSplitflag_chroma($9,$10)|0);
  $tu_splitflag_chroma = $11;
 }
 $12 = $0;
 $13 = ((($12)) + 192|0);
 $14 = HEAP32[$13>>2]|0;
 ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($14,$pos$byval_copy,0);
 $15 = $tu_splitflag_chroma;
 $16 = ($15<<24>>24)!=(0);
 if ($16) {
  $17 = ((($pos)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($18|0) / 2)&-1;
  HEAP32[$17>>2] = $19;
  $20 = $0;
  $21 = $1;
  $22 = $2;
  $23 = (($22) + 1)|0;
  $24 = $3;
  ;HEAP32[$pos$byval_copy1>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy1+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy1+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth_chroma($20,$pos$byval_copy1,$21,$23,$24);
  $25 = ((($pos)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($pos)) + 4|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = (($28) + ($26))|0;
  HEAP32[$27>>2] = $29;
  $30 = $0;
  $31 = $1;
  $32 = $2;
  $33 = (($32) + 1)|0;
  $34 = $3;
  ;HEAP32[$pos$byval_copy2>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy2+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy2+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth_chroma($30,$pos$byval_copy2,$31,$33,$34);
  $35 = ((($pos)) + 8|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = HEAP32[$pos>>2]|0;
  $38 = (($37) + ($36))|0;
  HEAP32[$pos>>2] = $38;
  $39 = ((($pos)) + 8|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($pos)) + 4|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) - ($40))|0;
  HEAP32[$41>>2] = $43;
  $44 = $0;
  $45 = $1;
  $46 = $2;
  $47 = (($46) + 1)|0;
  $48 = $3;
  ;HEAP32[$pos$byval_copy3>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy3+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy3+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth_chroma($44,$pos$byval_copy3,$45,$47,$48);
  $49 = ((($pos)) + 8|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ((($pos)) + 4|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = (($52) + ($50))|0;
  HEAP32[$51>>2] = $53;
  $54 = $0;
  $55 = $1;
  $56 = $2;
  $57 = (($56) + 1)|0;
  $58 = $3;
  ;HEAP32[$pos$byval_copy4>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy4+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy4+8>>2]=HEAP32[$pos+8>>2]|0;
  _decodeCoeffForSmooth_chroma($54,$pos$byval_copy4,$55,$57,$58);
  STACKTOP = sp;return;
 }
 $59 = $0;
 $60 = ((($59)) + 188|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = ((($pos)) + 8|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = (+($63|0));
 $65 = (+_log2($64));
 $66 = 6.0 - $65;
 $67 = (~~(($66))&255);
 ;HEAP32[$pos$byval_copy5>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy5+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy5+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($61,$pos$byval_copy5,$67);
 $68 = $1;
 $69 = ((($68)) + 60|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = $1;
 $72 = ((($71)) + 104|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = HEAP32[$73>>2]|0;
 $75 = ((($74)) + 302|0);
 $76 = ((($75)) + 1|0);
 $77 = (_get_cabac_regular($70,$76)|0);
 $78 = $77&255;
 $tu_skipflag = $78;
 $79 = HEAP32[8076>>2]|0;
 $80 = ($79|0)!=(0);
 if ($80) {
  $81 = $tu_skipflag;
  $82 = $81&255;
  HEAP32[$vararg_buffer>>2] = $82;
  (_printf(382383,$vararg_buffer)|0);
 }
 $83 = $0;
 $84 = ((($83)) + 200|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = $tu_skipflag;
 ;HEAP32[$pos$byval_copy6>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy6+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy6+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($85,$pos$byval_copy6,$86);
 $87 = $tu_skipflag;
 $88 = $87&255;
 $89 = ($88|0)==(0);
 $90 = $0;
 $91 = $1;
 $92 = $2;
 $93 = $3;
 if ($89) {
  ;HEAP32[$pos$byval_copy7>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy7+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy7+8>>2]=HEAP32[$pos+8>>2]|0;
  _iquantiAndIdctForCoeffNxN_chroma($90,$pos$byval_copy7,$91,$92,$93);
  STACKTOP = sp;return;
 } else {
  ;HEAP32[$pos$byval_copy8>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy8+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy8+8>>2]=HEAP32[$pos+8>>2]|0;
  _iquantiAndCoeffNxN_chroma($90,$pos$byval_copy8,$91,$92,$93);
  STACKTOP = sp;return;
 }
}
function _decodeCoeffForThreePart_chroma($ctu,$pos,$ori_pos,$context,$shapeFlat1,$shapeEdge,$shapeFlat2,$trans_depth,$pretype) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $ori_pos = $ori_pos|0;
 $context = $context|0;
 $shapeFlat1 = $shapeFlat1|0;
 $shapeEdge = $shapeEdge|0;
 $shapeFlat2 = $shapeFlat2|0;
 $trans_depth = $trans_depth|0;
 $pretype = $pretype|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $hasBorder1 = 0, $hasBorder2 = 0, $hasBorder3 = 0, $hasBorder4 = 0, $ori_pos$byval_copy = 0, $ori_pos$byval_copy12 = 0, $ori_pos$byval_copy20 = 0, $ori_pos$byval_copy22 = 0, $ori_pos$byval_copy24 = 0, $ori_pos$byval_copy26 = 0, $ori_pos$byval_copy28 = 0, $ori_pos$byval_copy30 = 0, $ori_pos$byval_copy6 = 0, $ori_pos$byval_copy9 = 0, $pos$byval_copy = 0, $pos$byval_copy10 = 0, $pos$byval_copy11 = 0, $pos$byval_copy13 = 0, $pos$byval_copy14 = 0, $pos$byval_copy15 = 0;
 var $pos$byval_copy16 = 0, $pos$byval_copy17 = 0, $pos$byval_copy18 = 0, $pos$byval_copy19 = 0, $pos$byval_copy21 = 0, $pos$byval_copy23 = 0, $pos$byval_copy25 = 0, $pos$byval_copy27 = 0, $pos$byval_copy29 = 0, $pos$byval_copy4 = 0, $pos$byval_copy5 = 0, $pos$byval_copy7 = 0, $pos$byval_copy8 = 0, $temp_block_x = 0, $temp_block_y = 0, $tu_skipflag_chroma = 0, $tu_smoothflag_chroma = 0, $tu_splitflag_chroma = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ori_pos$byval_copy30 = sp + 396|0;
 $pos$byval_copy29 = sp + 384|0;
 $ori_pos$byval_copy28 = sp + 372|0;
 $pos$byval_copy27 = sp + 360|0;
 $ori_pos$byval_copy26 = sp + 348|0;
 $pos$byval_copy25 = sp + 336|0;
 $ori_pos$byval_copy24 = sp + 324|0;
 $pos$byval_copy23 = sp + 312|0;
 $ori_pos$byval_copy22 = sp + 300|0;
 $pos$byval_copy21 = sp + 288|0;
 $ori_pos$byval_copy20 = sp + 276|0;
 $pos$byval_copy19 = sp + 264|0;
 $pos$byval_copy18 = sp + 252|0;
 $pos$byval_copy17 = sp + 240|0;
 $pos$byval_copy16 = sp + 228|0;
 $pos$byval_copy15 = sp + 216|0;
 $pos$byval_copy14 = sp + 204|0;
 $pos$byval_copy13 = sp + 192|0;
 $ori_pos$byval_copy12 = sp + 180|0;
 $pos$byval_copy11 = sp + 168|0;
 $pos$byval_copy10 = sp + 156|0;
 $ori_pos$byval_copy9 = sp + 144|0;
 $pos$byval_copy8 = sp + 132|0;
 $pos$byval_copy7 = sp + 120|0;
 $ori_pos$byval_copy6 = sp + 108|0;
 $pos$byval_copy5 = sp + 96|0;
 $pos$byval_copy4 = sp + 84|0;
 $ori_pos$byval_copy = sp + 72|0;
 $pos$byval_copy = sp + 60|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = $ctu;
 $1 = $context;
 $2 = $shapeFlat1;
 $3 = $shapeEdge;
 $4 = $shapeFlat2;
 $5 = $trans_depth;
 $6 = $pretype;
 $tu_splitflag_chroma = 0;
 $7 = ((($pos)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)>(4);
 if ($9) {
  $10 = ((($pos)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11|0) / 2)&-1;
  $13 = $1;
  $14 = (_decodeTuSplitflag_chroma($12,$13)|0);
  $tu_splitflag_chroma = $14;
 }
 $hasBorder1 = 0;
 $hasBorder2 = 0;
 $hasBorder3 = 0;
 $hasBorder4 = 0;
 $15 = HEAP32[$pos>>2]|0;
 $16 = HEAP32[$ori_pos>>2]|0;
 $17 = (($15) - ($16))|0;
 $temp_block_x = $17;
 $18 = ((($pos)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($ori_pos)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = (($19) - ($21))|0;
 $temp_block_y = $22;
 $23 = $temp_block_x;
 $24 = $temp_block_y;
 $25 = ((($pos)) + 8|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = (($26|0) / 2)&-1;
 $28 = ((($ori_pos)) + 8|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = $3;
 $31 = (_hasBorder_chroma722($23,$24,$27,$29,$30)|0);
 $hasBorder1 = $31;
 $32 = $temp_block_x;
 $33 = $temp_block_y;
 $34 = ((($pos)) + 8|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = (($35|0) / 2)&-1;
 $37 = (($33) + ($36))|0;
 $38 = ((($pos)) + 8|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = (($39|0) / 2)&-1;
 $41 = ((($ori_pos)) + 8|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = $3;
 $44 = (_hasBorder_chroma722($32,$37,$40,$42,$43)|0);
 $hasBorder2 = $44;
 $45 = $temp_block_x;
 $46 = ((($pos)) + 8|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = (($47|0) / 2)&-1;
 $49 = (($45) + ($48))|0;
 $50 = $temp_block_y;
 $51 = ((($pos)) + 8|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = (($52|0) / 2)&-1;
 $54 = ((($ori_pos)) + 8|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $3;
 $57 = (_hasBorder_chroma722($49,$50,$53,$55,$56)|0);
 $hasBorder3 = $57;
 $58 = $temp_block_x;
 $59 = ((($pos)) + 8|0);
 $60 = HEAP32[$59>>2]|0;
 $61 = (($60|0) / 2)&-1;
 $62 = (($58) + ($61))|0;
 $63 = $temp_block_y;
 $64 = ((($pos)) + 8|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = (($65|0) / 2)&-1;
 $67 = (($63) + ($66))|0;
 $68 = ((($pos)) + 8|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = (($69|0) / 2)&-1;
 $71 = ((($ori_pos)) + 8|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = $3;
 $74 = (_hasBorder_chroma722($62,$67,$70,$72,$73)|0);
 $hasBorder4 = $74;
 $75 = $tu_splitflag_chroma;
 $76 = ($75<<24>>24)!=(0);
 if ($76) {
  $77 = ((($pos)) + 8|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (($78|0) / 2)&-1;
  HEAP32[$77>>2] = $79;
  $80 = $hasBorder1;
  $81 = ($80|0)!=(0);
  $82 = $0;
  $83 = $1;
  if ($81) {
   $84 = $2;
   $85 = $3;
   $86 = $4;
   $87 = $5;
   $88 = (($87) + 1)|0;
   $89 = $6;
   ;HEAP32[$pos$byval_copy>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _decodeCoeffForThreePart_chroma($82,$pos$byval_copy,$ori_pos$byval_copy,$83,$84,$85,$86,$88,$89);
  } else {
   $90 = $5;
   $91 = (($90) + 1)|0;
   $92 = $6;
   ;HEAP32[$pos$byval_copy4>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy4+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy4+8>>2]=HEAP32[$pos+8>>2]|0;
   _decodeCoeffForSmooth_chroma($82,$pos$byval_copy4,$83,$91,$92);
  }
  $93 = ((($pos)) + 8|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = ((($pos)) + 4|0);
  $96 = HEAP32[$95>>2]|0;
  $97 = (($96) + ($94))|0;
  HEAP32[$95>>2] = $97;
  $98 = $hasBorder2;
  $99 = ($98|0)!=(0);
  $100 = $0;
  $101 = $1;
  if ($99) {
   $102 = $2;
   $103 = $3;
   $104 = $4;
   $105 = $5;
   $106 = (($105) + 1)|0;
   $107 = $6;
   ;HEAP32[$pos$byval_copy5>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy5+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy5+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy6>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy6+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy6+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _decodeCoeffForThreePart_chroma($100,$pos$byval_copy5,$ori_pos$byval_copy6,$101,$102,$103,$104,$106,$107);
  } else {
   $108 = $5;
   $109 = (($108) + 1)|0;
   $110 = $6;
   ;HEAP32[$pos$byval_copy7>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy7+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy7+8>>2]=HEAP32[$pos+8>>2]|0;
   _decodeCoeffForSmooth_chroma($100,$pos$byval_copy7,$101,$109,$110);
  }
  $111 = ((($pos)) + 8|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ((($pos)) + 4|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = (($114) - ($112))|0;
  HEAP32[$113>>2] = $115;
  $116 = ((($pos)) + 8|0);
  $117 = HEAP32[$116>>2]|0;
  $118 = HEAP32[$pos>>2]|0;
  $119 = (($118) + ($117))|0;
  HEAP32[$pos>>2] = $119;
  $120 = $hasBorder3;
  $121 = ($120|0)!=(0);
  $122 = $0;
  $123 = $1;
  if ($121) {
   $124 = $2;
   $125 = $3;
   $126 = $4;
   $127 = $5;
   $128 = (($127) + 1)|0;
   $129 = $6;
   ;HEAP32[$pos$byval_copy8>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy8+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy8+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy9>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy9+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy9+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _decodeCoeffForThreePart_chroma($122,$pos$byval_copy8,$ori_pos$byval_copy9,$123,$124,$125,$126,$128,$129);
  } else {
   $130 = $5;
   $131 = (($130) + 1)|0;
   $132 = $6;
   ;HEAP32[$pos$byval_copy10>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy10+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy10+8>>2]=HEAP32[$pos+8>>2]|0;
   _decodeCoeffForSmooth_chroma($122,$pos$byval_copy10,$123,$131,$132);
  }
  $133 = ((($pos)) + 8|0);
  $134 = HEAP32[$133>>2]|0;
  $135 = ((($pos)) + 4|0);
  $136 = HEAP32[$135>>2]|0;
  $137 = (($136) + ($134))|0;
  HEAP32[$135>>2] = $137;
  $138 = $hasBorder4;
  $139 = ($138|0)!=(0);
  $140 = $0;
  $141 = $1;
  if ($139) {
   $142 = $2;
   $143 = $3;
   $144 = $4;
   $145 = $5;
   $146 = (($145) + 1)|0;
   $147 = $6;
   ;HEAP32[$pos$byval_copy11>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy11+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy11+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy12>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy12+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy12+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _decodeCoeffForThreePart_chroma($140,$pos$byval_copy11,$ori_pos$byval_copy12,$141,$142,$143,$144,$146,$147);
   STACKTOP = sp;return;
  } else {
   $148 = $5;
   $149 = (($148) + 1)|0;
   $150 = $6;
   ;HEAP32[$pos$byval_copy13>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy13+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy13+8>>2]=HEAP32[$pos+8>>2]|0;
   _decodeCoeffForSmooth_chroma($140,$pos$byval_copy13,$141,$149,$150);
   STACKTOP = sp;return;
  }
 }
 $151 = $0;
 $152 = ((($151)) + 188|0);
 $153 = HEAP32[$152>>2]|0;
 $154 = ((($pos)) + 8|0);
 $155 = HEAP32[$154>>2]|0;
 $156 = (+($155|0));
 $157 = (+_log2($156));
 $158 = 6.0 - $157;
 $159 = (~~(($158))&255);
 ;HEAP32[$pos$byval_copy14>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy14+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy14+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($153,$pos$byval_copy14,$159);
 $160 = $1;
 $161 = ((($160)) + 60|0);
 $162 = HEAP32[$161>>2]|0;
 $163 = (_get_cabac_bypass($162)|0);
 $164 = $163&255;
 $tu_smoothflag_chroma = $164;
 $165 = $1;
 $166 = ((($165)) + 60|0);
 $167 = HEAP32[$166>>2]|0;
 $168 = $1;
 $169 = ((($168)) + 104|0);
 $170 = HEAP32[$169>>2]|0;
 $171 = HEAP32[$170>>2]|0;
 $172 = ((($171)) + 302|0);
 $173 = ((($172)) + 1|0);
 $174 = (_get_cabac_regular($167,$173)|0);
 $175 = $174&255;
 $tu_skipflag_chroma = $175;
 $176 = HEAP32[8076>>2]|0;
 $177 = ($176|0)!=(0);
 if ($177) {
  $178 = $tu_smoothflag_chroma;
  $179 = $178&255;
  HEAP32[$vararg_buffer>>2] = $179;
  (_printf(382109,$vararg_buffer)|0);
 }
 $180 = HEAP32[8076>>2]|0;
 $181 = ($180|0)!=(0);
 if ($181) {
  $182 = $tu_skipflag_chroma;
  $183 = $182&255;
  HEAP32[$vararg_buffer1>>2] = $183;
  (_printf(382142,$vararg_buffer1)|0);
 }
 $184 = $0;
 $185 = ((($184)) + 192|0);
 $186 = HEAP32[$185>>2]|0;
 $187 = $tu_smoothflag_chroma;
 ;HEAP32[$pos$byval_copy15>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy15+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy15+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($186,$pos$byval_copy15,$187);
 $188 = $0;
 $189 = ((($188)) + 200|0);
 $190 = HEAP32[$189>>2]|0;
 $191 = $tu_skipflag_chroma;
 ;HEAP32[$pos$byval_copy16>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy16+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy16+8>>2]=HEAP32[$pos+8>>2]|0;
 _fillCtuBase($190,$pos$byval_copy16,$191);
 $192 = $tu_smoothflag_chroma;
 $193 = $192&255;
 $194 = ($193|0)==(0);
 $195 = $tu_skipflag_chroma;
 $196 = $195&255;
 $197 = ($196|0)==(0);
 $198 = $0;
 $199 = $1;
 if ($194) {
  $200 = $5;
  $201 = $6;
  if ($197) {
   ;HEAP32[$pos$byval_copy17>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy17+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy17+8>>2]=HEAP32[$pos+8>>2]|0;
   _iquantiAndIdctForCoeffNxN_chroma($198,$pos$byval_copy17,$199,$200,$201);
   STACKTOP = sp;return;
  } else {
   ;HEAP32[$pos$byval_copy18>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy18+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy18+8>>2]=HEAP32[$pos+8>>2]|0;
   _iquantiAndCoeffNxN_chroma($198,$pos$byval_copy18,$199,$200,$201);
   STACKTOP = sp;return;
  }
 } else {
  $202 = $2;
  $203 = $5;
  if ($197) {
   ;HEAP32[$pos$byval_copy19>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy19+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy19+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy20>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy20+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy20+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _izigzag_iquanti_idct_coeffOnePart_chroma($198,$pos$byval_copy19,$ori_pos$byval_copy20,$199,$202,$203);
   $204 = $0;
   $205 = $1;
   $206 = $3;
   $207 = $5;
   ;HEAP32[$pos$byval_copy21>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy21+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy21+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy22>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy22+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy22+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _izigzag_iquanti_idct_coeffOnePart_chroma($204,$pos$byval_copy21,$ori_pos$byval_copy22,$205,$206,$207);
   $208 = $0;
   $209 = $1;
   $210 = $4;
   $211 = $5;
   ;HEAP32[$pos$byval_copy23>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy23+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy23+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy24>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy24+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy24+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _izigzag_iquanti_idct_coeffOnePart_chroma($208,$pos$byval_copy23,$ori_pos$byval_copy24,$209,$210,$211);
   STACKTOP = sp;return;
  } else {
   ;HEAP32[$pos$byval_copy25>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy25+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy25+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy26>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy26+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy26+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _iquanti_coeffOnepart_chroma($198,$pos$byval_copy25,$ori_pos$byval_copy26,$199,$202,$203);
   $212 = $0;
   $213 = $1;
   $214 = $3;
   $215 = $5;
   ;HEAP32[$pos$byval_copy27>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy27+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy27+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy28>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy28+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy28+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _iquanti_coeffOnepart_chroma($212,$pos$byval_copy27,$ori_pos$byval_copy28,$213,$214,$215);
   $216 = $0;
   $217 = $1;
   $218 = $4;
   $219 = $5;
   ;HEAP32[$pos$byval_copy29>>2]=HEAP32[$pos>>2]|0;HEAP32[$pos$byval_copy29+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$pos$byval_copy29+8>>2]=HEAP32[$pos+8>>2]|0;
   ;HEAP32[$ori_pos$byval_copy30>>2]=HEAP32[$ori_pos>>2]|0;HEAP32[$ori_pos$byval_copy30+4>>2]=HEAP32[$ori_pos+4>>2]|0;HEAP32[$ori_pos$byval_copy30+8>>2]=HEAP32[$ori_pos+8>>2]|0;
   _iquanti_coeffOnepart_chroma($216,$pos$byval_copy29,$ori_pos$byval_copy30,$217,$218,$219);
   STACKTOP = sp;return;
  }
 }
}
function _decodeStartForPretype2_36Andfill($pretype,$size,$smooth,$shapeFlat1,$shapeEdge,$shapeFlat2,$context,$ctu,$pos) {
 $pretype = $pretype|0;
 $size = $size|0;
 $smooth = $smooth|0;
 $shapeFlat1 = $shapeFlat1|0;
 $shapeEdge = $shapeEdge|0;
 $shapeFlat2 = $shapeFlat2|0;
 $context = $context|0;
 $ctu = $ctu|0;
 $pos = $pos|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $block_idx = 0, $delta = 0, $i = 0, $insertNum = 0, $isTop = 0, $j = 0, $start = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $delta = sp + 48|0;
 $isTop = sp + 20|0;
 $insertNum = sp + 16|0;
 $0 = $pretype;
 $1 = $size;
 $2 = $smooth;
 $3 = $shapeFlat1;
 $4 = $shapeEdge;
 $5 = $shapeFlat2;
 $6 = $context;
 $7 = $ctu;
 $8 = $2;
 $9 = $8&255;
 $10 = ($9|0)==(0);
 if ($10) {
  STACKTOP = sp;return;
 }
 $11 = $1;
 $12 = $6;
 $13 = (_decodeBorderStart($11,$12)|0);
 $start = $13;
 $14 = HEAP32[8744>>2]|0;
 $15 = ($14|0)!=(0);
 if ($15) {
  $16 = $start;
  $17 = $16 << 24 >> 24;
  HEAP32[$vararg_buffer>>2] = $17;
  (_printf(382098,$vararg_buffer)|0);
 }
 dest=$delta; stop=dest+128|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 HEAP32[$isTop>>2] = 0;
 HEAP32[$insertNum>>2] = 0;
 $18 = $0;
 $19 = $18&255;
 $20 = $1;
 _AngleToDelta($19,$20,$delta,$isTop,$insertNum);
 $21 = HEAP32[$isTop>>2]|0;
 $22 = ($21|0)!=(0);
 $23 = $start;
 $24 = $23 << 24 >> 24;
 $25 = $1;
 $26 = HEAP32[$insertNum>>2]|0;
 $27 = $3;
 $28 = $4;
 $29 = $5;
 if ($22) {
  _getShapeFromDeltaTop($24,5,$25,$26,$delta,$27,$28,$29);
 } else {
  _getShapeFromDeltaLeft($24,5,$25,$26,$delta,$27,$28,$29);
 }
 $i = 0;
 while(1) {
  $30 = $i;
  $31 = ((($pos)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = (($32|0) / 4)&-1;
  $34 = ($30|0)<($33|0);
  if (!($34)) {
   break;
  }
  $j = 0;
  while(1) {
   $35 = $j;
   $36 = ((($pos)) + 8|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($37|0) / 4)&-1;
   $39 = ($35|0)<($38|0);
   if (!($39)) {
    break;
   }
   $40 = HEAP32[$pos>>2]|0;
   $41 = (($40|0) / 4)&-1;
   $42 = $i;
   $43 = (($41) + ($42))|0;
   $44 = $43<<4;
   $45 = ((($pos)) + 4|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = (($46|0) / 4)&-1;
   $48 = $j;
   $49 = (($47) + ($48))|0;
   $50 = (($44) + ($49))|0;
   $block_idx = $50;
   $51 = $start;
   $52 = $block_idx;
   $53 = $7;
   $54 = ((($53)) + 180|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (($55) + ($52)|0);
   HEAP8[$56>>0] = $51;
   $57 = $j;
   $58 = (($57) + 1)|0;
   $j = $58;
  }
  $59 = $i;
  $60 = (($59) + 1)|0;
  $i = $60;
 }
 STACKTOP = sp;return;
}
function _hasBorder_chroma722($block_x,$block_y,$size,$ori_size,$shapeEdge) {
 $block_x = $block_x|0;
 $block_y = $block_y|0;
 $size = $size|0;
 $ori_size = $ori_size|0;
 $shapeEdge = $shapeEdge|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $hasBorder_chroma = 0, $i = 0, $idx = 0, $j = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $block_x;
 $1 = $block_y;
 $2 = $size;
 $3 = $ori_size;
 $4 = $shapeEdge;
 $hasBorder_chroma = 0;
 $5 = $0;
 $i = $5;
 while(1) {
  $6 = $i;
  $7 = $0;
  $8 = $2;
  $9 = (($7) + ($8))|0;
  $10 = ($6|0)<($9|0);
  if (!($10)) {
   label = 10;
   break;
  }
  $11 = $1;
  $j = $11;
  while(1) {
   $12 = $j;
   $13 = $1;
   $14 = $2;
   $15 = (($13) + ($14))|0;
   $16 = ($12|0)<($15|0);
   if (!($16)) {
    break;
   }
   $17 = $i;
   $18 = $3;
   $19 = Math_imul($17, $18)|0;
   $20 = $j;
   $21 = (($19) + ($20))|0;
   $idx = $21;
   $22 = $idx;
   $23 = $4;
   $24 = (($23) + ($22<<2)|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)!=(0);
   if ($26) {
    label = 6;
    break;
   }
   $27 = $j;
   $28 = (($27) + 2)|0;
   $j = $28;
  }
  if ((label|0) == 6) {
   label = 0;
   $hasBorder_chroma = 1;
  }
  $29 = $hasBorder_chroma;
  $30 = ($29|0)!=(0);
  if ($30) {
   label = 10;
   break;
  }
  $31 = $i;
  $32 = (($31) + 2)|0;
  $i = $32;
 }
 if ((label|0) == 10) {
  $33 = $hasBorder_chroma;
  STACKTOP = sp;return ($33|0);
 }
 return (0)|0;
}
function _iquantiAndIdctForCoeffNxN_chroma($ctu,$pos,$context,$trans_depth,$pretype) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 $trans_depth = $trans_depth|0;
 $pretype = $pretype|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0.0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0, $133 = 0.0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0.0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $diff_cb = 0, $diff_cr = 0, $i = 0, $i1 = 0, $i10 = 0, $i4 = 0, $i7 = 0, $idx = 0;
 var $idx12 = 0, $idx3 = 0, $idx6 = 0, $idx9 = 0, $j = 0, $j11 = 0, $j2 = 0, $j5 = 0, $j8 = 0, $temp_cb = 0, $temp_cr = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer17 = 0, $vararg_buffer20 = 0, $vararg_buffer22 = 0, $vararg_buffer24 = 0, $vararg_buffer27 = 0;
 var $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer27 = sp + 96|0;
 $vararg_buffer24 = sp + 88|0;
 $vararg_buffer22 = sp + 80|0;
 $vararg_buffer20 = sp + 72|0;
 $vararg_buffer17 = sp + 64|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer10 = sp + 40|0;
 $vararg_buffer7 = sp + 32|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $diff_cb = sp + 12448|0;
 $diff_cr = sp + 8352|0;
 $temp_cb = sp + 4232|0;
 $temp_cr = sp + 136|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $trans_depth;
 $3 = $pretype;
 _memset(($diff_cb|0),0,4096)|0;
 _memset(($diff_cr|0),0,4096)|0;
 $4 = ((($pos)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5|0) / 2)&-1;
 $7 = $3;
 $8 = $7&255;
 $9 = $1;
 $10 = $2;
 _decodeCoeffNxN($6,$8,$diff_cb,$9,1,$10);
 $11 = ((($pos)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12|0) / 2)&-1;
 $14 = $3;
 $15 = $14&255;
 $16 = $1;
 $17 = $2;
 _decodeCoeffNxN($13,$15,$diff_cr,$16,1,$17);
 $18 = HEAP32[8744>>2]|0;
 $19 = ($18|0)!=(0);
 L1: do {
  if ($19) {
   (_printf(382280,$vararg_buffer)|0);
   $i = 0;
   while(1) {
    $20 = $i;
    $21 = ((($pos)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (($22|0) / 2)&-1;
    $24 = ($20|0)<($23|0);
    if (!($24)) {
     break;
    }
    $j = 0;
    while(1) {
     $25 = $j;
     $26 = ((($pos)) + 8|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (($27|0) / 2)&-1;
     $29 = ($25|0)<($28|0);
     if (!($29)) {
      break;
     }
     $30 = $i;
     $31 = ((($pos)) + 8|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = Math_imul($30, $32)|0;
     $34 = (($33|0) / 2)&-1;
     $35 = $j;
     $36 = (($34) + ($35))|0;
     $idx = $36;
     $37 = $idx;
     $38 = (($diff_cb) + ($37<<2)|0);
     $39 = HEAP32[$38>>2]|0;
     HEAP32[$vararg_buffer1>>2] = $39;
     (_printf(382302,$vararg_buffer1)|0);
     $40 = $j;
     $41 = (($40) + 1)|0;
     $j = $41;
    }
    (_printf(382820,$vararg_buffer3)|0);
    $42 = $i;
    $43 = (($42) + 1)|0;
    $i = $43;
   }
   (_printf(382820,$vararg_buffer5)|0);
   $i1 = 0;
   while(1) {
    $44 = $i1;
    $45 = ((($pos)) + 8|0);
    $46 = HEAP32[$45>>2]|0;
    $47 = (($46|0) / 2)&-1;
    $48 = ($44|0)<($47|0);
    if (!($48)) {
     break L1;
    }
    $j2 = 0;
    while(1) {
     $49 = $j2;
     $50 = ((($pos)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = (($51|0) / 2)&-1;
     $53 = ($49|0)<($52|0);
     if (!($53)) {
      break;
     }
     $54 = $i1;
     $55 = ((($pos)) + 8|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = Math_imul($54, $56)|0;
     $58 = (($57|0) / 2)&-1;
     $59 = $j2;
     $60 = (($58) + ($59))|0;
     $idx3 = $60;
     $61 = $idx3;
     $62 = (($diff_cr) + ($61<<2)|0);
     $63 = HEAP32[$62>>2]|0;
     HEAP32[$vararg_buffer7>>2] = $63;
     (_printf(382302,$vararg_buffer7)|0);
     $64 = $j2;
     $65 = (($64) + 1)|0;
     $j2 = $65;
    }
    (_printf(382820,$vararg_buffer10)|0);
    $66 = $i1;
    $67 = (($66) + 1)|0;
    $i1 = $67;
   }
  }
 } while(0);
 _memset(($temp_cb|0),0,4096)|0;
 _memset(($temp_cr|0),0,4096)|0;
 $68 = ((($pos)) + 8|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = (($69|0) / 2)&-1;
 $71 = $1;
 _iquanti_idct_regular($70,$diff_cb,$temp_cb,$71,1);
 $72 = ((($pos)) + 8|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = (($73|0) / 2)&-1;
 $75 = $1;
 _iquanti_idct_regular($74,$diff_cr,$temp_cr,$75,1);
 $76 = HEAP32[600>>2]|0;
 $77 = ($76|0)!=(0);
 L19: do {
  if ($77) {
   $78 = HEAP32[604>>2]|0;
   $79 = HEAP32[$pos>>2]|0;
   $80 = ((($pos)) + 4|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = ((($pos)) + 8|0);
   $83 = HEAP32[$82>>2]|0;
   HEAP32[$vararg_buffer12>>2] = $79;
   $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
   HEAP32[$vararg_ptr15>>2] = $81;
   $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
   HEAP32[$vararg_ptr16>>2] = $83;
   (_fprintf($78,382342,$vararg_buffer12)|0);
   $i4 = 0;
   while(1) {
    $84 = $i4;
    $85 = ((($pos)) + 8|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (($86|0) / 2)&-1;
    $88 = ($84|0)<($87|0);
    if (!($88)) {
     break;
    }
    $j5 = 0;
    while(1) {
     $89 = $j5;
     $90 = ((($pos)) + 8|0);
     $91 = HEAP32[$90>>2]|0;
     $92 = (($91|0) / 2)&-1;
     $93 = ($89|0)<($92|0);
     if (!($93)) {
      break;
     }
     $94 = $i4;
     $95 = ((($pos)) + 8|0);
     $96 = HEAP32[$95>>2]|0;
     $97 = Math_imul($94, $96)|0;
     $98 = (($97|0) / 2)&-1;
     $99 = $j5;
     $100 = (($98) + ($99))|0;
     $idx6 = $100;
     $101 = HEAP32[604>>2]|0;
     $102 = $idx6;
     $103 = (($temp_cb) + ($102<<2)|0);
     $104 = +HEAPF32[$103>>2];
     $105 = $104;
     HEAPF64[$vararg_buffer17>>3] = $105;
     (_fprintf($101,382214,$vararg_buffer17)|0);
     $106 = $j5;
     $107 = (($106) + 1)|0;
     $j5 = $107;
    }
    $108 = HEAP32[604>>2]|0;
    (_fprintf($108,382820,$vararg_buffer20)|0);
    $109 = $i4;
    $110 = (($109) + 1)|0;
    $i4 = $110;
   }
   $111 = HEAP32[604>>2]|0;
   (_fprintf($111,382820,$vararg_buffer22)|0);
   $i7 = 0;
   while(1) {
    $112 = $i7;
    $113 = ((($pos)) + 8|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = (($114|0) / 2)&-1;
    $116 = ($112|0)<($115|0);
    if (!($116)) {
     break L19;
    }
    $j8 = 0;
    while(1) {
     $117 = $j8;
     $118 = ((($pos)) + 8|0);
     $119 = HEAP32[$118>>2]|0;
     $120 = (($119|0) / 2)&-1;
     $121 = ($117|0)<($120|0);
     if (!($121)) {
      break;
     }
     $122 = $i7;
     $123 = ((($pos)) + 8|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = Math_imul($122, $124)|0;
     $126 = (($125|0) / 2)&-1;
     $127 = $j8;
     $128 = (($126) + ($127))|0;
     $idx9 = $128;
     $129 = HEAP32[604>>2]|0;
     $130 = $idx9;
     $131 = (($temp_cr) + ($130<<2)|0);
     $132 = +HEAPF32[$131>>2];
     $133 = $132;
     HEAPF64[$vararg_buffer24>>3] = $133;
     (_fprintf($129,382214,$vararg_buffer24)|0);
     $134 = $j8;
     $135 = (($134) + 1)|0;
     $j8 = $135;
    }
    $136 = HEAP32[604>>2]|0;
    (_fprintf($136,382820,$vararg_buffer27)|0);
    $137 = $i7;
    $138 = (($137) + 1)|0;
    $i7 = $138;
   }
  }
 } while(0);
 $i10 = 0;
 while(1) {
  $139 = $i10;
  $140 = ((($pos)) + 8|0);
  $141 = HEAP32[$140>>2]|0;
  $142 = (($141|0) / 2)&-1;
  $143 = ($139|0)<($142|0);
  if (!($143)) {
   break;
  }
  $j11 = 0;
  while(1) {
   $144 = $j11;
   $145 = ((($pos)) + 8|0);
   $146 = HEAP32[$145>>2]|0;
   $147 = (($146|0) / 2)&-1;
   $148 = ($144|0)<($147|0);
   if (!($148)) {
    break;
   }
   $149 = HEAP32[$pos>>2]|0;
   $150 = (($149|0) / 2)&-1;
   $151 = $i10;
   $152 = (($150) + ($151))|0;
   $153 = $152<<5;
   $154 = ((($pos)) + 4|0);
   $155 = HEAP32[$154>>2]|0;
   $156 = (($155|0) / 2)&-1;
   $157 = $j11;
   $158 = (($156) + ($157))|0;
   $159 = (($153) + ($158))|0;
   $idx12 = $159;
   $160 = $i10;
   $161 = ((($pos)) + 8|0);
   $162 = HEAP32[$161>>2]|0;
   $163 = Math_imul($160, $162)|0;
   $164 = (($163|0) / 2)&-1;
   $165 = $j11;
   $166 = (($164) + ($165))|0;
   $167 = (($temp_cb) + ($166<<2)|0);
   $168 = +HEAPF32[$167>>2];
   $169 = $idx12;
   $170 = $0;
   $171 = ((($170)) + 96|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = (($172) + ($169<<2)|0);
   HEAPF32[$173>>2] = $168;
   $174 = $i10;
   $175 = ((($pos)) + 8|0);
   $176 = HEAP32[$175>>2]|0;
   $177 = Math_imul($174, $176)|0;
   $178 = (($177|0) / 2)&-1;
   $179 = $j11;
   $180 = (($178) + ($179))|0;
   $181 = (($temp_cr) + ($180<<2)|0);
   $182 = +HEAPF32[$181>>2];
   $183 = $idx12;
   $184 = $0;
   $185 = ((($184)) + 100|0);
   $186 = HEAP32[$185>>2]|0;
   $187 = (($186) + ($183<<2)|0);
   HEAPF32[$187>>2] = $182;
   $188 = $j11;
   $189 = (($188) + 1)|0;
   $j11 = $189;
  }
  $190 = $i10;
  $191 = (($190) + 1)|0;
  $i10 = $191;
 }
 STACKTOP = sp;return;
}
function _iquantiAndCoeffNxN_chroma($ctu,$pos,$context,$trans_depth,$pretype) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 $trans_depth = $trans_depth|0;
 $pretype = $pretype|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0.0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0.0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0;
 var $90 = 0.0, $91 = 0.0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0, $diff_cb = 0, $diff_cr = 0, $i = 0, $i1 = 0, $i11 = 0, $i4 = 0, $i5 = 0, $i8 = 0, $idx = 0, $idx10 = 0;
 var $idx13 = 0, $idx3 = 0, $idx7 = 0, $j = 0, $j12 = 0, $j2 = 0, $j6 = 0, $j9 = 0, $temp_cb = 0, $temp_cr = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer17 = 0, $vararg_buffer20 = 0, $vararg_buffer22 = 0, $vararg_buffer24 = 0, $vararg_buffer27 = 0, $vararg_buffer3 = 0;
 var $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16576|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer27 = sp + 96|0;
 $vararg_buffer24 = sp + 88|0;
 $vararg_buffer22 = sp + 80|0;
 $vararg_buffer20 = sp + 72|0;
 $vararg_buffer17 = sp + 64|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer10 = sp + 40|0;
 $vararg_buffer7 = sp + 32|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $diff_cb = sp + 12456|0;
 $diff_cr = sp + 8360|0;
 $temp_cb = sp + 4240|0;
 $temp_cr = sp + 144|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $trans_depth;
 $3 = $pretype;
 _memset(($diff_cb|0),0,4096)|0;
 _memset(($diff_cr|0),0,4096)|0;
 $4 = ((($pos)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5|0) / 2)&-1;
 $7 = $3;
 $8 = $7&255;
 $9 = $1;
 $10 = $2;
 _decodeCoeffNxN($6,$8,$diff_cb,$9,1,$10);
 $11 = ((($pos)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12|0) / 2)&-1;
 $14 = $3;
 $15 = $14&255;
 $16 = $1;
 $17 = $2;
 _decodeCoeffNxN($13,$15,$diff_cr,$16,1,$17);
 $18 = HEAP32[8744>>2]|0;
 $19 = ($18|0)!=(0);
 L1: do {
  if ($19) {
   (_printf(382280,$vararg_buffer)|0);
   $i = 0;
   while(1) {
    $20 = $i;
    $21 = ((($pos)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (($22|0) / 2)&-1;
    $24 = ($20|0)<($23|0);
    if (!($24)) {
     break;
    }
    $j = 0;
    while(1) {
     $25 = $j;
     $26 = ((($pos)) + 8|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (($27|0) / 2)&-1;
     $29 = ($25|0)<($28|0);
     if (!($29)) {
      break;
     }
     $30 = $i;
     $31 = ((($pos)) + 8|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = Math_imul($30, $32)|0;
     $34 = (($33|0) / 2)&-1;
     $35 = $j;
     $36 = (($34) + ($35))|0;
     $idx = $36;
     $37 = $idx;
     $38 = (($diff_cb) + ($37<<2)|0);
     $39 = HEAP32[$38>>2]|0;
     HEAP32[$vararg_buffer1>>2] = $39;
     (_printf(382302,$vararg_buffer1)|0);
     $40 = $j;
     $41 = (($40) + 1)|0;
     $j = $41;
    }
    (_printf(382820,$vararg_buffer3)|0);
    $42 = $i;
    $43 = (($42) + 1)|0;
    $i = $43;
   }
   (_printf(382820,$vararg_buffer5)|0);
   $i1 = 0;
   while(1) {
    $44 = $i1;
    $45 = ((($pos)) + 8|0);
    $46 = HEAP32[$45>>2]|0;
    $47 = (($46|0) / 2)&-1;
    $48 = ($44|0)<($47|0);
    if (!($48)) {
     break L1;
    }
    $j2 = 0;
    while(1) {
     $49 = $j2;
     $50 = ((($pos)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = (($51|0) / 2)&-1;
     $53 = ($49|0)<($52|0);
     if (!($53)) {
      break;
     }
     $54 = $i1;
     $55 = ((($pos)) + 8|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = Math_imul($54, $56)|0;
     $58 = (($57|0) / 2)&-1;
     $59 = $j2;
     $60 = (($58) + ($59))|0;
     $idx3 = $60;
     $61 = $idx3;
     $62 = (($diff_cr) + ($61<<2)|0);
     $63 = HEAP32[$62>>2]|0;
     HEAP32[$vararg_buffer7>>2] = $63;
     (_printf(382302,$vararg_buffer7)|0);
     $64 = $j2;
     $65 = (($64) + 1)|0;
     $j2 = $65;
    }
    (_printf(382820,$vararg_buffer10)|0);
    $66 = $i1;
    $67 = (($66) + 1)|0;
    $i1 = $67;
   }
  }
 } while(0);
 _memset(($temp_cb|0),0,4096)|0;
 _memset(($temp_cr|0),0,4096)|0;
 $i4 = 0;
 while(1) {
  $68 = $i4;
  $69 = ((($pos)) + 8|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = ((($pos)) + 8|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = Math_imul($70, $72)|0;
  $74 = (($73|0) / 4)&-1;
  $75 = ($68|0)<($74|0);
  if (!($75)) {
   break;
  }
  $76 = $i4;
  $77 = (($diff_cb) + ($76<<2)|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (+($78|0));
  $80 = $79 * 1.0;
  $81 = $1;
  $82 = ((($81)) + 16|0);
  $83 = ((($82)) + 20|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = $1;
  $86 = ((($85)) + 192|0);
  $87 = (($86) + ($84<<2)|0);
  $88 = +HEAPF32[$87>>2];
  $89 = $88;
  $90 = $80 * $89;
  $91 = $90;
  $92 = $i4;
  $93 = (($temp_cb) + ($92<<2)|0);
  HEAPF32[$93>>2] = $91;
  $94 = $i4;
  $95 = (($diff_cr) + ($94<<2)|0);
  $96 = HEAP32[$95>>2]|0;
  $97 = (+($96|0));
  $98 = $97 * 1.0;
  $99 = $1;
  $100 = ((($99)) + 16|0);
  $101 = ((($100)) + 20|0);
  $102 = HEAP32[$101>>2]|0;
  $103 = $1;
  $104 = ((($103)) + 192|0);
  $105 = (($104) + ($102<<2)|0);
  $106 = +HEAPF32[$105>>2];
  $107 = $106;
  $108 = $98 * $107;
  $109 = $108;
  $110 = $i4;
  $111 = (($temp_cr) + ($110<<2)|0);
  HEAPF32[$111>>2] = $109;
  $112 = $i4;
  $113 = (($112) + 1)|0;
  $i4 = $113;
 }
 $114 = HEAP32[600>>2]|0;
 $115 = ($114|0)!=(0);
 L23: do {
  if ($115) {
   $116 = HEAP32[604>>2]|0;
   $117 = HEAP32[$pos>>2]|0;
   $118 = ((($pos)) + 4|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($pos)) + 8|0);
   $121 = HEAP32[$120>>2]|0;
   HEAP32[$vararg_buffer12>>2] = $117;
   $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
   HEAP32[$vararg_ptr15>>2] = $119;
   $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
   HEAP32[$vararg_ptr16>>2] = $121;
   (_fprintf($116,382306,$vararg_buffer12)|0);
   $i5 = 0;
   while(1) {
    $122 = $i5;
    $123 = ((($pos)) + 8|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (($124|0) / 2)&-1;
    $126 = ($122|0)<($125|0);
    if (!($126)) {
     break;
    }
    $j6 = 0;
    while(1) {
     $127 = $j6;
     $128 = ((($pos)) + 8|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = (($129|0) / 2)&-1;
     $131 = ($127|0)<($130|0);
     if (!($131)) {
      break;
     }
     $132 = $i5;
     $133 = ((($pos)) + 8|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = Math_imul($132, $134)|0;
     $136 = (($135|0) / 2)&-1;
     $137 = $j6;
     $138 = (($136) + ($137))|0;
     $idx7 = $138;
     $139 = HEAP32[604>>2]|0;
     $140 = $idx7;
     $141 = (($temp_cb) + ($140<<2)|0);
     $142 = +HEAPF32[$141>>2];
     $143 = $142;
     HEAPF64[$vararg_buffer17>>3] = $143;
     (_fprintf($139,382214,$vararg_buffer17)|0);
     $144 = $j6;
     $145 = (($144) + 1)|0;
     $j6 = $145;
    }
    $146 = HEAP32[604>>2]|0;
    (_fprintf($146,382820,$vararg_buffer20)|0);
    $147 = $i5;
    $148 = (($147) + 1)|0;
    $i5 = $148;
   }
   $149 = HEAP32[604>>2]|0;
   (_fprintf($149,382820,$vararg_buffer22)|0);
   $i8 = 0;
   while(1) {
    $150 = $i8;
    $151 = ((($pos)) + 8|0);
    $152 = HEAP32[$151>>2]|0;
    $153 = (($152|0) / 2)&-1;
    $154 = ($150|0)<($153|0);
    if (!($154)) {
     break L23;
    }
    $j9 = 0;
    while(1) {
     $155 = $j9;
     $156 = ((($pos)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = (($157|0) / 2)&-1;
     $159 = ($155|0)<($158|0);
     if (!($159)) {
      break;
     }
     $160 = $i8;
     $161 = ((($pos)) + 8|0);
     $162 = HEAP32[$161>>2]|0;
     $163 = Math_imul($160, $162)|0;
     $164 = (($163|0) / 2)&-1;
     $165 = $j9;
     $166 = (($164) + ($165))|0;
     $idx10 = $166;
     $167 = HEAP32[604>>2]|0;
     $168 = $idx10;
     $169 = (($temp_cr) + ($168<<2)|0);
     $170 = +HEAPF32[$169>>2];
     $171 = $170;
     HEAPF64[$vararg_buffer24>>3] = $171;
     (_fprintf($167,382214,$vararg_buffer24)|0);
     $172 = $j9;
     $173 = (($172) + 1)|0;
     $j9 = $173;
    }
    $174 = HEAP32[604>>2]|0;
    (_fprintf($174,382820,$vararg_buffer27)|0);
    $175 = $i8;
    $176 = (($175) + 1)|0;
    $i8 = $176;
   }
  }
 } while(0);
 $i11 = 0;
 while(1) {
  $177 = $i11;
  $178 = ((($pos)) + 8|0);
  $179 = HEAP32[$178>>2]|0;
  $180 = (($179|0) / 2)&-1;
  $181 = ($177|0)<($180|0);
  if (!($181)) {
   break;
  }
  $j12 = 0;
  while(1) {
   $182 = $j12;
   $183 = ((($pos)) + 8|0);
   $184 = HEAP32[$183>>2]|0;
   $185 = (($184|0) / 2)&-1;
   $186 = ($182|0)<($185|0);
   if (!($186)) {
    break;
   }
   $187 = HEAP32[$pos>>2]|0;
   $188 = (($187|0) / 2)&-1;
   $189 = $i11;
   $190 = (($188) + ($189))|0;
   $191 = $190<<5;
   $192 = ((($pos)) + 4|0);
   $193 = HEAP32[$192>>2]|0;
   $194 = (($193|0) / 2)&-1;
   $195 = $j12;
   $196 = (($194) + ($195))|0;
   $197 = (($191) + ($196))|0;
   $idx13 = $197;
   $198 = $i11;
   $199 = ((($pos)) + 8|0);
   $200 = HEAP32[$199>>2]|0;
   $201 = Math_imul($198, $200)|0;
   $202 = (($201|0) / 2)&-1;
   $203 = $j12;
   $204 = (($202) + ($203))|0;
   $205 = (($temp_cb) + ($204<<2)|0);
   $206 = +HEAPF32[$205>>2];
   $207 = $idx13;
   $208 = $0;
   $209 = ((($208)) + 96|0);
   $210 = HEAP32[$209>>2]|0;
   $211 = (($210) + ($207<<2)|0);
   HEAPF32[$211>>2] = $206;
   $212 = $i11;
   $213 = ((($pos)) + 8|0);
   $214 = HEAP32[$213>>2]|0;
   $215 = Math_imul($212, $214)|0;
   $216 = (($215|0) / 2)&-1;
   $217 = $j12;
   $218 = (($216) + ($217))|0;
   $219 = (($temp_cr) + ($218<<2)|0);
   $220 = +HEAPF32[$219>>2];
   $221 = $idx13;
   $222 = $0;
   $223 = ((($222)) + 100|0);
   $224 = HEAP32[$223>>2]|0;
   $225 = (($224) + ($221<<2)|0);
   HEAPF32[$225>>2] = $220;
   $226 = $j12;
   $227 = (($226) + 1)|0;
   $j12 = $227;
  }
  $228 = $i11;
  $229 = (($228) + 1)|0;
  $i11 = $229;
 }
 STACKTOP = sp;return;
}
function _izigzag_iquanti_idct_coeffOnePart_chroma($ctu,$pos,$ori_pos,$context,$shape,$trans_depth) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $ori_pos = $ori_pos|0;
 $context = $context|0;
 $shape = $shape|0;
 $trans_depth = $trans_depth|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0.0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0, $cur_shape = 0, $diff_cb = 0, $diff_cr = 0, $i = 0, $i1 = 0, $i10 = 0;
 var $i4 = 0, $i7 = 0, $idx = 0, $idx12 = 0, $idx3 = 0, $idx6 = 0, $idx9 = 0, $j = 0, $j11 = 0, $j2 = 0, $j5 = 0, $j8 = 0, $len = 0, $temp_cb = 0, $temp_cr = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0;
 var $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 20640|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer17 = sp + 64|0;
 $vararg_buffer15 = sp + 56|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer10 = sp + 40|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $cur_shape = sp + 16520|0;
 $diff_cb = sp + 12408|0;
 $diff_cr = sp + 8312|0;
 $temp_cb = sp + 4216|0;
 $temp_cr = sp + 120|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $shape;
 $3 = $trans_depth;
 $len = 0;
 _memset(($cur_shape|0),0,4096)|0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = ((($pos)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($4|0)<($6|0);
  if (!($7)) {
   break;
  }
  $j = 0;
  while(1) {
   $8 = $j;
   $9 = ((($pos)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($8|0)<($10|0);
   if (!($11)) {
    break;
   }
   $12 = HEAP32[$pos>>2]|0;
   $13 = HEAP32[$ori_pos>>2]|0;
   $14 = (($12) - ($13))|0;
   $15 = $i;
   $16 = (($14) + ($15))|0;
   $17 = ((($ori_pos)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = Math_imul($16, $18)|0;
   $20 = ((($pos)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($ori_pos)) + 4|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (($21) - ($23))|0;
   $25 = $j;
   $26 = (($24) + ($25))|0;
   $27 = (($19) + ($26))|0;
   $idx = $27;
   $28 = $idx;
   $29 = $2;
   $30 = (($29) + ($28<<2)|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = $i;
   $33 = (($32|0) / 2)&-1;
   $34 = ((($pos)) + 8|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = Math_imul($33, $35)|0;
   $37 = (($36|0) / 2)&-1;
   $38 = $j;
   $39 = (($38|0) / 2)&-1;
   $40 = (($37) + ($39))|0;
   $41 = (($cur_shape) + ($40<<2)|0);
   HEAP32[$41>>2] = $31;
   $42 = $idx;
   $43 = $2;
   $44 = (($43) + ($42<<2)|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ($45|0)!=(0);
   if ($46) {
    $47 = $len;
    $48 = (($47) + 1)|0;
    $len = $48;
   }
   $49 = $j;
   $50 = (($49) + 2)|0;
   $j = $50;
  }
  $51 = $i;
  $52 = (($51) + 2)|0;
  $i = $52;
 }
 _memset(($diff_cb|0),0,4096)|0;
 _memset(($diff_cr|0),0,4096)|0;
 $53 = $len;
 $54 = $1;
 (_decodeCoeffResidual($53,$diff_cb,$54,1)|0);
 $55 = $len;
 $56 = $1;
 (_decodeCoeffResidual($55,$diff_cr,$56,1)|0);
 _memset(($temp_cb|0),0,4096)|0;
 _memset(($temp_cr|0),0,4096)|0;
 $57 = ((($pos)) + 8|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = (($58|0) / 2)&-1;
 $60 = $1;
 _izigzag_iqunati_idct_irregular($59,$cur_shape,$diff_cb,$temp_cb,$60);
 $61 = ((($pos)) + 8|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = (($62|0) / 2)&-1;
 $64 = $1;
 _izigzag_iqunati_idct_irregular($63,$cur_shape,$diff_cr,$temp_cr,$64);
 $65 = HEAP32[600>>2]|0;
 $66 = ($65|0)!=(0);
 L12: do {
  if ($66) {
   $67 = HEAP32[604>>2]|0;
   $68 = HEAP32[$pos>>2]|0;
   $69 = ((($pos)) + 4|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($pos)) + 8|0);
   $72 = HEAP32[$71>>2]|0;
   HEAP32[$vararg_buffer>>2] = $68;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $70;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $72;
   (_fprintf($67,382222,$vararg_buffer)|0);
   $i1 = 0;
   while(1) {
    $73 = $i1;
    $74 = ((($pos)) + 8|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = (($75|0) / 2)&-1;
    $77 = ($73|0)<($76|0);
    if (!($77)) {
     break;
    }
    $j2 = 0;
    while(1) {
     $78 = $j2;
     $79 = ((($pos)) + 8|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = (($80|0) / 2)&-1;
     $82 = ($78|0)<($81|0);
     if (!($82)) {
      break;
     }
     $83 = $i1;
     $84 = ((($pos)) + 8|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = Math_imul($83, $85)|0;
     $87 = (($86|0) / 2)&-1;
     $88 = $j2;
     $89 = (($87) + ($88))|0;
     $idx3 = $89;
     $90 = $idx3;
     $91 = (($cur_shape) + ($90<<2)|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = ($92|0)!=(0);
     $94 = HEAP32[604>>2]|0;
     if ($93) {
      $95 = $idx3;
      $96 = (($temp_cb) + ($95<<2)|0);
      $97 = +HEAPF32[$96>>2];
      $98 = $97;
      HEAPF64[$vararg_buffer3>>3] = $98;
      (_fprintf($94,382214,$vararg_buffer3)|0);
     } else {
      (_fprintf($94,382219,$vararg_buffer6)|0);
     }
     $99 = $j2;
     $100 = (($99) + 1)|0;
     $j2 = $100;
    }
    $101 = HEAP32[604>>2]|0;
    (_fprintf($101,382820,$vararg_buffer8)|0);
    $102 = $i1;
    $103 = (($102) + 1)|0;
    $i1 = $103;
   }
   $104 = HEAP32[604>>2]|0;
   (_fprintf($104,382820,$vararg_buffer10)|0);
   $i4 = 0;
   while(1) {
    $105 = $i4;
    $106 = ((($pos)) + 8|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (($107|0) / 2)&-1;
    $109 = ($105|0)<($108|0);
    if (!($109)) {
     break L12;
    }
    $j5 = 0;
    while(1) {
     $110 = $j5;
     $111 = ((($pos)) + 8|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = (($112|0) / 2)&-1;
     $114 = ($110|0)<($113|0);
     if (!($114)) {
      break;
     }
     $115 = $i4;
     $116 = ((($pos)) + 8|0);
     $117 = HEAP32[$116>>2]|0;
     $118 = Math_imul($115, $117)|0;
     $119 = (($118|0) / 2)&-1;
     $120 = $j5;
     $121 = (($119) + ($120))|0;
     $idx6 = $121;
     $122 = $idx6;
     $123 = (($cur_shape) + ($122<<2)|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ($124|0)!=(0);
     $126 = HEAP32[604>>2]|0;
     if ($125) {
      $127 = $idx6;
      $128 = (($temp_cr) + ($127<<2)|0);
      $129 = +HEAPF32[$128>>2];
      $130 = $129;
      HEAPF64[$vararg_buffer12>>3] = $130;
      (_fprintf($126,382214,$vararg_buffer12)|0);
     } else {
      (_fprintf($126,382219,$vararg_buffer15)|0);
     }
     $131 = $j5;
     $132 = (($131) + 1)|0;
     $j5 = $132;
    }
    $133 = HEAP32[604>>2]|0;
    (_fprintf($133,382820,$vararg_buffer17)|0);
    $134 = $i4;
    $135 = (($134) + 1)|0;
    $i4 = $135;
   }
  }
 } while(0);
 $i7 = 0;
 while(1) {
  $136 = $i7;
  $137 = ((($pos)) + 8|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (($138|0) / 2)&-1;
  $140 = ($136|0)<($139|0);
  if (!($140)) {
   break;
  }
  $j8 = 0;
  while(1) {
   $141 = $j8;
   $142 = ((($pos)) + 8|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = (($143|0) / 2)&-1;
   $145 = ($141|0)<($144|0);
   if (!($145)) {
    break;
   }
   $146 = HEAP32[$pos>>2]|0;
   $147 = (($146|0) / 2)&-1;
   $148 = $i7;
   $149 = (($147) + ($148))|0;
   $150 = $149<<5;
   $151 = ((($pos)) + 4|0);
   $152 = HEAP32[$151>>2]|0;
   $153 = (($152|0) / 2)&-1;
   $154 = $j8;
   $155 = (($153) + ($154))|0;
   $156 = (($150) + ($155))|0;
   $idx9 = $156;
   $157 = $i7;
   $158 = ((($pos)) + 8|0);
   $159 = HEAP32[$158>>2]|0;
   $160 = Math_imul($157, $159)|0;
   $161 = (($160|0) / 2)&-1;
   $162 = $j8;
   $163 = (($161) + ($162))|0;
   $164 = (($cur_shape) + ($163<<2)|0);
   $165 = HEAP32[$164>>2]|0;
   $166 = ($165|0)!=(0);
   if ($166) {
    $167 = $i7;
    $168 = ((($pos)) + 8|0);
    $169 = HEAP32[$168>>2]|0;
    $170 = Math_imul($167, $169)|0;
    $171 = (($170|0) / 2)&-1;
    $172 = $j8;
    $173 = (($171) + ($172))|0;
    $174 = (($temp_cb) + ($173<<2)|0);
    $175 = +HEAPF32[$174>>2];
    $176 = $idx9;
    $177 = $0;
    $178 = ((($177)) + 96|0);
    $179 = HEAP32[$178>>2]|0;
    $180 = (($179) + ($176<<2)|0);
    HEAPF32[$180>>2] = $175;
   }
   $181 = $j8;
   $182 = (($181) + 1)|0;
   $j8 = $182;
  }
  $183 = $i7;
  $184 = (($183) + 1)|0;
  $i7 = $184;
 }
 $i10 = 0;
 while(1) {
  $185 = $i10;
  $186 = ((($pos)) + 8|0);
  $187 = HEAP32[$186>>2]|0;
  $188 = (($187|0) / 2)&-1;
  $189 = ($185|0)<($188|0);
  if (!($189)) {
   break;
  }
  $j11 = 0;
  while(1) {
   $190 = $j11;
   $191 = ((($pos)) + 8|0);
   $192 = HEAP32[$191>>2]|0;
   $193 = (($192|0) / 2)&-1;
   $194 = ($190|0)<($193|0);
   if (!($194)) {
    break;
   }
   $195 = HEAP32[$pos>>2]|0;
   $196 = (($195|0) / 2)&-1;
   $197 = $i10;
   $198 = (($196) + ($197))|0;
   $199 = $198<<5;
   $200 = ((($pos)) + 4|0);
   $201 = HEAP32[$200>>2]|0;
   $202 = (($201|0) / 2)&-1;
   $203 = $j11;
   $204 = (($202) + ($203))|0;
   $205 = (($199) + ($204))|0;
   $idx12 = $205;
   $206 = $i10;
   $207 = ((($pos)) + 8|0);
   $208 = HEAP32[$207>>2]|0;
   $209 = Math_imul($206, $208)|0;
   $210 = (($209|0) / 2)&-1;
   $211 = $j11;
   $212 = (($210) + ($211))|0;
   $213 = (($cur_shape) + ($212<<2)|0);
   $214 = HEAP32[$213>>2]|0;
   $215 = ($214|0)!=(0);
   if ($215) {
    $216 = $i10;
    $217 = ((($pos)) + 8|0);
    $218 = HEAP32[$217>>2]|0;
    $219 = Math_imul($216, $218)|0;
    $220 = (($219|0) / 2)&-1;
    $221 = $j11;
    $222 = (($220) + ($221))|0;
    $223 = (($temp_cr) + ($222<<2)|0);
    $224 = +HEAPF32[$223>>2];
    $225 = $idx12;
    $226 = $0;
    $227 = ((($226)) + 100|0);
    $228 = HEAP32[$227>>2]|0;
    $229 = (($228) + ($225<<2)|0);
    HEAPF32[$229>>2] = $224;
   }
   $230 = $j11;
   $231 = (($230) + 1)|0;
   $j11 = $231;
  }
  $232 = $i10;
  $233 = (($232) + 1)|0;
  $i10 = $233;
 }
 STACKTOP = sp;return;
}
function _iquanti_coeffOnepart_chroma($ctu,$pos,$ori_pos,$context,$shape,$trans_depth) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $ori_pos = $ori_pos|0;
 $context = $context|0;
 $shape = $shape|0;
 $trans_depth = $trans_depth|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0.0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0.0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0.0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $curshape = 0, $diff_cb = 0, $diff_cr = 0, $i = 0, $i1 = 0, $i12 = 0, $i2 = 0, $i5 = 0, $i6 = 0, $i9 = 0, $idx = 0, $idx11 = 0, $idx14 = 0, $idx4 = 0, $idx8 = 0, $j = 0;
 var $j10 = 0, $j13 = 0, $j3 = 0, $j7 = 0, $len = 0, $pointer = 0, $t = 0, $temp_cb = 0, $temp_cr = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 20656|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer17 = sp + 64|0;
 $vararg_buffer15 = sp + 56|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer10 = sp + 40|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $curshape = sp + 16536|0;
 $diff_cb = sp + 12424|0;
 $temp_cb = sp + 8328|0;
 $diff_cr = sp + 4208|0;
 $temp_cr = sp + 112|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $shape;
 $3 = $trans_depth;
 $len = 0;
 _memset(($curshape|0),0,4096)|0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = ((($pos)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($4|0)<($6|0);
  if (!($7)) {
   break;
  }
  $j = 0;
  while(1) {
   $8 = $j;
   $9 = ((($pos)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($8|0)<($10|0);
   if (!($11)) {
    break;
   }
   $12 = HEAP32[$pos>>2]|0;
   $13 = HEAP32[$ori_pos>>2]|0;
   $14 = (($12) - ($13))|0;
   $15 = $i;
   $16 = (($14) + ($15))|0;
   $17 = ((($ori_pos)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = Math_imul($16, $18)|0;
   $20 = ((($pos)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($ori_pos)) + 4|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (($21) - ($23))|0;
   $25 = $j;
   $26 = (($24) + ($25))|0;
   $27 = (($19) + ($26))|0;
   $idx = $27;
   $28 = $idx;
   $29 = $2;
   $30 = (($29) + ($28<<2)|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = $i;
   $33 = (($32|0) / 2)&-1;
   $34 = ((($pos)) + 8|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = Math_imul($33, $35)|0;
   $37 = (($36|0) / 2)&-1;
   $38 = $j;
   $39 = (($38|0) / 2)&-1;
   $40 = (($37) + ($39))|0;
   $41 = (($curshape) + ($40<<2)|0);
   HEAP32[$41>>2] = $31;
   $42 = $idx;
   $43 = $2;
   $44 = (($43) + ($42<<2)|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ($45|0)!=(0);
   if ($46) {
    $47 = $len;
    $48 = (($47) + 1)|0;
    $len = $48;
   }
   $49 = $j;
   $50 = (($49) + 2)|0;
   $j = $50;
  }
  $51 = $i;
  $52 = (($51) + 2)|0;
  $i = $52;
 }
 _memset(($diff_cb|0),0,4096)|0;
 $53 = $len;
 $54 = $1;
 (_decodeCoeffResidual($53,$diff_cb,$54,1)|0);
 _memset(($temp_cb|0),0,4096)|0;
 $i1 = 0;
 while(1) {
  $55 = $i1;
  $56 = $len;
  $57 = ($55|0)<($56|0);
  if (!($57)) {
   break;
  }
  $58 = $i1;
  $59 = (($diff_cb) + ($58<<2)|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = (+($60|0));
  $62 = $61 * 1.0;
  $63 = $1;
  $64 = ((($63)) + 16|0);
  $65 = ((($64)) + 20|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = $1;
  $68 = ((($67)) + 192|0);
  $69 = (($68) + ($66<<2)|0);
  $70 = +HEAPF32[$69>>2];
  $71 = $70;
  $72 = $62 * $71;
  $73 = $72;
  $74 = $i1;
  $75 = (($temp_cb) + ($74<<2)|0);
  HEAPF32[$75>>2] = $73;
  $76 = $i1;
  $77 = (($76) + 1)|0;
  $i1 = $77;
 }
 $pointer = 0;
 $i2 = 0;
 while(1) {
  $78 = $i2;
  $79 = ((($pos)) + 8|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (($80|0) / 2)&-1;
  $82 = ($78|0)<($81|0);
  if (!($82)) {
   break;
  }
  $j3 = 0;
  while(1) {
   $83 = $j3;
   $84 = ((($pos)) + 8|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = (($85|0) / 2)&-1;
   $87 = ($83|0)<($86|0);
   if (!($87)) {
    break;
   }
   $88 = HEAP32[$pos>>2]|0;
   $89 = (($88|0) / 2)&-1;
   $90 = $i2;
   $91 = (($89) + ($90))|0;
   $92 = $91<<5;
   $93 = ((($pos)) + 4|0);
   $94 = HEAP32[$93>>2]|0;
   $95 = (($94|0) / 2)&-1;
   $96 = $j3;
   $97 = (($95) + ($96))|0;
   $98 = (($92) + ($97))|0;
   $idx4 = $98;
   $99 = $i2;
   $100 = ((($pos)) + 8|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = Math_imul($99, $101)|0;
   $103 = (($102|0) / 2)&-1;
   $104 = $j3;
   $105 = (($103) + ($104))|0;
   $106 = (($curshape) + ($105<<2)|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = ($107|0)!=(0);
   if ($108) {
    $109 = $pointer;
    $110 = (($109) + 1)|0;
    $pointer = $110;
    $111 = (($temp_cb) + ($109<<2)|0);
    $112 = +HEAPF32[$111>>2];
    $113 = $idx4;
    $114 = $0;
    $115 = ((($114)) + 96|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = (($116) + ($113<<2)|0);
    HEAPF32[$117>>2] = $112;
   }
   $118 = $j3;
   $119 = (($118) + 1)|0;
   $j3 = $119;
  }
  $120 = $i2;
  $121 = (($120) + 1)|0;
  $i2 = $121;
 }
 _memset(($diff_cr|0),0,4096)|0;
 $122 = $len;
 $123 = $1;
 (_decodeCoeffResidual($122,$diff_cr,$123,1)|0);
 _memset(($temp_cr|0),0,4096)|0;
 $i5 = 0;
 while(1) {
  $124 = $i5;
  $125 = $len;
  $126 = ($124|0)<($125|0);
  if (!($126)) {
   break;
  }
  $127 = $i5;
  $128 = (($diff_cr) + ($127<<2)|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = (+($129|0));
  $131 = $130 * 1.0;
  $132 = $1;
  $133 = ((($132)) + 16|0);
  $134 = ((($133)) + 20|0);
  $135 = HEAP32[$134>>2]|0;
  $136 = $1;
  $137 = ((($136)) + 192|0);
  $138 = (($137) + ($135<<2)|0);
  $139 = +HEAPF32[$138>>2];
  $140 = $139;
  $141 = $131 * $140;
  $142 = $141;
  $143 = $i5;
  $144 = (($temp_cr) + ($143<<2)|0);
  HEAPF32[$144>>2] = $142;
  $145 = $i5;
  $146 = (($145) + 1)|0;
  $i5 = $146;
 }
 $147 = HEAP32[600>>2]|0;
 $148 = ($147|0)!=(0);
 L31: do {
  if ($148) {
   $149 = HEAP32[604>>2]|0;
   $150 = HEAP32[$pos>>2]|0;
   $151 = ((($pos)) + 4|0);
   $152 = HEAP32[$151>>2]|0;
   $153 = ((($pos)) + 8|0);
   $154 = HEAP32[$153>>2]|0;
   HEAP32[$vararg_buffer>>2] = $150;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $152;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $154;
   (_fprintf($149,382169,$vararg_buffer)|0);
   $t = 0;
   $i6 = 0;
   while(1) {
    $155 = $i6;
    $156 = ((($pos)) + 8|0);
    $157 = HEAP32[$156>>2]|0;
    $158 = (($157|0) / 2)&-1;
    $159 = ($155|0)<($158|0);
    if (!($159)) {
     break;
    }
    $j7 = 0;
    while(1) {
     $160 = $j7;
     $161 = ((($pos)) + 8|0);
     $162 = HEAP32[$161>>2]|0;
     $163 = (($162|0) / 2)&-1;
     $164 = ($160|0)<($163|0);
     if (!($164)) {
      break;
     }
     $165 = $i6;
     $166 = ((($pos)) + 8|0);
     $167 = HEAP32[$166>>2]|0;
     $168 = Math_imul($165, $167)|0;
     $169 = (($168|0) / 2)&-1;
     $170 = $j7;
     $171 = (($169) + ($170))|0;
     $idx8 = $171;
     $172 = $idx8;
     $173 = (($curshape) + ($172<<2)|0);
     $174 = HEAP32[$173>>2]|0;
     $175 = ($174|0)!=(0);
     $176 = HEAP32[604>>2]|0;
     if ($175) {
      $177 = $t;
      $178 = (($177) + 1)|0;
      $t = $178;
      $179 = (($temp_cb) + ($177<<2)|0);
      $180 = +HEAPF32[$179>>2];
      $181 = $180;
      HEAPF64[$vararg_buffer3>>3] = $181;
      (_fprintf($176,382214,$vararg_buffer3)|0);
     } else {
      (_fprintf($176,382219,$vararg_buffer6)|0);
     }
     $182 = $j7;
     $183 = (($182) + 1)|0;
     $j7 = $183;
    }
    $184 = HEAP32[604>>2]|0;
    (_fprintf($184,382820,$vararg_buffer8)|0);
    $185 = $i6;
    $186 = (($185) + 1)|0;
    $i6 = $186;
   }
   $187 = HEAP32[604>>2]|0;
   (_fprintf($187,382820,$vararg_buffer10)|0);
   $t = 0;
   $i9 = 0;
   while(1) {
    $188 = $i9;
    $189 = ((($pos)) + 8|0);
    $190 = HEAP32[$189>>2]|0;
    $191 = (($190|0) / 2)&-1;
    $192 = ($188|0)<($191|0);
    if (!($192)) {
     break L31;
    }
    $j10 = 0;
    while(1) {
     $193 = $j10;
     $194 = ((($pos)) + 8|0);
     $195 = HEAP32[$194>>2]|0;
     $196 = (($195|0) / 2)&-1;
     $197 = ($193|0)<($196|0);
     if (!($197)) {
      break;
     }
     $198 = $i9;
     $199 = ((($pos)) + 8|0);
     $200 = HEAP32[$199>>2]|0;
     $201 = Math_imul($198, $200)|0;
     $202 = (($201|0) / 2)&-1;
     $203 = $j10;
     $204 = (($202) + ($203))|0;
     $idx11 = $204;
     $205 = $idx11;
     $206 = (($curshape) + ($205<<2)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)!=(0);
     $209 = HEAP32[604>>2]|0;
     if ($208) {
      $210 = $t;
      $211 = (($210) + 1)|0;
      $t = $211;
      $212 = (($temp_cr) + ($210<<2)|0);
      $213 = +HEAPF32[$212>>2];
      $214 = $213;
      HEAPF64[$vararg_buffer12>>3] = $214;
      (_fprintf($209,382214,$vararg_buffer12)|0);
     } else {
      (_fprintf($209,382219,$vararg_buffer15)|0);
     }
     $215 = $j10;
     $216 = (($215) + 1)|0;
     $j10 = $216;
    }
    $217 = HEAP32[604>>2]|0;
    (_fprintf($217,382820,$vararg_buffer17)|0);
    $218 = $i9;
    $219 = (($218) + 1)|0;
    $i9 = $219;
   }
  }
 } while(0);
 $pointer = 0;
 $i12 = 0;
 while(1) {
  $220 = $i12;
  $221 = ((($pos)) + 8|0);
  $222 = HEAP32[$221>>2]|0;
  $223 = (($222|0) / 2)&-1;
  $224 = ($220|0)<($223|0);
  if (!($224)) {
   break;
  }
  $j13 = 0;
  while(1) {
   $225 = $j13;
   $226 = ((($pos)) + 8|0);
   $227 = HEAP32[$226>>2]|0;
   $228 = (($227|0) / 2)&-1;
   $229 = ($225|0)<($228|0);
   if (!($229)) {
    break;
   }
   $230 = HEAP32[$pos>>2]|0;
   $231 = (($230|0) / 2)&-1;
   $232 = $i12;
   $233 = (($231) + ($232))|0;
   $234 = $233<<5;
   $235 = ((($pos)) + 4|0);
   $236 = HEAP32[$235>>2]|0;
   $237 = (($236|0) / 2)&-1;
   $238 = $j13;
   $239 = (($237) + ($238))|0;
   $240 = (($234) + ($239))|0;
   $idx14 = $240;
   $241 = $i12;
   $242 = ((($pos)) + 8|0);
   $243 = HEAP32[$242>>2]|0;
   $244 = Math_imul($241, $243)|0;
   $245 = (($244|0) / 2)&-1;
   $246 = $j13;
   $247 = (($245) + ($246))|0;
   $248 = (($curshape) + ($247<<2)|0);
   $249 = HEAP32[$248>>2]|0;
   $250 = ($249|0)!=(0);
   if ($250) {
    $251 = $pointer;
    $252 = (($251) + 1)|0;
    $pointer = $252;
    $253 = (($temp_cr) + ($251<<2)|0);
    $254 = +HEAPF32[$253>>2];
    $255 = $idx14;
    $256 = $0;
    $257 = ((($256)) + 100|0);
    $258 = HEAP32[$257>>2]|0;
    $259 = (($258) + ($255<<2)|0);
    HEAPF32[$259>>2] = $254;
   }
   $260 = $j13;
   $261 = (($260) + 1)|0;
   $j13 = $261;
  }
  $262 = $i12;
  $263 = (($262) + 1)|0;
  $i12 = $263;
 }
 STACKTOP = sp;return;
}
function _hasBorder735($block_x,$block_y,$size,$ori_size,$shapeEdge) {
 $block_x = $block_x|0;
 $block_y = $block_y|0;
 $size = $size|0;
 $ori_size = $ori_size|0;
 $shapeEdge = $shapeEdge|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $hasBorder = 0, $i = 0, $idx = 0, $j = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $block_x;
 $1 = $block_y;
 $2 = $size;
 $3 = $ori_size;
 $4 = $shapeEdge;
 $hasBorder = 0;
 $5 = $0;
 $i = $5;
 while(1) {
  $6 = $i;
  $7 = $0;
  $8 = $2;
  $9 = (($7) + ($8))|0;
  $10 = ($6|0)<($9|0);
  if (!($10)) {
   label = 10;
   break;
  }
  $11 = $1;
  $j = $11;
  while(1) {
   $12 = $j;
   $13 = $1;
   $14 = $2;
   $15 = (($13) + ($14))|0;
   $16 = ($12|0)<($15|0);
   if (!($16)) {
    break;
   }
   $17 = $i;
   $18 = $3;
   $19 = Math_imul($17, $18)|0;
   $20 = $j;
   $21 = (($19) + ($20))|0;
   $idx = $21;
   $22 = $idx;
   $23 = $4;
   $24 = (($23) + ($22<<2)|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)!=(0);
   if ($26) {
    label = 6;
    break;
   }
   $27 = $j;
   $28 = (($27) + 1)|0;
   $j = $28;
  }
  if ((label|0) == 6) {
   label = 0;
   $hasBorder = 1;
  }
  $29 = $hasBorder;
  $30 = ($29|0)!=(0);
  if ($30) {
   label = 10;
   break;
  }
  $31 = $i;
  $32 = (($31) + 1)|0;
  $i = $32;
 }
 if ((label|0) == 10) {
  $33 = $hasBorder;
  STACKTOP = sp;return ($33|0);
 }
 return (0)|0;
}
function _iquantiAndIdctAndFillCoeffNxN($ctu,$pos,$context,$trans_depth,$pretype) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 $trans_depth = $trans_depth|0;
 $pretype = $pretype|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0.0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $diff = 0, $i = 0, $i1 = 0, $i3 = 0, $i5 = 0, $idx = 0, $j = 0, $j2 = 0, $j4 = 0, $j6 = 0, $res = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer12 = 0, $vararg_buffer14 = 0, $vararg_buffer16 = 0, $vararg_buffer21 = 0, $vararg_buffer24 = 0;
 var $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, $vararg_ptr19 = 0, $vararg_ptr20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer24 = sp + 88|0;
 $vararg_buffer21 = sp + 80|0;
 $vararg_buffer16 = sp + 64|0;
 $vararg_buffer14 = sp + 56|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer9 = sp + 40|0;
 $vararg_buffer7 = sp + 32|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $diff = sp + 16512|0;
 $res = sp + 120|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $trans_depth;
 $3 = $pretype;
 _memset(($diff|0),0,16384)|0;
 $4 = ((($pos)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = $6&255;
 $8 = $1;
 $9 = $2;
 _decodeCoeffNxN($5,$7,$diff,$8,0,$9);
 $10 = HEAP32[8744>>2]|0;
 $11 = ($10|0)!=(0);
 if ($11) {
  (_printf(382454,$vararg_buffer)|0);
  $i = 0;
  while(1) {
   $12 = $i;
   $13 = ((($pos)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($12|0)<($14|0);
   if (!($15)) {
    break;
   }
   $j = 0;
   while(1) {
    $16 = $j;
    $17 = ((($pos)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)<($18|0);
    if (!($19)) {
     break;
    }
    $20 = $i;
    $21 = ((($pos)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = Math_imul($20, $22)|0;
    $24 = $j;
    $25 = (($23) + ($24))|0;
    $26 = (($diff) + ($25<<2)|0);
    $27 = HEAP32[$26>>2]|0;
    HEAP32[$vararg_buffer1>>2] = $27;
    (_printf(382302,$vararg_buffer1)|0);
    $28 = $j;
    $29 = (($28) + 1)|0;
    $j = $29;
   }
   (_printf(382820,$vararg_buffer3)|0);
   $30 = $i;
   $31 = (($30) + 1)|0;
   $i = $31;
  }
  (_printf(382820,$vararg_buffer5)|0);
 }
 _memset(($res|0),0,16384)|0;
 $32 = ((($pos)) + 8|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = $1;
 _iquanti_idct_regular($33,$diff,$res,$34,0);
 $35 = HEAP32[8744>>2]|0;
 $36 = ($35|0)!=(0);
 if ($36) {
  (_printf(382649,$vararg_buffer7)|0);
  $i1 = 0;
  while(1) {
   $37 = $i1;
   $38 = ((($pos)) + 8|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ($37|0)<($39|0);
   if (!($40)) {
    break;
   }
   $j2 = 0;
   while(1) {
    $41 = $j2;
    $42 = ((($pos)) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = ($41|0)<($43|0);
    if (!($44)) {
     break;
    }
    $45 = $i1;
    $46 = ((($pos)) + 8|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = Math_imul($45, $47)|0;
    $49 = $j2;
    $50 = (($48) + ($49))|0;
    $51 = (($res) + ($50<<2)|0);
    $52 = +HEAPF32[$51>>2];
    $53 = $52;
    HEAPF64[$vararg_buffer9>>3] = $53;
    (_printf(382214,$vararg_buffer9)|0);
    $54 = $j2;
    $55 = (($54) + 1)|0;
    $j2 = $55;
   }
   (_printf(382820,$vararg_buffer12)|0);
   $56 = $i1;
   $57 = (($56) + 1)|0;
   $i1 = $57;
  }
  (_printf(382820,$vararg_buffer14)|0);
 }
 $58 = HEAP32[600>>2]|0;
 $59 = ($58|0)!=(0);
 L23: do {
  if ($59) {
   $60 = HEAP32[604>>2]|0;
   $61 = HEAP32[$pos>>2]|0;
   $62 = ((($pos)) + 4|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = ((($pos)) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   HEAP32[$vararg_buffer16>>2] = $61;
   $vararg_ptr19 = ((($vararg_buffer16)) + 4|0);
   HEAP32[$vararg_ptr19>>2] = $63;
   $vararg_ptr20 = ((($vararg_buffer16)) + 8|0);
   HEAP32[$vararg_ptr20>>2] = $65;
   (_fprintf($60,382670,$vararg_buffer16)|0);
   $i3 = 0;
   while(1) {
    $66 = $i3;
    $67 = ((($pos)) + 8|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = ($66|0)<($68|0);
    if (!($69)) {
     break L23;
    }
    $j4 = 0;
    while(1) {
     $70 = $j4;
     $71 = ((($pos)) + 8|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = ($70|0)<($72|0);
     $74 = HEAP32[604>>2]|0;
     if (!($73)) {
      break;
     }
     $75 = $i3;
     $76 = ((($pos)) + 8|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = Math_imul($75, $77)|0;
     $79 = $j4;
     $80 = (($78) + ($79))|0;
     $81 = (($res) + ($80<<2)|0);
     $82 = +HEAPF32[$81>>2];
     $83 = $82;
     HEAPF64[$vararg_buffer21>>3] = $83;
     (_fprintf($74,382214,$vararg_buffer21)|0);
     $84 = $j4;
     $85 = (($84) + 1)|0;
     $j4 = $85;
    }
    (_fprintf($74,382820,$vararg_buffer24)|0);
    $86 = $i3;
    $87 = (($86) + 1)|0;
    $i3 = $87;
   }
  }
 } while(0);
 $i5 = 0;
 while(1) {
  $88 = $i5;
  $89 = ((($pos)) + 8|0);
  $90 = HEAP32[$89>>2]|0;
  $91 = ($88|0)<($90|0);
  if (!($91)) {
   break;
  }
  $j6 = 0;
  while(1) {
   $92 = $j6;
   $93 = ((($pos)) + 8|0);
   $94 = HEAP32[$93>>2]|0;
   $95 = ($92|0)<($94|0);
   if (!($95)) {
    break;
   }
   $96 = HEAP32[$pos>>2]|0;
   $97 = $i5;
   $98 = (($96) + ($97))|0;
   $99 = $98<<6;
   $100 = ((($pos)) + 4|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = $j6;
   $103 = (($101) + ($102))|0;
   $104 = (($99) + ($103))|0;
   $idx = $104;
   $105 = $i5;
   $106 = ((($pos)) + 8|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = Math_imul($105, $107)|0;
   $109 = $j6;
   $110 = (($108) + ($109))|0;
   $111 = (($res) + ($110<<2)|0);
   $112 = +HEAPF32[$111>>2];
   $113 = $idx;
   $114 = $0;
   $115 = ((($114)) + 92|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (($116) + ($113<<2)|0);
   HEAPF32[$117>>2] = $112;
   $118 = $j6;
   $119 = (($118) + 1)|0;
   $j6 = $119;
  }
  $120 = $i5;
  $121 = (($120) + 1)|0;
  $i5 = $121;
 }
 STACKTOP = sp;return;
}
function _iquantiAndFillCoeffNxN($ctu,$pos,$context,$trans_depth,$pretype) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $context = $context|0;
 $trans_depth = $trans_depth|0;
 $pretype = $pretype|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0.0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0.0, $94 = 0.0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $diff = 0, $i = 0, $i1 = 0;
 var $i3 = 0, $i5 = 0, $i8 = 0, $idx = 0, $idx10 = 0, $idx7 = 0, $j = 0, $j2 = 0, $j4 = 0, $j6 = 0, $j9 = 0, $temp = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer20 = 0, $vararg_buffer3 = 0;
 var $vararg_buffer5 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32928|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer20 = sp + 72|0;
 $vararg_buffer17 = sp + 64|0;
 $vararg_buffer15 = sp + 56|0;
 $vararg_buffer13 = sp + 48|0;
 $vararg_buffer10 = sp + 40|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $diff = sp + 16520|0;
 $temp = sp + 120|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $trans_depth;
 $3 = $pretype;
 _memset(($diff|0),0,16384)|0;
 $4 = ((($pos)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = $6&255;
 $8 = $1;
 $9 = $2;
 _decodeCoeffNxN($5,$7,$diff,$8,0,$9);
 $10 = HEAP32[8744>>2]|0;
 $11 = ($10|0)!=(0);
 L1: do {
  if ($11) {
   (_printf(382454,$vararg_buffer)|0);
   $i = 0;
   while(1) {
    $12 = $i;
    $13 = ((($pos)) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($12|0)<($14|0);
    if (!($15)) {
     break L1;
    }
    $j = 0;
    while(1) {
     $16 = $j;
     $17 = ((($pos)) + 8|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ($16|0)<($18|0);
     if (!($19)) {
      break;
     }
     $20 = $i;
     $21 = ((($pos)) + 8|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = Math_imul($20, $22)|0;
     $24 = $j;
     $25 = (($23) + ($24))|0;
     $idx = $25;
     $26 = $idx;
     $27 = (($diff) + ($26<<2)|0);
     $28 = HEAP32[$27>>2]|0;
     HEAP32[$vararg_buffer1>>2] = $28;
     (_printf(382302,$vararg_buffer1)|0);
     $29 = $j;
     $30 = (($29) + 1)|0;
     $j = $30;
    }
    (_printf(382820,$vararg_buffer3)|0);
    $31 = $i;
    $32 = (($31) + 1)|0;
    $i = $32;
   }
  }
 } while(0);
 _memset(($temp|0),0,16384)|0;
 $i1 = 0;
 while(1) {
  $33 = $i1;
  $34 = ((($pos)) + 8|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ($33|0)<($35|0);
  if (!($36)) {
   break;
  }
  $j2 = 0;
  while(1) {
   $37 = $j2;
   $38 = ((($pos)) + 8|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ($37|0)<($39|0);
   $41 = $i1;
   if (!($40)) {
    break;
   }
   $42 = ((($pos)) + 8|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = Math_imul($41, $43)|0;
   $45 = $j2;
   $46 = (($44) + ($45))|0;
   $47 = (($diff) + ($46<<2)|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = (+($48|0));
   $50 = $1;
   $51 = ((($50)) + 16|0);
   $52 = ((($51)) + 20|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = $1;
   $55 = ((($54)) + 192|0);
   $56 = (($55) + ($53<<2)|0);
   $57 = +HEAPF32[$56>>2];
   $58 = $49 * $57;
   $59 = $i1;
   $60 = ((($pos)) + 8|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = Math_imul($59, $61)|0;
   $63 = $j2;
   $64 = (($62) + ($63))|0;
   $65 = (($temp) + ($64<<2)|0);
   HEAPF32[$65>>2] = $58;
   $66 = $j2;
   $67 = (($66) + 1)|0;
   $j2 = $67;
  }
  $68 = (($41) + 1)|0;
  $i1 = $68;
 }
 $69 = HEAP32[600>>2]|0;
 $70 = ($69|0)!=(0);
 L19: do {
  if ($70) {
   $71 = HEAP32[604>>2]|0;
   $72 = HEAP32[$pos>>2]|0;
   $73 = ((($pos)) + 4|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ((($pos)) + 8|0);
   $76 = HEAP32[$75>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $72;
   $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
   HEAP32[$vararg_ptr8>>2] = $74;
   $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
   HEAP32[$vararg_ptr9>>2] = $76;
   (_fprintf($71,382599,$vararg_buffer5)|0);
   $i3 = 0;
   while(1) {
    $77 = $i3;
    $78 = ((($pos)) + 8|0);
    $79 = HEAP32[$78>>2]|0;
    $80 = ($77|0)<($79|0);
    if (!($80)) {
     break L19;
    }
    $j4 = 0;
    while(1) {
     $81 = $j4;
     $82 = ((($pos)) + 8|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($81|0)<($83|0);
     $85 = HEAP32[604>>2]|0;
     if (!($84)) {
      break;
     }
     $86 = $i3;
     $87 = ((($pos)) + 8|0);
     $88 = HEAP32[$87>>2]|0;
     $89 = Math_imul($86, $88)|0;
     $90 = $j4;
     $91 = (($89) + ($90))|0;
     $92 = (($temp) + ($91<<2)|0);
     $93 = +HEAPF32[$92>>2];
     $94 = $93;
     HEAPF64[$vararg_buffer10>>3] = $94;
     (_fprintf($85,382214,$vararg_buffer10)|0);
     $95 = $j4;
     $96 = (($95) + 1)|0;
     $j4 = $96;
    }
    (_fprintf($85,382820,$vararg_buffer13)|0);
    $97 = $i3;
    $98 = (($97) + 1)|0;
    $i3 = $98;
   }
  }
 } while(0);
 $99 = HEAP32[8744>>2]|0;
 $100 = ($99|0)!=(0);
 L29: do {
  if ($100) {
   (_printf(382634,$vararg_buffer15)|0);
   $i5 = 0;
   while(1) {
    $101 = $i5;
    $102 = ((($pos)) + 8|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = ($101|0)<($103|0);
    if (!($104)) {
     break L29;
    }
    $j6 = 0;
    while(1) {
     $105 = $j6;
     $106 = ((($pos)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($105|0)<($107|0);
     if (!($108)) {
      break;
     }
     $109 = $i5;
     $110 = ((($pos)) + 8|0);
     $111 = HEAP32[$110>>2]|0;
     $112 = Math_imul($109, $111)|0;
     $113 = $j6;
     $114 = (($112) + ($113))|0;
     $idx7 = $114;
     $115 = $idx7;
     $116 = (($temp) + ($115<<2)|0);
     $117 = +HEAPF32[$116>>2];
     $118 = $117;
     HEAPF64[$vararg_buffer17>>3] = $118;
     (_printf(382214,$vararg_buffer17)|0);
     $119 = $j6;
     $120 = (($119) + 1)|0;
     $j6 = $120;
    }
    (_printf(382820,$vararg_buffer20)|0);
    $121 = $i5;
    $122 = (($121) + 1)|0;
    $i5 = $122;
   }
  }
 } while(0);
 $i8 = 0;
 while(1) {
  $123 = $i8;
  $124 = ((($pos)) + 8|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = ($123|0)<($125|0);
  if (!($126)) {
   break;
  }
  $j9 = 0;
  while(1) {
   $127 = $j9;
   $128 = ((($pos)) + 8|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = ($127|0)<($129|0);
   if (!($130)) {
    break;
   }
   $131 = HEAP32[$pos>>2]|0;
   $132 = $i8;
   $133 = (($131) + ($132))|0;
   $134 = $133<<6;
   $135 = ((($pos)) + 4|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = $j9;
   $138 = (($136) + ($137))|0;
   $139 = (($134) + ($138))|0;
   $idx10 = $139;
   $140 = $i8;
   $141 = ((($pos)) + 8|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = Math_imul($140, $142)|0;
   $144 = $j9;
   $145 = (($143) + ($144))|0;
   $146 = (($temp) + ($145<<2)|0);
   $147 = +HEAPF32[$146>>2];
   $148 = $idx10;
   $149 = $0;
   $150 = ((($149)) + 92|0);
   $151 = HEAP32[$150>>2]|0;
   $152 = (($151) + ($148<<2)|0);
   HEAPF32[$152>>2] = $147;
   $153 = $j9;
   $154 = (($153) + 1)|0;
   $j9 = $154;
  }
  $155 = $i8;
  $156 = (($155) + 1)|0;
  $i8 = $156;
 }
 STACKTOP = sp;return;
}
function _izigzag_iquanti_idct_coeff_onepart($ctu,$pos,$ori_pos,$context,$shape,$trans_depth) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $ori_pos = $ori_pos|0;
 $context = $context|0;
 $shape = $shape|0;
 $trans_depth = $trans_depth|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0.0, $127 = 0.0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0.0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cur_shape = 0, $diff = 0, $i = 0, $i1 = 0, $i2 = 0, $i5 = 0;
 var $i7 = 0, $idx = 0, $idx4 = 0, $j = 0, $j3 = 0, $j6 = 0, $j8 = 0, $len = 0, $res = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer14 = 0, $vararg_buffer19 = 0, $vararg_buffer22 = 0, $vararg_buffer24 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0;
 var $vararg_ptr17 = 0, $vararg_ptr18 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 49328|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer24 = sp + 88|0;
 $vararg_buffer22 = sp + 80|0;
 $vararg_buffer19 = sp + 72|0;
 $vararg_buffer14 = sp + 56|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer10 = sp + 40|0;
 $vararg_buffer7 = sp + 32|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $cur_shape = sp + 32912|0;
 $diff = sp + 16512|0;
 $res = sp + 120|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $shape;
 $3 = $trans_depth;
 $len = 0;
 _memset(($cur_shape|0),0,16384)|0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = ((($pos)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($4|0)<($6|0);
  if (!($7)) {
   break;
  }
  $j = 0;
  while(1) {
   $8 = $j;
   $9 = ((($pos)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($8|0)<($10|0);
   if (!($11)) {
    break;
   }
   $12 = HEAP32[$pos>>2]|0;
   $13 = HEAP32[$ori_pos>>2]|0;
   $14 = (($12) - ($13))|0;
   $15 = $i;
   $16 = (($14) + ($15))|0;
   $17 = ((($ori_pos)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = Math_imul($16, $18)|0;
   $20 = ((($pos)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($ori_pos)) + 4|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (($21) - ($23))|0;
   $25 = $j;
   $26 = (($24) + ($25))|0;
   $27 = (($19) + ($26))|0;
   $idx = $27;
   $28 = $idx;
   $29 = $2;
   $30 = (($29) + ($28<<2)|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = $i;
   $33 = ((($pos)) + 8|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = Math_imul($32, $34)|0;
   $36 = $j;
   $37 = (($35) + ($36))|0;
   $38 = (($cur_shape) + ($37<<2)|0);
   HEAP32[$38>>2] = $31;
   $39 = $idx;
   $40 = $2;
   $41 = (($40) + ($39<<2)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)!=(0);
   if ($43) {
    $44 = $len;
    $45 = (($44) + 1)|0;
    $len = $45;
   }
   $46 = $j;
   $47 = (($46) + 1)|0;
   $j = $47;
  }
  $48 = $i;
  $49 = (($48) + 1)|0;
  $i = $49;
 }
 _memset(($diff|0),0,16384)|0;
 $50 = $len;
 $51 = $1;
 (_decodeCoeffResidual($50,$diff,$51,0)|0);
 $52 = HEAP32[8744>>2]|0;
 $53 = ($52|0)!=(0);
 if ($53) {
  (_printf(382454,$vararg_buffer)|0);
  $i1 = 0;
  while(1) {
   $54 = $i1;
   $55 = $len;
   $56 = ($54|0)<($55|0);
   if (!($56)) {
    break;
   }
   $57 = $i1;
   $58 = (($diff) + ($57<<2)|0);
   $59 = HEAP32[$58>>2]|0;
   HEAP32[$vararg_buffer1>>2] = $59;
   (_printf(382302,$vararg_buffer1)|0);
   $60 = $i1;
   $61 = (($60) + 1)|0;
   $i1 = $61;
  }
  (_printf(382820,$vararg_buffer3)|0);
 }
 _memset(($res|0),0,16384)|0;
 $62 = ((($pos)) + 8|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = $1;
 _izigzag_iqunati_idct_irregular($63,$cur_shape,$diff,$res,$64);
 $65 = HEAP32[8744>>2]|0;
 $66 = ($65|0)!=(0);
 L19: do {
  if ($66) {
   (_printf(382525,$vararg_buffer5)|0);
   $i2 = 0;
   while(1) {
    $67 = $i2;
    $68 = ((($pos)) + 8|0);
    $69 = HEAP32[$68>>2]|0;
    $70 = ($67|0)<($69|0);
    if (!($70)) {
     break L19;
    }
    $j3 = 0;
    while(1) {
     $71 = $j3;
     $72 = ((($pos)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)<($73|0);
     if (!($74)) {
      break;
     }
     $75 = $i2;
     $76 = ((($pos)) + 8|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = Math_imul($75, $77)|0;
     $79 = $j3;
     $80 = (($78) + ($79))|0;
     $idx4 = $80;
     $81 = $idx4;
     $82 = (($cur_shape) + ($81<<2)|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)!=(0);
     if ($84) {
      $85 = $idx4;
      $86 = (($res) + ($85<<2)|0);
      $87 = +HEAPF32[$86>>2];
      $88 = $87;
      HEAPF64[$vararg_buffer7>>3] = $88;
      (_printf(382214,$vararg_buffer7)|0);
     } else {
      (_printf(382219,$vararg_buffer10)|0);
     }
     $89 = $j3;
     $90 = (($89) + 1)|0;
     $j3 = $90;
    }
    (_printf(382820,$vararg_buffer12)|0);
    $91 = $i2;
    $92 = (($91) + 1)|0;
    $i2 = $92;
   }
  }
 } while(0);
 $93 = HEAP32[600>>2]|0;
 $94 = ($93|0)!=(0);
 L33: do {
  if ($94) {
   $95 = HEAP32[604>>2]|0;
   $96 = HEAP32[$pos>>2]|0;
   $97 = ((($pos)) + 4|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ((($pos)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   HEAP32[$vararg_buffer14>>2] = $96;
   $vararg_ptr17 = ((($vararg_buffer14)) + 4|0);
   HEAP32[$vararg_ptr17>>2] = $98;
   $vararg_ptr18 = ((($vararg_buffer14)) + 8|0);
   HEAP32[$vararg_ptr18>>2] = $100;
   (_fprintf($95,382549,$vararg_buffer14)|0);
   $i5 = 0;
   while(1) {
    $101 = $i5;
    $102 = ((($pos)) + 8|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = ($101|0)<($103|0);
    if (!($104)) {
     break L33;
    }
    $j6 = 0;
    while(1) {
     $105 = $j6;
     $106 = ((($pos)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($105|0)<($107|0);
     if (!($108)) {
      break;
     }
     $109 = $i5;
     $110 = ((($pos)) + 8|0);
     $111 = HEAP32[$110>>2]|0;
     $112 = Math_imul($109, $111)|0;
     $113 = $j6;
     $114 = (($112) + ($113))|0;
     $115 = (($cur_shape) + ($114<<2)|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ($116|0)!=(0);
     $118 = HEAP32[604>>2]|0;
     if ($117) {
      $119 = $i5;
      $120 = ((($pos)) + 8|0);
      $121 = HEAP32[$120>>2]|0;
      $122 = Math_imul($119, $121)|0;
      $123 = $j6;
      $124 = (($122) + ($123))|0;
      $125 = (($res) + ($124<<2)|0);
      $126 = +HEAPF32[$125>>2];
      $127 = $126;
      HEAPF64[$vararg_buffer19>>3] = $127;
      (_fprintf($118,382214,$vararg_buffer19)|0);
     } else {
      (_fprintf($118,382219,$vararg_buffer22)|0);
     }
     $128 = $j6;
     $129 = (($128) + 1)|0;
     $j6 = $129;
    }
    $130 = HEAP32[604>>2]|0;
    (_fprintf($130,382820,$vararg_buffer24)|0);
    $131 = $i5;
    $132 = (($131) + 1)|0;
    $i5 = $132;
   }
  }
 } while(0);
 $i7 = 0;
 while(1) {
  $133 = $i7;
  $134 = ((($pos)) + 8|0);
  $135 = HEAP32[$134>>2]|0;
  $136 = ($133|0)<($135|0);
  if (!($136)) {
   break;
  }
  $j8 = 0;
  while(1) {
   $137 = $j8;
   $138 = ((($pos)) + 8|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = ($137|0)<($139|0);
   $141 = $i7;
   if (!($140)) {
    break;
   }
   $142 = ((($pos)) + 8|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = Math_imul($141, $143)|0;
   $145 = $j8;
   $146 = (($144) + ($145))|0;
   $147 = (($cur_shape) + ($146<<2)|0);
   $148 = HEAP32[$147>>2]|0;
   $149 = ($148|0)!=(0);
   if ($149) {
    $150 = $i7;
    $151 = ((($pos)) + 8|0);
    $152 = HEAP32[$151>>2]|0;
    $153 = Math_imul($150, $152)|0;
    $154 = $j8;
    $155 = (($153) + ($154))|0;
    $156 = (($res) + ($155<<2)|0);
    $157 = +HEAPF32[$156>>2];
    $158 = HEAP32[$pos>>2]|0;
    $159 = $i7;
    $160 = (($158) + ($159))|0;
    $161 = $160<<6;
    $162 = ((($pos)) + 4|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = (($161) + ($163))|0;
    $165 = $j8;
    $166 = (($164) + ($165))|0;
    $167 = $0;
    $168 = ((($167)) + 92|0);
    $169 = HEAP32[$168>>2]|0;
    $170 = (($169) + ($166<<2)|0);
    HEAPF32[$170>>2] = $157;
   }
   $171 = $j8;
   $172 = (($171) + 1)|0;
   $j8 = $172;
  }
  $173 = (($141) + 1)|0;
  $i7 = $173;
 }
 STACKTOP = sp;return;
}
function _iquanti_fillCoeff_onepart($ctu,$pos,$ori_pos,$context,$shape,$trans_depth) {
 $ctu = $ctu|0;
 $pos = $pos|0;
 $ori_pos = $ori_pos|0;
 $context = $context|0;
 $shape = $shape|0;
 $trans_depth = $trans_depth|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0.0, $115 = 0.0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0.0, $145 = 0.0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0.0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cur_shape = 0, $diff = 0, $i = 0, $i1 = 0, $i2 = 0, $i3 = 0, $i6 = 0, $i9 = 0, $idx = 0, $idx8 = 0, $j = 0, $j10 = 0, $j4 = 0;
 var $j7 = 0, $len = 0, $pointer = 0, $t = 0, $t5 = 0, $temp = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer22 = 0, $vararg_buffer24 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 49328|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer24 = sp + 88|0;
 $vararg_buffer22 = sp + 80|0;
 $vararg_buffer19 = sp + 72|0;
 $vararg_buffer17 = sp + 64|0;
 $vararg_buffer15 = sp + 56|0;
 $vararg_buffer13 = sp + 48|0;
 $vararg_buffer10 = sp + 40|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $cur_shape = sp + 32928|0;
 $diff = sp + 16528|0;
 $temp = sp + 136|0;
 $0 = $ctu;
 $1 = $context;
 $2 = $shape;
 $3 = $trans_depth;
 _memset(($cur_shape|0),0,16384)|0;
 $len = 0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = ((($pos)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($4|0)<($6|0);
  if (!($7)) {
   break;
  }
  $j = 0;
  while(1) {
   $8 = $j;
   $9 = ((($pos)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($8|0)<($10|0);
   if (!($11)) {
    break;
   }
   $12 = HEAP32[$pos>>2]|0;
   $13 = HEAP32[$ori_pos>>2]|0;
   $14 = (($12) - ($13))|0;
   $15 = $i;
   $16 = (($14) + ($15))|0;
   $17 = ((($ori_pos)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = Math_imul($16, $18)|0;
   $20 = ((($pos)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($ori_pos)) + 4|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (($21) - ($23))|0;
   $25 = $j;
   $26 = (($24) + ($25))|0;
   $27 = (($19) + ($26))|0;
   $idx = $27;
   $28 = $idx;
   $29 = $2;
   $30 = (($29) + ($28<<2)|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = $i;
   $33 = ((($pos)) + 8|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = Math_imul($32, $34)|0;
   $36 = $j;
   $37 = (($35) + ($36))|0;
   $38 = (($cur_shape) + ($37<<2)|0);
   HEAP32[$38>>2] = $31;
   $39 = $idx;
   $40 = $2;
   $41 = (($40) + ($39<<2)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)!=(0);
   if ($43) {
    $44 = $len;
    $45 = (($44) + 1)|0;
    $len = $45;
   }
   $46 = $j;
   $47 = (($46) + 1)|0;
   $j = $47;
  }
  $48 = $i;
  $49 = (($48) + 1)|0;
  $i = $49;
 }
 _memset(($diff|0),0,16384)|0;
 $50 = $len;
 $51 = $1;
 (_decodeCoeffResidual($50,$diff,$51,0)|0);
 $52 = HEAP32[8744>>2]|0;
 $53 = ($52|0)!=(0);
 if ($53) {
  (_printf(382454,$vararg_buffer)|0);
  $i1 = 0;
  while(1) {
   $54 = $i1;
   $55 = $len;
   $56 = ($54|0)<($55|0);
   if (!($56)) {
    break;
   }
   $57 = $i1;
   $58 = (($diff) + ($57<<2)|0);
   $59 = HEAP32[$58>>2]|0;
   HEAP32[$vararg_buffer1>>2] = $59;
   (_printf(382302,$vararg_buffer1)|0);
   $60 = $i1;
   $61 = (($60) + 1)|0;
   $i1 = $61;
  }
  (_printf(382820,$vararg_buffer3)|0);
 }
 _memset(($temp|0),0,16384)|0;
 $i2 = 0;
 while(1) {
  $62 = $i2;
  $63 = $len;
  $64 = ($62|0)<($63|0);
  if (!($64)) {
   break;
  }
  $65 = $i2;
  $66 = (($diff) + ($65<<2)|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = (+($67|0));
  $69 = $68 * 1.0;
  $70 = $1;
  $71 = ((($70)) + 16|0);
  $72 = ((($71)) + 20|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = $1;
  $75 = ((($74)) + 192|0);
  $76 = (($75) + ($73<<2)|0);
  $77 = +HEAPF32[$76>>2];
  $78 = $77;
  $79 = $69 * $78;
  $80 = $79;
  $81 = $i2;
  $82 = (($temp) + ($81<<2)|0);
  HEAPF32[$82>>2] = $80;
  $83 = $i2;
  $84 = (($83) + 1)|0;
  $i2 = $84;
 }
 $85 = HEAP32[600>>2]|0;
 $86 = ($85|0)!=(0);
 L23: do {
  if ($86) {
   $t = 0;
   $87 = HEAP32[604>>2]|0;
   $88 = HEAP32[$pos>>2]|0;
   $89 = ((($pos)) + 4|0);
   $90 = HEAP32[$89>>2]|0;
   $91 = ((($pos)) + 8|0);
   $92 = HEAP32[$91>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $88;
   $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
   HEAP32[$vararg_ptr8>>2] = $90;
   $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
   HEAP32[$vararg_ptr9>>2] = $92;
   (_fprintf($87,382469,$vararg_buffer5)|0);
   $i3 = 0;
   while(1) {
    $93 = $i3;
    $94 = ((($pos)) + 8|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = ($93|0)<($95|0);
    if (!($96)) {
     break L23;
    }
    $j4 = 0;
    while(1) {
     $97 = $j4;
     $98 = ((($pos)) + 8|0);
     $99 = HEAP32[$98>>2]|0;
     $100 = ($97|0)<($99|0);
     if (!($100)) {
      break;
     }
     $101 = $i3;
     $102 = ((($pos)) + 8|0);
     $103 = HEAP32[$102>>2]|0;
     $104 = Math_imul($101, $103)|0;
     $105 = $j4;
     $106 = (($104) + ($105))|0;
     $107 = (($cur_shape) + ($106<<2)|0);
     $108 = HEAP32[$107>>2]|0;
     $109 = ($108|0)!=(0);
     $110 = HEAP32[604>>2]|0;
     if ($109) {
      $111 = $t;
      $112 = (($111) + 1)|0;
      $t = $112;
      $113 = (($temp) + ($111<<2)|0);
      $114 = +HEAPF32[$113>>2];
      $115 = $114;
      HEAPF64[$vararg_buffer10>>3] = $115;
      (_fprintf($110,382214,$vararg_buffer10)|0);
     } else {
      (_fprintf($110,382219,$vararg_buffer13)|0);
     }
     $116 = $j4;
     $117 = (($116) + 1)|0;
     $j4 = $117;
    }
    $118 = HEAP32[604>>2]|0;
    (_fprintf($118,382820,$vararg_buffer15)|0);
    $119 = $i3;
    $120 = (($119) + 1)|0;
    $i3 = $120;
   }
  }
 } while(0);
 $121 = HEAP32[8744>>2]|0;
 $122 = ($121|0)!=(0);
 L37: do {
  if ($122) {
   $t5 = 0;
   (_printf(382506,$vararg_buffer17)|0);
   $i6 = 0;
   while(1) {
    $123 = $i6;
    $124 = ((($pos)) + 8|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = ($123|0)<($125|0);
    if (!($126)) {
     break L37;
    }
    $j7 = 0;
    while(1) {
     $127 = $j7;
     $128 = ((($pos)) + 8|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)<($129|0);
     if (!($130)) {
      break;
     }
     $131 = $i6;
     $132 = ((($pos)) + 8|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = Math_imul($131, $133)|0;
     $135 = $j7;
     $136 = (($134) + ($135))|0;
     $idx8 = $136;
     $137 = $idx8;
     $138 = (($cur_shape) + ($137<<2)|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($139|0)!=(0);
     if ($140) {
      $141 = $t5;
      $142 = (($141) + 1)|0;
      $t5 = $142;
      $143 = (($temp) + ($141<<2)|0);
      $144 = +HEAPF32[$143>>2];
      $145 = $144;
      HEAPF64[$vararg_buffer19>>3] = $145;
      (_printf(382214,$vararg_buffer19)|0);
     } else {
      (_printf(382219,$vararg_buffer22)|0);
     }
     $146 = $j7;
     $147 = (($146) + 1)|0;
     $j7 = $147;
    }
    (_printf(382820,$vararg_buffer24)|0);
    $148 = $i6;
    $149 = (($148) + 1)|0;
    $i6 = $149;
   }
  }
 } while(0);
 $pointer = 0;
 $i9 = 0;
 while(1) {
  $150 = $i9;
  $151 = ((($pos)) + 8|0);
  $152 = HEAP32[$151>>2]|0;
  $153 = ($150|0)<($152|0);
  if (!($153)) {
   break;
  }
  $j10 = 0;
  while(1) {
   $154 = $j10;
   $155 = ((($pos)) + 8|0);
   $156 = HEAP32[$155>>2]|0;
   $157 = ($154|0)<($156|0);
   $158 = $i9;
   if (!($157)) {
    break;
   }
   $159 = ((($pos)) + 8|0);
   $160 = HEAP32[$159>>2]|0;
   $161 = Math_imul($158, $160)|0;
   $162 = $j10;
   $163 = (($161) + ($162))|0;
   $164 = (($cur_shape) + ($163<<2)|0);
   $165 = HEAP32[$164>>2]|0;
   $166 = ($165|0)!=(0);
   if ($166) {
    $167 = $pointer;
    $168 = (($167) + 1)|0;
    $pointer = $168;
    $169 = (($temp) + ($167<<2)|0);
    $170 = +HEAPF32[$169>>2];
    $171 = HEAP32[$pos>>2]|0;
    $172 = $i9;
    $173 = (($171) + ($172))|0;
    $174 = $173<<6;
    $175 = ((($pos)) + 4|0);
    $176 = HEAP32[$175>>2]|0;
    $177 = (($174) + ($176))|0;
    $178 = $j10;
    $179 = (($177) + ($178))|0;
    $180 = $0;
    $181 = ((($180)) + 92|0);
    $182 = HEAP32[$181>>2]|0;
    $183 = (($182) + ($179<<2)|0);
    HEAPF32[$183>>2] = $170;
   }
   $184 = $j10;
   $185 = (($184) + 1)|0;
   $j10 = $185;
  }
  $186 = (($158) + 1)|0;
  $i9 = $186;
 }
 STACKTOP = sp;return;
}
function _init_cabac_decoder($c,$buf,$buf_size) {
 $c = $c|0;
 $buf = $buf|0;
 $buf_size = $buf_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $buf;
 $2 = $buf_size;
 $3 = $1;
 $4 = $0;
 $5 = ((($4)) + 12|0);
 HEAP32[$5>>2] = $3;
 $6 = $1;
 $7 = $0;
 $8 = ((($7)) + 16|0);
 HEAP32[$8>>2] = $6;
 $9 = $1;
 $10 = $2;
 $11 = (($9) + ($10)|0);
 $12 = $0;
 $13 = ((($12)) + 20|0);
 HEAP32[$13>>2] = $11;
 $14 = $0;
 $15 = ((($14)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($16)) + 1|0);
 HEAP32[$15>>2] = $17;
 $18 = HEAP8[$16>>0]|0;
 $19 = $18&255;
 $20 = $19 << 18;
 $21 = $0;
 HEAP32[$21>>2] = $20;
 $22 = $0;
 $23 = ((($22)) + 16|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ((($24)) + 1|0);
 HEAP32[$23>>2] = $25;
 $26 = HEAP8[$24>>0]|0;
 $27 = $26&255;
 $28 = $27 << 10;
 $29 = $0;
 $30 = HEAP32[$29>>2]|0;
 $31 = (($30) + ($28))|0;
 HEAP32[$29>>2] = $31;
 $32 = $0;
 $33 = ((($32)) + 16|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 1|0);
 HEAP32[$33>>2] = $35;
 $36 = HEAP8[$34>>0]|0;
 $37 = $36&255;
 $38 = $37 << 2;
 $39 = (($38) + 2)|0;
 $40 = $0;
 $41 = HEAP32[$40>>2]|0;
 $42 = (($41) + ($39))|0;
 HEAP32[$40>>2] = $42;
 $43 = $0;
 $44 = ((($43)) + 4|0);
 HEAP32[$44>>2] = 510;
 STACKTOP = sp;return;
}
function _get_bits_bypass($c,$len) {
 $c = $c|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $i = 0, $res = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = $c;
 $1 = $len;
 $res = 0;
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = $1;
  $4 = ($2|0)<($3|0);
  if (!($4)) {
   break;
  }
  $5 = $res;
  $6 = $5 << 1;
  $res = $6;
  $7 = $0;
  $8 = (_get_cabac_bypass($7)|0);
  $9 = $res;
  $10 = $9 | $8;
  $res = $10;
  $11 = HEAP32[896>>2]|0;
  $12 = ($11|0)!=(0);
  if ($12) {
   $13 = $res;
   $14 = $13 & 1;
   HEAP32[$vararg_buffer>>2] = $14;
   (_printf(382817,$vararg_buffer)|0);
  }
  $15 = $i;
  $16 = (($15) + 1)|0;
  $i = $16;
 }
 $17 = HEAP32[896>>2]|0;
 $18 = ($17|0)!=(0);
 if (!($18)) {
  $19 = $res;
  STACKTOP = sp;return ($19|0);
 }
 (_printf(382820,$vararg_buffer1)|0);
 $19 = $res;
 STACKTOP = sp;return ($19|0);
}
function _get_cabac_bypass($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $range = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = $c;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 << 1;
 HEAP32[$2>>2] = $4;
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 65535;
 $8 = ($7|0)!=(0);
 if (!($8)) {
  $9 = $1;
  _refill($9);
 }
 $10 = $1;
 $11 = ((($10)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $12 << 17;
 $range = $13;
 $14 = $1;
 $15 = HEAP32[$14>>2]|0;
 $16 = $range;
 $17 = ($15|0)<($16|0);
 $18 = HEAP32[8752>>2]|0;
 $19 = ($18|0)!=(0);
 if ($17) {
  if ($19) {
   $20 = HEAP32[8748>>2]|0;
   HEAP32[$vararg_buffer>>2] = 0;
   (_fprintf($20,382817,$vararg_buffer)|0);
   $21 = HEAP32[8748>>2]|0;
   (_fflush($21)|0);
  }
  $0 = 0;
  $28 = $0;
  STACKTOP = sp;return ($28|0);
 } else {
  if ($19) {
   $22 = HEAP32[8748>>2]|0;
   HEAP32[$vararg_buffer1>>2] = 1;
   (_fprintf($22,382817,$vararg_buffer1)|0);
   $23 = HEAP32[8748>>2]|0;
   (_fflush($23)|0);
  }
  $24 = $range;
  $25 = $1;
  $26 = HEAP32[$25>>2]|0;
  $27 = (($26) - ($24))|0;
  HEAP32[$25>>2] = $27;
  $0 = 1;
  $28 = $0;
  STACKTOP = sp;return ($28|0);
 }
 return (0)|0;
}
function _get_cabac_regular($c,$state) {
 $c = $c|0;
 $state = $state|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $t = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $c;
 $1 = $state;
 $2 = $0;
 $3 = $1;
 $4 = (_get_cabac_inline($2,$3)|0);
 $t = $4;
 $5 = HEAP32[8752>>2]|0;
 $6 = ($5|0)!=(0);
 if (!($6)) {
  $10 = $t;
  STACKTOP = sp;return ($10|0);
 }
 $7 = HEAP32[8748>>2]|0;
 $8 = $t;
 HEAP32[$vararg_buffer>>2] = $8;
 (_fprintf($7,382817,$vararg_buffer)|0);
 $9 = HEAP32[8748>>2]|0;
 (_fflush($9)|0);
 $10 = $t;
 STACKTOP = sp;return ($10|0);
}
function _refill($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = $5 << 9;
 $7 = $0;
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 1|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11&255;
 $13 = $12 << 1;
 $14 = (($6) + ($13))|0;
 $15 = $0;
 $16 = HEAP32[$15>>2]|0;
 $17 = (($16) + ($14))|0;
 HEAP32[$15>>2] = $17;
 $18 = $0;
 $19 = HEAP32[$18>>2]|0;
 $20 = (($19) - 65535)|0;
 HEAP32[$18>>2] = $20;
 $21 = $0;
 $22 = ((($21)) + 16|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($23)) + 2|0);
 HEAP32[$22>>2] = $24;
 STACKTOP = sp;return;
}
function _get_cabac_inline($c,$state) {
 $c = $c|0;
 $state = $state|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $RangeLps = 0, $bit = 0, $ff_h264_lps_range = 0, $ff_h264_mlps_state = 0, $ff_h264_norm_shift = 0, $lps_mask = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $state;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $3&255;
 $s = $4;
 $5 = (_get_ff_h264_lps_range()|0);
 $ff_h264_lps_range = $5;
 $6 = (_get_ff_h264_mlps_state()|0);
 $ff_h264_mlps_state = $6;
 $7 = (_get_ff_h264_norm_shift()|0);
 $ff_h264_norm_shift = $7;
 $8 = $0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 & 192;
 $12 = $11<<1;
 $13 = $s;
 $14 = (($12) + ($13))|0;
 $15 = $ff_h264_lps_range;
 $16 = (($15) + ($14)|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $RangeLps = $18;
 $19 = $RangeLps;
 $20 = $0;
 $21 = ((($20)) + 4|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = (($22) - ($19))|0;
 HEAP32[$21>>2] = $23;
 $24 = $0;
 $25 = ((($24)) + 4|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = $26 << 17;
 $28 = $0;
 $29 = HEAP32[$28>>2]|0;
 $30 = (($27) - ($29))|0;
 $31 = $30 >> 31;
 $lps_mask = $31;
 $32 = $0;
 $33 = ((($32)) + 4|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = $34 << 17;
 $36 = $lps_mask;
 $37 = $35 & $36;
 $38 = $0;
 $39 = HEAP32[$38>>2]|0;
 $40 = (($39) - ($37))|0;
 HEAP32[$38>>2] = $40;
 $41 = $RangeLps;
 $42 = $0;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (($41) - ($44))|0;
 $46 = $lps_mask;
 $47 = $45 & $46;
 $48 = $0;
 $49 = ((($48)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = (($50) + ($47))|0;
 HEAP32[$49>>2] = $51;
 $52 = $lps_mask;
 $53 = $s;
 $54 = $53 ^ $52;
 $s = $54;
 $55 = $s;
 $56 = $ff_h264_mlps_state;
 $57 = ((($56)) + 128|0);
 $58 = (($57) + ($55)|0);
 $59 = HEAP8[$58>>0]|0;
 $60 = $1;
 HEAP8[$60>>0] = $59;
 $61 = $s;
 $62 = $61 & 1;
 $bit = $62;
 $63 = $0;
 $64 = ((($63)) + 4|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = $ff_h264_norm_shift;
 $67 = (($66) + ($65)|0);
 $68 = HEAP8[$67>>0]|0;
 $69 = $68&255;
 $lps_mask = $69;
 $70 = $lps_mask;
 $71 = $0;
 $72 = ((($71)) + 4|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = $73 << $70;
 HEAP32[$72>>2] = $74;
 $75 = $lps_mask;
 $76 = $0;
 $77 = HEAP32[$76>>2]|0;
 $78 = $77 << $75;
 HEAP32[$76>>2] = $78;
 $79 = $0;
 $80 = HEAP32[$79>>2]|0;
 $81 = $80 & 65535;
 $82 = ($81|0)!=(0);
 if ($82) {
  $84 = $bit;
  STACKTOP = sp;return ($84|0);
 }
 $83 = $0;
 _refill2($83);
 $84 = $bit;
 STACKTOP = sp;return ($84|0);
}
function _refill2($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $ff_h264_norm_shift = 0, $i = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = (_get_ff_h264_norm_shift()|0);
 $ff_h264_norm_shift = $1;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = $0;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) - 1)|0;
 $7 = $3 ^ $6;
 $x = $7;
 $8 = $x;
 $9 = $8 >> 15;
 $10 = $ff_h264_norm_shift;
 $11 = (($10) + ($9)|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12&255;
 $14 = (7 - ($13))|0;
 $i = $14;
 $x = -65535;
 $15 = $0;
 $16 = ((($15)) + 16|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = HEAP8[$17>>0]|0;
 $19 = $18&255;
 $20 = $19 << 9;
 $21 = $0;
 $22 = ((($21)) + 16|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($23)) + 1|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = $26 << 1;
 $28 = (($20) + ($27))|0;
 $29 = $x;
 $30 = (($29) + ($28))|0;
 $x = $30;
 $31 = $x;
 $32 = $i;
 $33 = $31 << $32;
 $34 = $0;
 $35 = HEAP32[$34>>2]|0;
 $36 = (($35) + ($33))|0;
 HEAP32[$34>>2] = $36;
 $37 = $0;
 $38 = ((($37)) + 16|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 2|0);
 HEAP32[$38>>2] = $40;
 STACKTOP = sp;return;
}
function _getScanSet($preType,$transformSize,$channel) {
 $preType = $preType|0;
 $transformSize = $transformSize|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var $or$cond5 = 0, $scanSet = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $preType;
 $1 = $transformSize;
 $2 = $channel;
 $scanSet = 0;
 $3 = $1;
 $4 = ($3|0)==(4);
 if ($4) {
  label = 3;
 } else {
  $5 = $1;
  $6 = ($5|0)==(8);
  $7 = $2;
  $8 = ($7|0)==(0);
  $or$cond = $6 & $8;
  if ($or$cond) {
   label = 3;
  }
 }
 do {
  if ((label|0) == 3) {
   $9 = $0;
   $10 = ($9|0)>=(13);
   $11 = $0;
   $12 = ($11|0)<=(25);
   $or$cond3 = $10 & $12;
   if ($or$cond3) {
    $scanSet = 2;
    break;
   }
   $13 = $0;
   $14 = ($13|0)>=(43);
   $15 = $0;
   $16 = ($15|0)<=(55);
   $or$cond5 = $14 & $16;
   if ($or$cond5) {
    $scanSet = 1;
   }
  }
 } while(0);
 $17 = $scanSet;
 STACKTOP = sp;return ($17|0);
}
function _getScanOff($tranfoSize) {
 $tranfoSize = $tranfoSize|0;
 var $0 = 0, $1 = 0, $2 = 0, $scanOff = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $tranfoSize;
 $scanOff = 0;
 $1 = $0;
 switch ($1|0) {
 case 2:  {
  $scanOff = 0;
  break;
 }
 case 4:  {
  $scanOff = 1;
  break;
 }
 case 8:  {
  $scanOff = 2;
  break;
 }
 case 16:  {
  $scanOff = 3;
  break;
 }
 case 32:  {
  $scanOff = 4;
  break;
 }
 default: {
 }
 }
 $2 = $scanOff;
 STACKTOP = sp;return ($2|0);
}
function _control_range($num) {
 $num = +$num;
 var $0 = 0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $num;
 $2 = $1;
 $3 = $2 < 0.0;
 do {
  if ($3) {
   $0 = 0;
  } else {
   $4 = $1;
   $5 = $4 > 255.0;
   if ($5) {
    $0 = -1;
    break;
   } else {
    $6 = $1;
    $7 = (~~(($6))&255);
    $0 = $7;
    break;
   }
  }
 } while(0);
 $8 = $0;
 STACKTOP = sp;return ($8|0);
}
function _regularIDCT32x32($src,$dst) {
 $src = $src|0;
 $dst = $dst|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0;
 var $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $dctCoeff2 = 0, $i = 0, $i1 = 0, $idctCoeff1 = 0, $idctCoeff2 = 0, $j = 0;
 var $j2 = 0, $k = 0, $k3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $idctCoeff1 = sp + 8192|0;
 $idctCoeff2 = sp;
 $0 = $src;
 $1 = $dst;
 $2 = $0;
 $dctCoeff2 = $2;
 _memset(($idctCoeff1|0),0,8192)|0;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3|0)<(32);
  if (!($4)) {
   break;
  }
  $j = 0;
  while(1) {
   $5 = $j;
   $6 = ($5|0)<(32);
   if (!($6)) {
    break;
   }
   $k = 0;
   while(1) {
    $7 = $k;
    $8 = ($7|0)<(32);
    $9 = $i;
    if (!($8)) {
     break;
    }
    $10 = $k;
    $11 = (11444 + ($10<<7)|0);
    $12 = (($11) + ($9<<2)|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (+($13|0));
    $15 = $k;
    $16 = $15<<5;
    $17 = $j;
    $18 = (($16) + ($17))|0;
    $19 = $dctCoeff2;
    $20 = (($19) + ($18<<2)|0);
    $21 = +HEAPF32[$20>>2];
    $22 = $14 * $21;
    $23 = $22;
    $24 = $i;
    $25 = $24<<5;
    $26 = $j;
    $27 = (($25) + ($26))|0;
    $28 = (($idctCoeff1) + ($27<<3)|0);
    $29 = +HEAPF64[$28>>3];
    $30 = $29 + $23;
    HEAPF64[$28>>3] = $30;
    $31 = $k;
    $32 = (($31) + 1)|0;
    $k = $32;
   }
   $33 = $9<<5;
   $34 = $j;
   $35 = (($33) + ($34))|0;
   $36 = (($idctCoeff1) + ($35<<3)|0);
   $37 = +HEAPF64[$36>>3];
   $38 = $i;
   $39 = $38<<5;
   $40 = $j;
   $41 = (($39) + ($40))|0;
   $42 = (($idctCoeff1) + ($41<<3)|0);
   HEAPF64[$42>>3] = $37;
   $43 = $j;
   $44 = (($43) + 1)|0;
   $j = $44;
  }
  $45 = $i;
  $46 = (($45) + 1)|0;
  $i = $46;
 }
 _memset(($idctCoeff2|0),0,8192)|0;
 $i1 = 0;
 while(1) {
  $47 = $i1;
  $48 = ($47|0)<(32);
  if (!($48)) {
   break;
  }
  $j2 = 0;
  while(1) {
   $49 = $j2;
   $50 = ($49|0)<(32);
   if (!($50)) {
    break;
   }
   $k3 = 0;
   while(1) {
    $51 = $k3;
    $52 = ($51|0)<(32);
    $53 = $i1;
    $54 = $53<<5;
    if (!($52)) {
     break;
    }
    $55 = $k3;
    $56 = (($54) + ($55))|0;
    $57 = (($idctCoeff1) + ($56<<3)|0);
    $58 = +HEAPF64[$57>>3];
    $59 = $j2;
    $60 = $k3;
    $61 = (11444 + ($60<<7)|0);
    $62 = (($61) + ($59<<2)|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (+($63|0));
    $65 = $58 * $64;
    $66 = $i1;
    $67 = $66<<5;
    $68 = $j2;
    $69 = (($67) + ($68))|0;
    $70 = (($idctCoeff2) + ($69<<3)|0);
    $71 = +HEAPF64[$70>>3];
    $72 = $71 + $65;
    HEAPF64[$70>>3] = $72;
    $73 = $k3;
    $74 = (($73) + 1)|0;
    $k3 = $74;
   }
   $75 = $j2;
   $76 = (($54) + ($75))|0;
   $77 = (($idctCoeff2) + ($76<<3)|0);
   $78 = +HEAPF64[$77>>3];
   $79 = $78 / 128.0;
   $80 = $79 / 128.0;
   $81 = $80 / 32.0;
   $82 = (+_round($81));
   $83 = $82;
   $84 = $i1;
   $85 = $84<<5;
   $86 = $j2;
   $87 = (($85) + ($86))|0;
   $88 = $1;
   $89 = (($88) + ($87<<2)|0);
   HEAPF32[$89>>2] = $83;
   $90 = $j2;
   $91 = (($90) + 1)|0;
   $j2 = $91;
  }
  $92 = $i1;
  $93 = (($92) + 1)|0;
  $i1 = $93;
 }
 STACKTOP = sp;return;
}
function _regularIDCT16x16($src,$dst) {
 $src = $src|0;
 $dst = $dst|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0;
 var $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $dctCoeff2 = 0, $i = 0, $i1 = 0, $idctCoeff1 = 0, $idctCoeff2 = 0, $j = 0;
 var $j2 = 0, $k = 0, $k3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $idctCoeff1 = sp + 2048|0;
 $idctCoeff2 = sp;
 $0 = $src;
 $1 = $dst;
 $2 = $0;
 $dctCoeff2 = $2;
 _memset(($idctCoeff1|0),0,2048)|0;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3|0)<(16);
  if (!($4)) {
   break;
  }
  $j = 0;
  while(1) {
   $5 = $j;
   $6 = ($5|0)<(16);
   if (!($6)) {
    break;
   }
   $k = 0;
   while(1) {
    $7 = $k;
    $8 = ($7|0)<(16);
    $9 = $i;
    if (!($8)) {
     break;
    }
    $10 = $k;
    $11 = (9396 + ($10<<6)|0);
    $12 = (($11) + ($9<<2)|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (+($13|0));
    $15 = $k;
    $16 = $15<<4;
    $17 = $j;
    $18 = (($16) + ($17))|0;
    $19 = $dctCoeff2;
    $20 = (($19) + ($18<<2)|0);
    $21 = +HEAPF32[$20>>2];
    $22 = $14 * $21;
    $23 = $22;
    $24 = $i;
    $25 = $24<<4;
    $26 = $j;
    $27 = (($25) + ($26))|0;
    $28 = (($idctCoeff1) + ($27<<3)|0);
    $29 = +HEAPF64[$28>>3];
    $30 = $29 + $23;
    HEAPF64[$28>>3] = $30;
    $31 = $k;
    $32 = (($31) + 1)|0;
    $k = $32;
   }
   $33 = $9<<4;
   $34 = $j;
   $35 = (($33) + ($34))|0;
   $36 = (($idctCoeff1) + ($35<<3)|0);
   $37 = +HEAPF64[$36>>3];
   $38 = $i;
   $39 = $38<<4;
   $40 = $j;
   $41 = (($39) + ($40))|0;
   $42 = (($idctCoeff1) + ($41<<3)|0);
   HEAPF64[$42>>3] = $37;
   $43 = $j;
   $44 = (($43) + 1)|0;
   $j = $44;
  }
  $45 = $i;
  $46 = (($45) + 1)|0;
  $i = $46;
 }
 _memset(($idctCoeff2|0),0,2048)|0;
 $i1 = 0;
 while(1) {
  $47 = $i1;
  $48 = ($47|0)<(16);
  if (!($48)) {
   break;
  }
  $j2 = 0;
  while(1) {
   $49 = $j2;
   $50 = ($49|0)<(16);
   if (!($50)) {
    break;
   }
   $k3 = 0;
   while(1) {
    $51 = $k3;
    $52 = ($51|0)<(16);
    $53 = $i1;
    $54 = $53<<4;
    if (!($52)) {
     break;
    }
    $55 = $k3;
    $56 = (($54) + ($55))|0;
    $57 = (($idctCoeff1) + ($56<<3)|0);
    $58 = +HEAPF64[$57>>3];
    $59 = $j2;
    $60 = $k3;
    $61 = (9396 + ($60<<6)|0);
    $62 = (($61) + ($59<<2)|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (+($63|0));
    $65 = $58 * $64;
    $66 = $i1;
    $67 = $66<<4;
    $68 = $j2;
    $69 = (($67) + ($68))|0;
    $70 = (($idctCoeff2) + ($69<<3)|0);
    $71 = +HEAPF64[$70>>3];
    $72 = $71 + $65;
    HEAPF64[$70>>3] = $72;
    $73 = $k3;
    $74 = (($73) + 1)|0;
    $k3 = $74;
   }
   $75 = $j2;
   $76 = (($54) + ($75))|0;
   $77 = (($idctCoeff2) + ($76<<3)|0);
   $78 = +HEAPF64[$77>>3];
   $79 = $78 / 128.0;
   $80 = $79 / 128.0;
   $81 = $80 / 32.0;
   $82 = (+_round($81));
   $83 = $82;
   $84 = $i1;
   $85 = $84<<4;
   $86 = $j2;
   $87 = (($85) + ($86))|0;
   $88 = $1;
   $89 = (($88) + ($87<<2)|0);
   HEAPF32[$89>>2] = $83;
   $90 = $j2;
   $91 = (($90) + 1)|0;
   $j2 = $91;
  }
  $92 = $i1;
  $93 = (($92) + 1)|0;
  $i1 = $93;
 }
 STACKTOP = sp;return;
}
function _regularIDCT8x8($src,$dst) {
 $src = $src|0;
 $dst = $dst|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0;
 var $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $dctCoeff2 = 0, $i = 0, $i1 = 0, $idctCoeff1 = 0, $idctCoeff2 = 0, $j = 0;
 var $j2 = 0, $k = 0, $k3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $idctCoeff1 = sp + 512|0;
 $idctCoeff2 = sp;
 $0 = $src;
 $1 = $dst;
 $2 = $0;
 $dctCoeff2 = $2;
 _memset(($idctCoeff1|0),0,512)|0;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3|0)<(8);
  if (!($4)) {
   break;
  }
  $j = 0;
  while(1) {
   $5 = $j;
   $6 = ($5|0)<(8);
   if (!($6)) {
    break;
   }
   $k = 0;
   while(1) {
    $7 = $k;
    $8 = ($7|0)<(8);
    $9 = $i;
    if (!($8)) {
     break;
    }
    $10 = $k;
    $11 = (8884 + ($10<<5)|0);
    $12 = (($11) + ($9<<2)|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (+($13|0));
    $15 = $k;
    $16 = $15<<3;
    $17 = $j;
    $18 = (($16) + ($17))|0;
    $19 = $dctCoeff2;
    $20 = (($19) + ($18<<2)|0);
    $21 = +HEAPF32[$20>>2];
    $22 = $14 * $21;
    $23 = $22;
    $24 = $i;
    $25 = $24<<3;
    $26 = $j;
    $27 = (($25) + ($26))|0;
    $28 = (($idctCoeff1) + ($27<<3)|0);
    $29 = +HEAPF64[$28>>3];
    $30 = $29 + $23;
    HEAPF64[$28>>3] = $30;
    $31 = $k;
    $32 = (($31) + 1)|0;
    $k = $32;
   }
   $33 = $9<<3;
   $34 = $j;
   $35 = (($33) + ($34))|0;
   $36 = (($idctCoeff1) + ($35<<3)|0);
   $37 = +HEAPF64[$36>>3];
   $38 = $i;
   $39 = $38<<3;
   $40 = $j;
   $41 = (($39) + ($40))|0;
   $42 = (($idctCoeff1) + ($41<<3)|0);
   HEAPF64[$42>>3] = $37;
   $43 = $j;
   $44 = (($43) + 1)|0;
   $j = $44;
  }
  $45 = $i;
  $46 = (($45) + 1)|0;
  $i = $46;
 }
 _memset(($idctCoeff2|0),0,512)|0;
 $i1 = 0;
 while(1) {
  $47 = $i1;
  $48 = ($47|0)<(8);
  if (!($48)) {
   break;
  }
  $j2 = 0;
  while(1) {
   $49 = $j2;
   $50 = ($49|0)<(8);
   if (!($50)) {
    break;
   }
   $k3 = 0;
   while(1) {
    $51 = $k3;
    $52 = ($51|0)<(8);
    $53 = $i1;
    $54 = $53<<3;
    if (!($52)) {
     break;
    }
    $55 = $k3;
    $56 = (($54) + ($55))|0;
    $57 = (($idctCoeff1) + ($56<<3)|0);
    $58 = +HEAPF64[$57>>3];
    $59 = $j2;
    $60 = $k3;
    $61 = (8884 + ($60<<5)|0);
    $62 = (($61) + ($59<<2)|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (+($63|0));
    $65 = $58 * $64;
    $66 = $i1;
    $67 = $66<<3;
    $68 = $j2;
    $69 = (($67) + ($68))|0;
    $70 = (($idctCoeff2) + ($69<<3)|0);
    $71 = +HEAPF64[$70>>3];
    $72 = $71 + $65;
    HEAPF64[$70>>3] = $72;
    $73 = $k3;
    $74 = (($73) + 1)|0;
    $k3 = $74;
   }
   $75 = $j2;
   $76 = (($54) + ($75))|0;
   $77 = (($idctCoeff2) + ($76<<3)|0);
   $78 = +HEAPF64[$77>>3];
   $79 = $78 / 128.0;
   $80 = $79 / 128.0;
   $81 = $80 / 32.0;
   $82 = (+_round($81));
   $83 = $82;
   $84 = $i1;
   $85 = $84<<3;
   $86 = $j2;
   $87 = (($85) + ($86))|0;
   $88 = $1;
   $89 = (($88) + ($87<<2)|0);
   HEAPF32[$89>>2] = $83;
   $90 = $j2;
   $91 = (($90) + 1)|0;
   $j2 = $91;
  }
  $92 = $i1;
  $93 = (($92) + 1)|0;
  $i1 = $93;
 }
 STACKTOP = sp;return;
}
function _regularIDCT4x4($src,$dst) {
 $src = $src|0;
 $dst = $dst|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0;
 var $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $dctCoeff2 = 0, $i = 0, $i1 = 0, $idctCoeff1 = 0, $idctCoeff2 = 0, $j = 0, $j2 = 0;
 var $k = 0, $k3 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $idctCoeff1 = sp + 128|0;
 $idctCoeff2 = sp;
 $0 = $src;
 $1 = $dst;
 $2 = $0;
 $dctCoeff2 = $2;
 dest=$idctCoeff1; stop=dest+128|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3|0)<(4);
  if (!($4)) {
   break;
  }
  $j = 0;
  while(1) {
   $5 = $j;
   $6 = ($5|0)<(4);
   if (!($6)) {
    break;
   }
   $k = 0;
   while(1) {
    $7 = $k;
    $8 = ($7|0)<(4);
    $9 = $i;
    if (!($8)) {
     break;
    }
    $10 = $k;
    $11 = (8756 + ($10<<4)|0);
    $12 = (($11) + ($9<<2)|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (+($13|0));
    $15 = $k;
    $16 = $15<<2;
    $17 = $j;
    $18 = (($16) + ($17))|0;
    $19 = $dctCoeff2;
    $20 = (($19) + ($18<<2)|0);
    $21 = +HEAPF32[$20>>2];
    $22 = $14 * $21;
    $23 = $22;
    $24 = $i;
    $25 = $24<<2;
    $26 = $j;
    $27 = (($25) + ($26))|0;
    $28 = (($idctCoeff1) + ($27<<3)|0);
    $29 = +HEAPF64[$28>>3];
    $30 = $29 + $23;
    HEAPF64[$28>>3] = $30;
    $31 = $k;
    $32 = (($31) + 1)|0;
    $k = $32;
   }
   $33 = $9<<2;
   $34 = $j;
   $35 = (($33) + ($34))|0;
   $36 = (($idctCoeff1) + ($35<<3)|0);
   $37 = +HEAPF64[$36>>3];
   $38 = $i;
   $39 = $38<<2;
   $40 = $j;
   $41 = (($39) + ($40))|0;
   $42 = (($idctCoeff1) + ($41<<3)|0);
   HEAPF64[$42>>3] = $37;
   $43 = $j;
   $44 = (($43) + 1)|0;
   $j = $44;
  }
  $45 = $i;
  $46 = (($45) + 1)|0;
  $i = $46;
 }
 dest=$idctCoeff2; stop=dest+128|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $i1 = 0;
 while(1) {
  $47 = $i1;
  $48 = ($47|0)<(4);
  if (!($48)) {
   break;
  }
  $j2 = 0;
  while(1) {
   $49 = $j2;
   $50 = ($49|0)<(4);
   if (!($50)) {
    break;
   }
   $k3 = 0;
   while(1) {
    $51 = $k3;
    $52 = ($51|0)<(4);
    $53 = $i1;
    $54 = $53<<2;
    if (!($52)) {
     break;
    }
    $55 = $k3;
    $56 = (($54) + ($55))|0;
    $57 = (($idctCoeff1) + ($56<<3)|0);
    $58 = +HEAPF64[$57>>3];
    $59 = $j2;
    $60 = $k3;
    $61 = (8756 + ($60<<4)|0);
    $62 = (($61) + ($59<<2)|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (+($63|0));
    $65 = $58 * $64;
    $66 = $i1;
    $67 = $66<<2;
    $68 = $j2;
    $69 = (($67) + ($68))|0;
    $70 = (($idctCoeff2) + ($69<<3)|0);
    $71 = +HEAPF64[$70>>3];
    $72 = $71 + $65;
    HEAPF64[$70>>3] = $72;
    $73 = $k3;
    $74 = (($73) + 1)|0;
    $k3 = $74;
   }
   $75 = $j2;
   $76 = (($54) + ($75))|0;
   $77 = (($idctCoeff2) + ($76<<3)|0);
   $78 = +HEAPF64[$77>>3];
   $79 = $78 / 128.0;
   $80 = $79 / 128.0;
   $81 = $80 / 32.0;
   $82 = $81;
   $83 = $i1;
   $84 = $83<<2;
   $85 = $j2;
   $86 = (($84) + ($85))|0;
   $87 = $1;
   $88 = (($87) + ($86<<2)|0);
   HEAPF32[$88>>2] = $82;
   $89 = $j2;
   $90 = (($89) + 1)|0;
   $j2 = $90;
  }
  $91 = $i1;
  $92 = (($91) + 1)|0;
  $i1 = $92;
 }
 STACKTOP = sp;return;
}
function _regularIDST4x4($src,$dst) {
 $src = $src|0;
 $dst = $dst|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0;
 var $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $dctCoeff2 = 0, $i = 0, $i1 = 0, $idctCoeff1 = 0, $idctCoeff2 = 0, $j = 0, $j2 = 0;
 var $k = 0, $k3 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $idctCoeff1 = sp + 128|0;
 $idctCoeff2 = sp;
 $0 = $src;
 $1 = $dst;
 $2 = $0;
 $dctCoeff2 = $2;
 dest=$idctCoeff1; stop=dest+128|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3|0)<(4);
  if (!($4)) {
   break;
  }
  $j = 0;
  while(1) {
   $5 = $j;
   $6 = ($5|0)<(4);
   if (!($6)) {
    break;
   }
   $k = 0;
   while(1) {
    $7 = $k;
    $8 = ($7|0)<(4);
    $9 = $i;
    if (!($8)) {
     break;
    }
    $10 = $k;
    $11 = (19636 + ($10<<4)|0);
    $12 = (($11) + ($9<<2)|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (+($13|0));
    $15 = $k;
    $16 = $15<<2;
    $17 = $j;
    $18 = (($16) + ($17))|0;
    $19 = $dctCoeff2;
    $20 = (($19) + ($18<<2)|0);
    $21 = +HEAPF32[$20>>2];
    $22 = $14 * $21;
    $23 = $22;
    $24 = $i;
    $25 = $24<<2;
    $26 = $j;
    $27 = (($25) + ($26))|0;
    $28 = (($idctCoeff1) + ($27<<3)|0);
    $29 = +HEAPF64[$28>>3];
    $30 = $29 + $23;
    HEAPF64[$28>>3] = $30;
    $31 = $k;
    $32 = (($31) + 1)|0;
    $k = $32;
   }
   $33 = $9<<2;
   $34 = $j;
   $35 = (($33) + ($34))|0;
   $36 = (($idctCoeff1) + ($35<<3)|0);
   $37 = +HEAPF64[$36>>3];
   $38 = $i;
   $39 = $38<<2;
   $40 = $j;
   $41 = (($39) + ($40))|0;
   $42 = (($idctCoeff1) + ($41<<3)|0);
   HEAPF64[$42>>3] = $37;
   $43 = $j;
   $44 = (($43) + 1)|0;
   $j = $44;
  }
  $45 = $i;
  $46 = (($45) + 1)|0;
  $i = $46;
 }
 dest=$idctCoeff2; stop=dest+128|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $i1 = 0;
 while(1) {
  $47 = $i1;
  $48 = ($47|0)<(4);
  if (!($48)) {
   break;
  }
  $j2 = 0;
  while(1) {
   $49 = $j2;
   $50 = ($49|0)<(4);
   if (!($50)) {
    break;
   }
   $k3 = 0;
   while(1) {
    $51 = $k3;
    $52 = ($51|0)<(4);
    $53 = $i1;
    $54 = $53<<2;
    if (!($52)) {
     break;
    }
    $55 = $k3;
    $56 = (($54) + ($55))|0;
    $57 = (($idctCoeff1) + ($56<<3)|0);
    $58 = +HEAPF64[$57>>3];
    $59 = $j2;
    $60 = $k3;
    $61 = (19636 + ($60<<4)|0);
    $62 = (($61) + ($59<<2)|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (+($63|0));
    $65 = $58 * $64;
    $66 = $i1;
    $67 = $66<<2;
    $68 = $j2;
    $69 = (($67) + ($68))|0;
    $70 = (($idctCoeff2) + ($69<<3)|0);
    $71 = +HEAPF64[$70>>3];
    $72 = $71 + $65;
    HEAPF64[$70>>3] = $72;
    $73 = $k3;
    $74 = (($73) + 1)|0;
    $k3 = $74;
   }
   $75 = $j2;
   $76 = (($54) + ($75))|0;
   $77 = (($idctCoeff2) + ($76<<3)|0);
   $78 = +HEAPF64[$77>>3];
   $79 = $78 / 128.0;
   $80 = $79 / 128.0;
   $81 = $80 / 32.0;
   $82 = $81;
   $83 = $i1;
   $84 = $83<<2;
   $85 = $j2;
   $86 = (($84) + ($85))|0;
   $87 = $1;
   $88 = (($87) + ($86<<2)|0);
   HEAPF32[$88>>2] = $82;
   $89 = $j2;
   $90 = (($89) + 1)|0;
   $j2 = $90;
  }
  $91 = $i1;
  $92 = (($91) + 1)|0;
  $i1 = $92;
 }
 STACKTOP = sp;return;
}
function _regularIDCT($size,$src,$dst,$channel) {
 $size = $size|0;
 $src = $src|0;
 $dst = $dst|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $IDCTFunc = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $size;
 $1 = $src;
 $2 = $dst;
 $3 = $channel;
 $4 = $0;
 L1: do {
  switch ($4|0) {
  case 32:  {
   $IDCTFunc = 22;
   break;
  }
  case 16:  {
   $IDCTFunc = 23;
   break;
  }
  case 8:  {
   $IDCTFunc = 24;
   break;
  }
  case 4:  {
   $5 = $3;
   $6 = ($5|0)==(0);
   if ($6) {
    $IDCTFunc = 25;
    break L1;
   } else {
    $IDCTFunc = 26;
    break L1;
   }
   break;
  }
  default: {
   $IDCTFunc = 0;
  }
  }
 } while(0);
 $7 = $IDCTFunc;
 $8 = ($7|0)==(0|0);
 if ($8) {
  HEAP32[$vararg_buffer>>2] = 382867;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 419;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 382946;
  (_printf(382822,$vararg_buffer)|0);
  _exit(-1);
  // unreachable;
 } else {
  $9 = $IDCTFunc;
  $10 = $1;
  $11 = $2;
  FUNCTION_TABLE_vii[$9 & 31]($10,$11);
  STACKTOP = sp;return;
 }
}
function _cbcr_qp_from_y_qp($qp_y) {
 $qp_y = $qp_y|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $qp_y;
 $2 = $1;
 $3 = ($2|0)<(30);
 $4 = $1;
 do {
  if ($3) {
   $0 = $4;
  } else {
   $5 = ($4|0)<(35);
   $6 = $1;
   if ($5) {
    $7 = (($6) - 1)|0;
    $0 = $7;
    break;
   }
   $8 = ($6|0)<(37);
   $9 = $1;
   if ($8) {
    $10 = (($9) - 2)|0;
    $0 = $10;
    break;
   }
   $11 = ($9|0)<(39);
   $12 = $1;
   if ($11) {
    $13 = (($12) - 3)|0;
    $0 = $13;
    break;
   }
   $14 = ($12|0)<(41);
   $15 = $1;
   if ($14) {
    $16 = (($15) - 4)|0;
    $0 = $16;
    break;
   }
   $17 = ($15|0)<(43);
   $18 = $1;
   if ($17) {
    $19 = (($18) - 5)|0;
    $0 = $19;
    break;
   } else {
    $20 = (($18) - 6)|0;
    $0 = $20;
    break;
   }
  }
 } while(0);
 $21 = $0;
 STACKTOP = sp;return ($21|0);
}
function _regularIQuantization($size,$src,$dst,$qp,$channel) {
 $size = $size|0;
 $src = $src|0;
 $dst = $dst|0;
 $qp = $qp|0;
 $channel = $channel|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $sizeShift = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $size;
 $1 = $src;
 $2 = $dst;
 $3 = $qp;
 $4 = $channel;
 $sizeShift = 0;
 $5 = $0;
 switch ($5|0) {
 case 32:  {
  $sizeShift = 2;
  break;
 }
 case 16:  {
  $sizeShift = 4;
  break;
 }
 case 8:  {
  $sizeShift = 8;
  break;
 }
 case 4:  {
  $sizeShift = 16;
  break;
 }
 default: {
  $sizeShift = 0;
 }
 }
 $6 = $4;
 $7 = ($6|0)==(1);
 if ($7) {
  $8 = $3;
  $9 = (_cbcr_qp_from_y_qp($8)|0);
  $3 = $9;
 }
 $i = 0;
 while(1) {
  $10 = $i;
  $11 = $0;
  $12 = $0;
  $13 = Math_imul($11, $12)|0;
  $14 = ($10|0)<($13|0);
  if (!($14)) {
   break;
  }
  $15 = $i;
  $16 = $1;
  $17 = (($16) + ($15<<2)|0);
  $18 = +HEAPF32[$17>>2];
  $19 = $3;
  $20 = (384 + ($19<<2)|0);
  $21 = +HEAPF32[$20>>2];
  $22 = $18 * $21;
  $23 = $sizeShift;
  $24 = (+($23|0));
  $25 = $22 * $24;
  $26 = $i;
  $27 = $2;
  $28 = (($27) + ($26<<2)|0);
  HEAPF32[$28>>2] = $25;
  $29 = $i;
  $30 = (($29) + 1)|0;
  $i = $30;
 }
 STACKTOP = sp;return;
}
function ___getTypeName($ti) {
 $ti = $ti|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $ti;
 $2 = $1; //@line 36 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $0 = $2; //@line 36 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 36 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $4 = ((($3)) + 4|0); //@line 98 "/emsdk_portable/emscripten/tag-1.35.0/system/include/libcxx/typeinfo"
 $5 = HEAP32[$4>>2]|0; //@line 98 "/emsdk_portable/emscripten/tag-1.35.0/system/include/libcxx/typeinfo"
 $6 = (___strdup($5)|0); //@line 36 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return ($6|0); //@line 36 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = (__ZN10emscripten8internal6TypeIDIvE3getEv()|0); //@line 99 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_void(($1|0),(382958|0)); //@line 99 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN10emscripten8internal6TypeIDIbE3getEv()|0); //@line 101 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_bool(($2|0),(382963|0),1,1,0); //@line 101 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc(382968); //@line 103 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc(382973); //@line 104 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc(382985); //@line 105 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc(382999); //@line 106 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerItEEvPKc(383005); //@line 107 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc(383020); //@line 108 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc(383024); //@line 109 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc(383037); //@line 110 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerImEEvPKc(383042); //@line 111 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc(383056); //@line 113 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc(383062); //@line 114 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = (__ZN10emscripten8internal6TypeIDINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0); //@line 116 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_std_string(($3|0),(383069|0)); //@line 116 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $4 = (__ZN10emscripten8internal6TypeIDINSt3__112basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0); //@line 117 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_std_string(($4|0),(383081|0)); //@line 117 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $5 = (__ZN10emscripten8internal6TypeIDINSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 118 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_std_wstring(($5|0),4,(383114|0)); //@line 118 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $6 = (__ZN10emscripten8internal6TypeIDINS_3valEE3getEv()|0); //@line 119 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_emval(($6|0),(383127|0)); //@line 119 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc(383143); //@line 127 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(383173); //@line 128 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(383210); //@line 129 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(383249); //@line 131 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(383280); //@line 132 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(383320); //@line 133 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(383349); //@line 134 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc(383387); //@line 135 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc(383417); //@line 136 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(383456); //@line 138 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(383488); //@line 139 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(383521); //@line 140 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(383554); //@line 141 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(383588); //@line 142 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(383621); //@line 143 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc(383655); //@line 145 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc(383686); //@line 146 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc(383718); //@line 147 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 148 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDIvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIvE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIbE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIbE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIcE3getEv()|0); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = -128 << 24 >> 24; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $4 = 127 << 24 >> 24; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_integer(($1|0),($2|0),1,($3|0),($4|0)); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 51 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIaE3getEv()|0); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = -128 << 24 >> 24; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $4 = 127 << 24 >> 24; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_integer(($1|0),($2|0),1,($3|0),($4|0)); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 51 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIhE3getEv()|0); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = 0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $4 = 255; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_integer(($1|0),($2|0),1,($3|0),($4|0)); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 51 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIsE3getEv()|0); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = -32768 << 16 >> 16; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $4 = 32767 << 16 >> 16; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_integer(($1|0),($2|0),2,($3|0),($4|0)); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 51 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerItEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDItE3getEv()|0); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = 0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $4 = 65535; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_integer(($1|0),($2|0),2,($3|0),($4|0)); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 51 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIiE3getEv()|0); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_integer(($1|0),($2|0),4,-2147483648,2147483647); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 51 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_integer(($1|0),($2|0),4,0,-1); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 51 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIlE3getEv()|0); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_integer(($1|0),($2|0),4,-2147483648,2147483647); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 51 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerImEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDImE3getEv()|0); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_integer(($1|0),($2|0),4,0,-1); //@line 50 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 51 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIfE3getEv()|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_float(($1|0),($2|0),4); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 57 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = $0; //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_float(($1|0),($2|0),8); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 57 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINSt3__112basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_3valEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv()|0); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 $3 = $0; //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($1|0),($2|0),($3|0)); //@line 92 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 93 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function ___cxx_global_var_init() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(383755); //@line 96 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
 return; //@line 96 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDIvE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (248|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIbE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (256|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (168|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (144|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (112|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (104|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIcE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIcE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIcE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (264|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIaE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIaE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIaE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (280|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIhE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIhE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIhE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (272|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIsE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIsE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIsE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (288|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDItE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDItE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDItE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (296|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIiE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIiE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIiE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (304|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIjE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIjE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIjE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (312|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIlE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIlE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIlE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (320|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDImE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDImE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDImE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (328|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIfE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIfE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIfE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (336|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIdE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIdE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIdE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (344|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (96|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (88|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (80|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (72|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (64|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 3; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (56|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (48|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (40|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (32|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (24|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (16|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv()|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
 return ($0|0); //@line 73 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (8|0); //@line 56 "/emsdk_portable/emscripten/tag-1.35.0/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7; //@line 78 "/emsdk_portable/emscripten/tag-1.35.0/system/lib/embind/bind.cpp"
}
function __GLOBAL__sub_I_bind_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init();
 return;
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$0) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($this|0)==($thrown_type|0);
 return ($1|0);
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,200,216,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = ((($info)) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = ((($info)) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = ((($info)) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = ((($7)) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 31]($2,$info,$10,1);
    $11 = ((($info)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = ((($info)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = ((($info)) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = ((($info)) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = ((($info)) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = ((($info)) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = ((($info)) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = ((($info)) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 31]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 31]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $3 = ((($this)) + 16|0);
   $4 = ((($this)) + 12|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (((($this)) + 16|0) + ($5<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
   $7 = ($5|0)>(1);
   if ($7) {
    $8 = ((($this)) + 24|0);
    $9 = ((($info)) + 54|0);
    $p$0 = $8;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $10 = HEAP8[$9>>0]|0;
     $11 = ($10<<24>>24)==(0);
     if (!($11)) {
      break L1;
     }
     $12 = ((($p$0)) + 8|0);
     $13 = ($12>>>0)<($6>>>0);
     if ($13) {
      $p$0 = $12;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = ((($0)) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = ((($info)) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = ((($info)) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = ((($info)) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = ((($info)) + 16|0);
 $11 = ((($info)) + 20|0);
 $12 = ((($info)) + 24|0);
 $13 = ((($info)) + 28|0);
 $14 = ((($info)) + 32|0);
 $15 = ((($info)) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 L1: do {
  if ($16) {
   $17 = ((($info)) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = ((($18)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 31]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = ((($info)) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = ((($24)) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 31]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   switch ($27|0) {
   case 0:  {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $dst_ptr$0 = 0;
    break L1;
   }
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = ((($info)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = ((($info)) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = ((($info)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = ((($info)) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = ((($info)) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = ((($info)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = ((($info)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = ((($info)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = ((($info)) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = ((($info)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = ((($info)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = ((($info)) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off023 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off025 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0;
 var $p$024 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $57 = ((($this)) + 16|0);
    $58 = ((($this)) + 12|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (((($this)) + 16|0) + ($59<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($57,$info,$current_ptr,$path_below,$use_strcmp);
    $61 = ((($this)) + 24|0);
    $62 = ($59|0)>(1);
    if (!($62)) {
     break;
    }
    $63 = ((($this)) + 8|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = $64 & 2;
    $66 = ($65|0)==(0);
    if ($66) {
     $67 = ((($info)) + 36|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ($68|0)==(1);
     if (!($69)) {
      $75 = $64 & 1;
      $76 = ($75|0)==(0);
      if ($76) {
       $79 = ((($info)) + 54|0);
       $p2$2 = $61;
       while(1) {
        $88 = HEAP8[$79>>0]|0;
        $89 = ($88<<24>>24)==(0);
        if (!($89)) {
         break L1;
        }
        $90 = HEAP32[$67>>2]|0;
        $91 = ($90|0)==(1);
        if ($91) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $92 = ((($p2$2)) + 8|0);
        $93 = ($92>>>0)<($60>>>0);
        if ($93) {
         $p2$2 = $92;
        } else {
         break L1;
        }
       }
      }
      $77 = ((($info)) + 24|0);
      $78 = ((($info)) + 54|0);
      $p2$1 = $61;
      while(1) {
       $80 = HEAP8[$78>>0]|0;
       $81 = ($80<<24>>24)==(0);
       if (!($81)) {
        break L1;
       }
       $82 = HEAP32[$67>>2]|0;
       $83 = ($82|0)==(1);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = ($84|0)==(1);
        if ($85) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $86 = ((($p2$1)) + 8|0);
       $87 = ($86>>>0)<($60>>>0);
       if ($87) {
        $p2$1 = $86;
       } else {
        break L1;
       }
      }
     }
    }
    $70 = ((($info)) + 54|0);
    $p2$0 = $61;
    while(1) {
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $73 = ((($p2$0)) + 8|0);
     $74 = ($73>>>0)<($60>>>0);
     if ($74) {
      $p2$0 = $73;
     } else {
      break L1;
     }
    }
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($this)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (((($this)) + 16|0) + ($24<<3)|0);
     $26 = ((($info)) + 52|0);
     $27 = ((($info)) + 53|0);
     $28 = ((($info)) + 54|0);
     $29 = ((($this)) + 8|0);
     $30 = ((($info)) + 24|0);
     $31 = ($24|0)>(0);
     L34: do {
      if ($31) {
       $32 = ((($this)) + 16|0);
       $does_dst_type_point_to_our_static_type$0$off023 = 0;$is_dst_type_derived_from_static_type$0$off025 = 0;$p$024 = $32;
       while(1) {
        HEAP8[$26>>0] = 0;
        HEAP8[$27>>0] = 0;
        __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$024,$info,$current_ptr,$current_ptr,1,$use_strcmp);
        $33 = HEAP8[$28>>0]|0;
        $34 = ($33<<24>>24)==(0);
        if (!($34)) {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off025;
         label = 20;
         break L34;
        }
        $35 = HEAP8[$27>>0]|0;
        $36 = ($35<<24>>24)==(0);
        do {
         if ($36) {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off025;
         } else {
          $37 = HEAP8[$26>>0]|0;
          $38 = ($37<<24>>24)==(0);
          if ($38) {
           $44 = HEAP32[$29>>2]|0;
           $45 = $44 & 1;
           $46 = ($45|0)==(0);
           if ($46) {
            $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = 1;
            label = 20;
            break L34;
           } else {
            $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = 1;
            break;
           }
          }
          $39 = HEAP32[$30>>2]|0;
          $40 = ($39|0)==(1);
          if ($40) {
           break L34;
          }
          $41 = HEAP32[$29>>2]|0;
          $42 = $41 & 2;
          $43 = ($42|0)==(0);
          if ($43) {
           break L34;
          } else {
           $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
          }
         }
        } while(0);
        $47 = ((($p$024)) + 8|0);
        $48 = ($47>>>0)<($25>>>0);
        if ($48) {
         $does_dst_type_point_to_our_static_type$0$off023 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off025 = $is_dst_type_derived_from_static_type$1$off0;$p$024 = $47;
        } else {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
         label = 20;
         break;
        }
       }
      } else {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0;$is_dst_type_derived_from_static_type$2$off0 = 0;
       label = 20;
      }
     } while(0);
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $49 = ((($info)) + 40|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = (($50) + 1)|0;
        HEAP32[$49>>2] = $51;
        $52 = ((($info)) + 36|0);
        $53 = HEAP32[$52>>2]|0;
        $54 = ($53|0)==(1);
        if ($54) {
         $55 = HEAP32[$30>>2]|0;
         $56 = ($55|0)==(2);
         if ($56) {
          HEAP8[$28>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 31]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 31]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = ((($this)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 31]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($info)) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($info)) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = ((($27)) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 31]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = ((($info)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = ((($info)) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = ((($info)) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = ((($info)) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = ((($info)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = ((($info)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = ((($info)) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = ((($info)) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = ((($info)) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = ((($info)) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = ((($info)) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = ((($info)) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = ((($info)) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($info)) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ((($info)) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ((($this)) + 16|0);
  $8 = ((($this)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (((($this)) + 16|0) + ($9<<3)|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  L4: do {
   if ($11) {
    $12 = ((($this)) + 24|0);
    $13 = ((($info)) + 24|0);
    $14 = ((($this)) + 8|0);
    $15 = ((($info)) + 54|0);
    $p$0 = $12;
    while(1) {
     $16 = HEAP8[$15>>0]|0;
     $17 = ($16<<24>>24)==(0);
     if (!($17)) {
      break L4;
     }
     $18 = HEAP8[$3>>0]|0;
     $19 = ($18<<24>>24)==(0);
     if ($19) {
      $25 = HEAP8[$5>>0]|0;
      $26 = ($25<<24>>24)==(0);
      if (!($26)) {
       $27 = HEAP32[$14>>2]|0;
       $28 = $27 & 1;
       $29 = ($28|0)==(0);
       if ($29) {
        break L4;
       }
      }
     } else {
      $20 = HEAP32[$13>>2]|0;
      $21 = ($20|0)==(1);
      if ($21) {
       break L4;
      }
      $22 = HEAP32[$14>>2]|0;
      $23 = $22 & 2;
      $24 = ($23|0)==(0);
      if ($24) {
       break L4;
      }
     }
     HEAP8[$3>>0] = 0;
     HEAP8[$5>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $30 = ((($p$0)) + 8|0);
     $31 = ($30>>>0)<($10>>>0);
     if ($31) {
      $p$0 = $30;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 31]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function _round($x) {
 $x = +$x;
 var $$0 = 0.0, $$x = 0.0, $$y$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0.0, $8 = 0, $9 = 0.0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 $5 = ($4>>>0)>(1074);
 do {
  if ($5) {
   $$0 = $x;
  } else {
   $6 = ($1|0)<(0);
   $7 = -$x;
   $$x = $6 ? $7 : $x;
   $8 = ($4>>>0)<(1022);
   if ($8) {
    $9 = $x * 0.0;
    $$0 = $9;
    break;
   }
   $10 = $$x + 4503599627370496.0;
   $11 = $10 + -4503599627370496.0;
   $12 = $11 - $$x;
   $13 = $12 > 0.5;
   if ($13) {
    $14 = $$x + $12;
    $15 = $14 + -1.0;
    $y$0 = $15;
   } else {
    $16 = !($12 <= -0.5);
    $17 = $$x + $12;
    if ($16) {
     $y$0 = $17;
    } else {
     $18 = $17 + 1.0;
     $y$0 = $18;
    }
   }
   $19 = -$y$0;
   $$y$0 = $6 ? $19 : $y$0;
   $$0 = $$y$0;
  }
 } while(0);
 return (+$$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 switch ($4|0) {
 case 0:  {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  break;
 }
 case 2047:  {
  $$0 = $x;
  break;
 }
 default: {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
 }
 }
 return (+$$0);
}
function _log2($x) {
 $x = +$x;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0;
 var $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0;
 var $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0;
 var $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $hx$0 = 0, $k$0 = 0, $or$cond = 0, $or$cond4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = ($1>>>0)<(1048576);
 $3 = ($1|0)<(0);
 $or$cond = $3 | $2;
 do {
  if ($or$cond) {
   $4 = $1 & 2147483647;
   $5 = ($0|0)==(0);
   $6 = ($4|0)==(0);
   $7 = $5 & $6;
   if ($7) {
    $8 = $x * $x;
    $9 = -1.0 / $8;
    $$0 = $9;
    break;
   }
   if ($3) {
    $10 = $x - $x;
    $11 = $10 / 0.0;
    $$0 = $11;
    break;
   } else {
    $12 = $x * 18014398509481984.0;
    HEAPF64[tempDoublePtr>>3] = $12;$13 = HEAP32[tempDoublePtr>>2]|0;
    $14 = HEAP32[tempDoublePtr+4>>2]|0;
    $26 = $13;$67 = $14;$hx$0 = $14;$k$0 = -1077;
    label = 9;
    break;
   }
  } else {
   $15 = ($1>>>0)>(2146435071);
   if ($15) {
    $$0 = $x;
   } else {
    $16 = ($1|0)==(1072693248);
    $17 = ($0|0)==(0);
    $18 = (0)==(0);
    $19 = $17 & $18;
    $or$cond4 = $19 & $16;
    if ($or$cond4) {
     $$0 = 0.0;
    } else {
     $26 = $0;$67 = $1;$hx$0 = $1;$k$0 = -1023;
     label = 9;
    }
   }
  }
 } while(0);
 if ((label|0) == 9) {
  $20 = (($hx$0) + 614242)|0;
  $21 = $20 >>> 20;
  $22 = (($k$0) + ($21))|0;
  $23 = $20 & 1048575;
  $24 = (($23) + 1072079006)|0;
  HEAP32[tempDoublePtr>>2] = $26;HEAP32[tempDoublePtr+4>>2] = $24;$25 = +HEAPF64[tempDoublePtr>>3];
  $27 = $25 + -1.0;
  $28 = $27 * 0.5;
  $29 = $27 * $28;
  $30 = $27 + 2.0;
  $31 = $27 / $30;
  $32 = $31 * $31;
  $33 = $32 * $32;
  $34 = $33 * 0.15313837699209373;
  $35 = $34 + 0.22222198432149784;
  $36 = $33 * $35;
  $37 = $36 + 0.39999999999409419;
  $38 = $33 * $37;
  $39 = $33 * 0.14798198605116586;
  $40 = $39 + 0.1818357216161805;
  $41 = $33 * $40;
  $42 = $41 + 0.28571428743662391;
  $43 = $33 * $42;
  $44 = $43 + 0.66666666666667351;
  $45 = $32 * $44;
  $46 = $38 + $45;
  $47 = $27 - $29;
  HEAPF64[tempDoublePtr>>3] = $47;$48 = HEAP32[tempDoublePtr>>2]|0;
  $49 = HEAP32[tempDoublePtr+4>>2]|0;
  HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $49;$50 = +HEAPF64[tempDoublePtr>>3];
  $51 = $27 - $50;
  $52 = $51 - $29;
  $53 = $29 + $46;
  $54 = $31 * $53;
  $55 = $54 + $52;
  $56 = $50 * 1.4426950407214463;
  $57 = $50 + $55;
  $58 = $57 * 1.6751713164886512E-10;
  $59 = $55 * 1.4426950407214463;
  $60 = $59 + $58;
  $61 = (+($22|0));
  $62 = $61 + $56;
  $63 = $61 - $62;
  $64 = $56 + $63;
  $65 = $64 + $60;
  $66 = $62 + $65;
  $$0 = $66;
 }
 return (+$$0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _strlen($s) {
 $s = $s|0;
 var $$0 = 0, $$01$lcssa = 0, $$014 = 0, $$1$lcssa = 0, $$lcssa20 = 0, $$pn = 0, $$pn15 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $w$0 = 0, $w$0$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $1 = $0 & 3;
 $2 = ($1|0)==(0);
 L1: do {
  if ($2) {
   $$01$lcssa = $s;
   label = 4;
  } else {
   $$014 = $s;$21 = $0;
   while(1) {
    $3 = HEAP8[$$014>>0]|0;
    $4 = ($3<<24>>24)==(0);
    if ($4) {
     $$pn = $21;
     break L1;
    }
    $5 = ((($$014)) + 1|0);
    $6 = $5;
    $7 = $6 & 3;
    $8 = ($7|0)==(0);
    if ($8) {
     $$01$lcssa = $5;
     label = 4;
     break;
    } else {
     $$014 = $5;$21 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $w$0 = $$01$lcssa;
  while(1) {
   $9 = HEAP32[$w$0>>2]|0;
   $10 = (($9) + -16843009)|0;
   $11 = $9 & -2139062144;
   $12 = $11 ^ -2139062144;
   $13 = $12 & $10;
   $14 = ($13|0)==(0);
   $15 = ((($w$0)) + 4|0);
   if ($14) {
    $w$0 = $15;
   } else {
    $$lcssa20 = $9;$w$0$lcssa = $w$0;
    break;
   }
  }
  $16 = $$lcssa20&255;
  $17 = ($16<<24>>24)==(0);
  if ($17) {
   $$1$lcssa = $w$0$lcssa;
  } else {
   $$pn15 = $w$0$lcssa;
   while(1) {
    $18 = ((($$pn15)) + 1|0);
    $$pre = HEAP8[$18>>0]|0;
    $19 = ($$pre<<24>>24)==(0);
    if ($19) {
     $$1$lcssa = $18;
     break;
    } else {
     $$pn15 = $18;
    }
   }
  }
  $20 = $$1$lcssa;
  $$pn = $20;
 }
 $$0 = (($$pn) - ($0))|0;
 return ($$0|0);
}
function ___strdup($s) {
 $s = $s|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($s)|0);
 $1 = (($0) + 1)|0;
 $2 = (_malloc($1)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  $$0 = 0;
 } else {
  _memcpy(($2|0),($s|0),($1|0))|0;
  $$0 = $2;
 }
 return ($$0|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa44 = $$019;$s$0$lcssa43 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa43>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa44>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function ___stdio_seek($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $ret = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $ret = sp + 20|0;
 $0 = ((($f)) + 60|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$vararg_buffer>>2] = $1;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $off;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $ret;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $whence;
 $2 = (___syscall140(140,($vararg_buffer|0))|0);
 $3 = (___syscall_ret($2)|0);
 $4 = ($3|0)<(0);
 if ($4) {
  HEAP32[$ret>>2] = -1;
  $5 = -1;
 } else {
  $$pre = HEAP32[$ret>>2]|0;
  $5 = $$pre;
 }
 STACKTOP = sp;return ($5|0);
}
function _fprintf($f,$fmt,$varargs) {
 $f = $f|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vfprintf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
 }
 return ($$0|0);
}
function ___stdio_close($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = ((($f)) + 60|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$vararg_buffer>>2] = $1;
 $2 = (___syscall6(6,($vararg_buffer|0))|0);
 $3 = (___syscall_ret($2)|0);
 STACKTOP = sp;return ($3|0);
}
function _printf($fmt,$varargs) {
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = HEAP32[19912>>2]|0;
 $1 = (_vfprintf($0,$fmt,$ap)|0);
 STACKTOP = sp;return ($1|0);
}
function ___stdio_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$0 = 0, $cnt$1 = 0, $iov$0 = 0, $iov$0$lcssa11 = 0, $iov$1 = 0, $iovcnt$0 = 0;
 var $iovcnt$0$lcssa12 = 0, $iovcnt$1 = 0, $iovs = 0, $rem$0 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iovs = sp + 32|0;
 $0 = ((($f)) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$iovs>>2] = $1;
 $2 = ((($iovs)) + 4|0);
 $3 = ((($f)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4;
 $6 = (($5) - ($1))|0;
 HEAP32[$2>>2] = $6;
 $7 = ((($iovs)) + 8|0);
 HEAP32[$7>>2] = $buf;
 $8 = ((($iovs)) + 12|0);
 HEAP32[$8>>2] = $len;
 $9 = (($6) + ($len))|0;
 $10 = ((($f)) + 60|0);
 $11 = ((($f)) + 44|0);
 $iov$0 = $iovs;$iovcnt$0 = 2;$rem$0 = $9;
 while(1) {
  $12 = HEAP32[19920>>2]|0;
  $13 = ($12|0)==(0|0);
  if ($13) {
   $17 = HEAP32[$10>>2]|0;
   HEAP32[$vararg_buffer3>>2] = $17;
   $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
   HEAP32[$vararg_ptr6>>2] = $iov$0;
   $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
   HEAP32[$vararg_ptr7>>2] = $iovcnt$0;
   $18 = (___syscall146(146,($vararg_buffer3|0))|0);
   $19 = (___syscall_ret($18)|0);
   $cnt$0 = $19;
  } else {
   _pthread_cleanup_push((27|0),($f|0));
   $14 = HEAP32[$10>>2]|0;
   HEAP32[$vararg_buffer>>2] = $14;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $iov$0;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $iovcnt$0;
   $15 = (___syscall146(146,($vararg_buffer|0))|0);
   $16 = (___syscall_ret($15)|0);
   _pthread_cleanup_pop(0);
   $cnt$0 = $16;
  }
  $20 = ($rem$0|0)==($cnt$0|0);
  if ($20) {
   label = 6;
   break;
  }
  $27 = ($cnt$0|0)<(0);
  if ($27) {
   $iov$0$lcssa11 = $iov$0;$iovcnt$0$lcssa12 = $iovcnt$0;
   label = 8;
   break;
  }
  $35 = (($rem$0) - ($cnt$0))|0;
  $36 = ((($iov$0)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ($cnt$0>>>0)>($37>>>0);
  if ($38) {
   $39 = HEAP32[$11>>2]|0;
   HEAP32[$0>>2] = $39;
   HEAP32[$3>>2] = $39;
   $40 = (($cnt$0) - ($37))|0;
   $41 = ((($iov$0)) + 8|0);
   $42 = (($iovcnt$0) + -1)|0;
   $$phi$trans$insert = ((($iov$0)) + 12|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $50 = $$pre;$cnt$1 = $40;$iov$1 = $41;$iovcnt$1 = $42;
  } else {
   $43 = ($iovcnt$0|0)==(2);
   if ($43) {
    $44 = HEAP32[$0>>2]|0;
    $45 = (($44) + ($cnt$0)|0);
    HEAP32[$0>>2] = $45;
    $50 = $37;$cnt$1 = $cnt$0;$iov$1 = $iov$0;$iovcnt$1 = 2;
   } else {
    $50 = $37;$cnt$1 = $cnt$0;$iov$1 = $iov$0;$iovcnt$1 = $iovcnt$0;
   }
  }
  $46 = HEAP32[$iov$1>>2]|0;
  $47 = (($46) + ($cnt$1)|0);
  HEAP32[$iov$1>>2] = $47;
  $48 = ((($iov$1)) + 4|0);
  $49 = (($50) - ($cnt$1))|0;
  HEAP32[$48>>2] = $49;
  $iov$0 = $iov$1;$iovcnt$0 = $iovcnt$1;$rem$0 = $35;
 }
 if ((label|0) == 6) {
  $21 = HEAP32[$11>>2]|0;
  $22 = ((($f)) + 48|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = (($21) + ($23)|0);
  $25 = ((($f)) + 16|0);
  HEAP32[$25>>2] = $24;
  $26 = $21;
  HEAP32[$0>>2] = $26;
  HEAP32[$3>>2] = $26;
  $$0 = $len;
 }
 else if ((label|0) == 8) {
  $28 = ((($f)) + 16|0);
  HEAP32[$28>>2] = 0;
  HEAP32[$0>>2] = 0;
  HEAP32[$3>>2] = 0;
  $29 = HEAP32[$f>>2]|0;
  $30 = $29 | 32;
  HEAP32[$f>>2] = $30;
  $31 = ($iovcnt$0$lcssa12|0)==(2);
  if ($31) {
   $$0 = 0;
  } else {
   $32 = ((($iov$0$lcssa11)) + 4|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = (($len) - ($33))|0;
   $$0 = $34;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0;
 var $ret$1 = 0, $ret$1$ = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
 } else {
  $2 = ((($f)) + 76|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)>(-1);
  if ($4) {
   $5 = (___lockfile($f)|0);
   $32 = $5;
  } else {
   $32 = 0;
  }
  $6 = HEAP32[$f>>2]|0;
  $7 = $6 & 32;
  $8 = ((($f)) + 74|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = ($9<<24>>24)<(1);
  if ($10) {
   $11 = $6 & -33;
   HEAP32[$f>>2] = $11;
  }
  $12 = ((($f)) + 48|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0);
  if ($14) {
   $16 = ((($f)) + 44|0);
   $17 = HEAP32[$16>>2]|0;
   HEAP32[$16>>2] = $internal_buf;
   $18 = ((($f)) + 28|0);
   HEAP32[$18>>2] = $internal_buf;
   $19 = ((($f)) + 20|0);
   HEAP32[$19>>2] = $internal_buf;
   HEAP32[$12>>2] = 80;
   $20 = ((($internal_buf)) + 80|0);
   $21 = ((($f)) + 16|0);
   HEAP32[$21>>2] = $20;
   $22 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $23 = ($17|0)==(0|0);
   if ($23) {
    $ret$1 = $22;
   } else {
    $24 = ((($f)) + 36|0);
    $25 = HEAP32[$24>>2]|0;
    (FUNCTION_TABLE_iiii[$25 & 31]($f,0,0)|0);
    $26 = HEAP32[$19>>2]|0;
    $27 = ($26|0)==(0|0);
    $$ = $27 ? -1 : $22;
    HEAP32[$16>>2] = $17;
    HEAP32[$12>>2] = 0;
    HEAP32[$21>>2] = 0;
    HEAP32[$18>>2] = 0;
    HEAP32[$19>>2] = 0;
    $ret$1 = $$;
   }
  } else {
   $15 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $ret$1 = $15;
  }
  $28 = HEAP32[$f>>2]|0;
  $29 = $28 & 32;
  $30 = ($29|0)==(0);
  $ret$1$ = $30 ? $ret$1 : -1;
  $31 = $28 | $7;
  HEAP32[$f>>2] = $31;
  $33 = ($32|0)==(0);
  if (!($33)) {
   ___unlockfile($f);
  }
  $$0 = $ret$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___stdout_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tio = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $tio = sp + 12|0;
 $0 = ((($f)) + 36|0);
 HEAP32[$0>>2] = 28;
 $1 = HEAP32[$f>>2]|0;
 $2 = $1 & 64;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($f)) + 60|0);
  $5 = HEAP32[$4>>2]|0;
  HEAP32[$vararg_buffer>>2] = $5;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21505;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $tio;
  $6 = (___syscall54(54,($vararg_buffer|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   $8 = ((($f)) + 75|0);
   HEAP8[$8>>0] = -1;
  }
 }
 $9 = (___stdio_write($f,$buf,$len)|0);
 STACKTOP = sp;return ($9|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa10 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___towrite($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   $$pre = HEAP32[$0>>2]|0;
   $7 = $$pre;
   label = 4;
  } else {
   $$0 = 0;
  }
 } else {
  $7 = $1;
  label = 4;
 }
 L4: do {
  if ((label|0) == 4) {
   $5 = ((($f)) + 20|0);
   $6 = HEAP32[$5>>2]|0;
   $8 = $7;
   $9 = $6;
   $10 = (($8) - ($9))|0;
   $11 = ($10>>>0)<($l>>>0);
   if ($11) {
    $12 = ((($f)) + 36|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (FUNCTION_TABLE_iiii[$13 & 31]($f,$s,$l)|0);
    $$0 = $14;
    break;
   }
   $15 = ((($f)) + 75|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = ($16<<24>>24)>(-1);
   L9: do {
    if ($17) {
     $i$0 = $l;
     while(1) {
      $18 = ($i$0|0)==(0);
      if ($18) {
       $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
       break L9;
      }
      $19 = (($i$0) + -1)|0;
      $20 = (($s) + ($19)|0);
      $21 = HEAP8[$20>>0]|0;
      $22 = ($21<<24>>24)==(10);
      if ($22) {
       $i$0$lcssa10 = $i$0;
       break;
      } else {
       $i$0 = $19;
      }
     }
     $23 = ((($f)) + 36|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iiii[$24 & 31]($f,$s,$i$0$lcssa10)|0);
     $26 = ($25>>>0)<($i$0$lcssa10>>>0);
     if ($26) {
      $$0 = $i$0$lcssa10;
      break L4;
     }
     $27 = (($s) + ($i$0$lcssa10)|0);
     $28 = (($l) - ($i$0$lcssa10))|0;
     $$pre6 = HEAP32[$5>>2]|0;
     $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa10;
    } else {
     $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
    }
   } while(0);
   _memcpy(($29|0),($$02|0),($$01|0))|0;
   $30 = HEAP32[$5>>2]|0;
   $31 = (($30) + ($$01)|0);
   HEAP32[$5>>2] = $31;
   $32 = (($i$1) + ($$01))|0;
   $$0 = $32;
  }
 } while(0);
 return ($$0|0);
}
function _fflush($f) {
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$012 = 0, $$014 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $r$0$lcssa = 0, $r$03 = 0, $r$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($f|0)==(0|0);
 do {
  if ($0) {
   $7 = HEAP32[19916>>2]|0;
   $8 = ($7|0)==(0|0);
   if ($8) {
    $27 = 0;
   } else {
    $9 = HEAP32[19916>>2]|0;
    $10 = (_fflush($9)|0);
    $27 = $10;
   }
   ___lock(((19948)|0));
   $$012 = HEAP32[(19944)>>2]|0;
   $11 = ($$012|0)==(0|0);
   if ($11) {
    $r$0$lcssa = $27;
   } else {
    $$014 = $$012;$r$03 = $27;
    while(1) {
     $12 = ((($$014)) + 76|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ($13|0)>(-1);
     if ($14) {
      $15 = (___lockfile($$014)|0);
      $23 = $15;
     } else {
      $23 = 0;
     }
     $16 = ((($$014)) + 20|0);
     $17 = HEAP32[$16>>2]|0;
     $18 = ((($$014)) + 28|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ($17>>>0)>($19>>>0);
     if ($20) {
      $21 = (___fflush_unlocked($$014)|0);
      $22 = $21 | $r$03;
      $r$1 = $22;
     } else {
      $r$1 = $r$03;
     }
     $24 = ($23|0)==(0);
     if (!($24)) {
      ___unlockfile($$014);
     }
     $25 = ((($$014)) + 56|0);
     $$01 = HEAP32[$25>>2]|0;
     $26 = ($$01|0)==(0|0);
     if ($26) {
      $r$0$lcssa = $r$1;
      break;
     } else {
      $$014 = $$01;$r$03 = $r$1;
     }
    }
   }
   ___unlock(((19948)|0));
   $$0 = $r$0$lcssa;
  } else {
   $1 = ((($f)) + 76|0);
   $2 = HEAP32[$1>>2]|0;
   $3 = ($2|0)>(-1);
   if (!($3)) {
    $4 = (___fflush_unlocked($f)|0);
    $$0 = $4;
    break;
   }
   $5 = (___lockfile($f)|0);
   $phitmp = ($5|0)==(0);
   $6 = (___fflush_unlocked($f)|0);
   if ($phitmp) {
    $$0 = $6;
   } else {
    ___unlockfile($f);
    $$0 = $6;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___errno_location() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[19920>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 19964;
 } else {
  $2 = (_pthread_self()|0);
  $3 = ((($2)) + 60|0);
  $4 = HEAP32[$3>>2]|0;
  $$0 = $4;
 }
 return ($$0|0);
}
function _strerror($e) {
 $e = $e|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$03 = 0, $i$03$lcssa = 0, $i$12 = 0, $s$0$lcssa = 0, $s$01 = 0, $s$1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $i$03 = 0;
 while(1) {
  $1 = (384595 + ($i$03)|0);
  $2 = HEAP8[$1>>0]|0;
  $3 = $2&255;
  $4 = ($3|0)==($e|0);
  if ($4) {
   $i$03$lcssa = $i$03;
   label = 2;
   break;
  }
  $5 = (($i$03) + 1)|0;
  $6 = ($5|0)==(87);
  if ($6) {
   $i$12 = 87;$s$01 = 384683;
   label = 5;
   break;
  } else {
   $i$03 = $5;
  }
 }
 if ((label|0) == 2) {
  $0 = ($i$03$lcssa|0)==(0);
  if ($0) {
   $s$0$lcssa = 384683;
  } else {
   $i$12 = $i$03$lcssa;$s$01 = 384683;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $s$1 = $s$01;
   while(1) {
    $7 = HEAP8[$s$1>>0]|0;
    $8 = ($7<<24>>24)==(0);
    $9 = ((($s$1)) + 1|0);
    if ($8) {
     $$lcssa = $9;
     break;
    } else {
     $s$1 = $9;
    }
   }
   $10 = (($i$12) + -1)|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $s$0$lcssa = $$lcssa;
    break;
   } else {
    $i$12 = $10;$s$01 = $$lcssa;
    label = 5;
   }
  }
 }
 return ($s$0$lcssa|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 do {
  if ($0) {
   $$0 = 1;
  } else {
   $1 = ($wc>>>0)<(128);
   if ($1) {
    $2 = $wc&255;
    HEAP8[$s>>0] = $2;
    $$0 = 1;
    break;
   }
   $3 = ($wc>>>0)<(2048);
   if ($3) {
    $4 = $wc >>> 6;
    $5 = $4 | 192;
    $6 = $5&255;
    $7 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $6;
    $8 = $wc & 63;
    $9 = $8 | 128;
    $10 = $9&255;
    HEAP8[$7>>0] = $10;
    $$0 = 2;
    break;
   }
   $11 = ($wc>>>0)<(55296);
   $12 = $wc & -8192;
   $13 = ($12|0)==(57344);
   $or$cond = $11 | $13;
   if ($or$cond) {
    $14 = $wc >>> 12;
    $15 = $14 | 224;
    $16 = $15&255;
    $17 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $16;
    $18 = $wc >>> 6;
    $19 = $18 & 63;
    $20 = $19 | 128;
    $21 = $20&255;
    $22 = ((($s)) + 2|0);
    HEAP8[$17>>0] = $21;
    $23 = $wc & 63;
    $24 = $23 | 128;
    $25 = $24&255;
    HEAP8[$22>>0] = $25;
    $$0 = 3;
    break;
   }
   $26 = (($wc) + -65536)|0;
   $27 = ($26>>>0)<(1048576);
   if ($27) {
    $28 = $wc >>> 18;
    $29 = $28 | 240;
    $30 = $29&255;
    $31 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $30;
    $32 = $wc >>> 12;
    $33 = $32 & 63;
    $34 = $33 | 128;
    $35 = $34&255;
    $36 = ((($s)) + 2|0);
    HEAP8[$31>>0] = $35;
    $37 = $wc >>> 6;
    $38 = $37 & 63;
    $39 = $38 | 128;
    $40 = $39&255;
    $41 = ((($s)) + 3|0);
    HEAP8[$36>>0] = $40;
    $42 = $wc & 63;
    $43 = $42 | 128;
    $44 = $43&255;
    HEAP8[$41>>0] = $44;
    $$0 = 4;
    break;
   } else {
    $45 = (___errno_location()|0);
    HEAP32[$45>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function ___syscall_ret($r) {
 $r = $r|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($r>>>0)>(4294963200);
 if ($0) {
  $1 = (0 - ($r))|0;
  $2 = (___errno_location()|0);
  HEAP32[$2>>2] = $1;
  $$0 = -1;
 } else {
  $$0 = $r;
 }
 return ($$0|0);
}
function _cleanup398($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 68|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  ___unlockfile($p);
 }
 return;
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$012$i = 0, $$013$i = 0, $$03$i33 = 0, $$07$i = 0.0, $$1$i = 0.0, $$114$i = 0, $$2$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$$22$i = 0, $$210$$24$i = 0, $$210$i = 0, $$23$i = 0, $$3$i = 0.0, $$31$i = 0;
 var $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$41276$i = 0, $$43 = 0, $$5$lcssa$i = 0, $$587$i = 0, $$a$3$i = 0, $$a$3185$i = 0, $$a$3186$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa159$i = 0, $$lcssa321 = 0, $$lcssa322 = 0, $$lcssa326 = 0, $$lcssa328 = 0, $$lcssa329 = 0, $$lcssa330 = 0, $$lcssa331 = 0;
 var $$lcssa332 = 0, $$lcssa334 = 0, $$lcssa344 = 0, $$lcssa347 = 0.0, $$lcssa349 = 0, $$lcssa52 = 0, $$neg52$i = 0, $$neg53$i = 0, $$p$$i = 0, $$p$0 = 0, $$p$5 = 0, $$p$i = 0, $$pn$i = 0, $$pr$i = 0, $$pr47$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi184$iZ2D = 0, $$pre179$i = 0, $$pre182$i = 0;
 var $$pre183$i = 0, $$pre190 = 0, $$sum$i = 0, $$sum15$i = 0, $$sum16$i = 0, $$z$3$i = 0, $$z$4$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0;
 var $362 = 0, $363 = 0, $364 = 0.0, $365 = 0, $366 = 0, $367 = 0, $368 = 0.0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0;
 var $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0.0, $397 = 0.0, $398 = 0;
 var $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0.0, $413 = 0, $414 = 0, $415 = 0;
 var $416 = 0.0, $417 = 0.0, $418 = 0.0, $419 = 0.0, $42 = 0, $420 = 0.0, $421 = 0.0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0;
 var $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $45 = 0, $450 = 0, $451 = 0;
 var $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0;
 var $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0.0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0;
 var $489 = 0, $49 = 0, $490 = 0.0, $491 = 0.0, $492 = 0.0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0;
 var $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0;
 var $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0;
 var $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0;
 var $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0;
 var $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0;
 var $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0.0, $602 = 0.0, $603 = 0, $604 = 0.0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0;
 var $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0;
 var $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0;
 var $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0;
 var $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0;
 var $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0;
 var $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0;
 var $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0;
 var $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0;
 var $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0;
 var $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0;
 var $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1147$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3134$i = 0, $a$5$lcssa$i = 0, $a$5109$i = 0;
 var $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arg = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0140$i = 0, $carry3$0128$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0139$i = 0, $d$0141$i = 0;
 var $d$1127$i = 0, $d$2$lcssa$i = 0, $d$2108$i = 0, $d$3$i = 0, $d$482$i = 0, $d$575$i = 0, $d$686$i = 0, $e$0123$i = 0, $e$1$i = 0, $e$2104$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$193$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0;
 var $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $fl$0103 = 0, $fl$056 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa197 = 0, $i$0108 = 0, $i$0122$i = 0;
 var $i$03$i = 0, $i$03$i25 = 0, $i$1$lcssa$i = 0, $i$1116$i = 0, $i$1119 = 0, $i$2103$i = 0, $i$295 = 0, $i$295$lcssa = 0, $i$393 = 0, $i$399$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i27 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i23 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0;
 var $isdigittmp$i26 = 0, $isdigittmp1$i = 0, $isdigittmp1$i22 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i24 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0115$i = 0, $j$0117$i = 0, $j$1100$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1107 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0;
 var $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notlhs$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond20 = 0, $or$cond239 = 0, $or$cond29$i = 0, $or$cond3$not$i = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0;
 var $p$4195 = 0, $p$5 = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$169$i = 0, $round$068$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$1$i = 0, $s$1$i$lcssa = 0, $s1$0$i = 0;
 var $s7$079$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$070$i = 0, $s9$0$i = 0, $s9$183$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa327 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8102 = 0, $storemerge854 = 0, $sum = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0;
 var $w$1 = 0, $w$2 = 0, $w$30$i = 0, $wc = 0, $ws$0109 = 0, $ws$1120 = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$096 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1146$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3133$i = 0, $z$4$i = 0, $z$6$$i = 0, $z$6$i = 0;
 var $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $big$i = sp + 24|0;
 $e2$i = sp + 16|0;
 $buf$i = sp + 588|0;
 $ebuf0$i = sp + 576|0;
 $arg = sp;
 $buf = sp + 536|0;
 $wc = sp + 8|0;
 $mb = sp + 528|0;
 $0 = ($f|0)!=(0|0);
 $1 = ((($buf)) + 40|0);
 $2 = $1;
 $3 = ((($buf)) + 39|0);
 $4 = ((($wc)) + 4|0);
 $5 = ((($ebuf0$i)) + 12|0);
 $6 = ((($ebuf0$i)) + 11|0);
 $7 = $buf$i;
 $8 = $5;
 $9 = (($8) - ($7))|0;
 $10 = (-2 - ($7))|0;
 $11 = (($8) + 2)|0;
 $12 = ((($big$i)) + 288|0);
 $13 = ((($buf$i)) + 9|0);
 $14 = $13;
 $15 = ((($buf$i)) + 8|0);
 $22 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $16 = ($cnt$0|0)>(-1);
  do {
   if ($16) {
    $17 = (2147483647 - ($cnt$0))|0;
    $18 = ($l$0|0)>($17|0);
    if ($18) {
     $19 = (___errno_location()|0);
     HEAP32[$19>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $20 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $20;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $21 = HEAP8[$22>>0]|0;
  $23 = ($21<<24>>24)==(0);
  if ($23) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 245;
   break;
  } else {
   $24 = $21;$26 = $22;
  }
  L9: while(1) {
   switch ($24<<24>>24) {
   case 37:  {
    $28 = $26;$z$096 = $26;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $$lcssa52 = $26;$z$0$lcssa = $26;
    break L9;
    break;
   }
   default: {
   }
   }
   $25 = ((($26)) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $24 = $$pre;$26 = $25;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $27 = ((($28)) + 1|0);
     $29 = HEAP8[$27>>0]|0;
     $30 = ($29<<24>>24)==(37);
     if (!($30)) {
      $$lcssa52 = $28;$z$0$lcssa = $z$096;
      break L12;
     }
     $31 = ((($z$096)) + 1|0);
     $32 = ((($28)) + 2|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = ($33<<24>>24)==(37);
     if ($34) {
      $28 = $32;$z$096 = $31;
      label = 9;
     } else {
      $$lcssa52 = $32;$z$0$lcssa = $31;
      break;
     }
    }
   }
  } while(0);
  $35 = $z$0$lcssa;
  $36 = $22;
  $37 = (($35) - ($36))|0;
  if ($0) {
   $38 = HEAP32[$f>>2]|0;
   $39 = $38 & 32;
   $40 = ($39|0)==(0);
   if ($40) {
    (___fwritex($22,$37,$f)|0);
   }
  }
  $41 = ($z$0$lcssa|0)==($22|0);
  if (!($41)) {
   $l10n$0$phi = $l10n$0;$22 = $$lcssa52;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$0$phi;
   continue;
  }
  $42 = ((($$lcssa52)) + 1|0);
  $43 = HEAP8[$42>>0]|0;
  $44 = $43 << 24 >> 24;
  $isdigittmp = (($44) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $45 = ((($$lcssa52)) + 2|0);
   $46 = HEAP8[$45>>0]|0;
   $47 = ($46<<24>>24)==(36);
   $48 = ((($$lcssa52)) + 3|0);
   $$43 = $47 ? $48 : $42;
   $$l10n$0 = $47 ? 1 : $l10n$0;
   $isdigittmp$ = $47 ? $isdigittmp : -1;
   $$pre190 = HEAP8[$$43>>0]|0;
   $50 = $$pre190;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$43;
  } else {
   $50 = $43;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $42;
  }
  $49 = $50 << 24 >> 24;
  $51 = $49 & -32;
  $52 = ($51|0)==(32);
  L25: do {
   if ($52) {
    $54 = $49;$59 = $50;$fl$0103 = 0;$storemerge8102 = $storemerge;
    while(1) {
     $53 = (($54) + -32)|0;
     $55 = 1 << $53;
     $56 = $55 & 75913;
     $57 = ($56|0)==(0);
     if ($57) {
      $68 = $59;$fl$056 = $fl$0103;$storemerge854 = $storemerge8102;
      break L25;
     }
     $58 = $59 << 24 >> 24;
     $60 = (($58) + -32)|0;
     $61 = 1 << $60;
     $62 = $61 | $fl$0103;
     $63 = ((($storemerge8102)) + 1|0);
     $64 = HEAP8[$63>>0]|0;
     $65 = $64 << 24 >> 24;
     $66 = $65 & -32;
     $67 = ($66|0)==(32);
     if ($67) {
      $54 = $65;$59 = $64;$fl$0103 = $62;$storemerge8102 = $63;
     } else {
      $68 = $64;$fl$056 = $62;$storemerge854 = $63;
      break;
     }
    }
   } else {
    $68 = $50;$fl$056 = 0;$storemerge854 = $storemerge;
   }
  } while(0);
  $69 = ($68<<24>>24)==(42);
  do {
   if ($69) {
    $70 = ((($storemerge854)) + 1|0);
    $71 = HEAP8[$70>>0]|0;
    $72 = $71 << 24 >> 24;
    $isdigittmp11 = (($72) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $73 = ((($storemerge854)) + 2|0);
     $74 = HEAP8[$73>>0]|0;
     $75 = ($74<<24>>24)==(36);
     if ($75) {
      $76 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$76>>2] = 10;
      $77 = HEAP8[$70>>0]|0;
      $78 = $77 << 24 >> 24;
      $79 = (($78) + -48)|0;
      $80 = (($nl_arg) + ($79<<3)|0);
      $81 = $80;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = (($81) + 4)|0;
      $85 = $84;
      $86 = HEAP32[$85>>2]|0;
      $87 = ((($storemerge854)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $87;$w$0 = $83;
     } else {
      label = 24;
     }
    } else {
     label = 24;
    }
    if ((label|0) == 24) {
     label = 0;
     $88 = ($l10n$1|0)==(0);
     if (!($88)) {
      $$0 = -1;
      break L1;
     }
     if (!($0)) {
      $108 = $70;$fl$1 = $fl$056;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $89 = $arglist_current;
     $90 = ((0) + 4|0);
     $expanded4 = $90;
     $expanded = (($expanded4) - 1)|0;
     $91 = (($89) + ($expanded))|0;
     $92 = ((0) + 4|0);
     $expanded8 = $92;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $93 = $91 & $expanded6;
     $94 = $93;
     $95 = HEAP32[$94>>2]|0;
     $arglist_next = ((($94)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $70;$w$0 = $95;
    }
    $96 = ($w$0|0)<(0);
    if ($96) {
     $97 = $fl$056 | 8192;
     $98 = (0 - ($w$0))|0;
     $108 = $storemerge13;$fl$1 = $97;$l10n$3 = $l10n$2;$w$1 = $98;
    } else {
     $108 = $storemerge13;$fl$1 = $fl$056;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $99 = $68 << 24 >> 24;
    $isdigittmp1$i = (($99) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $103 = $storemerge854;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $100 = ($i$03$i*10)|0;
      $101 = (($100) + ($isdigittmp4$i))|0;
      $102 = ((($103)) + 1|0);
      $104 = HEAP8[$102>>0]|0;
      $105 = $104 << 24 >> 24;
      $isdigittmp$i = (($105) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $103 = $102;$i$03$i = $101;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa321 = $101;$$lcssa322 = $102;
       break;
      }
     }
     $106 = ($$lcssa321|0)<(0);
     if ($106) {
      $$0 = -1;
      break L1;
     } else {
      $108 = $$lcssa322;$fl$1 = $fl$056;$l10n$3 = $l10n$1;$w$1 = $$lcssa321;
     }
    } else {
     $108 = $storemerge854;$fl$1 = $fl$056;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $107 = HEAP8[$108>>0]|0;
  $109 = ($107<<24>>24)==(46);
  L46: do {
   if ($109) {
    $110 = ((($108)) + 1|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = ($111<<24>>24)==(42);
    if (!($112)) {
     $139 = $111 << 24 >> 24;
     $isdigittmp1$i22 = (($139) + -48)|0;
     $isdigit2$i23 = ($isdigittmp1$i22>>>0)<(10);
     if ($isdigit2$i23) {
      $143 = $110;$i$03$i25 = 0;$isdigittmp4$i24 = $isdigittmp1$i22;
     } else {
      $802 = $110;$p$0 = 0;
      break;
     }
     while(1) {
      $140 = ($i$03$i25*10)|0;
      $141 = (($140) + ($isdigittmp4$i24))|0;
      $142 = ((($143)) + 1|0);
      $144 = HEAP8[$142>>0]|0;
      $145 = $144 << 24 >> 24;
      $isdigittmp$i26 = (($145) + -48)|0;
      $isdigit$i27 = ($isdigittmp$i26>>>0)<(10);
      if ($isdigit$i27) {
       $143 = $142;$i$03$i25 = $141;$isdigittmp4$i24 = $isdigittmp$i26;
      } else {
       $802 = $142;$p$0 = $141;
       break L46;
      }
     }
    }
    $113 = ((($108)) + 2|0);
    $114 = HEAP8[$113>>0]|0;
    $115 = $114 << 24 >> 24;
    $isdigittmp9 = (($115) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $116 = ((($108)) + 3|0);
     $117 = HEAP8[$116>>0]|0;
     $118 = ($117<<24>>24)==(36);
     if ($118) {
      $119 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$119>>2] = 10;
      $120 = HEAP8[$113>>0]|0;
      $121 = $120 << 24 >> 24;
      $122 = (($121) + -48)|0;
      $123 = (($nl_arg) + ($122<<3)|0);
      $124 = $123;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = (($124) + 4)|0;
      $128 = $127;
      $129 = HEAP32[$128>>2]|0;
      $130 = ((($108)) + 4|0);
      $802 = $130;$p$0 = $126;
      break;
     }
    }
    $131 = ($l10n$3|0)==(0);
    if (!($131)) {
     $$0 = -1;
     break L1;
    }
    if ($0) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $132 = $arglist_current2;
     $133 = ((0) + 4|0);
     $expanded11 = $133;
     $expanded10 = (($expanded11) - 1)|0;
     $134 = (($132) + ($expanded10))|0;
     $135 = ((0) + 4|0);
     $expanded15 = $135;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $136 = $134 & $expanded13;
     $137 = $136;
     $138 = HEAP32[$137>>2]|0;
     $arglist_next3 = ((($137)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $802 = $113;$p$0 = $138;
    } else {
     $802 = $113;$p$0 = 0;
    }
   } else {
    $802 = $108;$p$0 = -1;
   }
  } while(0);
  $147 = $802;$st$0 = 0;
  while(1) {
   $146 = HEAP8[$147>>0]|0;
   $148 = $146 << 24 >> 24;
   $149 = (($148) + -65)|0;
   $150 = ($149>>>0)>(57);
   if ($150) {
    $$0 = -1;
    break L1;
   }
   $151 = ((($147)) + 1|0);
   $152 = ((387519 + (($st$0*58)|0)|0) + ($149)|0);
   $153 = HEAP8[$152>>0]|0;
   $154 = $153&255;
   $155 = (($154) + -1)|0;
   $156 = ($155>>>0)<(8);
   if ($156) {
    $147 = $151;$st$0 = $154;
   } else {
    $$lcssa326 = $147;$$lcssa328 = $151;$$lcssa329 = $153;$$lcssa330 = $154;$st$0$lcssa327 = $st$0;
    break;
   }
  }
  $157 = ($$lcssa329<<24>>24)==(0);
  if ($157) {
   $$0 = -1;
   break;
  }
  $158 = ($$lcssa329<<24>>24)==(19);
  $159 = ($argpos$0|0)>(-1);
  do {
   if ($158) {
    if ($159) {
     $$0 = -1;
     break L1;
    } else {
     label = 52;
    }
   } else {
    if ($159) {
     $160 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$160>>2] = $$lcssa330;
     $161 = (($nl_arg) + ($argpos$0<<3)|0);
     $162 = $161;
     $163 = $162;
     $164 = HEAP32[$163>>2]|0;
     $165 = (($162) + 4)|0;
     $166 = $165;
     $167 = HEAP32[$166>>2]|0;
     $168 = $arg;
     $169 = $168;
     HEAP32[$169>>2] = $164;
     $170 = (($168) + 4)|0;
     $171 = $170;
     HEAP32[$171>>2] = $167;
     label = 52;
     break;
    }
    if (!($0)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg424($arg,$$lcssa330,$ap);
   }
  } while(0);
  if ((label|0) == 52) {
   label = 0;
   if (!($0)) {
    $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $172 = HEAP8[$$lcssa326>>0]|0;
  $173 = $172 << 24 >> 24;
  $174 = ($st$0$lcssa327|0)!=(0);
  $175 = $173 & 15;
  $176 = ($175|0)==(3);
  $or$cond15 = $174 & $176;
  $177 = $173 & -33;
  $t$0 = $or$cond15 ? $177 : $173;
  $178 = $fl$1 & 8192;
  $179 = ($178|0)==(0);
  $180 = $fl$1 & -65537;
  $fl$1$ = $179 ? $fl$1 : $180;
  L75: do {
   switch ($t$0|0) {
   case 110:  {
    switch ($st$0$lcssa327|0) {
    case 0:  {
     $187 = HEAP32[$arg>>2]|0;
     HEAP32[$187>>2] = $cnt$1;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $188 = HEAP32[$arg>>2]|0;
     HEAP32[$188>>2] = $cnt$1;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $189 = ($cnt$1|0)<(0);
     $190 = $189 << 31 >> 31;
     $191 = HEAP32[$arg>>2]|0;
     $192 = $191;
     $193 = $192;
     HEAP32[$193>>2] = $cnt$1;
     $194 = (($192) + 4)|0;
     $195 = $194;
     HEAP32[$195>>2] = $190;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $196 = $cnt$1&65535;
     $197 = HEAP32[$arg>>2]|0;
     HEAP16[$197>>1] = $196;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $198 = $cnt$1&255;
     $199 = HEAP32[$arg>>2]|0;
     HEAP8[$199>>0] = $198;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $200 = HEAP32[$arg>>2]|0;
     HEAP32[$200>>2] = $cnt$1;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $201 = ($cnt$1|0)<(0);
     $202 = $201 << 31 >> 31;
     $203 = HEAP32[$arg>>2]|0;
     $204 = $203;
     $205 = $204;
     HEAP32[$205>>2] = $cnt$1;
     $206 = (($204) + 4)|0;
     $207 = $206;
     HEAP32[$207>>2] = $202;
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $208 = ($p$0>>>0)>(8);
    $209 = $208 ? $p$0 : 8;
    $210 = $fl$1$ | 8;
    $fl$3 = $210;$p$1 = $209;$t$1 = 120;
    label = 64;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 64;
    break;
   }
   case 111:  {
    $248 = $arg;
    $249 = $248;
    $250 = HEAP32[$249>>2]|0;
    $251 = (($248) + 4)|0;
    $252 = $251;
    $253 = HEAP32[$252>>2]|0;
    $254 = ($250|0)==(0);
    $255 = ($253|0)==(0);
    $256 = $254 & $255;
    if ($256) {
     $$0$lcssa$i = $1;
    } else {
     $$03$i33 = $1;$258 = $250;$262 = $253;
     while(1) {
      $257 = $258 & 7;
      $259 = $257 | 48;
      $260 = $259&255;
      $261 = ((($$03$i33)) + -1|0);
      HEAP8[$261>>0] = $260;
      $263 = (_bitshift64Lshr(($258|0),($262|0),3)|0);
      $264 = tempRet0;
      $265 = ($263|0)==(0);
      $266 = ($264|0)==(0);
      $267 = $265 & $266;
      if ($267) {
       $$0$lcssa$i = $261;
       break;
      } else {
       $$03$i33 = $261;$258 = $263;$262 = $264;
      }
     }
    }
    $268 = $fl$1$ & 8;
    $269 = ($268|0)==(0);
    if ($269) {
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = 0;$prefix$1 = 387999;
     label = 77;
    } else {
     $270 = $$0$lcssa$i;
     $271 = (($2) - ($270))|0;
     $272 = (($271) + 1)|0;
     $273 = ($p$0|0)<($272|0);
     $$p$0 = $273 ? $272 : $p$0;
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $$p$0;$pl$1 = 0;$prefix$1 = 387999;
     label = 77;
    }
    break;
   }
   case 105: case 100:  {
    $274 = $arg;
    $275 = $274;
    $276 = HEAP32[$275>>2]|0;
    $277 = (($274) + 4)|0;
    $278 = $277;
    $279 = HEAP32[$278>>2]|0;
    $280 = ($279|0)<(0);
    if ($280) {
     $281 = (_i64Subtract(0,0,($276|0),($279|0))|0);
     $282 = tempRet0;
     $283 = $arg;
     $284 = $283;
     HEAP32[$284>>2] = $281;
     $285 = (($283) + 4)|0;
     $286 = $285;
     HEAP32[$286>>2] = $282;
     $291 = $281;$292 = $282;$pl$0 = 1;$prefix$0 = 387999;
     label = 76;
     break L75;
    }
    $287 = $fl$1$ & 2048;
    $288 = ($287|0)==(0);
    if ($288) {
     $289 = $fl$1$ & 1;
     $290 = ($289|0)==(0);
     $$ = $290 ? 387999 : (388001);
     $291 = $276;$292 = $279;$pl$0 = $289;$prefix$0 = $$;
     label = 76;
    } else {
     $291 = $276;$292 = $279;$pl$0 = 1;$prefix$0 = (388000);
     label = 76;
    }
    break;
   }
   case 117:  {
    $181 = $arg;
    $182 = $181;
    $183 = HEAP32[$182>>2]|0;
    $184 = (($181) + 4)|0;
    $185 = $184;
    $186 = HEAP32[$185>>2]|0;
    $291 = $183;$292 = $186;$pl$0 = 0;$prefix$0 = 387999;
    label = 76;
    break;
   }
   case 99:  {
    $312 = $arg;
    $313 = $312;
    $314 = HEAP32[$313>>2]|0;
    $315 = (($312) + 4)|0;
    $316 = $315;
    $317 = HEAP32[$316>>2]|0;
    $318 = $314&255;
    HEAP8[$3>>0] = $318;
    $a$2 = $3;$fl$6 = $180;$p$5 = 1;$pl$2 = 0;$prefix$2 = 387999;$z$2 = $1;
    break;
   }
   case 109:  {
    $319 = (___errno_location()|0);
    $320 = HEAP32[$319>>2]|0;
    $321 = (_strerror($320)|0);
    $a$1 = $321;
    label = 82;
    break;
   }
   case 115:  {
    $322 = HEAP32[$arg>>2]|0;
    $323 = ($322|0)!=(0|0);
    $324 = $323 ? $322 : 388009;
    $a$1 = $324;
    label = 82;
    break;
   }
   case 67:  {
    $331 = $arg;
    $332 = $331;
    $333 = HEAP32[$332>>2]|0;
    $334 = (($331) + 4)|0;
    $335 = $334;
    $336 = HEAP32[$335>>2]|0;
    HEAP32[$wc>>2] = $333;
    HEAP32[$4>>2] = 0;
    HEAP32[$arg>>2] = $wc;
    $p$4195 = -1;
    label = 86;
    break;
   }
   case 83:  {
    $337 = ($p$0|0)==(0);
    if ($337) {
     _pad($f,32,$w$1,0,$fl$1$);
     $i$0$lcssa197 = 0;
     label = 98;
    } else {
     $p$4195 = $p$0;
     label = 86;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $364 = +HEAPF64[$arg>>3];
    HEAP32[$e2$i>>2] = 0;
    HEAPF64[tempDoublePtr>>3] = $364;$365 = HEAP32[tempDoublePtr>>2]|0;
    $366 = HEAP32[tempDoublePtr+4>>2]|0;
    $367 = ($366|0)<(0);
    if ($367) {
     $368 = -$364;
     $$07$i = $368;$pl$0$i = 1;$prefix$0$i = 388016;
    } else {
     $369 = $fl$1$ & 2048;
     $370 = ($369|0)==(0);
     if ($370) {
      $371 = $fl$1$ & 1;
      $372 = ($371|0)==(0);
      $$$i = $372 ? (388017) : (388022);
      $$07$i = $364;$pl$0$i = $371;$prefix$0$i = $$$i;
     } else {
      $$07$i = $364;$pl$0$i = 1;$prefix$0$i = (388019);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$373 = HEAP32[tempDoublePtr>>2]|0;
    $374 = HEAP32[tempDoublePtr+4>>2]|0;
    $375 = $374 & 2146435072;
    $376 = ($375>>>0)<(2146435072);
    $377 = (0)<(0);
    $378 = ($375|0)==(2146435072);
    $379 = $378 & $377;
    $380 = $376 | $379;
    do {
     if ($380) {
      $396 = (+_frexpl($$07$i,$e2$i));
      $397 = $396 * 2.0;
      $398 = $397 != 0.0;
      if ($398) {
       $399 = HEAP32[$e2$i>>2]|0;
       $400 = (($399) + -1)|0;
       HEAP32[$e2$i>>2] = $400;
      }
      $401 = $t$0 | 32;
      $402 = ($401|0)==(97);
      if ($402) {
       $403 = $t$0 & 32;
       $404 = ($403|0)==(0);
       $405 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $404 ? $prefix$0$i : $405;
       $406 = $pl$0$i | 2;
       $407 = ($p$0>>>0)>(11);
       $408 = (12 - ($p$0))|0;
       $409 = ($408|0)==(0);
       $410 = $407 | $409;
       do {
        if ($410) {
         $$1$i = $397;
        } else {
         $re$169$i = $408;$round$068$i = 8.0;
         while(1) {
          $411 = (($re$169$i) + -1)|0;
          $412 = $round$068$i * 16.0;
          $413 = ($411|0)==(0);
          if ($413) {
           $$lcssa347 = $412;
           break;
          } else {
           $re$169$i = $411;$round$068$i = $412;
          }
         }
         $414 = HEAP8[$prefix$0$$i>>0]|0;
         $415 = ($414<<24>>24)==(45);
         if ($415) {
          $416 = -$397;
          $417 = $416 - $$lcssa347;
          $418 = $$lcssa347 + $417;
          $419 = -$418;
          $$1$i = $419;
          break;
         } else {
          $420 = $397 + $$lcssa347;
          $421 = $420 - $$lcssa347;
          $$1$i = $421;
          break;
         }
        }
       } while(0);
       $422 = HEAP32[$e2$i>>2]|0;
       $423 = ($422|0)<(0);
       $424 = (0 - ($422))|0;
       $425 = $423 ? $424 : $422;
       $426 = ($425|0)<(0);
       $427 = $426 << 31 >> 31;
       $428 = (_fmt_u($425,$427,$5)|0);
       $429 = ($428|0)==($5|0);
       if ($429) {
        HEAP8[$6>>0] = 48;
        $estr$0$i = $6;
       } else {
        $estr$0$i = $428;
       }
       $430 = $422 >> 31;
       $431 = $430 & 2;
       $432 = (($431) + 43)|0;
       $433 = $432&255;
       $434 = ((($estr$0$i)) + -1|0);
       HEAP8[$434>>0] = $433;
       $435 = (($t$0) + 15)|0;
       $436 = $435&255;
       $437 = ((($estr$0$i)) + -2|0);
       HEAP8[$437>>0] = $436;
       $notrhs$i = ($p$0|0)<(1);
       $438 = $fl$1$ & 8;
       $439 = ($438|0)==(0);
       $$2$i = $$1$i;$s$0$i = $buf$i;
       while(1) {
        $440 = (~~(($$2$i)));
        $441 = (387983 + ($440)|0);
        $442 = HEAP8[$441>>0]|0;
        $443 = $442&255;
        $444 = $443 | $403;
        $445 = $444&255;
        $446 = ((($s$0$i)) + 1|0);
        HEAP8[$s$0$i>>0] = $445;
        $447 = (+($440|0));
        $448 = $$2$i - $447;
        $449 = $448 * 16.0;
        $450 = $446;
        $451 = (($450) - ($7))|0;
        $452 = ($451|0)==(1);
        do {
         if ($452) {
          $notlhs$i = $449 == 0.0;
          $or$cond3$not$i = $notrhs$i & $notlhs$i;
          $or$cond$i = $439 & $or$cond3$not$i;
          if ($or$cond$i) {
           $s$1$i = $446;
           break;
          }
          $453 = ((($s$0$i)) + 2|0);
          HEAP8[$446>>0] = 46;
          $s$1$i = $453;
         } else {
          $s$1$i = $446;
         }
        } while(0);
        $454 = $449 != 0.0;
        if ($454) {
         $$2$i = $449;$s$0$i = $s$1$i;
        } else {
         $s$1$i$lcssa = $s$1$i;
         break;
        }
       }
       $455 = ($p$0|0)!=(0);
       $$pre182$i = $s$1$i$lcssa;
       $456 = (($10) + ($$pre182$i))|0;
       $457 = ($456|0)<($p$0|0);
       $or$cond239 = $455 & $457;
       $458 = $437;
       $459 = (($11) + ($p$0))|0;
       $460 = (($459) - ($458))|0;
       $461 = $437;
       $462 = (($9) - ($461))|0;
       $463 = (($462) + ($$pre182$i))|0;
       $l$0$i = $or$cond239 ? $460 : $463;
       $464 = (($l$0$i) + ($406))|0;
       _pad($f,32,$w$1,$464,$fl$1$);
       $465 = HEAP32[$f>>2]|0;
       $466 = $465 & 32;
       $467 = ($466|0)==(0);
       if ($467) {
        (___fwritex($prefix$0$$i,$406,$f)|0);
       }
       $468 = $fl$1$ ^ 65536;
       _pad($f,48,$w$1,$464,$468);
       $469 = (($$pre182$i) - ($7))|0;
       $470 = HEAP32[$f>>2]|0;
       $471 = $470 & 32;
       $472 = ($471|0)==(0);
       if ($472) {
        (___fwritex($buf$i,$469,$f)|0);
       }
       $473 = $437;
       $474 = (($8) - ($473))|0;
       $sum = (($469) + ($474))|0;
       $475 = (($l$0$i) - ($sum))|0;
       _pad($f,48,$475,0,0);
       $476 = HEAP32[$f>>2]|0;
       $477 = $476 & 32;
       $478 = ($477|0)==(0);
       if ($478) {
        (___fwritex($437,$474,$f)|0);
       }
       $479 = $fl$1$ ^ 8192;
       _pad($f,32,$w$1,$464,$479);
       $480 = ($464|0)<($w$1|0);
       $w$$i = $480 ? $w$1 : $464;
       $$0$i = $w$$i;
       break;
      }
      $481 = ($p$0|0)<(0);
      $$p$i = $481 ? 6 : $p$0;
      if ($398) {
       $482 = $397 * 268435456.0;
       $483 = HEAP32[$e2$i>>2]|0;
       $484 = (($483) + -28)|0;
       HEAP32[$e2$i>>2] = $484;
       $$3$i = $482;$485 = $484;
      } else {
       $$pre179$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $397;$485 = $$pre179$i;
      }
      $486 = ($485|0)<(0);
      $$31$i = $486 ? $big$i : $12;
      $487 = $$31$i;
      $$4$i = $$3$i;$z$0$i = $$31$i;
      while(1) {
       $488 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $488;
       $489 = ((($z$0$i)) + 4|0);
       $490 = (+($488>>>0));
       $491 = $$4$i - $490;
       $492 = $491 * 1.0E+9;
       $493 = $492 != 0.0;
       if ($493) {
        $$4$i = $492;$z$0$i = $489;
       } else {
        $$lcssa331 = $489;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $494 = ($$pr$i|0)>(0);
      if ($494) {
       $495 = $$pr$i;$a$1147$i = $$31$i;$z$1146$i = $$lcssa331;
       while(1) {
        $496 = ($495|0)>(29);
        $497 = $496 ? 29 : $495;
        $d$0139$i = ((($z$1146$i)) + -4|0);
        $498 = ($d$0139$i>>>0)<($a$1147$i>>>0);
        do {
         if ($498) {
          $a$2$ph$i = $a$1147$i;
         } else {
          $carry$0140$i = 0;$d$0141$i = $d$0139$i;
          while(1) {
           $499 = HEAP32[$d$0141$i>>2]|0;
           $500 = (_bitshift64Shl(($499|0),0,($497|0))|0);
           $501 = tempRet0;
           $502 = (_i64Add(($500|0),($501|0),($carry$0140$i|0),0)|0);
           $503 = tempRet0;
           $504 = (___uremdi3(($502|0),($503|0),1000000000,0)|0);
           $505 = tempRet0;
           HEAP32[$d$0141$i>>2] = $504;
           $506 = (___udivdi3(($502|0),($503|0),1000000000,0)|0);
           $507 = tempRet0;
           $d$0$i = ((($d$0141$i)) + -4|0);
           $508 = ($d$0$i>>>0)<($a$1147$i>>>0);
           if ($508) {
            $$lcssa332 = $506;
            break;
           } else {
            $carry$0140$i = $506;$d$0141$i = $d$0$i;
           }
          }
          $509 = ($$lcssa332|0)==(0);
          if ($509) {
           $a$2$ph$i = $a$1147$i;
           break;
          }
          $510 = ((($a$1147$i)) + -4|0);
          HEAP32[$510>>2] = $$lcssa332;
          $a$2$ph$i = $510;
         }
        } while(0);
        $z$2$i = $z$1146$i;
        while(1) {
         $511 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($511)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $512 = ((($z$2$i)) + -4|0);
         $513 = HEAP32[$512>>2]|0;
         $514 = ($513|0)==(0);
         if ($514) {
          $z$2$i = $512;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $515 = HEAP32[$e2$i>>2]|0;
        $516 = (($515) - ($497))|0;
        HEAP32[$e2$i>>2] = $516;
        $517 = ($516|0)>(0);
        if ($517) {
         $495 = $516;$a$1147$i = $a$2$ph$i;$z$1146$i = $z$2$i$lcssa;
        } else {
         $$pr47$i = $516;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr47$i = $$pr$i;$a$1$lcssa$i = $$31$i;$z$1$lcssa$i = $$lcssa331;
      }
      $518 = ($$pr47$i|0)<(0);
      if ($518) {
       $519 = (($$p$i) + 25)|0;
       $520 = (($519|0) / 9)&-1;
       $521 = (($520) + 1)|0;
       $522 = ($401|0)==(102);
       $524 = $$pr47$i;$a$3134$i = $a$1$lcssa$i;$z$3133$i = $z$1$lcssa$i;
       while(1) {
        $523 = (0 - ($524))|0;
        $525 = ($523|0)>(9);
        $526 = $525 ? 9 : $523;
        $527 = ($a$3134$i>>>0)<($z$3133$i>>>0);
        do {
         if ($527) {
          $531 = 1 << $526;
          $532 = (($531) + -1)|0;
          $533 = 1000000000 >>> $526;
          $carry3$0128$i = 0;$d$1127$i = $a$3134$i;
          while(1) {
           $534 = HEAP32[$d$1127$i>>2]|0;
           $535 = $534 & $532;
           $536 = $534 >>> $526;
           $537 = (($536) + ($carry3$0128$i))|0;
           HEAP32[$d$1127$i>>2] = $537;
           $538 = Math_imul($535, $533)|0;
           $539 = ((($d$1127$i)) + 4|0);
           $540 = ($539>>>0)<($z$3133$i>>>0);
           if ($540) {
            $carry3$0128$i = $538;$d$1127$i = $539;
           } else {
            $$lcssa334 = $538;
            break;
           }
          }
          $541 = HEAP32[$a$3134$i>>2]|0;
          $542 = ($541|0)==(0);
          $543 = ((($a$3134$i)) + 4|0);
          $$a$3$i = $542 ? $543 : $a$3134$i;
          $544 = ($$lcssa334|0)==(0);
          if ($544) {
           $$a$3186$i = $$a$3$i;$z$4$i = $z$3133$i;
           break;
          }
          $545 = ((($z$3133$i)) + 4|0);
          HEAP32[$z$3133$i>>2] = $$lcssa334;
          $$a$3186$i = $$a$3$i;$z$4$i = $545;
         } else {
          $528 = HEAP32[$a$3134$i>>2]|0;
          $529 = ($528|0)==(0);
          $530 = ((($a$3134$i)) + 4|0);
          $$a$3185$i = $529 ? $530 : $a$3134$i;
          $$a$3186$i = $$a$3185$i;$z$4$i = $z$3133$i;
         }
        } while(0);
        $546 = $522 ? $$31$i : $$a$3186$i;
        $547 = $z$4$i;
        $548 = $546;
        $549 = (($547) - ($548))|0;
        $550 = $549 >> 2;
        $551 = ($550|0)>($521|0);
        $552 = (($546) + ($521<<2)|0);
        $$z$4$i = $551 ? $552 : $z$4$i;
        $553 = HEAP32[$e2$i>>2]|0;
        $554 = (($553) + ($526))|0;
        HEAP32[$e2$i>>2] = $554;
        $555 = ($554|0)<(0);
        if ($555) {
         $524 = $554;$a$3134$i = $$a$3186$i;$z$3133$i = $$z$4$i;
        } else {
         $a$3$lcssa$i = $$a$3186$i;$z$3$lcssa$i = $$z$4$i;
         break;
        }
       }
      } else {
       $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
      }
      $556 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($556) {
        $557 = $a$3$lcssa$i;
        $558 = (($487) - ($557))|0;
        $559 = $558 >> 2;
        $560 = ($559*9)|0;
        $561 = HEAP32[$a$3$lcssa$i>>2]|0;
        $562 = ($561>>>0)<(10);
        if ($562) {
         $e$1$i = $560;
         break;
        } else {
         $e$0123$i = $560;$i$0122$i = 10;
        }
        while(1) {
         $563 = ($i$0122$i*10)|0;
         $564 = (($e$0123$i) + 1)|0;
         $565 = ($561>>>0)<($563>>>0);
         if ($565) {
          $e$1$i = $564;
          break;
         } else {
          $e$0123$i = $564;$i$0122$i = $563;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $566 = ($401|0)!=(102);
      $567 = $566 ? $e$1$i : 0;
      $568 = (($$p$i) - ($567))|0;
      $569 = ($401|0)==(103);
      $570 = ($$p$i|0)!=(0);
      $571 = $570 & $569;
      $$neg52$i = $571 << 31 >> 31;
      $572 = (($568) + ($$neg52$i))|0;
      $573 = $z$3$lcssa$i;
      $574 = (($573) - ($487))|0;
      $575 = $574 >> 2;
      $576 = ($575*9)|0;
      $577 = (($576) + -9)|0;
      $578 = ($572|0)<($577|0);
      if ($578) {
       $579 = (($572) + 9216)|0;
       $580 = (($579|0) / 9)&-1;
       $$sum$i = (($580) + -1023)|0;
       $581 = (($$31$i) + ($$sum$i<<2)|0);
       $582 = (($579|0) % 9)&-1;
       $j$0115$i = (($582) + 1)|0;
       $583 = ($j$0115$i|0)<(9);
       if ($583) {
        $i$1116$i = 10;$j$0117$i = $j$0115$i;
        while(1) {
         $584 = ($i$1116$i*10)|0;
         $j$0$i = (($j$0117$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $584;
          break;
         } else {
          $i$1116$i = $584;$j$0117$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $585 = HEAP32[$581>>2]|0;
       $586 = (($585>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $587 = ($586|0)==(0);
       if ($587) {
        $$sum15$i = (($580) + -1022)|0;
        $588 = (($$31$i) + ($$sum15$i<<2)|0);
        $589 = ($588|0)==($z$3$lcssa$i|0);
        if ($589) {
         $a$7$i = $a$3$lcssa$i;$d$3$i = $581;$e$3$i = $e$1$i;
        } else {
         label = 163;
        }
       } else {
        label = 163;
       }
       do {
        if ((label|0) == 163) {
         label = 0;
         $590 = (($585>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $591 = $590 & 1;
         $592 = ($591|0)==(0);
         $$20$i = $592 ? 9007199254740992.0 : 9007199254740994.0;
         $593 = (($i$1$lcssa$i|0) / 2)&-1;
         $594 = ($586>>>0)<($593>>>0);
         do {
          if ($594) {
           $small$0$i = 0.5;
          } else {
           $595 = ($586|0)==($593|0);
           if ($595) {
            $$sum16$i = (($580) + -1022)|0;
            $596 = (($$31$i) + ($$sum16$i<<2)|0);
            $597 = ($596|0)==($z$3$lcssa$i|0);
            if ($597) {
             $small$0$i = 1.0;
             break;
            }
           }
           $small$0$i = 1.5;
          }
         } while(0);
         $598 = ($pl$0$i|0)==(0);
         do {
          if ($598) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $599 = HEAP8[$prefix$0$i>>0]|0;
           $600 = ($599<<24>>24)==(45);
           if (!($600)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $601 = -$$20$i;
           $602 = -$small$0$i;
           $round6$1$i = $601;$small$1$i = $602;
          }
         } while(0);
         $603 = (($585) - ($586))|0;
         HEAP32[$581>>2] = $603;
         $604 = $round6$1$i + $small$1$i;
         $605 = $604 != $round6$1$i;
         if (!($605)) {
          $a$7$i = $a$3$lcssa$i;$d$3$i = $581;$e$3$i = $e$1$i;
          break;
         }
         $606 = (($603) + ($i$1$lcssa$i))|0;
         HEAP32[$581>>2] = $606;
         $607 = ($606>>>0)>(999999999);
         if ($607) {
          $a$5109$i = $a$3$lcssa$i;$d$2108$i = $581;
          while(1) {
           $608 = ((($d$2108$i)) + -4|0);
           HEAP32[$d$2108$i>>2] = 0;
           $609 = ($608>>>0)<($a$5109$i>>>0);
           if ($609) {
            $610 = ((($a$5109$i)) + -4|0);
            HEAP32[$610>>2] = 0;
            $a$6$i = $610;
           } else {
            $a$6$i = $a$5109$i;
           }
           $611 = HEAP32[$608>>2]|0;
           $612 = (($611) + 1)|0;
           HEAP32[$608>>2] = $612;
           $613 = ($612>>>0)>(999999999);
           if ($613) {
            $a$5109$i = $a$6$i;$d$2108$i = $608;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $608;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $581;
         }
         $614 = $a$5$lcssa$i;
         $615 = (($487) - ($614))|0;
         $616 = $615 >> 2;
         $617 = ($616*9)|0;
         $618 = HEAP32[$a$5$lcssa$i>>2]|0;
         $619 = ($618>>>0)<(10);
         if ($619) {
          $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $617;
          break;
         } else {
          $e$2104$i = $617;$i$2103$i = 10;
         }
         while(1) {
          $620 = ($i$2103$i*10)|0;
          $621 = (($e$2104$i) + 1)|0;
          $622 = ($618>>>0)<($620>>>0);
          if ($622) {
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $621;
           break;
          } else {
           $e$2104$i = $621;$i$2103$i = $620;
          }
         }
        }
       } while(0);
       $623 = ((($d$3$i)) + 4|0);
       $624 = ($z$3$lcssa$i>>>0)>($623>>>0);
       $$z$3$i = $624 ? $623 : $z$3$lcssa$i;
       $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
      }
      $625 = (0 - ($e$4$ph$i))|0;
      $z$6$i = $z$6$ph$i;
      while(1) {
       $626 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
       if (!($626)) {
        $$lcssa159$i = 0;$z$6$i$lcssa = $z$6$i;
        break;
       }
       $627 = ((($z$6$i)) + -4|0);
       $628 = HEAP32[$627>>2]|0;
       $629 = ($628|0)==(0);
       if ($629) {
        $z$6$i = $627;
       } else {
        $$lcssa159$i = 1;$z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do {
       if ($569) {
        $630 = $570&1;
        $631 = $630 ^ 1;
        $$p$$i = (($631) + ($$p$i))|0;
        $632 = ($$p$$i|0)>($e$4$ph$i|0);
        $633 = ($e$4$ph$i|0)>(-5);
        $or$cond6$i = $632 & $633;
        if ($or$cond6$i) {
         $634 = (($t$0) + -1)|0;
         $$neg53$i = (($$p$$i) + -1)|0;
         $635 = (($$neg53$i) - ($e$4$ph$i))|0;
         $$013$i = $634;$$210$i = $635;
        } else {
         $636 = (($t$0) + -2)|0;
         $637 = (($$p$$i) + -1)|0;
         $$013$i = $636;$$210$i = $637;
        }
        $638 = $fl$1$ & 8;
        $639 = ($638|0)==(0);
        if (!($639)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi184$iZ2D = $638;
         break;
        }
        do {
         if ($$lcssa159$i) {
          $640 = ((($z$6$i$lcssa)) + -4|0);
          $641 = HEAP32[$640>>2]|0;
          $642 = ($641|0)==(0);
          if ($642) {
           $j$2$i = 9;
           break;
          }
          $643 = (($641>>>0) % 10)&-1;
          $644 = ($643|0)==(0);
          if ($644) {
           $i$399$i = 10;$j$1100$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $645 = ($i$399$i*10)|0;
           $646 = (($j$1100$i) + 1)|0;
           $647 = (($641>>>0) % ($645>>>0))&-1;
           $648 = ($647|0)==(0);
           if ($648) {
            $i$399$i = $645;$j$1100$i = $646;
           } else {
            $j$2$i = $646;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $649 = $$013$i | 32;
        $650 = ($649|0)==(102);
        $651 = $z$6$i$lcssa;
        $652 = (($651) - ($487))|0;
        $653 = $652 >> 2;
        $654 = ($653*9)|0;
        $655 = (($654) + -9)|0;
        if ($650) {
         $656 = (($655) - ($j$2$i))|0;
         $657 = ($656|0)<(0);
         $$21$i = $657 ? 0 : $656;
         $658 = ($$210$i|0)<($$21$i|0);
         $$210$$22$i = $658 ? $$210$i : $$21$i;
         $$114$i = $$013$i;$$311$i = $$210$$22$i;$$pre$phi184$iZ2D = 0;
         break;
        } else {
         $659 = (($655) + ($e$4$ph$i))|0;
         $660 = (($659) - ($j$2$i))|0;
         $661 = ($660|0)<(0);
         $$23$i = $661 ? 0 : $660;
         $662 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $662 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi184$iZ2D = 0;
         break;
        }
       } else {
        $$pre183$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi184$iZ2D = $$pre183$i;
       }
      } while(0);
      $663 = $$311$i | $$pre$phi184$iZ2D;
      $664 = ($663|0)!=(0);
      $665 = $664&1;
      $666 = $$114$i | 32;
      $667 = ($666|0)==(102);
      if ($667) {
       $668 = ($e$4$ph$i|0)>(0);
       $669 = $668 ? $e$4$ph$i : 0;
       $$pn$i = $669;$estr$2$i = 0;
      } else {
       $670 = ($e$4$ph$i|0)<(0);
       $671 = $670 ? $625 : $e$4$ph$i;
       $672 = ($671|0)<(0);
       $673 = $672 << 31 >> 31;
       $674 = (_fmt_u($671,$673,$5)|0);
       $675 = $674;
       $676 = (($8) - ($675))|0;
       $677 = ($676|0)<(2);
       if ($677) {
        $estr$193$i = $674;
        while(1) {
         $678 = ((($estr$193$i)) + -1|0);
         HEAP8[$678>>0] = 48;
         $679 = $678;
         $680 = (($8) - ($679))|0;
         $681 = ($680|0)<(2);
         if ($681) {
          $estr$193$i = $678;
         } else {
          $estr$1$lcssa$i = $678;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $674;
       }
       $682 = $e$4$ph$i >> 31;
       $683 = $682 & 2;
       $684 = (($683) + 43)|0;
       $685 = $684&255;
       $686 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$686>>0] = $685;
       $687 = $$114$i&255;
       $688 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$688>>0] = $687;
       $689 = $688;
       $690 = (($8) - ($689))|0;
       $$pn$i = $690;$estr$2$i = $688;
      }
      $691 = (($pl$0$i) + 1)|0;
      $692 = (($691) + ($$311$i))|0;
      $l$1$i = (($692) + ($665))|0;
      $693 = (($l$1$i) + ($$pn$i))|0;
      _pad($f,32,$w$1,$693,$fl$1$);
      $694 = HEAP32[$f>>2]|0;
      $695 = $694 & 32;
      $696 = ($695|0)==(0);
      if ($696) {
       (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      }
      $697 = $fl$1$ ^ 65536;
      _pad($f,48,$w$1,$693,$697);
      do {
       if ($667) {
        $698 = ($a$8$ph$i>>>0)>($$31$i>>>0);
        $r$0$a$8$i = $698 ? $$31$i : $a$8$ph$i;
        $d$482$i = $r$0$a$8$i;
        while(1) {
         $699 = HEAP32[$d$482$i>>2]|0;
         $700 = (_fmt_u($699,0,$13)|0);
         $701 = ($d$482$i|0)==($r$0$a$8$i|0);
         do {
          if ($701) {
           $705 = ($700|0)==($13|0);
           if (!($705)) {
            $s7$1$i = $700;
            break;
           }
           HEAP8[$15>>0] = 48;
           $s7$1$i = $15;
          } else {
           $702 = ($700>>>0)>($buf$i>>>0);
           if ($702) {
            $s7$079$i = $700;
           } else {
            $s7$1$i = $700;
            break;
           }
           while(1) {
            $703 = ((($s7$079$i)) + -1|0);
            HEAP8[$703>>0] = 48;
            $704 = ($703>>>0)>($buf$i>>>0);
            if ($704) {
             $s7$079$i = $703;
            } else {
             $s7$1$i = $703;
             break;
            }
           }
          }
         } while(0);
         $706 = HEAP32[$f>>2]|0;
         $707 = $706 & 32;
         $708 = ($707|0)==(0);
         if ($708) {
          $709 = $s7$1$i;
          $710 = (($14) - ($709))|0;
          (___fwritex($s7$1$i,$710,$f)|0);
         }
         $711 = ((($d$482$i)) + 4|0);
         $712 = ($711>>>0)>($$31$i>>>0);
         if ($712) {
          $$lcssa344 = $711;
          break;
         } else {
          $d$482$i = $711;
         }
        }
        $713 = ($663|0)==(0);
        do {
         if (!($713)) {
          $714 = HEAP32[$f>>2]|0;
          $715 = $714 & 32;
          $716 = ($715|0)==(0);
          if (!($716)) {
           break;
          }
          (___fwritex(388051,1,$f)|0);
         }
        } while(0);
        $717 = ($$lcssa344>>>0)<($z$6$i$lcssa>>>0);
        $718 = ($$311$i|0)>(0);
        $719 = $718 & $717;
        if ($719) {
         $$41276$i = $$311$i;$d$575$i = $$lcssa344;
         while(1) {
          $720 = HEAP32[$d$575$i>>2]|0;
          $721 = (_fmt_u($720,0,$13)|0);
          $722 = ($721>>>0)>($buf$i>>>0);
          if ($722) {
           $s8$070$i = $721;
           while(1) {
            $723 = ((($s8$070$i)) + -1|0);
            HEAP8[$723>>0] = 48;
            $724 = ($723>>>0)>($buf$i>>>0);
            if ($724) {
             $s8$070$i = $723;
            } else {
             $s8$0$lcssa$i = $723;
             break;
            }
           }
          } else {
           $s8$0$lcssa$i = $721;
          }
          $725 = HEAP32[$f>>2]|0;
          $726 = $725 & 32;
          $727 = ($726|0)==(0);
          if ($727) {
           $728 = ($$41276$i|0)>(9);
           $729 = $728 ? 9 : $$41276$i;
           (___fwritex($s8$0$lcssa$i,$729,$f)|0);
          }
          $730 = ((($d$575$i)) + 4|0);
          $731 = (($$41276$i) + -9)|0;
          $732 = ($730>>>0)<($z$6$i$lcssa>>>0);
          $733 = ($$41276$i|0)>(9);
          $734 = $733 & $732;
          if ($734) {
           $$41276$i = $731;$d$575$i = $730;
          } else {
           $$412$lcssa$i = $731;
           break;
          }
         }
        } else {
         $$412$lcssa$i = $$311$i;
        }
        $735 = (($$412$lcssa$i) + 9)|0;
        _pad($f,48,$735,9,0);
       } else {
        $736 = ((($a$8$ph$i)) + 4|0);
        $z$6$$i = $$lcssa159$i ? $z$6$i$lcssa : $736;
        $737 = ($$311$i|0)>(-1);
        if ($737) {
         $738 = ($$pre$phi184$iZ2D|0)==(0);
         $$587$i = $$311$i;$d$686$i = $a$8$ph$i;
         while(1) {
          $739 = HEAP32[$d$686$i>>2]|0;
          $740 = (_fmt_u($739,0,$13)|0);
          $741 = ($740|0)==($13|0);
          if ($741) {
           HEAP8[$15>>0] = 48;
           $s9$0$i = $15;
          } else {
           $s9$0$i = $740;
          }
          $742 = ($d$686$i|0)==($a$8$ph$i|0);
          do {
           if ($742) {
            $746 = ((($s9$0$i)) + 1|0);
            $747 = HEAP32[$f>>2]|0;
            $748 = $747 & 32;
            $749 = ($748|0)==(0);
            if ($749) {
             (___fwritex($s9$0$i,1,$f)|0);
            }
            $750 = ($$587$i|0)<(1);
            $or$cond29$i = $738 & $750;
            if ($or$cond29$i) {
             $s9$2$i = $746;
             break;
            }
            $751 = HEAP32[$f>>2]|0;
            $752 = $751 & 32;
            $753 = ($752|0)==(0);
            if (!($753)) {
             $s9$2$i = $746;
             break;
            }
            (___fwritex(388051,1,$f)|0);
            $s9$2$i = $746;
           } else {
            $743 = ($s9$0$i>>>0)>($buf$i>>>0);
            if ($743) {
             $s9$183$i = $s9$0$i;
            } else {
             $s9$2$i = $s9$0$i;
             break;
            }
            while(1) {
             $744 = ((($s9$183$i)) + -1|0);
             HEAP8[$744>>0] = 48;
             $745 = ($744>>>0)>($buf$i>>>0);
             if ($745) {
              $s9$183$i = $744;
             } else {
              $s9$2$i = $744;
              break;
             }
            }
           }
          } while(0);
          $754 = $s9$2$i;
          $755 = (($14) - ($754))|0;
          $756 = HEAP32[$f>>2]|0;
          $757 = $756 & 32;
          $758 = ($757|0)==(0);
          if ($758) {
           $759 = ($$587$i|0)>($755|0);
           $760 = $759 ? $755 : $$587$i;
           (___fwritex($s9$2$i,$760,$f)|0);
          }
          $761 = (($$587$i) - ($755))|0;
          $762 = ((($d$686$i)) + 4|0);
          $763 = ($762>>>0)<($z$6$$i>>>0);
          $764 = ($761|0)>(-1);
          $765 = $763 & $764;
          if ($765) {
           $$587$i = $761;$d$686$i = $762;
          } else {
           $$5$lcssa$i = $761;
           break;
          }
         }
        } else {
         $$5$lcssa$i = $$311$i;
        }
        $766 = (($$5$lcssa$i) + 18)|0;
        _pad($f,48,$766,18,0);
        $767 = HEAP32[$f>>2]|0;
        $768 = $767 & 32;
        $769 = ($768|0)==(0);
        if (!($769)) {
         break;
        }
        $770 = $estr$2$i;
        $771 = (($8) - ($770))|0;
        (___fwritex($estr$2$i,$771,$f)|0);
       }
      } while(0);
      $772 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$693,$772);
      $773 = ($693|0)<($w$1|0);
      $w$30$i = $773 ? $w$1 : $693;
      $$0$i = $w$30$i;
     } else {
      $381 = $t$0 & 32;
      $382 = ($381|0)!=(0);
      $383 = $382 ? 388035 : 388039;
      $384 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $385 = $382 ? 388043 : 388047;
      $pl$1$i = $384 ? 0 : $pl$0$i;
      $s1$0$i = $384 ? $385 : $383;
      $386 = (($pl$1$i) + 3)|0;
      _pad($f,32,$w$1,$386,$180);
      $387 = HEAP32[$f>>2]|0;
      $388 = $387 & 32;
      $389 = ($388|0)==(0);
      if ($389) {
       (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
       $$pre$i = HEAP32[$f>>2]|0;
       $391 = $$pre$i;
      } else {
       $391 = $387;
      }
      $390 = $391 & 32;
      $392 = ($390|0)==(0);
      if ($392) {
       (___fwritex($s1$0$i,3,$f)|0);
      }
      $393 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$386,$393);
      $394 = ($386|0)<($w$1|0);
      $395 = $394 ? $w$1 : $386;
      $$0$i = $395;
     }
    } while(0);
    $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $$0$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   default: {
    $a$2 = $22;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 387999;$z$2 = $1;
   }
   }
  } while(0);
  L313: do {
   if ((label|0) == 64) {
    label = 0;
    $211 = $arg;
    $212 = $211;
    $213 = HEAP32[$212>>2]|0;
    $214 = (($211) + 4)|0;
    $215 = $214;
    $216 = HEAP32[$215>>2]|0;
    $217 = $t$1 & 32;
    $218 = ($213|0)==(0);
    $219 = ($216|0)==(0);
    $220 = $218 & $219;
    if ($220) {
     $a$0 = $1;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 387999;
     label = 77;
    } else {
     $$012$i = $1;$222 = $213;$229 = $216;
     while(1) {
      $221 = $222 & 15;
      $223 = (387983 + ($221)|0);
      $224 = HEAP8[$223>>0]|0;
      $225 = $224&255;
      $226 = $225 | $217;
      $227 = $226&255;
      $228 = ((($$012$i)) + -1|0);
      HEAP8[$228>>0] = $227;
      $230 = (_bitshift64Lshr(($222|0),($229|0),4)|0);
      $231 = tempRet0;
      $232 = ($230|0)==(0);
      $233 = ($231|0)==(0);
      $234 = $232 & $233;
      if ($234) {
       $$lcssa349 = $228;
       break;
      } else {
       $$012$i = $228;$222 = $230;$229 = $231;
      }
     }
     $235 = $arg;
     $236 = $235;
     $237 = HEAP32[$236>>2]|0;
     $238 = (($235) + 4)|0;
     $239 = $238;
     $240 = HEAP32[$239>>2]|0;
     $241 = ($237|0)==(0);
     $242 = ($240|0)==(0);
     $243 = $241 & $242;
     $244 = $fl$3 & 8;
     $245 = ($244|0)==(0);
     $or$cond17 = $245 | $243;
     if ($or$cond17) {
      $a$0 = $$lcssa349;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 387999;
      label = 77;
     } else {
      $246 = $t$1 >> 4;
      $247 = (387999 + ($246)|0);
      $a$0 = $$lcssa349;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $247;
      label = 77;
     }
    }
   }
   else if ((label|0) == 76) {
    label = 0;
    $293 = (_fmt_u($291,$292,$1)|0);
    $a$0 = $293;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 77;
   }
   else if ((label|0) == 82) {
    label = 0;
    $325 = (_memchr($a$1,0,$p$0)|0);
    $326 = ($325|0)==(0|0);
    $327 = $325;
    $328 = $a$1;
    $329 = (($327) - ($328))|0;
    $330 = (($a$1) + ($p$0)|0);
    $z$1 = $326 ? $330 : $325;
    $p$3 = $326 ? $p$0 : $329;
    $a$2 = $a$1;$fl$6 = $180;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 387999;$z$2 = $z$1;
   }
   else if ((label|0) == 86) {
    label = 0;
    $338 = HEAP32[$arg>>2]|0;
    $i$0108 = 0;$l$1107 = 0;$ws$0109 = $338;
    while(1) {
     $339 = HEAP32[$ws$0109>>2]|0;
     $340 = ($339|0)==(0);
     if ($340) {
      $i$0$lcssa = $i$0108;$l$2 = $l$1107;
      break;
     }
     $341 = (_wctomb($mb,$339)|0);
     $342 = ($341|0)<(0);
     $343 = (($p$4195) - ($i$0108))|0;
     $344 = ($341>>>0)>($343>>>0);
     $or$cond20 = $342 | $344;
     if ($or$cond20) {
      $i$0$lcssa = $i$0108;$l$2 = $341;
      break;
     }
     $345 = ((($ws$0109)) + 4|0);
     $346 = (($341) + ($i$0108))|0;
     $347 = ($p$4195>>>0)>($346>>>0);
     if ($347) {
      $i$0108 = $346;$l$1107 = $341;$ws$0109 = $345;
     } else {
      $i$0$lcssa = $346;$l$2 = $341;
      break;
     }
    }
    $348 = ($l$2|0)<(0);
    if ($348) {
     $$0 = -1;
     break L1;
    }
    _pad($f,32,$w$1,$i$0$lcssa,$fl$1$);
    $349 = ($i$0$lcssa|0)==(0);
    if ($349) {
     $i$0$lcssa197 = 0;
     label = 98;
    } else {
     $350 = HEAP32[$arg>>2]|0;
     $i$1119 = 0;$ws$1120 = $350;
     while(1) {
      $351 = HEAP32[$ws$1120>>2]|0;
      $352 = ($351|0)==(0);
      if ($352) {
       $i$0$lcssa197 = $i$0$lcssa;
       label = 98;
       break L313;
      }
      $353 = ((($ws$1120)) + 4|0);
      $354 = (_wctomb($mb,$351)|0);
      $355 = (($354) + ($i$1119))|0;
      $356 = ($355|0)>($i$0$lcssa|0);
      if ($356) {
       $i$0$lcssa197 = $i$0$lcssa;
       label = 98;
       break L313;
      }
      $357 = HEAP32[$f>>2]|0;
      $358 = $357 & 32;
      $359 = ($358|0)==(0);
      if ($359) {
       (___fwritex($mb,$354,$f)|0);
      }
      $360 = ($355>>>0)<($i$0$lcssa>>>0);
      if ($360) {
       $i$1119 = $355;$ws$1120 = $353;
      } else {
       $i$0$lcssa197 = $i$0$lcssa;
       label = 98;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 98) {
   label = 0;
   $361 = $fl$1$ ^ 8192;
   _pad($f,32,$w$1,$i$0$lcssa197,$361);
   $362 = ($w$1|0)>($i$0$lcssa197|0);
   $363 = $362 ? $w$1 : $i$0$lcssa197;
   $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $363;$l10n$0 = $l10n$3;
   continue;
  }
  if ((label|0) == 77) {
   label = 0;
   $294 = ($p$2|0)>(-1);
   $295 = $fl$4 & -65537;
   $$fl$4 = $294 ? $295 : $fl$4;
   $296 = $arg;
   $297 = $296;
   $298 = HEAP32[$297>>2]|0;
   $299 = (($296) + 4)|0;
   $300 = $299;
   $301 = HEAP32[$300>>2]|0;
   $302 = ($298|0)!=(0);
   $303 = ($301|0)!=(0);
   $304 = $302 | $303;
   $305 = ($p$2|0)!=(0);
   $or$cond = $305 | $304;
   if ($or$cond) {
    $306 = $a$0;
    $307 = (($2) - ($306))|0;
    $308 = $304&1;
    $309 = $308 ^ 1;
    $310 = (($309) + ($307))|0;
    $311 = ($p$2|0)>($310|0);
    $p$2$ = $311 ? $p$2 : $310;
    $a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   } else {
    $a$2 = $1;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   }
  }
  $774 = $z$2;
  $775 = $a$2;
  $776 = (($774) - ($775))|0;
  $777 = ($p$5|0)<($776|0);
  $$p$5 = $777 ? $776 : $p$5;
  $778 = (($pl$2) + ($$p$5))|0;
  $779 = ($w$1|0)<($778|0);
  $w$2 = $779 ? $778 : $w$1;
  _pad($f,32,$w$2,$778,$fl$6);
  $780 = HEAP32[$f>>2]|0;
  $781 = $780 & 32;
  $782 = ($781|0)==(0);
  if ($782) {
   (___fwritex($prefix$2,$pl$2,$f)|0);
  }
  $783 = $fl$6 ^ 65536;
  _pad($f,48,$w$2,$778,$783);
  _pad($f,48,$$p$5,$776,0);
  $784 = HEAP32[$f>>2]|0;
  $785 = $784 & 32;
  $786 = ($785|0)==(0);
  if ($786) {
   (___fwritex($a$2,$776,$f)|0);
  }
  $787 = $fl$6 ^ 8192;
  _pad($f,32,$w$2,$778,$787);
  $22 = $$lcssa328;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 L348: do {
  if ((label|0) == 245) {
   $788 = ($f|0)==(0|0);
   if ($788) {
    $789 = ($l10n$0$lcssa|0)==(0);
    if ($789) {
     $$0 = 0;
    } else {
     $i$295 = 1;
     while(1) {
      $790 = (($nl_type) + ($i$295<<2)|0);
      $791 = HEAP32[$790>>2]|0;
      $792 = ($791|0)==(0);
      if ($792) {
       $i$295$lcssa = $i$295;
       break;
      }
      $794 = (($nl_arg) + ($i$295<<3)|0);
      _pop_arg424($794,$791,$ap);
      $795 = (($i$295) + 1)|0;
      $796 = ($795|0)<(10);
      if ($796) {
       $i$295 = $795;
      } else {
       $$0 = 1;
       break L348;
      }
     }
     $793 = ($i$295$lcssa|0)<(10);
     if ($793) {
      $i$393 = $i$295$lcssa;
      while(1) {
       $799 = (($nl_type) + ($i$393<<2)|0);
       $800 = HEAP32[$799>>2]|0;
       $801 = ($800|0)==(0);
       $797 = (($i$393) + 1)|0;
       if (!($801)) {
        $$0 = -1;
        break L348;
       }
       $798 = ($797|0)<(10);
       if ($798) {
        $i$393 = $797;
       } else {
        $$0 = 1;
        break;
       }
      }
     } else {
      $$0 = 1;
     }
    }
   } else {
    $$0 = $cnt$1$lcssa;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___fflush_unlocked($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)>($3>>>0);
 if ($4) {
  $5 = ((($f)) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  (FUNCTION_TABLE_iiii[$6 & 31]($f,0,0)|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $9 = ((($f)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($f)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($10>>>0)<($12>>>0);
  if ($13) {
   $14 = ((($f)) + 40|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $10;
   $17 = $12;
   $18 = (($16) - ($17))|0;
   (FUNCTION_TABLE_iiii[$15 & 31]($f,$18,1)|0);
  }
  $19 = ((($f)) + 16|0);
  HEAP32[$19>>2] = 0;
  HEAP32[$2>>2] = 0;
  HEAP32[$0>>2] = 0;
  HEAP32[$11>>2] = 0;
  HEAP32[$9>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _pop_arg424($arg,$type,$ap) {
 $arg = $arg|0;
 $type = $type|0;
 $ap = $ap|0;
 var $$mask = 0, $$mask1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type>>>0)>(20);
 L1: do {
  if (!($0)) {
   do {
    switch ($type|0) {
    case 9:  {
     $arglist_current = HEAP32[$ap>>2]|0;
     $1 = $arglist_current;
     $2 = ((0) + 4|0);
     $expanded28 = $2;
     $expanded = (($expanded28) - 1)|0;
     $3 = (($1) + ($expanded))|0;
     $4 = ((0) + 4|0);
     $expanded32 = $4;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $5 = $3 & $expanded30;
     $6 = $5;
     $7 = HEAP32[$6>>2]|0;
     $arglist_next = ((($6)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     HEAP32[$arg>>2] = $7;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $8 = $arglist_current2;
     $9 = ((0) + 4|0);
     $expanded35 = $9;
     $expanded34 = (($expanded35) - 1)|0;
     $10 = (($8) + ($expanded34))|0;
     $11 = ((0) + 4|0);
     $expanded39 = $11;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $12 = $10 & $expanded37;
     $13 = $12;
     $14 = HEAP32[$13>>2]|0;
     $arglist_next3 = ((($13)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $15 = ($14|0)<(0);
     $16 = $15 << 31 >> 31;
     $17 = $arg;
     $18 = $17;
     HEAP32[$18>>2] = $14;
     $19 = (($17) + 4)|0;
     $20 = $19;
     HEAP32[$20>>2] = $16;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$ap>>2]|0;
     $21 = $arglist_current5;
     $22 = ((0) + 4|0);
     $expanded42 = $22;
     $expanded41 = (($expanded42) - 1)|0;
     $23 = (($21) + ($expanded41))|0;
     $24 = ((0) + 4|0);
     $expanded46 = $24;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $25 = $23 & $expanded44;
     $26 = $25;
     $27 = HEAP32[$26>>2]|0;
     $arglist_next6 = ((($26)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next6;
     $28 = $arg;
     $29 = $28;
     HEAP32[$29>>2] = $27;
     $30 = (($28) + 4)|0;
     $31 = $30;
     HEAP32[$31>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$ap>>2]|0;
     $32 = $arglist_current8;
     $33 = ((0) + 8|0);
     $expanded49 = $33;
     $expanded48 = (($expanded49) - 1)|0;
     $34 = (($32) + ($expanded48))|0;
     $35 = ((0) + 8|0);
     $expanded53 = $35;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $36 = $34 & $expanded51;
     $37 = $36;
     $38 = $37;
     $39 = $38;
     $40 = HEAP32[$39>>2]|0;
     $41 = (($38) + 4)|0;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $arglist_next9 = ((($37)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next9;
     $44 = $arg;
     $45 = $44;
     HEAP32[$45>>2] = $40;
     $46 = (($44) + 4)|0;
     $47 = $46;
     HEAP32[$47>>2] = $43;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$ap>>2]|0;
     $48 = $arglist_current11;
     $49 = ((0) + 4|0);
     $expanded56 = $49;
     $expanded55 = (($expanded56) - 1)|0;
     $50 = (($48) + ($expanded55))|0;
     $51 = ((0) + 4|0);
     $expanded60 = $51;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $52 = $50 & $expanded58;
     $53 = $52;
     $54 = HEAP32[$53>>2]|0;
     $arglist_next12 = ((($53)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next12;
     $55 = $54&65535;
     $56 = $55 << 16 >> 16;
     $57 = ($56|0)<(0);
     $58 = $57 << 31 >> 31;
     $59 = $arg;
     $60 = $59;
     HEAP32[$60>>2] = $56;
     $61 = (($59) + 4)|0;
     $62 = $61;
     HEAP32[$62>>2] = $58;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$ap>>2]|0;
     $63 = $arglist_current14;
     $64 = ((0) + 4|0);
     $expanded63 = $64;
     $expanded62 = (($expanded63) - 1)|0;
     $65 = (($63) + ($expanded62))|0;
     $66 = ((0) + 4|0);
     $expanded67 = $66;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $67 = $65 & $expanded65;
     $68 = $67;
     $69 = HEAP32[$68>>2]|0;
     $arglist_next15 = ((($68)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next15;
     $$mask1 = $69 & 65535;
     $70 = $arg;
     $71 = $70;
     HEAP32[$71>>2] = $$mask1;
     $72 = (($70) + 4)|0;
     $73 = $72;
     HEAP32[$73>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$ap>>2]|0;
     $74 = $arglist_current17;
     $75 = ((0) + 4|0);
     $expanded70 = $75;
     $expanded69 = (($expanded70) - 1)|0;
     $76 = (($74) + ($expanded69))|0;
     $77 = ((0) + 4|0);
     $expanded74 = $77;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $78 = $76 & $expanded72;
     $79 = $78;
     $80 = HEAP32[$79>>2]|0;
     $arglist_next18 = ((($79)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next18;
     $81 = $80&255;
     $82 = $81 << 24 >> 24;
     $83 = ($82|0)<(0);
     $84 = $83 << 31 >> 31;
     $85 = $arg;
     $86 = $85;
     HEAP32[$86>>2] = $82;
     $87 = (($85) + 4)|0;
     $88 = $87;
     HEAP32[$88>>2] = $84;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$ap>>2]|0;
     $89 = $arglist_current20;
     $90 = ((0) + 4|0);
     $expanded77 = $90;
     $expanded76 = (($expanded77) - 1)|0;
     $91 = (($89) + ($expanded76))|0;
     $92 = ((0) + 4|0);
     $expanded81 = $92;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $93 = $91 & $expanded79;
     $94 = $93;
     $95 = HEAP32[$94>>2]|0;
     $arglist_next21 = ((($94)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next21;
     $$mask = $95 & 255;
     $96 = $arg;
     $97 = $96;
     HEAP32[$97>>2] = $$mask;
     $98 = (($96) + 4)|0;
     $99 = $98;
     HEAP32[$99>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$ap>>2]|0;
     $100 = $arglist_current23;
     $101 = ((0) + 8|0);
     $expanded84 = $101;
     $expanded83 = (($expanded84) - 1)|0;
     $102 = (($100) + ($expanded83))|0;
     $103 = ((0) + 8|0);
     $expanded88 = $103;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $104 = $102 & $expanded86;
     $105 = $104;
     $106 = +HEAPF64[$105>>3];
     $arglist_next24 = ((($105)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next24;
     HEAPF64[$arg>>3] = $106;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$ap>>2]|0;
     $107 = $arglist_current26;
     $108 = ((0) + 8|0);
     $expanded91 = $108;
     $expanded90 = (($expanded91) - 1)|0;
     $109 = (($107) + ($expanded90))|0;
     $110 = ((0) + 8|0);
     $expanded95 = $110;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $111 = $109 & $expanded93;
     $112 = $111;
     $113 = +HEAPF64[$112>>3];
     $arglist_next27 = ((($112)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next27;
     HEAPF64[$arg>>3] = $113;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_u($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $$0$lcssa = 0, $$01$lcssa$off0 = 0, $$05 = 0, $$1$lcssa = 0, $$12 = 0, $$lcssa20 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $y$03 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(0);
 $3 = ($0>>>0)>(4294967295);
 $4 = ($1|0)==(0);
 $5 = $4 & $3;
 $6 = $2 | $5;
 if ($6) {
  $$05 = $s;$7 = $0;$8 = $1;
  while(1) {
   $9 = (___uremdi3(($7|0),($8|0),10,0)|0);
   $10 = tempRet0;
   $11 = $9 | 48;
   $12 = $11&255;
   $13 = ((($$05)) + -1|0);
   HEAP8[$13>>0] = $12;
   $14 = (___udivdi3(($7|0),($8|0),10,0)|0);
   $15 = tempRet0;
   $16 = ($8>>>0)>(9);
   $17 = ($7>>>0)>(4294967295);
   $18 = ($8|0)==(9);
   $19 = $18 & $17;
   $20 = $16 | $19;
   if ($20) {
    $$05 = $13;$7 = $14;$8 = $15;
   } else {
    $$lcssa20 = $13;$28 = $14;$29 = $15;
    break;
   }
  }
  $$0$lcssa = $$lcssa20;$$01$lcssa$off0 = $28;
 } else {
  $$0$lcssa = $s;$$01$lcssa$off0 = $0;
 }
 $21 = ($$01$lcssa$off0|0)==(0);
 if ($21) {
  $$1$lcssa = $$0$lcssa;
 } else {
  $$12 = $$0$lcssa;$y$03 = $$01$lcssa$off0;
  while(1) {
   $22 = (($y$03>>>0) % 10)&-1;
   $23 = $22 | 48;
   $24 = $23&255;
   $25 = ((($$12)) + -1|0);
   HEAP8[$25>>0] = $24;
   $26 = (($y$03>>>0) / 10)&-1;
   $27 = ($y$03>>>0)<(10);
   if ($27) {
    $$1$lcssa = $25;
    break;
   } else {
    $$12 = $25;$y$03 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _pad($f,$c,$w,$l,$fl) {
 $f = $f|0;
 $c = $c|0;
 $w = $w|0;
 $l = $l|0;
 $fl = $fl|0;
 var $$0$lcssa6 = 0, $$02 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, $pad = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pad = sp;
 $0 = $fl & 73728;
 $1 = ($0|0)==(0);
 $2 = ($w|0)>($l|0);
 $or$cond = $2 & $1;
 do {
  if ($or$cond) {
   $3 = (($w) - ($l))|0;
   $4 = ($3>>>0)>(256);
   $5 = $4 ? 256 : $3;
   _memset(($pad|0),($c|0),($5|0))|0;
   $6 = ($3>>>0)>(255);
   $7 = HEAP32[$f>>2]|0;
   $8 = $7 & 32;
   $9 = ($8|0)==(0);
   if ($6) {
    $10 = (($w) - ($l))|0;
    $$02 = $3;$17 = $7;$18 = $9;
    while(1) {
     if ($18) {
      (___fwritex($pad,256,$f)|0);
      $$pre = HEAP32[$f>>2]|0;
      $14 = $$pre;
     } else {
      $14 = $17;
     }
     $11 = (($$02) + -256)|0;
     $12 = ($11>>>0)>(255);
     $13 = $14 & 32;
     $15 = ($13|0)==(0);
     if ($12) {
      $$02 = $11;$17 = $14;$18 = $15;
     } else {
      break;
     }
    }
    $16 = $10 & 255;
    if ($15) {
     $$0$lcssa6 = $16;
    } else {
     break;
    }
   } else {
    if ($9) {
     $$0$lcssa6 = $3;
    } else {
     break;
    }
   }
   (___fwritex($pad,$$0$lcssa6,$f)|0);
  }
 } while(0);
 STACKTOP = sp;return;
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0;
 var $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0;
 var $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0;
 var $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0;
 var $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0;
 var $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0;
 var $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[20080>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (20120 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (20120 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[20080>>2] = $22;
     } else {
      $23 = HEAP32[(20096)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[(20088)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (20120 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (20120 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[20080>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[(20096)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = ((($70)) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[(20088)>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[(20100)>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = (20120 + ($92<<2)|0);
      $94 = HEAP32[20080>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[20080>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (20120 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (20120 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(20096)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(20088)>>2] = $81;
     HEAP32[(20100)>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[(20084)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (20384 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(20096)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($4)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = ((($v$0$i$lcssa)) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($v$0$i$lcssa)) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = ((($v$0$i$lcssa)) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = ((($v$0$i$lcssa)) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = ((($R$0$i)) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = ((($R$0$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = ((($v$0$i$lcssa)) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = ((($159)) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = ((($156)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = ((($v$0$i$lcssa)) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (20384 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(20084)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(20084)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(20096)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(20096)>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R$1$i)) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = ((($v$0$i$lcssa)) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R$1$i)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = ((($v$0$i$lcssa)) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(20096)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R$1$i)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($4))|0;
      $215 = $214 | 3;
      $216 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $4 | 3;
      $221 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[(20088)>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[(20100)>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = (20120 + ($229<<2)|0);
       $231 = HEAP32[20080>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[20080>>2] = $235;
        $$pre$i = (($229) + 2)|0;
        $$pre8$i = (20120 + ($$pre$i<<2)|0);
        $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = (20120 + ($$sum3$i<<2)|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(20096)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = ((($F1$0$i)) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = ((($227)) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = ((($227)) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[(20088)>>2] = $rsize$0$i$lcssa;
      HEAP32[(20100)>>2] = $151;
     }
     $243 = ((($v$0$i$lcssa)) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(20084)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (20384 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (20384 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[(20088)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(20096)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = ((($v$3$lcssa$i)) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = ((($v$3$lcssa$i)) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = ((($v$3$lcssa$i)) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = ((($v$3$lcssa$i)) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = ((($R$0$i18)) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = ((($R$0$i18)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = ((($v$3$lcssa$i)) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = ((($356)) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = ((($353)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = ((($v$3$lcssa$i)) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = (20384 + ($379<<2)|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[(20084)>>2]|0;
           $386 = $385 & $384;
           HEAP32[(20084)>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[(20096)>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($351)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = ((($351)) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[(20096)>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($R$1$i20)) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = ((($v$3$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($R$1$i20)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = ((($v$3$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[(20096)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($R$1$i20)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L199: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = (20120 + ($424<<2)|0);
          $426 = HEAP32[20080>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[20080>>2] = $430;
           $$pre$i25 = (($424) + 2)|0;
           $$pre43$i = (20120 + ($$pre$i25<<2)|0);
           $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = (20120 + ($$sum17$i<<2)|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[(20096)>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = ((($F5$0$i)) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = (20384 + ($I7$0$i<<2)|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[(20084)>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[(20084)>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ((($475)) + 4|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = $477 & -8;
         $479 = ($478|0)==($rsize$3$lcssa$i|0);
         L217: do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i|0)==(31);
           $481 = $I7$0$i >>> 1;
           $482 = (25 - ($481))|0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = ((($487)) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L217;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           $494 = HEAP32[(20096)>>2]|0;
           $495 = ($$lcssa232>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa232>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L199;
           }
          }
         } while(0);
         $499 = ((($T$0$lcssa$i)) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[(20096)>>2]|0;
         $502 = ($500>>>0)>=($501>>>0);
         $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = ((($500)) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = ((($v$3$lcssa$i)) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(20088)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(20100)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(20100)>>2] = $514;
   HEAP32[(20088)>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(20088)>>2] = 0;
   HEAP32[(20100)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = ((($512)) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[(20092)>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[(20092)>>2] = $528;
  $529 = HEAP32[(20104)>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[(20104)>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = ((($529)) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = ((($529)) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[20552>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[(20560)>>2] = $538;
    HEAP32[(20556)>>2] = $538;
    HEAP32[(20564)>>2] = -1;
    HEAP32[(20568)>>2] = -1;
    HEAP32[(20572)>>2] = 0;
    HEAP32[(20524)>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[20552>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[(20560)>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[(20520)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(20512)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[(20524)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L258: do {
  if ($560) {
   $561 = HEAP32[(20104)>>2]|0;
   $562 = ($561|0)==(0|0);
   L260: do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = (20528);
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($sp$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa228 = $sp$0$i$i;$$lcssa230 = $565;
        break;
       }
      }
      $569 = ((($sp$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = HEAP32[(20092)>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa228>>2]|0;
      $600 = HEAP32[$$lcssa230>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;$tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;$tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 174) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(20556)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[(20512)>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[(20520)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;$tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while(0);
   L280: do {
    if ((label|0) == 184) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = HEAP32[(20560)>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while(0);
   $618 = HEAP32[(20524)>>2]|0;
   $619 = $618 | 4;
   HEAP32[(20524)>>2] = $619;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while(0);
 if ((label|0) == 191) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;$tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label|0) == 194) {
  $631 = HEAP32[(20512)>>2]|0;
  $632 = (($631) + ($tsize$254$i))|0;
  HEAP32[(20512)>>2] = $632;
  $633 = HEAP32[(20516)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(20516)>>2] = $632;
  }
  $635 = HEAP32[(20104)>>2]|0;
  $636 = ($635|0)==(0|0);
  L299: do {
   if ($636) {
    $637 = HEAP32[(20096)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$255$i>>>0)<($637>>>0);
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     HEAP32[(20096)>>2] = $tbase$255$i;
    }
    HEAP32[(20528)>>2] = $tbase$255$i;
    HEAP32[(20532)>>2] = $tsize$254$i;
    HEAP32[(20540)>>2] = 0;
    $640 = HEAP32[20552>>2]|0;
    HEAP32[(20116)>>2] = $640;
    HEAP32[(20112)>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = (20120 + ($641<<2)|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = (20120 + ($$sum$i$i<<2)|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = (20120 + ($$sum1$i$i<<2)|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$254$i) + -40)|0;
    $647 = ((($tbase$255$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$255$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(20104)>>2] = $654;
    HEAP32[(20092)>>2] = $655;
    $656 = $655 | 1;
    $$sum$i13$i = (($653) + 4)|0;
    $657 = (($tbase$255$i) + ($$sum$i13$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$254$i) + -36)|0;
    $658 = (($tbase$255$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[(20568)>>2]|0;
    HEAP32[(20108)>>2] = $659;
   } else {
    $sp$084$i = (20528);
    while(1) {
     $660 = HEAP32[$sp$084$i>>2]|0;
     $661 = ((($sp$084$i)) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$255$i|0)==($663|0);
     if ($664) {
      $$lcssa222 = $660;$$lcssa224 = $661;$$lcssa226 = $662;$sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = ((($sp$084$i)) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label|0) == 204) {
     $668 = ((($sp$084$i$lcssa)) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa222>>>0);
      $673 = ($635>>>0)<($tbase$255$i>>>0);
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = (($$lcssa226) + ($tsize$254$i))|0;
       HEAP32[$$lcssa224>>2] = $674;
       $675 = HEAP32[(20092)>>2]|0;
       $676 = (($675) + ($tsize$254$i))|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($676) - ($683))|0;
       HEAP32[(20104)>>2] = $684;
       HEAP32[(20092)>>2] = $685;
       $686 = $685 | 1;
       $$sum$i17$i = (($683) + 4)|0;
       $687 = (($635) + ($$sum$i17$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i18$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i18$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[(20568)>>2]|0;
       HEAP32[(20108)>>2] = $689;
       break;
      }
     }
    }
    $690 = HEAP32[(20096)>>2]|0;
    $691 = ($tbase$255$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[(20096)>>2] = $tbase$255$i;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$255$i) + ($tsize$254$i)|0);
    $sp$183$i = (20528);
    while(1) {
     $693 = HEAP32[$sp$183$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = ((($sp$183$i)) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      $sp$0$i$i$i = (20528);
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label|0) == 212) {
     $698 = ((($sp$183$i$lcssa)) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa219>>2] = $tbase$255$i;
      $702 = ((($sp$183$i$lcssa)) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$254$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = ((($tbase$255$i)) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      $709 = (0 - ($706))|0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = (($tbase$255$i) + ($711)|0);
      $$sum112$i = (($tsize$254$i) + 8)|0;
      $713 = (($tbase$255$i) + ($$sum112$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      $717 = (0 - ($714))|0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = (($719) + ($tsize$254$i))|0;
      $720 = (($tbase$255$i) + ($$sum113$i)|0);
      $721 = $720;
      $722 = $712;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($711) + ($nb$0))|0;
      $724 = (($tbase$255$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($711) + 4)|0;
      $727 = (($tbase$255$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L324: do {
       if ($728) {
        $729 = HEAP32[(20092)>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[(20092)>>2] = $730;
        HEAP32[(20104)>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$255$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[(20100)>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[(20088)>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[(20088)>>2] = $736;
         HEAP32[(20100)>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$255$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$255$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$254$i) + 4)|0;
        $$sum114$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$255$i) + ($$sum114$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L332: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
           $747 = (($tbase$255$i) + ($$sum124$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$254$i) + 12)|0;
           $$sum125$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$255$i) + ($$sum125$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = (20120 + ($751<<2)|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = ((($748)) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[20080>>2]|0;
            $763 = $762 & $761;
            HEAP32[20080>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre57$i$i = ((($750)) + 8|0);
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = ((($750)) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = ((($748)) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi58$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
           $770 = (($tbase$255$i) + ($$sum115$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$254$i) + 12)|0;
           $$sum116$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$255$i) + ($$sum116$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$255$i) + ($$sum122$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
              $787 = (($tbase$255$i) + ($$sum123$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;$RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;$RP$0$i$i = $784;
             }
             while(1) {
              $790 = ((($R$0$i$i)) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if (!($792)) {
               $R$0$i$i = $791;$RP$0$i$i = $790;
               continue;
              }
              $793 = ((($R$0$i$i)) + 16|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($794|0)==(0|0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;$RP$0$i$i = $793;
              }
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
             $775 = (($tbase$255$i) + ($$sum117$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = ((($776)) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = ((($773)) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$254$i) + 28)|0;
           $$sum118$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$255$i) + ($$sum118$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = (20384 + ($799<<2)|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[(20084)>>2]|0;
             $806 = $805 & $804;
             HEAP32[(20084)>>2] = $806;
             break L332;
            } else {
             $807 = HEAP32[(20096)>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = ((($771)) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = ((($771)) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L332;
             }
            }
           } while(0);
           $814 = HEAP32[(20096)>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = ((($R$1$i$i)) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
           $817 = (($tbase$255$i) + ($$sum119$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = ((($R$1$i$i)) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = ((($818)) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$255$i) + ($$sum120$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[(20096)>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = ((($R$1$i$i)) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = ((($824)) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
         $830 = (($tbase$255$i) + ($$sum121$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = ((($oldfirst$0$i$i)) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$255$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$255$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = (20120 + ($840<<2)|0);
         $842 = HEAP32[20080>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[20080>>2] = $846;
           $$pre$i22$i = (($840) + 2)|0;
           $$pre56$i$i = (20120 + ($$pre$i22$i<<2)|0);
           $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = (20120 + ($$sum29$i$i<<2)|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[(20096)>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$255$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$255$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = (20384 + ($I7$0$i$i<<2)|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$255$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$255$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$255$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[(20084)>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[(20084)>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$255$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$255$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$255$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ((($891)) + 4|0);
        $893 = HEAP32[$892>>2]|0;
        $894 = $893 & -8;
        $895 = ($894|0)==($qsize$0$i$i|0);
        L418: do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i|0)==(31);
          $897 = $I7$0$i$i >>> 1;
          $898 = (25 - ($897))|0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;$T$050$i$i = $891;
          while(1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = (((($T$050$i$i)) + 16|0) + ($907<<2)|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = ((($903)) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L418;
           } else {
            $K8$051$i$i = $901;$T$050$i$i = $903;
           }
          }
          $910 = HEAP32[(20096)>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$255$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$050$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$255$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$255$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L324;
          }
         }
        } while(0);
        $915 = ((($T$0$lcssa$i25$i)) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[(20096)>>2]|0;
        $918 = ($916>>>0)>=($917>>>0);
        $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = ((($916)) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$255$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$255$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$255$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $711 | 8;
      $924 = (($tbase$255$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     } else {
      $sp$0$i$i$i = (20528);
     }
    }
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = ((($sp$0$i$i$i)) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa215 = $925;$$lcssa216 = $928;$$lcssa217 = $929;
       break;
      }
     }
     $931 = ((($sp$0$i$i$i)) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = (($$lcssa216) + -47)|0;
    $$sum1$i15$i = (($$lcssa216) + -39)|0;
    $933 = (($$lcssa215) + ($$sum1$i15$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    $937 = (0 - ($934))|0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = (($$sum$i14$i) + ($939))|0;
    $940 = (($$lcssa215) + ($$sum2$i16$i)|0);
    $941 = ((($635)) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = ((($943)) + 8|0);
    $945 = (($tsize$254$i) + -40)|0;
    $946 = ((($tbase$255$i)) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    $950 = (0 - ($947))|0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = (($tbase$255$i) + ($952)|0);
    $954 = (($945) - ($952))|0;
    HEAP32[(20104)>>2] = $953;
    HEAP32[(20092)>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($952) + 4)|0;
    $956 = (($tbase$255$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
    $957 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(20568)>>2]|0;
    HEAP32[(20108)>>2] = $958;
    $959 = ((($943)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944>>2]=HEAP32[(20528)>>2]|0;HEAP32[$944+4>>2]=HEAP32[(20528)+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[(20528)+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[(20528)+12>>2]|0;
    HEAP32[(20528)>>2] = $tbase$255$i;
    HEAP32[(20532)>>2] = $tsize$254$i;
    HEAP32[(20540)>>2] = 0;
    HEAP32[(20536)>>2] = $944;
    $960 = ((($943)) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = ((($943)) + 32|0);
    $962 = ($961>>>0)<($$lcssa217>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = ((($964)) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = ((($964)) + 8|0);
      $966 = ($965>>>0)<($$lcssa217>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = ((($635)) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = (20120 + ($977<<2)|0);
      $979 = HEAP32[20080>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      if ($982) {
       $983 = $979 | $980;
       HEAP32[20080>>2] = $983;
       $$pre$i$i = (($977) + 2)|0;
       $$pre14$i$i = (20120 + ($$pre$i$i<<2)|0);
       $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $978;
      } else {
       $$sum4$i$i = (($977) + 2)|0;
       $984 = (20120 + ($$sum4$i$i<<2)|0);
       $985 = HEAP32[$984>>2]|0;
       $986 = HEAP32[(20096)>>2]|0;
       $987 = ($985>>>0)<($986>>>0);
       if ($987) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = ((($F$0$i$i)) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = ((($635)) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = ((($635)) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = (20384 + ($I1$0$i$i<<2)|0);
     $1017 = ((($635)) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = ((($635)) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[(20084)>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[(20084)>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = ((($635)) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = ((($635)) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = ((($635)) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ((($1027)) + 4|0);
     $1029 = HEAP32[$1028>>2]|0;
     $1030 = $1029 & -8;
     $1031 = ($1030|0)==($970|0);
     L459: do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i|0)==(31);
       $1033 = $I1$0$i$i >>> 1;
       $1034 = (25 - ($1033))|0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;$T$06$i$i = $1027;
       while(1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = (((($T$06$i$i)) + 16|0) + ($1043<<2)|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa211 = $1044;$T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = ((($1039)) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;$T$06$i$i = $1039;
        }
       }
       $1046 = HEAP32[(20096)>>2]|0;
       $1047 = ($$lcssa211>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa211>>2] = $635;
        $1048 = ((($635)) + 24|0);
        HEAP32[$1048>>2] = $T$06$i$i$lcssa;
        $1049 = ((($635)) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = ((($635)) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L299;
       }
      }
     } while(0);
     $1051 = ((($T$0$lcssa$i$i)) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[(20096)>>2]|0;
     $1054 = ($1052>>>0)>=($1053>>>0);
     $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = ((($1052)) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = ((($635)) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = ((($635)) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = ((($635)) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[(20092)>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[(20092)>>2] = $1062;
   $1063 = HEAP32[(20104)>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[(20104)>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = ((($1063)) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = ((($1063)) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(20096)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[(20100)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[(20088)>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = (20120 + ($25<<2)|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = ((($22)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[20080>>2]|0;
     $36 = $35 & $34;
     HEAP32[20080>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre60 = ((($24)) + 8|0);
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = ((($24)) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = ((($22)) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi61Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = ((($R$0)) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = ((($R$0)) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = ((($49)) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = ((($46)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (20384 + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[(20084)>>2]|0;
      $79 = $78 & $77;
      HEAP32[(20084)>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[(20096)>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = ((($44)) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = ((($44)) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[(20096)>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = ((($R$1)) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = ((($R$1)) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = ((($91)) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[(20096)>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = ((($R$1)) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = ((($97)) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[(20104)>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[(20092)>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[(20092)>>2] = $120;
   HEAP32[(20104)>>2] = $p$0;
   $121 = $120 | 1;
   $122 = ((($p$0)) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[(20100)>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[(20100)>>2] = 0;
   HEAP32[(20088)>>2] = 0;
   return;
  }
  $125 = HEAP32[(20100)>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[(20088)>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[(20088)>>2] = $128;
   HEAP32[(20100)>>2] = $p$0;
   $129 = $128 | 1;
   $130 = ((($p$0)) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = (20120 + ($140<<2)|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[(20096)>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = ((($137)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[20080>>2]|0;
     $152 = $151 & $150;
     HEAP32[20080>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre58 = ((($139)) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = HEAP32[(20096)>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = ((($139)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = ((($137)) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi59Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = ((($R7$0)) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = ((($R7$0)) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[(20096)>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[(20096)>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = ((($166)) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = ((($163)) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = (20384 + ($191<<2)|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond47 = ($R7$1|0)==(0|0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[(20084)>>2]|0;
       $198 = $197 & $196;
       HEAP32[(20084)>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[(20096)>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = ((($161)) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = ((($161)) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[(20096)>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = ((($R7$1)) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = ((($R7$1)) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = ((($210)) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[(20096)>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = ((($R7$1)) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = ((($216)) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = ((($p$0)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[(20100)>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[(20088)>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = ((($p$0)) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = (20120 + ($233<<2)|0);
  $235 = HEAP32[20080>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[20080>>2] = $239;
   $$pre = (($233) + 2)|0;
   $$pre57 = (20120 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre57;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = (20120 + ($$sum11<<2)|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[(20096)>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = ((($F16$0)) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = ((($p$0)) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = ((($p$0)) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = (20384 + ($I18$0<<2)|0);
 $273 = ((($p$0)) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = ((($p$0)) + 16|0);
 $275 = ((($p$0)) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[(20084)>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[(20084)>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = ((($p$0)) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = ((($p$0)) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = ((($p$0)) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ((($284)) + 4|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = $286 & -8;
   $288 = ($287|0)==($psize$1|0);
   L202: do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0|0)==(31);
     $290 = $I18$0 >>> 1;
     $291 = (25 - ($290))|0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;$T$051 = $284;
     while(1) {
      $300 = $K19$052 >>> 31;
      $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = ((($296)) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L202;
      } else {
       $K19$052 = $294;$T$051 = $296;
      }
     }
     $303 = HEAP32[(20096)>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = ((($p$0)) + 24|0);
      HEAP32[$305>>2] = $T$051$lcssa;
      $306 = ((($p$0)) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = ((($p$0)) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = ((($T$0$lcssa)) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[(20096)>>2]|0;
   $311 = ($309>>>0)>=($310>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = $311 & $not$;
   if ($312) {
    $313 = ((($309)) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = ((($p$0)) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = ((($p$0)) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = ((($p$0)) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[(20112)>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[(20112)>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = (20536);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = ((($sp$0$i)) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[(20112)>>2] = -1;
 return;
}
function _calloc($n_elements,$elem_size) {
 $n_elements = $n_elements|0;
 $elem_size = $elem_size|0;
 var $$ = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $req$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n_elements|0)==(0);
 if ($0) {
  $req$0 = 0;
 } else {
  $1 = Math_imul($elem_size, $n_elements)|0;
  $2 = $elem_size | $n_elements;
  $3 = ($2>>>0)>(65535);
  if ($3) {
   $4 = (($1>>>0) / ($n_elements>>>0))&-1;
   $5 = ($4|0)==($elem_size|0);
   $$ = $5 ? $1 : -1;
   $req$0 = $$;
  } else {
   $req$0 = $1;
  }
 }
 $6 = (_malloc($req$0)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  return ($6|0);
 }
 $8 = ((($6)) + -4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 3;
 $11 = ($10|0)==(0);
 if ($11) {
  return ($6|0);
 }
 _memset(($6|0),0,($req$0|0))|0;
 return ($6|0);
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&31](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&31](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&31](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&31](a1|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&31](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(0);return 0;
}
function b1(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(1);
}
function b2(p0) {
 p0 = p0|0; nullFunc_vi(2);
}
function b3(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(3);
}
function b4(p0) {
 p0 = p0|0; nullFunc_ii(4);return 0;
}
function b5(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(5);
}
function b6(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(6);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiii = [b0,b0,b0,b0,b0,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,b0,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,___stdout_write,___stdio_seek,b0,b0,b0,b0,b0,b0,___stdio_write
,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1];
var FUNCTION_TABLE_vi = [b2,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b2,__ZN10__cxxabiv117__class_type_infoD0Ev,b2,b2,b2,b2,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b2,b2,b2,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_cleanup398,b2
,b2,b2,b2];
var FUNCTION_TABLE_vii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_regularIDCT32x32,_regularIDCT16x16,_regularIDCT8x8,_regularIDST4x4,_regularIDCT4x4,b3,b3
,b3,b3,b3];
var FUNCTION_TABLE_ii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,___stdio_close,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4];
var FUNCTION_TABLE_viiiiii = [b5,b5,b5,b5,b5,b5,b5,b5,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b5,b5,b5,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b5,b5,b5,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_viiii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b6,b6,b6,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b6,b6,b6,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6];

  return { _tu_decoder_get_info: _tu_decoder_get_info, _i64Subtract: _i64Subtract, _fflush: _fflush, _tu_decoder_decode: _tu_decoder_decode, _i64Add: _i64Add, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, ___getTypeName: ___getTypeName, _bitshift64Lshr: _bitshift64Lshr, _free: _free, ___errno_location: ___errno_location, _bitshift64Shl: _bitshift64Shl, __GLOBAL__sub_I_bind_cpp: __GLOBAL__sub_I_bind_cpp, runPostSets: runPostSets, _emscripten_replace_memory: _emscripten_replace_memory, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real__tu_decoder_get_info = asm["_tu_decoder_get_info"]; asm["_tu_decoder_get_info"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__tu_decoder_get_info.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real___GLOBAL__sub_I_bind_cpp = asm["__GLOBAL__sub_I_bind_cpp"]; asm["__GLOBAL__sub_I_bind_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_bind_cpp.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__fflush.apply(null, arguments);
};

var real__tu_decoder_decode = asm["_tu_decoder_decode"]; asm["_tu_decoder_decode"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__tu_decoder_decode.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};

var real____getTypeName = asm["___getTypeName"]; asm["___getTypeName"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____getTypeName.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____errno_location.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var _tu_decoder_get_info = Module["_tu_decoder_get_info"] = asm["_tu_decoder_get_info"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _tu_decoder_decode = Module["_tu_decoder_decode"] = asm["_tu_decoder_decode"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _free = Module["_free"] = asm["_free"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



window['TuDecoder'] = function(ctx) {
    this.ctx = ctx;
    this['imageData'] = null;
    this['onload'] = null;
    this['frames'] = null;
    this['loop_count'] = 0;
};

window['TuDecoder'].prototype = {

    malloc : Module['cwrap']('malloc', 'number', [ 'number' ]),

    free : Module['cwrap']('free', 'void', [ 'number' ]),

    tu_decoder_decode : Module['cwrap']('tu_decoder_decode', 'number', [ 'array', 'number', 'number', 'number', 'number' ]),

    tu_decoder_get_info : Module['cwrap']('tu_decoder_get_info', 'number', [ 'array', 'number' ]),

    load : function(url) {
        var request = new XMLHttpRequest();
        var this1 = this;

        request.open("get", url, true);
        request.responseType = "arraybuffer";
        request.onload = function(event) {
console.log("onload");
            var start_t = new Date().getTime();
            this1._onload(request, event);
            var end_t = new Date().getTime();
            console.log("decode time:", end_t - start_t);
        };
        request.send();
    },

    _onload : function(request, event) {
        var data = request.response;
        var array = new Uint8Array(data);
        if (array.length < 8) {
            console.log("error img buf len");
            return;
        }

        var heap8 = Module['HEAPU8'];
        var heap32 = Module['HEAPU32'];
        //    console.log("image: w=" + w + " h=" + h + " loop_count=" + loop_count);

        var img_info_buf = this.malloc(4 * 2);
        this.tu_decoder_get_info(array, img_info_buf);
        console.log(heap32[img_info_buf>>2]);
        console.log(heap32[(img_info_buf + 4)>>2]);

        //---------
        var w = heap32[img_info_buf>>2];
        var h = heap32[(img_info_buf + 4)>>2];
        var rgba_img = this.malloc(w * h * 4);
        var recon_len = this.tu_decoder_decode(array, array.length, rgba_img, w, h);
        var cimg = this.ctx.createImageData(w, h);
        var dst = cimg.data;
        var p0 = 0;
        for (var i = 0; i < w * h * 4; i = (i + 1) | 0) {
            dst[p0] = heap8[(rgba_img + i) | 0] | 0;
            // console.log(dst[p0],p0)
            p0 = (p0 + 1) | 0;
        }
        var frames = [];
        frames[0] = { 'img' : cimg };
        this.free(rgba_img);
        this['loop_count'] = 1;
        this['frames'] = frames;
        this['imageData'] = frames[0]['img'];

        if (this['onload'])
            this['onload']();

    }

};

window.onload = function() {

    /* put all images to load in a separate array */
    var tab = document.images;
    var n = tab.length;
    var tab1 = [];
    for (var i = 0; i < n; i++) {
        var el = tab[i];
        var url = el.src;
        if (url.substr(-4, 4).toLowerCase() == ".tpg") {
            tab1[tab1.length] = el;
        }
    }

    /* change the tags to canvas */
    n = tab1.length;
    for (var i = 0; i < n; i++) {
        var el = tab1[i];
        var url = el.src;
        var canvas = document.createElement("canvas");

        if (el.id)
            canvas.id = el.id;
        if (el.className)
            canvas.className = el.className;

        /* handle simple attribute cases to resize the canvas */
        var dw = el.getAttribute("width") | 0;
        if (dw) {
            canvas.style.width = dw + "px";
        }
        var dh = el.getAttribute("height") | 0;
        if (dh) {
            canvas.style.height = dh + "px";
        }

        el.parentNode.replaceChild(canvas, el);

        var ctx = canvas.getContext("2d");
        var dec = new TuDecoder(ctx);
        dec.onload = (function(canvas, ctx) {
                         var dec = this;
                         var frames = this['frames'];
                         var imageData = frames[0]['img'];

                         /* resize the canvas to the image size */
                         canvas.width = imageData.width;
                         canvas.height = imageData.height;
                         /* draw the image */
                         ctx.putImageData(imageData, 0, 0);
                     }).bind(dec, canvas, ctx);
        dec.load(url);
    }
};

/* end of dummy function enclosing all the emscripten code */
})();

//# sourceMappingURL=decode.js.map